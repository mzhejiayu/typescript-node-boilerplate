{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"util\"","webpack:///./node_modules/cassandra-driver/lib/utils.js","webpack:///./node_modules/cassandra-driver/lib/types/index.js","webpack:///./node_modules/cassandra-driver/lib/errors.js","webpack:///external \"events\"","webpack:///./node_modules/prom-client/lib/gauge.js","webpack:///./node_modules/debug/src/index.js","webpack:///./node_modules/depd/index.js","webpack:///./node_modules/prom-client/lib/registry.js","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"buffer\"","webpack:///external \"stream\"","webpack:///./node_modules/prom-client/lib/util.js","webpack:///./node_modules/express/lib/utils.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///external \"crypto\"","webpack:///./node_modules/cassandra-driver/lib/requests.js","webpack:///./node_modules/bytes/index.js","webpack:///./node_modules/setprototypeof/index.js","webpack:///./node_modules/statuses/index.js","webpack:///./node_modules/type-is/index.js","webpack:///./node_modules/parseurl/index.js","webpack:///external \"http\"","webpack:///./node_modules/long/dist/Long.js","webpack:///./node_modules/cassandra-driver/lib/execution-options.js","webpack:///./node_modules/prom-client/lib/validation.js","webpack:///./node_modules/content-type/index.js","webpack:///./node_modules/http-errors/index.js","webpack:///external \"net\"","webpack:///./node_modules/body-parser/lib/read.js","webpack:///./node_modules/on-finished/index.js","webpack:///./node_modules/encodeurl/index.js","webpack:///./node_modules/escape-html/index.js","webpack:///./node_modules/array-flatten/array-flatten.js","webpack:///./node_modules/utils-merge/index.js","webpack:///./node_modules/cassandra-driver/lib/token.js","webpack:///./node_modules/prom-client/lib/metrics/helpers/processMetricsHelpers.js","webpack:///./node_modules/qs/lib/index.js","webpack:///external \"url\"","webpack:///./node_modules/methods/index.js","webpack:///./node_modules/send/index.js","webpack:///./node_modules/cassandra-driver/lib/client-options.js","webpack:///./node_modules/cassandra-driver/lib/mapping/q.js","webpack:///./node_modules/cassandra-driver/lib/mapping/model-batch-item.js","webpack:///./node_modules/cassandra-driver/lib/mapping/result.js","webpack:///./node_modules/depd/lib/compat/index.js","webpack:///./node_modules/toidentifier/index.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/unpipe/index.js","webpack:///./node_modules/mime-types/index.js","webpack:///./node_modules/qs/lib/utils.js","webpack:///./node_modules/qs/lib/formats.js","webpack:///external \"querystring\"","webpack:///./node_modules/express/lib/router/index.js","webpack:///./node_modules/express/lib/router/route.js","webpack:///./node_modules/express/lib/router/layer.js","webpack:///./node_modules/express/lib/middleware/query.js","webpack:///./node_modules/express/node_modules/safe-buffer/index.js","webpack:///./node_modules/content-disposition/index.js","webpack:///./node_modules/etag/index.js","webpack:///./node_modules/fresh/index.js","webpack:///./node_modules/range-parser/index.js","webpack:///./node_modules/proxy-addr/index.js","webpack:///./node_modules/cassandra-driver/lib/policies/index.js","webpack:///external \"dns\"","webpack:///./node_modules/cassandra-driver/lib/types/uuid.js","webpack:///./node_modules/cassandra-driver/lib/types/integer.js","webpack:///./node_modules/cassandra-driver/lib/policies/retry.js","webpack:///./node_modules/cassandra-driver/lib/tracker/index.js","webpack:///./node_modules/cassandra-driver/lib/tracker/request-tracker.js","webpack:///./node_modules/cassandra-driver/lib/metrics/index.js","webpack:///./node_modules/cassandra-driver/lib/metrics/client-metrics.js","webpack:///./node_modules/cassandra-driver/lib/execution-profile.js","webpack:///./node_modules/cassandra-driver/lib/writers.js","webpack:///./node_modules/cassandra-driver/lib/host.js","webpack:///./node_modules/cassandra-driver/lib/connection.js","webpack:///./node_modules/cassandra-driver/lib/encoder.js","webpack:///./node_modules/cassandra-driver/lib/types/mutable-long.js","webpack:///./node_modules/cassandra-driver/lib/prepare-handler.js","webpack:///./node_modules/cassandra-driver/lib/request-handler.js","webpack:///./node_modules/cassandra-driver/lib/metadata/index.js","webpack:///./node_modules/cassandra-driver/lib/metadata/data-collection.js","webpack:///./node_modules/cassandra-driver/lib/auth/provider.js","webpack:///./node_modules/cassandra-driver/lib/mapping/model-mapper.js","webpack:///./node_modules/cassandra-driver/lib/mapping/model-batch-mapper.js","webpack:///./node_modules/cassandra-driver/lib/mapping/cache.js","webpack:///./node_modules/cassandra-driver/lib/mapping/tree.js","webpack:///external \"vm\"","webpack:///./node_modules/cassandra-driver/lib/mapping/result-mapper.js","webpack:///./node_modules/cassandra-driver/lib/mapping/doc-info-adapter.js","webpack:///./node_modules/cassandra-driver/lib/mapping/table-mappings.js","webpack:///./node_modules/prom-client/lib/counter.js","webpack:///./node_modules/bintrees/lib/treebase.js","webpack:///./node_modules/prom-client/lib/bucketGenerators.js","webpack:///./node_modules/prom-client/lib/metrics/helpers/safeMemoryUsage.js","webpack:///./node_modules/prom-client/lib/metricAggregators.js","webpack:///./node_modules/express/index.js","webpack:///./node_modules/cassandra-driver/index.js","webpack:///./node_modules/express/lib/express.js","webpack:///./node_modules/body-parser/index.js","webpack:///./node_modules/depd/lib/compat/callsite-tostring.js","webpack:///./node_modules/depd/lib/compat/event-listener-count.js","webpack:///./node_modules/body-parser/lib/types/json.js","webpack:///./node_modules/http-errors/node_modules/inherits/inherits.js","webpack:///./node_modules/http-errors/node_modules/inherits/inherits_browser.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/debug/src/node.js","webpack:///external \"tty\"","webpack:///./node_modules/raw-body/index.js","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///external \"string_decoder\"","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./node_modules/iconv-lite/lib/extend-node.js","webpack:///./node_modules/ee-first/index.js","webpack:///external \"zlib\"","webpack:///./node_modules/media-typer/index.js","webpack:///./node_modules/mime-db/index.js","webpack:///./node_modules/body-parser/lib/types/raw.js","webpack:///./node_modules/body-parser/lib/types/text.js","webpack:///./node_modules/body-parser/lib/types/urlencoded.js","webpack:///./node_modules/qs/lib/stringify.js","webpack:///./node_modules/qs/lib/parse.js","webpack:///./node_modules/merge-descriptors/index.js","webpack:///./node_modules/express/lib/application.js","webpack:///./node_modules/finalhandler/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///./node_modules/express/lib/middleware/init.js","webpack:///./node_modules/express/lib/view.js","webpack:///./node_modules/express/lib sync","webpack:///./node_modules/content-disposition/node_modules/safe-buffer/index.js","webpack:///./node_modules/send/node_modules/http-errors/index.js","webpack:///./node_modules/inherits/inherits.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/destroy/index.js","webpack:///./node_modules/mime/mime.js","webpack:///./node_modules/send/node_modules/ms/index.js","webpack:///./node_modules/forwarded/index.js","webpack:///./node_modules/ipaddr.js/lib/ipaddr.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/express/lib/request.js","webpack:///./node_modules/accepts/index.js","webpack:///./node_modules/negotiator/index.js","webpack:///./node_modules/negotiator/lib/charset.js","webpack:///./node_modules/negotiator/lib/encoding.js","webpack:///./node_modules/negotiator/lib/language.js","webpack:///./node_modules/negotiator/lib/mediaType.js","webpack:///./node_modules/express/lib/response.js","webpack:///./node_modules/cookie-signature/index.js","webpack:///./node_modules/cookie/index.js","webpack:///./node_modules/vary/index.js","webpack:///./node_modules/serve-static/index.js","webpack:///./node_modules/cassandra-driver/lib/policies/address-resolution.js","webpack:///./node_modules/cassandra-driver/lib/policies/load-balancing.js","webpack:///./node_modules/cassandra-driver/lib/types/time-uuid.js","webpack:///./node_modules/cassandra-driver/lib/types/protocol-version.js","webpack:///./node_modules/cassandra-driver/lib/types/version-number.js","webpack:///./node_modules/cassandra-driver/lib/types/big-decimal.js","webpack:///./node_modules/cassandra-driver/lib/types/duration.js","webpack:///./node_modules/cassandra-driver/lib/types/inet-address.js","webpack:///./node_modules/cassandra-driver/lib/types/local-date.js","webpack:///./node_modules/cassandra-driver/lib/types/local-time.js","webpack:///./node_modules/cassandra-driver/lib/types/result-set.js","webpack:///./node_modules/cassandra-driver/lib/types/result-stream.js","webpack:///./node_modules/cassandra-driver/lib/types/row.js","webpack:///./node_modules/cassandra-driver/lib/types/tuple.js","webpack:///./node_modules/cassandra-driver/lib/policies/reconnection.js","webpack:///./node_modules/cassandra-driver/lib/policies/speculative-execution.js","webpack:///./node_modules/cassandra-driver/lib/policies/timestamp-generation.js","webpack:///./node_modules/cassandra-driver/lib/tracker/request-logger.js","webpack:///./node_modules/cassandra-driver/lib/metrics/default-metrics.js","webpack:///./node_modules/cassandra-driver/lib/client.js","webpack:///./node_modules/cassandra-driver/lib/metadata/client-state.js","webpack:///./node_modules/cassandra-driver/lib/control-connection.js","webpack:///./node_modules/cassandra-driver/lib/host-connection-pool.js","webpack:///external \"tls\"","webpack:///./node_modules/cassandra-driver/lib/streams.js","webpack:///./node_modules/cassandra-driver/lib/readers.js","webpack:///./node_modules/cassandra-driver/lib/stream-id-stack.js","webpack:///./node_modules/cassandra-driver/lib/operation-state.js","webpack:///./node_modules/cassandra-driver/lib/request-execution.js","webpack:///./node_modules/cassandra-driver/lib/tokenizer.js","webpack:///./node_modules/cassandra-driver/lib/metadata/schema-parser.js","webpack:///./node_modules/cassandra-driver/lib/metadata/table-metadata.js","webpack:///./node_modules/cassandra-driver/lib/metadata/aggregate.js","webpack:///./node_modules/cassandra-driver/lib/metadata/schema-function.js","webpack:///./node_modules/cassandra-driver/lib/metadata/schema-index.js","webpack:///./node_modules/cassandra-driver/lib/metadata/materialized-view.js","webpack:///./node_modules/cassandra-driver/lib/metadata/event-debouncer.js","webpack:///./node_modules/cassandra-driver/lib/auth/index.js","webpack:///./node_modules/cassandra-driver/lib/auth/plain-text-auth-provider.js","webpack:///./node_modules/cassandra-driver/lib/mapping/index.js","webpack:///./node_modules/cassandra-driver/lib/mapping/mapper.js","webpack:///./node_modules/cassandra-driver/lib/mapping/mapping-handler.js","webpack:///./node_modules/cassandra-driver/lib/mapping/query-generator.js","webpack:///./node_modules/cassandra-driver/lib/mapping/object-selector.js","webpack:///./node_modules/cassandra-driver/lib/mapping/model-mapping-info.js","webpack:///./node_modules/cassandra-driver/lib/concurrent/index.js","webpack:///./node_modules/prom-client/index.js","webpack:///./node_modules/prom-client/lib/histogram.js","webpack:///./node_modules/prom-client/lib/summary.js","webpack:///./node_modules/prom-client/lib/timeWindowQuantiles.js","webpack:///./node_modules/tdigest/tdigest.js","webpack:///./node_modules/bintrees/index.js","webpack:///./node_modules/bintrees/lib/rbtree.js","webpack:///./node_modules/bintrees/lib/bintree.js","webpack:///./node_modules/prom-client/lib/pushgateway.js","webpack:///external \"https\"","webpack:///./node_modules/prom-client/lib/defaultMetrics.js","webpack:///./node_modules/prom-client/lib/metrics/processCpuTotal.js","webpack:///./node_modules/prom-client/lib/metrics/processStartTime.js","webpack:///./node_modules/prom-client/lib/metrics/osMemoryHeap.js","webpack:///./node_modules/prom-client/lib/metrics/osMemoryHeapLinux.js","webpack:///./node_modules/prom-client/lib/metrics/processOpenFileDescriptors.js","webpack:///external \"process\"","webpack:///./node_modules/prom-client/lib/metrics/processMaxFileDescriptors.js","webpack:///./node_modules/prom-client/lib/metrics/eventLoopLag.js","webpack:///./node_modules/prom-client/lib/metrics/processHandles.js","webpack:///./node_modules/prom-client/lib/metrics/processRequests.js","webpack:///./node_modules/prom-client/lib/metrics/heapSizeAndUsed.js","webpack:///./node_modules/prom-client/lib/metrics/heapSpacesSizeAndUsed.js","webpack:///external \"v8\"","webpack:///./node_modules/prom-client/lib/metrics/version.js","webpack:///./node_modules/prom-client/lib/cluster.js","webpack:///external \"cluster\"","webpack:///./node_modules/express-basic-auth/index.js","webpack:///./node_modules/basic-auth/index.js","webpack:///./node_modules/basic-auth/node_modules/safe-buffer/index.js","webpack:///external \"assert\"","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack:///./node_modules/rxjs/_esm5/internal/config.js","webpack:///./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/Observer.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack:///./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscription.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/noop.js","webpack:///./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack:///./node_modules/rxjs/_esm5/internal/Observable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack:///./node_modules/rxjs/_esm5/internal/symbol/iterator.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isArrayLike.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeTo.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduled.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isInteropObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","webpack:///./node_modules/rxjs/_esm5/internal/util/isIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/from.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/map.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/fromEvent.js","webpack:///./node_modules/rxjs/_esm5/internal/InnerSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/OuterSubscriber.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/mergeMap.js","webpack:///./node_modules/rxjs/_esm5/internal/util/subscribeToResult.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/scan.js","webpack:///./node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","webpack:///./node_modules/rxjs/_esm5/internal/observable/empty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/takeLast.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/reduce.js","webpack:///./node_modules/rxjs/_esm5/internal/operators/take.js","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","util","errors","emptyObject","freeze","noop","allocBuffer","Buffer","alloc","size","b","allocBufferDeprecated","fill","allocBufferUnsafe","allocUnsafe","allocBufferFromString","Int8Array","from","text","encoding","TypeError","inspect","allocBufferFromArray","arr","Array","isArray","binarySearch","compareFunc","low","high","length","mid","cmp","defaultPromiseFactory","handler","Promise","resolve","reject","err","result","HashSet","this","items","mapEach","fn","useIndex","callback","completed","invoke","transformed","next","cb","add","contains","toArray","keys","adaptNamedParamsPrepared","params","columns","paramsArray","obj","k","toLowerCase","toLowerCaseProperties","ArgumentError","format","adaptNamedParamsWithHints","execOptions","namedParameters","keyIndexes","hints","userHints","getHints","setHints","arrayIterator","index","done","copyBuffer","buf","targetBuffer","copy","deepExtend","target","slice","arguments","forEach","source","prop","targetProp","targetType","isDate","constructor","each","eachSeries","sync","undefined","process","nextTick","emptyArray","extend","fixStack","stackTrace","error","stack","substr","indexOf","forEachOf","funcCompare","argArray","a","valA","apply","valB","insertSorted","item","push","position","splice","iteratorToArray","iterator","values","log","type","info","furtherInfo","logEmitter","options","Error","map","mapSeries","maxInt","objectValues","parallel","promiseWrapper","originalCallback","factory","promiseFactory","self","propCompare","propName","series","stringRepeat","val","times","join","shuffleArray","j","Math","floor","random","temp","count","iteratorFunc","isNaN","timesLimit","limit","min","captureIndex","timesSeries","iteratorFunction","totalLength","total","validateFn","whilst","condition","TimeUuid","Uuid","protocolVersion","utils","Long","consistencies","any","one","two","three","quorum","all","localQuorum","eachQuorum","serial","localSerial","localOne","consistencyToString","dataTypes","custom","ascii","bigint","blob","boolean","counter","decimal","double","float","int","timestamp","uuid","varchar","varint","timeuuid","inet","date","time","smallint","tinyint","list","set","udt","tuple","getByName","listMatches","exec","code","mapMatches","udtMatches","tupleMatches","split","x","trim","typeInfo","_dataTypesByCode","unset","_longOneThousand","fromInt","_timestampTicks","FrameHeader","version","flags","streamId","opcode","bodyLength","TimeoutError","message","super_","uses2BytesStreamIds","getProtocolVersion","buffer","fromBuffer","offset","readUInt8","readInt16BE","readInt8","readUInt32BE","toBuffer","writeUInt8","writeInt16BE","writeInt8","writeUInt32BE","readInt32BE","getHighBitsUnsigned","getLowBitsUnsigned","toString","toJSON","inherits","QueryParserError","e","internalError","DriverError","opcodes","startup","ready","authenticate","credentials","supported","query","prepare","execute","register","event","batch","authChallenge","authResponse","authSuccess","isInRange","getDataTypeNameByCode","typeName","distance","local","remote","ignored","frameFlags","compression","tracing","customPayload","warning","protocolEvents","topologyChange","statusChange","schemaChange","responseErrorCodes","serverError","protocolError","badCredentials","unavailableException","overloaded","isBootstrapping","truncateError","writeTimeout","readTimeout","readFailure","functionFailure","writeFailure","syntaxError","unauthorized","invalid","configError","alreadyExists","unprepared","resultKind","voidResult","rows","setKeyspace","prepared","ticks","nodeId","clockId","msecs","Date","node","clockseq","writeUInt16BE","nsecs","getBuffer","BigDecimal","Duration","InetAddress","Integer","LocalDate","LocalTime","ResultSet","ResultStream","Row","Tuple","generateTimestamp","microseconds","longMicro","ZERO","fromNumber","getTime","multiply","captureStackTrace","NoHostAvailableError","innerErrors","hostList","host","ResponseError","DriverInternalError","AuthenticationError","OperationTimedOutError","NotSupportedError","BusyConnectionError","address","maxRequestsPerConnection","connectionLength","globalRegistry","setValue","getPropertiesFromObj","getLabels","hashObject","isObject","printDeprecationObjectConstructor","removeLabels","validateMetricName","validateLabel","validateLabelName","setToCurrentTime","labels","now","startTimer","startLabels","start","hrtime","endLabels","delta","assign","dec","data","convertLabelsAndValues","_getValue","inc","Number","isFinite","labelNames","hashMap","help","config","registers","reset","aggregator","registryInstance","registerMetric","hash","callSiteToString","eventListenerCount","relative","depd","basePath","cwd","containsNamespace","str","namespace","vals","String","convertDataDescriptorToAccessor","descriptor","getOwnPropertyDescriptor","writable","createArgumentsString","arity","createStackString","file","callSiteLocation","getStack","deprecate","_file","_ignored","isignored","_namespace","_traced","istraced","_warned","function","wrapfunction","wrapproperty","noDeprecation","env","NO_DEPRECATION","traceDeprecation","TRACE_DEPRECATION","site","haslisteners","caller","callFile","callSite","depSite","seen","msg","defaultMessage","DeprecationError","emit","output","stderr","isTTY","formatColor","formatPlain","write","getFileName","line","getLineNumber","colm","getColumnNumber","isEval","getEvalOrigin","getFunctionName","funcName","formatLocation","context","getThis","getTypeName","getMethodName","formatted","toUTCString","stackTraceLimit","prep","prepareStackTrace","prepareObjectStackTrace","max","args","deprecatedfn","eval","configurable","stackString","getValueAsString","escapeString","replace","defaultMetricsOpts","timestamps","Registry","_metrics","_defaultLabels","getSingleMetric","metric","conf","opts","defaultLabelNames","labelName","metricName","substring","metrics","getMetricsAsArray","getMetricAsPrometheusString","metricFn","mergedRegistry","reduce","acc","reg","concat","deprecationsEmitted","sort","valueOf","printDeprecation","emitWarning","console","warn","argsAsArray","label","printDeprecationCollectDefaultMetricsNumber","timeout","Grouper","Map","has","contentDisposition","contentType","flatten","mime","etag","proxyaddr","qs","querystring","createETagGenerator","body","isBuffer","parseExtendedQueryString","parse","allowPrototypes","newObject","weak","wetag","isAbsolute","path","normalizeType","parts","ret","quality","originalIndex","pms","parseFloat","acceptParams","lookup","normalizeTypes","types","compileETag","compileQueryParser","compileTrust","compile","setCharset","charset","parsed","parameters","safer","Safer","Uint8Array","encodingOrOffset","RangeError","kStringMaxLength","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","FrameWriter","ExecutionOptions","packageInfo","queryFlag","skipMetadata","pageSize","withPagingState","withSerialConsistency","withDefaultTimestamp","withNameForValues","batchFlag","batchType","logged","unlogged","Request","encoder","newRequest","keysArray","ExecuteRequest","queryId","meta","super","empty","consistency","getConsistency","columnInfo","frameWriter","headerFlags","isQueryTracing","getCustomPayload","writeCustomPayload","writeShortBytes","writeQueryParameters","getOrGenerateTimestamp","supportsPaging","getFetchSize","getPageState","getSerialConsistency","writeShort","writeByte","paramValue","writeString","writeBytes","encode","getParamType","writeInt","writeLong","BatchRequest","queries","isBatchCounter","isBatchLogged","writeLString","param","supportsTimestamp","AuthResponseRequest","token","CredentialsRequest","username","password","writeStringMap","PrepareRequest","QueryRequest","RegisterRequest","events","writeStringList","StartupRequest","startupOptions","CQL_VERSION","cqlVersion","DRIVER_NAME","description","DRIVER_VERSION","noCompact","formatThousandsRegExp","formatDecimalsRegExp","kb","mb","gb","tb","pow","pb","parseRegExp","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","Boolean","unit","toFixed","floatValue","results","parseInt","setPrototypeOf","__proto__","proto","codes","status","STATUS_CODES","statuses","populateStatusesMap","redirect","300","301","302","303","305","307","308","204","205","304","retry","502","503","504","typer","typeis","types_","tryNormalizeType","mimeMatch","normalize","hasbody","req","headers","expected","actual","actualParts","expectedParts","is","hasBody","match","url","Url","parseurl","_parsedUrl","fresh","fastparse","_raw","charCodeAt","pathname","search","href","parsedUrl","original","originalUrl","_parsedOriginalUrl","unsigned","__isLong__","isLong","INT_CACHE","UINT_CACHE","cachedObj","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","negate","TWO_PWR_32_DBL","fromBits","lowBits","highBits","fromString","radix","radixToPower","power","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","UZERO","ONE","UONE","NEG_ONE","toInt","toNumber","isZero","rem","isNegative","equals","radixLong","div","divide","subtract","remDiv","digits","getHighBits","getLowBits","getNumBitsAbs","bit","isPositive","isOdd","isEven","other","eq","notEquals","neq","lessThan","compare","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","thisNeg","otherNeg","not","neg","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","sub","multiplier","b00","mul","divisor","approx","res","shiftRight","shiftLeft","log2","ceil","LN2","approxRes","approxRem","modulo","mod","and","or","xor","numBits","shl","shr","shiftRightUnsigned","shru","toSigned","toUnsigned","keyspace","routingIndexes","DefaultExecutionOptions","queryOptions","client","rowCallback","_queryOptions","_rowCallback","_routingKey","routingKey","_hints","_keyspace","_routingIndexes","_pageState","pageState","_client","_defaultQueryOptions","_profile","profileManager","getProfile","executionProfile","ifUndefined","ifUndefined3","fetchSize","autoPage","isIdempotent","traceQuery","loadBalancing","getTimestamp","generator","policies","timestampGeneration","controlConnection","socketOptions","routingNames","serialConsistency","v1","v2","v3","metricRegexp","labelRegexp","test","names","valid","savedLabels","PARAM_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","QESC_REGEXP","QUOTE_REGEXP","TYPE_REGEXP","qstring","ContentType","string","header","getHeader","getcontenttype","lastIndex","toIdentifier","codeClass","charAt","nameFunc","func","desc","createError","props","arg","statusCode","HttpError","expose","createHttpErrorConstructor","CodeError","className","ClientError","createClientErrorConstructor","ServerError","createServerErrorConstructor","ImATeapot","populateConstructorExports","getBody","iconv","onFinished","zlib","debug","stream","_body","verify","inflate","createInflate","pipe","createGunzip","contentstream","encodingExists","toUpperCase","_error","resume","decode","listener","isFinished","defer","attached","__onFinished","queue","createListener","eeMsg","eeSocket","finished","onFinish","cancel","onSocket","socket","removeListener","first","on","assignSocket","patchAssignSocket","attachFinishedListener","attachListener","setImmediate","complete","upgrade","readable","UNMATCHED_SURROGATE_PAIR_REGEXP","UNMATCHED_SURROGATE_PAIR_REPLACE","ENCODE_CHARS_REGEXP","encodeURI","matchHtmlRegExp","escape","html","array","depth","flattenForever","flattenWithDepth","_Murmur3TokenType","_RandomTokenType","_OrderedTokenType","Token","_value","TokenRange","end","tokenizer","numberOfSplits","isEmpty","tokenRanges","splitPoints","_tokenizer","splitEnd","splitStart","splitIndex","minToken","isWrappedAround","isAfterStart","isBeforeEnd","compareStart","ByteOrderedToken","Murmur3Token","RandomToken","aggregateByObjectName","listElement","updateMetrics","gauge","includeTimestamp","stringify","formats","http","METHODS","method","destroy","encodeUrl","escapeHtml","fs","ms","parseRange","Stream","extname","sep","BYTES_RANGE_REGEXP","MAX_MAXAGE","UP_PATH_REGEXP","SendStream","_acceptRanges","acceptRanges","_cacheControl","cacheControl","_etag","_dotfiles","dotfiles","_hidden","hidden","_extensions","extensions","normalizeList","_immutable","immutable","_index","_lastModified","lastModified","_maxage","maxAge","maxage","_root","root","contentRange","range","createHtmlDocument","title","getHeaderNames","_headers","hasListeners","emitter","listenerCount","listeners","parseHttpDate","NaN","paths","doc","removeHeader","clearHeaders","setHeader","setHeaders","byteLength","hasTrailingSlash","isConditionalGET","isPreconditionFailure","len","parseTokenList","every","unmodifiedSince","removeContentHeaderFields","notModified","headersAlreadySent","isCachable","onStatError","isFresh","isRangeFresh","ifRange","loc","collapseLeadingSlashes","decodeURIComponent","part","containsDotFile","access","sendIndex","sendFile","send","stat","ranges","headersSent","_header","bytes","combine","isDirectory","createReadStream","charsets","modified","mtime","tracker","coreConnectionsPerHostV2","coreConnectionsPerHostV3","maxRequestsPerConnectionV2","maxRequestsPerConnectionV3","defaultOptions","addressResolution","defaultAddressTranslator","defaultLoadBalancingPolicy","reconnection","defaultReconnectionPolicy","defaultRetryPolicy","speculativeExecution","defaultSpeculativeExecutionPolicy","defaultTimestampGenerator","protocolOptions","port","maxSchemaAgreementWaitSeconds","maxVersion","pooling","heartBeatInterval","warmup","connectTimeout","defunctReadTimeoutThreshold","keepAlive","keepAliveDelay","tcpNoDelay","coalescingThreshold","authProvider","requestTracker","DefaultMetrics","maxPrepared","refreshSchemaDelay","isMetadataSyncEnabled","prepareOnAllHosts","rePrepareOnUp","useUndefinedAsUnset","baseOptions","userOptions","contactPoints","hostName","RequestTracker","ClientMetrics","policiesOptions","LoadBalancingPolicy","ReconnectionPolicy","RetryPolicy","AddressTranslator","TimestampGenerator","validatePoliciesOptions","isSupported","validateProtocolOptions","validateSocketOptions","encodingOptions","mapConstructor","setConstructor","useBigIntAsLong","useBigIntAsVarint","BigInt","validateEncodingOptions","profiles","setProtocolDependentDefaults","coreConnectionsPerHost","QueryOperator","hasChildValues","QueryAssignment","sign","inverted","q","in_","notEq","condition1","condition2","incr","decr","append","prepend","remove","docInfo","mappingInfo","_queries","_doc","_docInfo","_mappingInfo","isCounter","then","paramsGetter","inspectMethod","rs","rowAdapter","_rs","_info","_rowAdapter","_isEmptyLwt","rowLength","wasApplied","row","thisArg","EventEmitter","lazyProperty","prevTime","createDebug","enabled","curr","diff","prev","coerce","unshift","formatter","formatters","formatArgs","useColors","color","colors","selectColor","init","disable","enable","namespaces","save","skips","RegExp","humanize","bomHandling","encodings","defaultCharUnicode","defaultCharSingleByte","getEncoder","trail","skipDecodeWarning","decoder","getDecoder","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","nodeVerArr","unpipe","hasPipeDataListeners","preference","db","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","extension","exts","to","hexTable","arrayToObject","plainObjects","compact","refs","pop","compacted","compactQueue","strWithoutPlus","unescape","defaultEncoder","$0","out","isRegExp","merge","mergeTarget","targetItem","percentTwenties","RFC1738","RFC3986","Route","Layer","methods","mixin","parseUrl","objectRegExp","router","handle","_params","caseSensitive","mergeParams","strict","appendMethods","addition","gettype","matchLayer","layer","JSON","idx","protohost","searchIndex","pathLength","fqdnIndex","getProtohost","removed","slashAdded","paramcalled","parentParams","parentUrl","baseUrl","restore","layerError","route","getPathname","has_method","_handles_method","_options","parent","layerPath","process_params","handle_request","handle_error","trim_prefix","old","wrap","sendOptionsResponse","called","paramVal","paramCallbacks","paramCalled","paramIndex","paramCallback","use","callbacks","sensitive","dispatch","_all","head","handles","pathRegexp","regexp","fast_star","fast_slash","decode_param","URIError","queryparse","copyProps","src","dst","SafeBuffer","allocUnsafeSlow","SlowBuffer","filename","fallback","NON_LATIN1_REGEXP","basename","isQuotedString","fallbackName","getlatin1","hasFallback","HEX_ESCAPE_REGEXP","createparams","ustring","ContentDisposition","DISPOSITION_TYPE_REGEXP","decodefield","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REPLACE_REGEXP","EXT_VALUE_REGEXP","binary","pdecode","hex","fromCharCode","pencode","char","encodeURIComponent","entity","isStats","Stats","ctime","ino","isstats","tag","crypto","createHash","update","digest","entitytag","CACHE_CONTROL_NO_CACHE_REGEXP","reqHeaders","resHeaders","modifiedSince","noneMatch","etagStale","matches","mapWithIndex","mapWithoutIndex","sortByRangeIndex","sortByRangeStart","ordered","current","combined","combineRanges","trust","addrs","alladdrs","forwarded","ipaddr","DIGIT_REGEXP","isip","isValid","parseip","IP_RANGES","linklocal","loopback","uniquelocal","rangeSubnets","trustNone","subnet","subnetip","subnetkind","kind","subnetisipv4","subnetrange","addr","ip","isIPv4MappedAddress","toIPv4Address","toIPv4MappedAddress","subnets","ipconv","trusted","parseipNotation","compileRangeSubnets","note","pos","lastIndexOf","netmask","prefixLengthFromSubnetMask","parseNetmask","TokenAwarePolicy","DCAwareRoundRobinPolicy","ExponentialReconnectionPolicy","NoSpeculativeExecutionPolicy","MonotonicTimestampGenerator","createUuidFromBuffer","getRandomBytes","randomBytes","hexValue","bits","bits_","sign_","top","IntCache_","TWO_PWR_32_DBL_","opt_radix","byte","group","writeInt32BE","TWO_PWR_24_","getBitsUnsigned","getBits","getSign","shorten","arr_index","bit_index","sigBits","carry","a1","a0","b1","c0","c1","b0","carry16_","arr_delta","bit_delta","IdempotenceAwareRetryPolicy","childPolicy","_childPolicy","onUnavailable","required","alive","nbRetry","rethrowResult","retryResult","onReadTimeout","received","blockFor","isDataPresent","onWriteTimeout","writeType","onRequestError","useCurrentHost","decision","retryDecision","rethrow","ignore","RequestLogger","executionOptions","requestLength","responseLength","latency","ExecutionProfile","ProfileManager","_profiles","_setDefault","_loadBalancingPolicies","_profilesMap","_defaultProfile","hosts","policy","getDistance","setDistance","getDefault","getDefaultLoadBalancing","filter","WriteQueue","netClient","isRunning","operation","run","buffers","writeItem","shift","canBeWritten","request","setWriteError","isSocketError","requestNotWritten","innerError","num","payload","headerBuffer","HostConnectionPool","PrepareHandler","Host","metadata","setDownAt","isUpSince","pool","_onNewConnectionOpen","_checkPoolState","cassandraVersion","datacenter","rack","tokens","hostId","_distance","_healthResponseCounter","reconnectionSchedule","newSchedule","reconnectionDelay","HostMap","_items","_values","setDown","isClosing","coreConnectionsLength","setUp","clearReconnection","clearNewConnectionAttempt","checkIsUp","isUp","attemptNewConnectionImmediate","shutdown","waitForPending","_healthResponseCountTimer","clearInterval","drainAndShutdown","canBeConsideredAsUp","previousDistance","setInterval","getAndResetResponseCounter","setProtocolVersion","borrowConnection","previousConnection","createAndBorrowConnection","warmupPool","getActiveConnection","connections","getResponseCount","responseCounter","checkHealth","connection","timedOutOperations","removeFromPool","getInFlight","hasScheduledNewConnection","scheduleNewConnectionAttempt","setUpAndContinue","increaseSize","allPrepared","_metadata","getAllPrepared","prepareAllQueries","getCassandraVersion","h","removeMultiple","removedHosts","originalValue","begin","clear","previousItems","tls","Encoder","requests","streams","StreamIdStack","OperationState","net","Connection","endpoint","setMaxListeners","endpointFriendlyName","portSeparatorIndex","maxSupported","_checkingVersion","_operations","_pendingWrites","_preparing","_idleTimeout","_streamIds","emitDrain","connected","isSocketOpen","bindSocketListeners","removeAllListeners","wasConnected","close","protocol","Protocol","objectMode","parser","Parser","resultEmitter","ResultEmitter","handleResult","handleRow","freeStreamId","handleNodeEvent","writeQueue","open","sslOptions","rejectUnauthorized","connect","setMaxSendFragment","Socket","highWaterMark","once","errorConnecting","setTimeout","setKeepAlive","setNoDelay","startupCallback","connectionReady","sendStream","response","invalidProtocol","canStartupResponseErrorBeWrapped","lowerVersion","getLowerSupported","decreaseVersion","mustAuthenticate","startAuthenticating","authenticatorName","onConnectionError","handleSocketError","setVersion","clearAndInvokePending","clearTimeout","operations","setResult","pendingWritesCopy","authenticator","newAuthenticator","initialResponse","onAuthenticationError","authError","additionalInfo","onAuthenticationSuccess","evaluateChallenge","changeKeyspace","toBeKeyspace","prepareOnce","getRowCallback","_getStreamId","setRequestTimeout","_write","isByRow","setOptions","byRow","_setIdleTimeout","previousTimeout","_idleTimeoutHandler","sendingIdleQuery","inUse","_writeNext","eventType","setResultRow","endTimeout","hadError","getLocalAddress","localAddress","MutableLong","uuidRegex","int16Zero","int32Zero","int8Zero","int8One","int8MaxValue","isBigIntSupported","bigInt32","bigInt8","bigInt0","bigIntMinus1","bigInt32BitsOn","bigInt8BitsOn","complexTypeNames","frozen","reversed","composite","collection","cqlNames","duration","singleTypeNames","singleFqTypeNamesLength","previous","durationTypeName","nullValueBuffer","unsetValueBuffer","zeroLengthTypesSupported","Set","decodeCollectionLength","decodeCollectionLengthV3","getLengthBuffer","getLengthBufferV3","collectionLengthSize","uses4BytesCollectionLength","decodeCollectionLengthV2","getLengthBufferV2","customDecoders","customEncoders","decodeBlob","handleBuffer","decodeCustom","decodeDuration","decodeUtf8String","decodeAsciiString","decodeBoolean","decodeDouble","readDoubleBE","decodeFloat","readFloatBE","decodeInt","decodeSmallint","decodeTinyint","_decodeCqlLongAsLong","_decodeCqlLongAsBigInt","asIntN","decodeLong","_decodeVarintAsInteger","_decodeVarintAsBigInt","decodeVarint","decodeDecimal","decodeTimestamp","decodeDate","decodeTime","decodeList","subtype","totalItems","decodeSet","decodeMap","subtypes","readValues","keyLength","valueLength","decodeUuid","decodeTimeUuid","decodeInet","decodeUdt","udtInfo","fields","field","decodeTuple","tupleInfo","elements","encodeFloat","writeFloatBE","encodeDouble","writeDoubleBE","encodeTimestamp","encodeLong","encodeDate","fromDate","encodeTime","encodeUuid","encodeInet","_encodeBigIntFromLong","toImmutable","_encodeBigIntFromBigInt","_encodeVarintFromInteger","_encodeVarintFromBigInt","encodeVarint","encodeDecimal","encodeString","encodeUtf8String","encodeAsciiString","encodeBlob","encodeCustom","encodeDuration","encodeBoolean","encodeInt","encodeSmallint","encodeTinyint","encodeList","encodeSet","encodeMap","propCounter","keySubtype","valueSubtype","addItem","keyBuffer","valueBuffer","encodeUdt","lengthBuffer","encodeTuple","setRoutingKeyFromUser","userRoutingKey","getRoutingKey","setRoutingKey","concatRoutingKey","getRoutingIndexes","getRoutingNames","encodeParam","_encodeRoutingKeyParts","setRoutingKeyFromMeta","parseTypeName","startIndex","udtResolver","dataType","innerTypes","parseParams","childType","_parseChildTypes","quoted","typeCode","typeNames","childTypes","parseFqTypeName","_parseUdtName","parseKeyTypes","typesString","isComposite","nested","inCollectionType","hasCollections","udtParams","separatorIndex","fieldType","decoders","encoders","handleBufferCopy","handleBufferRef","readUInt16BE","paramStart","level","supportsUnset","guessDataType","esTypeName","_arr","low32Bits","high32Bits","_compareBits","getUint16","toZero","remainingBits","clone","RequestHandler","_loadBalancing","getPreparedInfo","preparing","_prepare","getPrepared","id","newQueryPlan","_prepareWithQueryPlan","triedHosts","borrowNextConnection","_onPrepareError","_prepareOnAllHosts","_onPrepareSuccess","setPreparedById","anyKeyspaceQueries","queriesByKeyspace","_borrowAndPrepare","hostToAvoid","RequestExecution","_speculativeExecutionPlan","newPlan","stackContainer","speculativeExecutions","_hostIterator","_callback","_newExecutionTimeout","_executions","_getNextHost","getCaptureStackTrace","lbp","getLoadBalancingPolicy","fixedHost","getFixedHost","_startNewExecution","isSpecExec","onSpeculativeExecution","execution","delay","nextExecution","wasCancelled","warnings","sender","setCompleted","schemaParserFactory","Metadata","keyspaces","initialized","_schemaParser","getByVersion","getUdt","_preparedQueries","PreparedQueries","logger","_maxPrepared","_mapByKey","_mapById","_logger","setCassandraVersion","setPartitioner","partitionerName","RandomTokenizer","ByteOrderedTokenizer","Murmur3Tokenizer","buildTokens","allSorted","primaryReplicas","hostArray","datacenters","tokenString","t1","t2","dc","hostLength","racks","ring","ringTokensAsStrings","refreshKeyspace","_refreshKeyspaceCb","_uninitializedError","getKeyspace","ksInfo","refreshKeyspaces","waitReconnect","_refreshKeyspaces","internal","_refreshKeyspacesCb","getKeyspaces","_getKeyspaceReplicas","replicas","tokenToReplica","getReplicas","keyspaceName","closestToken","getTokenRanges","getTokenRangesForHost","tokenRange","newToken","components","isString","newTokenRange","getOrAdd","clearPrepared","getPreparedById","getById","setById","getAll","_getUdtCb","cache","udts","getTable","_getTableCb","virtual","tables","getFunctions","_getFunctionsCb","_getFunctions","functionsMap","getFunction","signature","_getSingleFunctionCb","getAggregates","_getAggregatesCb","getAggregate","getMaterializedView","_getMaterializedViewCb","views","aggregate","aggregates","functions","f","getTrace","traceId","_getTraceCb","trace","attempts","sessionRequest","eventsRequest","sessionRow","requestType","coordinator","startedAt","clientAddress","activity","elapsed","thread","checkSchemaAgreement","compareSchemaVersions","agreement","adaptUserHints","checkUdtTypes","udtName","hint","_getKey","_validateOverflow","toRemove","existingKeys","DataCollection","bloomFilterFalsePositiveChance","caching","comment","gcGraceSeconds","compactionClass","compactionOptions","localReadRepairChance","readRepairChance","crcCheckChance","populateCacheOnFlush","defaultTtl","speculativeRetry","minIndexInterval","maxIndexInterval","columnsByName","partitionKeys","clusteringKeys","clusteringOrder","AuthProvider","Authenticator","challenge","ModelBatchMapper","_handler","batching","getSelectExecutor","executor","getSelectAllExecutor","getInsertExecutor","getUpdateExecutor","getDeleteExecutor","paramsHandler","getExecutorFromQuery","Cache","Tree","ModelBatchItem","_cache","insert","docKeys","cacheKey","getInsertKey","cacheItem","getOrCreate","createInsertQueries","getUpdateKey","createUpdateQueries","getRemoveKey","createDeleteQueries","qModule","_yieldKeyAndOperators","_getSelectDocInfo","orderBy","ttl","ifNotExists","_yieldKeyAndAllQs","ifExists","when","deleteOnlyColumns","_yieldOperators","Node","edges","keyIterator","valueHandler","isMatch","newBranch","_createBranch","nextNode","_onItemAdded","useNewValue","vm","ResultMapper","scriptText","getPropertyName","Script","runInThisContext","_getConditionalRowAdapter","newInstance","canCache","getSelectAdapter","propertyKeys","propertyName","columnName","getColumnName","ordering","overrideIdempotency","TableMappings","UnderscoreCqlToCamelCaseMappings","DefaultTableMappings","newObjectInstance","incValue","TreeBase","Iterator","tree","_tree","_ancestors","_cursor","find","_comparator","get_child","findIter","iter","lowerBound","cur","upperBound","left","right","it","reach","_minNode","_maxNode","linearBuckets","width","buckets","exponentialBuckets","factor","memoryUsage","ex","AggregatorFactory","aggregatorFn","byLabels","valObj","aggregators","sum","v","omit","average","Infinity","clientOptions","Client","auth","mapping","concurrent","bodyParser","Router","app","application","json","raw","static","urlencoded","parsers","createParserGetter","parserName","loadParser","_urlencoded","_json","addSuffix","fileLocation","fileName","isNative","getScriptNameOrSourceURL","lineNumber","columnNumber","callSiteFileLocation","functionName","isConstructor","isMethodCall","isToplevel","methodName","receiver","read","reviver","shouldParse","typeChecker","FIRST_CHAR_REGEXP","partial","SyntaxError","normalizeJsonSyntaxError","createStrictSyntaxError","getCharset","getOwnPropertyNames","ctor","superCtor","TempCtor","load","storage","DEBUG","Function","lastC","removeItem","window","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","$1","chrome","localStorage","localstorage","y","plural","long","round","fmtShort","tty","inspectOpts","prefix","isatty","fd","_","DEBUG_FD","stdout","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","_isStdio","createWritableStdioStream","O","global","readStream","ICONV_ENCODING_MESSAGE_REGEXP","state","_readableState","_decoder","invokeCallback","cleanup","pause","halt","onAborted","onData","chunk","onEnd","PrependBOMWrapper","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","base64","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","contBytes","accBytes","completeQuads","bufIdx","charCode","curByte","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","defaultEncoding","asciiCharsLE","asciiCharsBE","_len","utf16be","tmp","buf2","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","_getDecodeTrieNode","curAddr","writeTable","codeTrail","seq","_getEncodeBucket","uCode","dbcsCode","bucket","_setEncodeSequence","oldVal","mbCode","nextChar","resCode","subtable","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","_transform","_flush","chunks","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","isNativeEncoding","SlowBufferToString","SlowBufferWrite","swap","remaining","BufferIsEncoding","isEncoding","BufferByteLength","BufferToString","BufferWrite","_offset","_length","_encoding","Readable","ReadableSetEncoding","setEncoding","undoExtendNodeEncodings","arg1","ee","stuff","cleanups","thunk","paramRegExp","textRegExp","tokenRegExp","qescRegExp","quoteRegExp","subtypeNameRegExp","typeNameRegExp","typeRegExp","suffix","splitType","defaultCharset","extended","parameterLimit","paramCount","parameterCount","arrayLimit","extendedparser","maxKeys","simpleparser","arrayPrefixGenerators","brackets","comma","indices","repeat","pushToArray","valueOrArray","toISO","toISOString","defaults","addQueryPrefix","allowDots","charsetSentinel","delimiter","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","objKeys","normalizeStringifyOptions","arrayFormat","joined","ignoreQueryPrefix","interpretNumericEntities","parseArrays","numberStr","parseKeys","givenKey","child","segment","chain","leaf","cleanRoot","0","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","parseValues","newObj","dest","redefine","finalhandler","middleware","View","logerror","engines","settings","defaultConfiguration","locals","mountpath","lazyrouter","_router","onerror","fns","orig","engine","ext","setting","disabled","del","delete","render","view","renderOptions","_locals","defaultEngine","dirs","tryRender","listen","server","createServer","DOUBLE_SPACE_REGEXP","NEWLINE_REGEXP","getErrorStatusCode","getResponseStatusCode","getErrorHeaders","getErrorMessage","getResourceName","statusMessage","pathtoRegexp","extraOffset","keysOffset","MATCHING_GROUP_REGEXP","optional","slash","capture","star","escapeCount","dirname","__express","tryStat","statSync","roots","dir","isFile","webpackEmptyContext","ReadStream","onOpenClose","destroyReadStream","Mime","define","DEBUG_MIME","_loading","readFileSync","default_type","mimeType","w","msAbs","isPlural","fmtLong","proxyAddrs","remoteAddress","expandIPv6","ipv4Part","ipv4Regexes","ipv6Part","ipv6Regexes","matchCIDR","second","partSize","cidrBits","subnetMatch","rangeList","defaultName","rangeName","IPv4","octets","octet","toNormalizedString","toByteArray","cidrRange","ref","SpecialRanges","unspecified","broadcast","multicast","linkLocal","carrierGradeNat","reserved","IPv6","cidr","stop","zeros","zerotable","128","192","224","240","248","252","254","255","fourOctet","longValue","parseIntAuto","reverse","zoneId","toRFC5952String","bestMatchIndex","bestMatchLength","regex","toFixedLengthString","padStart","uniqueLocal","ipv4Mapped","rfc6145","rfc6052","teredo","32768","49152","57344","61440","63488","64512","65024","65280","65408","65472","65504","65520","65528","65532","65534","65535","zoneIndex","transitional","colonCount","lastColon","replacement","replacementCount","isIPv4","isIPv6","error1","isValidFourPartDecimal","parseCIDR","maskLength","subnetMaskFromPrefixLength","filledOctetCount","broadcastAddressFromCIDR","ipInterfaceOctets","subnetMaskOctets","networkAddressFromCIDR","fromByteArray","webpackPolyfill","children","accepts","isIP","IncomingMessage","defineGetter","lc","referrer","referer","accept","acceptsEncodings","acceptsEncoding","acceptsCharsets","acceptsCharset","acceptsLanguages","languages","acceptsLanguage","defaultValue","encrypted","hostname","subdomains","trimRight","Negotiator","Accepts","negotiator","extToMime","validMime","mediaTypes","mimes","encodings_","charsets_","lang","langs","language","languages_","loadModule","moduleName","available","preferredCharsets","preferredEncodings","preferredLanguages","mediaType","preferredMediaTypes","preferredCharset","preferredEncoding","preferredLanguage","preferredMediaType","simpleCharsetRegExp","parseCharset","specify","spec","provided","parseAcceptCharset","isQuality","compareSpecs","getFullCharset","priorities","accepted","priority","getCharsetPriority","simpleEncodingRegExp","parseEncoding","hasIdentity","minQuality","parseAcceptEncoding","getFullEncoding","getEncodingPriority","simpleLanguageRegExp","parseLanguage","full","parseAcceptLanguage","getFullLanguage","getLanguagePriority","simpleMediaTypeRegExp","parseAccept","quoteCount","splitMediaTypes","parseMediaType","kvps","splitParameters","splitKeyValuePair","pair","getFullType","getMediaTypePriority","cookie","vary","ServerResponse","charsetRegExp","sendfile","streaming","onaborted","replacer","spaces","links","link","rel","etagFn","generateETag","jsonp","sendStatus","syscall","download","fullPath","ct","default","attachment","clearCookie","expires","secret","signed","serialize","location","u","sha1","createHmac","unsign","opt","pairs","pairSplitRegExp","eq_idx","tryDecode","fieldContentRegExp","domain","httpOnly","secure","sameSite","FIELD_NAME_REGEXP","fld","fallthrough","onDirectory","forwardError","dns","EC2MultiRegionTranslator","translate","newAddress","hostNames","lookupAddress","logError","doneIteratorObject","RoundRobinPolicy","localDc","localHostsArray","TokenAwareIterator","localReplicas","replicaIndex","replicaMap","childIterator","WhiteListPolicy","whiteList","getOptions","planIndex","_cleanHostCache","localDataCenter","_resolveLocalHosts","planLocalIndex","iterate","computeNext","_contains","_filter","_unixToGregorian","_ticksInMs","minNodeId","minClockId","maxNodeId","maxClockId","_ticks","_ticksForCurrentTime","_lastTimestamp","timeWithTicks","getTicks","getTimeWithTicks","getNodeId","getClockId","timeHigh","writeTime","generateBuffer","getOrGenerateRandom","timeUuid","getDatePrecision","timeLow","ticksInMsLong","getDate","getNodeIdString","VersionNumber","v200","v210","v220","v300","v4","v5","minSupported","supportsPreparedPartitionKey","supportsSchemaChangeFullMetadata","supportsNamedParameters","getHighestCommon","v3Requirement","maxVersionWith3OrMore","addendum","_versionPattern","major","minor","patch","dsePatch","preReleases","build","preRelease","thisPatch","otherPatch","unscaledValue","scale","_intVal","_scale","unscaledValueBuffer","scaleBuffer","scaleIndex","textValue","diffScale","intString","signSymbol","reusableBuffers","months","days","nanoseconds","longOneThousand","nanosPerMicro","nanosPerMilli","nanosPerSecond","nanosPerMinute","nanosPerHour","standardRegex","iso8601Regex","iso8601WeekRegex","iso8601AlternateRegex","Builder","_isNegative","_unitIndex","_months","_days","_nanoseconds","_addMethods","addYears","addMonths","addWeeks","addDays","addHours","addMinutes","addSeconds","addMillis","addMicros","addNanos","_unitByIndex","lengthMonths","VIntCoding","writeVInt","lengthDays","lengthNanoseconds","dividend","append64","remainder","readVInt","input","parseIso8601WeekFormat","parseIso8601AlternativeFormat","builder","parseIso8601Format","parseStandardFormat","_validateOrder","unitIndex","_getUnitName","_validateMonths","units","monthsPerUnit","_validate32","_validateDays","daysPerUnit","_validateNanos","nanosPerUnit","_validate64","unitName","symbol","addMethod","years","weeks","hours","minutes","seconds","millis","micros","nanos","firstByte","sByteInt","numberOfLeadingZerosInt32","numberOfExtraBytesToRead","ii","readUnsignedVInt","numberOfLeadingZeros","computeUnsignedVIntSize","extraBytes","intValue","intBytes","encodeVInt","writeUnsignedVInt","ipv4Pattern","filling","applied","embeddedIp4","uIntValue","isValidIPv4Mapped","longest","checkLongest","millisecondsPerDay","dateCenter","year","month","day","setUTCHours","setUTCFullYear","getUTCFullYear","getUTCMonth","getUTCDate","fillZeros","amount","utcNow","getFullYear","getMonth","maxNanos","nanoSecInSec","nanoSecInMillis","totalNanoseconds","hour","_getParts","minute","nanosecond","secParts","fromMilliseconds","getTimezoneOffset","milliseconds","getTotalNanoseconds","lastPosition","formatTime","_partsCache","secs","isSchemaInAgreement","queriedHost","achievedConsistency","nextPage","getColumns","paused","_read","reading","_readNext","_valve","readNext","__columns","valuesArray","fromArray","ConstantReconnectionPolicy","baseDelay","maxDelay","startWithNoDelay","_addJitter","minPercentage","SpeculativeExecutionPolicy","_plan","ConstantSpeculativeExecutionPolicy","maxSpeculativeExecutions","_delay","_maxSpeculativeExecutions","queryInfo","executions","warningThreshold","minLogInterval","_warningThreshold","_minLogInterval","_micros","_lastDate","_lastLogDate","drifted","_generateMicroseconds","lastDate","currentLogDate","nanosToMillis","defaultMessageMaxQueryLength","defaultMaxParameterValueLength","defaultMaxErrorStackTraceLength","toMillis","getStatementInfo","maxQueryLength","messageMaxQueryLength","maxParameterLength","messageMaxParameterValueLength","isPrepared","queryLength","getParametersInfo","getBatchStatementInfo","paramStringifier","formatParam","paramString","maxLength","getPayloadSizes","formatSize","logNormalRequests","logErroredRequests","slowThreshold","_logSlow","requestSizeThreshold","_logLargeRequest","_logNormalRequest","_logLargeErrorRequest","_logErrorRequest","maxStackTraceLength","messageMaxErrorStackTraceLength","authentication","clientTimeout","unavailable","retries","ignoredErrors","responses","success","ClientState","ControlConnection","isShuttingDown","_connectCb","connecting","_warmup","_setHostListeners","_innerExecute","eachRow","pageCallback","rawPageState","setPageState","isAutoPage","resultStream","_batchCb","queryItems","getPreparedMultiple","_createBatchRequest","getState","_shutdownCb","doShutdown","_waitForSchemaAgreement","maxWaitSeconds","versionsMatch","handleSchemaAgreementAndRefresh","handleSchemaChange","_createQueryRequest","_createExecuteRequest","getHostUpListener","getHostDownListener","_getEncoder","firstQuery","_setRoutingInfo","paramsInfo","encodeRoutingKey","fromUser","setRoutingIndexes","tableInfo","openConnections","inFlightQueries","_hosts","_openConnections","_inFlightQueries","getConnectedHosts","getOpenConnections","getInFlightQueries","EventDebouncer","schemaChangeTypes","addressTranslator","reconnectionPolicy","debouncer","topologyChangeTimeout","nodeStatusChangeTimeout","reconnectionTimeout","hostIterator","_resolvedContactPoints","_contactPoints","borrowHostConnection","createConnection","addContactPoint","portNumber","standardEndpoint","resolvedAddressedByName","parseEachContactPoint","addressOrName","addresses","resolve4","resolve6","family","resolveAll","addressInfo","eachNext","refresh","setHealthListeners","wasRefreshCalled","startReconnecting","hostDown","downOrIgnoredHandler","socketClosedHandler","borrowAConnection","contactPoint","refreshHosts","initializing","setCurrentHost","setLocalInfo","setPeersInfo","highestCommon","reconnect","reuseQueryPlan","nodeTopologyChangeHandler","nodeStatusChangeHandler","nodeSchemaChangeHandler","noOpenConnectionHandler","addExistingConnection","scheduleRefreshHosts","addressToTranslate","endPoint","up","processNow","cqlObject","isKeyspace","schemaChangeType","scheduleObjectRefresh","scheduleKeyspaceRefresh","eventReceived","localHost","peers","foundDataCenters","getAddressForPeerHost","isNewHost","defaultPort","peer","waitForReconnection","newConnectionListener","cqlQuery","queryOnConnection","currentHosts","getResolvedContactPoints","getEndpoint","connectionIndex","connectionIndexOverflow","initial","closing","shuttingDown","shutDown","_address","_newConnectionTimeout","_creating","_state","maxRequests","minInFlight","connectionsToCreate","_attemptNewConnection","_closeAllConnections","_addListeners","connectionErrorCallback","_createConnection","_opening","newConnections","openConnection","_afterClosing","closedConnections","checkShutdownTimeout","wasClosed","getDelayedClose","resetState","previousState","Writable","FrameReader","clearHeaderChunks","headerSize","streamOptions","frames","rowBuffer","readItems","currentHeader","headerChunks","headerPart","frameEnded","frameInfo","frameState","parseBody","cellBuffer","isStreaming","handleFrameBuffers","reader","flagsInfo","originalOffset","readFlagsInfo","handleParsingError","parseResult","readBytes","readString","readError","readEvent","bufferLength","addFrameBuffer","getFrameBuffer","expectedLength","readInt","readMetadata","keyspaceSet","preparedId","readShortBytes","parseSchemaChange","emitted","remainingLength","parseRows","parsingError","rowIndex","rowOffset","bufferResultCell","bufferAndEmit","resultFlag","toEnd","readShort","readByte","checkOffset","newLength","readStringList","readBytesMap","readType","readInet","columnLength","global_tables_spec","col","ksname","tablename","failures","details","template","argTypes","added","groupSize","shiftToGroup","releasableSize","maxGroupsFor2Bytes","releaseDelay","generateGroup","initialValue","currentGroup","groupIndex","groups","releaseTimeout","maxGroups","_tryCreateGroup","_tryIssueRelease","_releaseGroups","timedOut","cancelled","_timeout","_rowIndex","defaultReadTimeout","onTimeout","onResponse","getReadTimeout","_markAsTimedOut","_markAsCompleted","_swapCallbackAndInvoke","newCallback","retryOnCurrentHost","rethrowDecision","errorCodes","none","socketError","socketErrorBeforeRequestWritten","serverErrorUnprepared","serverErrorOverloaded","serverErrorReadTimeout","serverErrorUnavailable","serverErrorWriteTimeout","serverErrorOther","metricsHandlers","onSuccessfulResponse","onClientTimeoutError","onOtherError","onReadTimeoutError","onUnavailableError","onWriteTimeoutError","metricsRetryHandlers","onOtherErrorRetry","onClientTimeoutRetry","onReadTimeoutRetry","onUnavailableRetry","onWriteTimeoutRetry","_parent","_operation","_host","_cancelled","_startTime","_retryCount","_request","getHostCallback","getNextConnection","handleNoHostAvailable","_connection","_sendOnConnection","errorCode","_getErrorCode","_trackResponse","_handleError","_getResultSet","_invokeMetricsHandler","onError","onSuccess","_prepareAndRetry","decisionInfo","_getDecision","onIgnoreError","_invokeMetricsHandlerForRetry","_retry","operationInfo","retryPolicy","getRetryPolicy","mconst1","mconst2","mlongFive","mconst3","mconst4","mconst5","mconst6","Tokenizer","ringEnd","ringLength","numberOfSplitsInt","divider","dividerPlusOne","getValue","fromSignedByte","nblocks","h1","h2","k1","k2","getBlock","rotl64","fmix","blockOffset","_minToken","_maxToken","_maxValue","_minValue","_ringLength","maxValue","minValue","maxToken","startVal","splitBase","_crypto","hashedValue","zeroIndex","significantBytes","number","tokenOrder","endVal","intNumberOfSplits","addedBytes","_toNumber","_toBuffer","TableMetadata","Aggregate","SchemaFunction","Index","MaterializedView","_selectTableV1","_selectTableV2","_selectColumnsV1","_selectColumnsV2","_selectIndexesV2","_selectUdtV1","_selectUdtV2","_selectFunctionsV1","_selectFunctionsV2","_selectAggregatesV1","_selectAggregatesV2","_selectVirtualTable","SchemaParser","cc","selectTable","selectColumns","selectIndexes","selectUdt","selectAggregates","selectFunctions","supportsVirtual","SchemaParserV1","SchemaParserV2","SchemaParserV3","addSkippedHosts","dcRf","dcReplicas","tokenReplicas","skippedHosts","isDoneForToken","replicationFactors","replicasByDc","dcName","rf","_createKeyspace","durableWrites","strategy","strategyOptions","replicationFactor","nextReplicaIndex","nextReplica","racksPlaced","racksPlacedInDc","getTokenToReplicaMapper","tableRow","columnRows","indexRows","loaded","loading","virtualTable","_parseTableOrView","_parseUdt","_parseFunction","_parseAggregate","functionsInfo","_asMap","_mapAsObject","columnsKeyed","memtableFlushPeriod","indexInterval","replicateOnWrite","order","keysStoredInTableRow","comparator","isCompact","indexes","fromColumnRows","stateFunction","finalFunction","initConditionRaw","argumentTypes","stateType","initConditionValue","initCondition","returnType","argumentNames","calledOnNullInput","fieldNames","fieldTypes","_parseKeyspace","viewInfo","replication","columnRowMapper","isStatic","isView","compaction","cdc","tableName","whereClause","includeAllColumns","_getIndexes","isDense","isSuper","isCompound","pruneStaticCompactTableColumns","pruneDenseTableColumns","mapNext","_getKeyspace","ks","currentInstance","parserConstructor","composites","getKindByName","isCompositesKind","isKeysKind","isCustomKind","fromRows","indexName","_queue","mainEvent","_slideDelay","keyspaceEvents","processQueue","baseProvider","PlainTextAuthProvider","provider","PlainTextAuthenticator","Mapper","ModelMapper","Result","tableMappingsModule","MappingHandler","DocInfoAdapter","ModelMappingInfo","_modelMappingInfos","_modelMappers","modelMapper","createDefault","pushQueries","adaptBatchOptions","getMappingInfo","getMutationAdapter","QueryGenerator","ObjectSelector","cacheHighWaterMark","select","_validateCacheLength","selectAll","customQueries","allPKsDefined","getSelectKey","resultAdapter","propertiesInfo","getPropertiesInfo","fieldsInfo","orderByColumns","adaptOrderBy","getForSelect","getSelect","selectParamsGetter","_executeSelect","getSelectAllKey","getForSelectAll","adaptAllOptions","_setSingleExecutor","_setBatchExecutor","getForInsert","getInsert","getForUpdate","getUpdate","getForDelete","getDelete","commonExecutionOptions","commonOptions","resultAdapterInfo","getCustomQueryAdapter","adaptOptions","queryAndParams","vmFileName","_getConditionWithOperators","_valueGetterExpression","filteredPropertiesInfo","pInfo","_getInsertQuery","_insertParamsGetter","primaryKeys","column","_getUpdateQuery","_updateParamsGetter","_assignmentGetterExpression","_getDeleteQuery","_deleteParamsGetter","columnsToDelete","objectName","_valueGetterSingle","_getSingleCondition","filteredTables","keyNames","mappings","_mappings","_columns","_documentProperties","currentKeyspace","models","modelName","modelOptions","_create","ArrayBasedExecutor","_query","_parameters","_raiseOnFirstError","raiseOnFirstError","_concurrencyLevel","concurrencyLevel","_result","ResultSetGroup","_stop","promises","_executeOneAtATime","initialIndex","iteration","setResultItem","catch","_setError","setError","StreamBasedExecutor","_stream","_inFlight","_resolveCallback","_rejectCallback","_readEnded","_executeOne","_setReadEnded","isPaused","_collectResults","collectResults","_maxErrors","maxErrors","totalExecuted","resultItems","executeConcurrent","Counter","Gauge","Histogram","Summary","Pushgateway","collectDefaultMetrics","AggregatorRegistry","observe","configureUpperbounds","configuredBuckets","sortAscending","setValuePair","labelValuePair","valueFromMap","createBaseValues","bucketValues","upperBounds","bound","findBound","labelsOrConf","validateInput","histogram","bucketData","bucketLabelNames","lbls","le","infLabel","addSumAndCountForExport","timeWindowQuantiles","DEFAULT_COMPRESS_COUNT","configurePercentiles","configuredPercentiles","summaryOfLabel","td","maxAgeSeconds","ageBuckets","compressCount","compress","percentiles","summaryOfLabels","percentile","percentileValue","quantile","extractSummariesForExport","summary","getSumForExport","getCountForExport","TDigest","rotate","timeSinceLastRotateMillis","lastRotateTimestampMillis","durationBetweenRotatesMillis","shouldRotate","ringBuffer","currentBuffer","RBTree","K","CX","discrete","centroids","compare_centroid_means","nreset","mean","compare_centroid_mean_cumns","mean_cumn","Digest","digest_ratio","ratio","digest_thresh","thresh","n_unique","last_cumulate","everything","_cumulate","_digest","push_centroid","exact","cumn","find_nearest","_new_centroid","_addweight","nearest","bound_mean","lower","p_rank","x_or_xlist","ps","_p_rank","upper","bound_mean_cumn","p_or_plist","_percentile","compressing","choices","points","check_continuous","BinTree","red","is_red","single_rotate","set_child","double_rotate","last","gp","ggp","dir2","found","sr","sibling","gpc","https","useGateway","job","groupings","gatewayUrlParsed","gatewayUrl","generateGroupings","requestParams","httpModule","requestOptions","registry","jobName","processCpuTotal","processStartTime","osMemoryHeap","processOpenFileDescriptors","processMaxFileDescriptors","eventLoopLag","processHandles","processRequests","heapSizeAndUsed","heapSpacesSizeAndUsed","metricsList","existingInterval","normalizedConfig","initialisedMetrics","defaultMetric","metricNames","removeSingleMetric","updateAllMetrics","cpuUsage","namePrefix","cpuUserUsageCounter","cpuSystemUsageCounter","cpuUsageCounter","lastCpuUsage","userUsageMicros","user","systemUsageMicros","system","nowInSeconds","uptime","cpuUserGauge","isSet","linuxVariant","safeMemoryUsage","PROCESS_RESIDENT_MEMORY","platform","residentMemGauge","memUsage","rss","notLinuxVariant","virtualMemGauge","heapSizeMemGauge","readFile","structuredOutput","returnValue","some","structureOutput","VmRSS","VmSize","VmData","fileDescriptorsGauge","readdir","maxFds","reportEventloopLag","_getActiveHandles","totalGauge","_getActiveRequests","heapSizeTotal","heapSizeUsed","externalMemUsed","usage","external","heapTotal","heapUsed","used","v8","METRICS","NODEJS_HEAP_SIZE","metricType","getHeapSpaceStatistics","gauges","space","spaceName","space_name","space_size","space_used_size","space_available_size","versionSegments","nodeVersionGauge","cluster","GET_METRICS_REQ","GET_METRICS_RES","registries","requestCtr","listenersAdded","isMaster","worker","requestId","pending","errorTimeout","failed","promString","addListeners","workers","isConnected","metricsArr","aggregatedRegistry","metricsByName","aggregatorName","aggregatedMetric","aggregatedMetricWrapper","regs","isWorker","getMetricsAsJSON","assert","timingSafeEqual","safeCompare","userInput","userInputLength","secretLength","userInputBuffer","secretBuffer","ensureFunction","option","buildMiddleware","users","authorizer","isAsync","authorizeAsync","getResponseBody","unauthorizedResponse","realm","approved","ifError","challengeString","realmName","authorization","getAuthorization","CREDENTIALS_REGEXP","USER_PASS_REGEXP","userPass","Credentials","extendStatics","__extends","__","isFunction","_enable_super_gross_mode_that_will_cause_bad_things","hostReportError","closed","useDeprecatedSynchronousErrorHandling","UnsubscriptionErrorImpl","UnsubscriptionError","Subscription","unsubscribe","_parentOrParents","_subscriptions","_unsubscribe","flattenUnsubscriptionErrors","teardown","subscription","EMPTY","subscriptions","subscriptionIndex","errs","rxSubscriber","_super","Subscriber","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","subscriber","_next","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","observable","_i","pipeFromArray","Observable","subscribe","_isScalar","_subscribe","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","observer","_a","closed_1","canReportError","promiseCtor","getPromiseCtor","toPromise","getSymbolIterator","isArrayLike","isPromise","subscribeTo","obs","promise","iterable","return","scheduled","scheduler","isInteropObservable","schedule","scheduleObservable","schedulePromise","scheduleArray","isIterable","scheduleIterable","project","MapOperator","MapSubscriber","fromEvent","eventName","resultSelector","setupSubscription","sourceObj","addEventListener","removeEventListener","isEventTarget","source_1","off","isJQueryStyleEventEmitter","source_2","addListener","isNodeStyleEventEmitter","source_3","InnerSubscriber","outerValue","outerIndex","notifyNext","notifyError","notifyComplete","OuterSubscriber","innerValue","innerIndex","innerSub","mergeMap","POSITIVE_INFINITY","MergeMapOperator","MergeMapSubscriber","hasCompleted","active","_tryNext","_innerSub","ish","innerSubscriber","outerSubscriber","subscribeToResult","scan","accumulator","seed","hasSeed","ScanOperator","ScanSubscriber","_seed","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","emptyScheduled","takeLast","TakeLastOperator","TakeLastSubscriber","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","TakeOperator","TakeSubscriber","promClient","setENV","defValue","cassServers","dataCenter","keySpace","exit","express","ac","room","ts","content","take"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,K,gBClFrDhC,EAAOD,QAAUkC,QAAQ,S,6BCCzB,MAAMC,EAAO,EAAQ,GACfC,EAAS,EAAQ,GASjBC,EAAczB,OAAO0B,OAAO,IAElC,SAASC,KAMT,MAAMC,EAAcC,OAAOC,OAyB3B,SAAmCC,GACjC,MAAMC,EAAIC,EAAsBF,GAEhC,OADAC,EAAEE,KAAK,GACAF,GAtBHG,EAAoBN,OAAOO,aAAeH,EAM1CI,EAAyBC,UAAUC,OAASV,OAAOU,MAAQV,OAAOU,MAmBxE,SAAyCC,EAAMC,GAC7C,GAAoB,iBAATD,EACT,MAAM,IAAIE,UAAU,6BAA+BnB,EAAKoB,QAAQH,IAGlE,OAAO,IAAIX,OAAOW,EAAMC,IAlBpBG,EAAwBN,UAAUC,OAASV,OAAOU,MAAQV,OAAOU,MAqBvE,SAAwCM,GACtC,IAAKC,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,4BAA8BnB,EAAKoB,QAAQE,IAGjE,OAAO,IAAIhB,OAAOgB,IAxBpB,SAASZ,EAAsBF,GAE7B,OAAO,IAAIF,OAAOE,GAuNpB,SAASiB,EAAaH,EAAKhC,EAAKoC,GAC9B,IAAIC,EAAM,EACNC,EAAON,EAAIO,OAAO,EAEtB,KAAOF,GAAOC,GAAM,CAClB,MAAME,EAAOH,EAAMC,IAAU,EAEvBG,EAAML,EADGJ,EAAIQ,GACaxC,GAChC,GAAIyC,EAAM,EACRJ,EAAMG,EAAM,MAET,MAAIC,EAAM,GAMb,OAAOD,EALPF,EAAOE,EAAM,GASjB,OAAQH,EAwJV,SAASK,EAAsBC,GAC7B,OAAO,IAAIC,QAAQ,SAAkBC,EAASC,GAC5CH,EAAQ,SAAyBI,EAAKC,GACpC,GAAID,EACF,OAAOD,EAAOC,GAEhBF,EAAQG,OA2Bd,SAASC,IACPC,KAAKX,OAAS,EACdW,KAAKC,MAAQ,GA0Hf,SAASC,EAAQpB,EAAKqB,EAAIC,EAAUC,GAClC,IAAKtB,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,oCAEtB0B,EAAWA,GAAYzC,EACvB,MAAMyB,EAASP,EAAIO,OACnB,GAAe,IAAXA,EACF,OAAOgB,EAAS,KAAM,IAExB,MAAMP,EAAS,IAAIf,MAAMM,GACzB,IAAIiB,EAAY,EAChB,MAAMC,EAASH,EAYf,SAAyB7E,GACvB4E,EAAGrB,EAAIvD,GAAIA,EAAG,SAAyBsE,EAAKW,GAC1CV,EAAOvE,GAAKiF,EACZC,EAAKZ,MAVT,SAA4BtE,GAC1B4E,EAAGrB,EAAIvD,GAAI,SAAyBsE,EAAKW,GACvCV,EAAOvE,GAAKiF,EACZC,EAAKZ,MAPT,IAAK,IAAItE,EAAI,EAAGA,EAAI8D,EAAQ9D,IAC1BgF,EAAOhF,GAiBT,SAASkF,EAAKZ,GACZ,GAAIA,EAAK,CACP,MAAMa,EAAKL,EAGX,OAFAA,EAAWzC,OACX8C,EAAGb,KAGCS,IAAcjB,GAGpBgB,EAAS,KAAMP,IA1JnBC,EAAQ5C,UAAUwD,IAAM,SAAU7D,GAChC,OAAIkD,KAAKC,MAAMnD,KAGfkD,KAAKC,MAAMnD,IAAO,EAClBkD,KAAKX,UACE,IAMTU,EAAQ5C,UAAUyD,SAAW,SAAU9D,GACrC,OAA2B,IAApBkD,KAAKC,MAAMnD,IAOpBiD,EAAQ5C,UAAU0D,QAAU,WAC1B,OAAO5E,OAAO6E,KAAKd,KAAKC,QA8Y1B5E,EAAQ0F,yBA5jBR,SAAkCC,EAAQC,GACxC,IAAKD,GAAUxD,EAAKwB,QAAQgC,KAAYC,GAA8B,IAAnBA,EAAQ5B,OAEzD,OAAO2B,EAET,MAAME,EAAc,IAAInC,MAAMkC,EAAQ5B,QACtC2B,EArLF,SAA+BG,GAC7B,MAAML,EAAO7E,OAAO6E,KAAKK,GACnBrB,EAAS,GACf,IAAK,IAAIvE,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAM6F,EAAIN,EAAKvF,GACfuE,EAAOsB,EAAEC,eAAiBF,EAAIC,GAEhC,OAAOtB,EA8KEwB,CAAsBN,GAC/B,MAAMF,EAAO,GACb,IAAK,IAAIvF,EAAI,EAAGA,EAAI0F,EAAQ5B,OAAQ9D,IAAK,CACvC,MAAMO,EAAOmF,EAAQ1F,GAAGO,KACxB,IAAKkF,EAAO5D,eAAetB,GACzB,MAAM,IAAI2B,EAAO8D,cAAc/D,EAAKgE,OAAO,6BAA8B1F,IAE3EoF,EAAY3F,GAAKyF,EAAOlF,GACxBgF,EAAKhF,GAAQP,EAEf,OAAO2F,GA6iBT7F,EAAQoG,0BAliBR,SAAmCT,EAAQU,GACzC,IAAKV,GAAUxD,EAAKwB,QAAQgC,GAE1B,MAAO,CAAEA,OAAQA,EAAQW,iBAAiB,EAAOC,WAAY,MAG/D,MAAMd,EAAO7E,OAAO6E,KAAKE,GACnBE,EAAc,IAAInC,MAAM+B,EAAKzB,QAC7BwC,EAAQ,IAAI9C,MAAM+B,EAAKzB,QACvByC,EAAYJ,EAAYK,YAAcrE,EACtCkE,EAAa,GAEnB,IAAK,IAAIrG,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAMuB,EAAMgE,EAAKvF,GAEjB2F,EAAY3F,GAAK,CAAEO,KAAMgB,EAAIuE,cAAe7E,MAAOwE,EAAOlE,IAC1D+E,EAAMtG,GAAKuG,EAAUhF,GACrB8E,EAAW9E,GAAOvB,EAKpB,OAFAmG,EAAYM,SAASH,GAEd,CAAEb,OAAQE,EAAaS,iBAAiB,EAAMC,eA6gBvDvG,EAAQwC,YAAcA,EACtBxC,EAAQ+C,kBAAoBA,EAC5B/C,EAAQwD,qBAAuBA,EAC/BxD,EAAQiD,sBAAwBA,EAChCjD,EAAQ4G,cAnqBR,SAAwBnD,GACtB,IAAIoD,EAAQ,EACZ,MAAO,CAAEzB,KAAO,WACd,OAAIyB,GAASpD,EAAIO,OACR,CAAC8C,MAAM,GAET,CAAC3F,MAAOsC,EAAIoD,KAAUC,MAAM,MA8pBvC9G,EAAQ4D,aAAeA,EACvB5D,EAAQ+G,WA9zBR,SAAoBC,GAClB,MAAMC,EAAelE,EAAkBiE,EAAIhD,QAE3C,OADAgD,EAAIE,KAAKD,GACFA,GA4zBTjH,EAAQmH,WAruBR,SAASA,EAAWC,GA2BlB,OA1BgB1D,MAAM5B,UAAUuF,MAAMhH,KAAKiH,UAAW,GAC9CC,QAAQ,SAAUC,GACxB,IAAK,MAAMC,KAAQD,EAAQ,CACzB,IAAKA,EAAOzF,eAAe0F,GACzB,SAEF,MAAMC,EAAaN,EAAOK,GACpBE,SAAqBD,GAKtBA,GACY,WAAfC,GACe,WAAfA,GACAxF,EAAKwB,QAAQ+D,IACbvF,EAAKyF,OAAOF,IACoB,WAAhCA,EAAWG,YAAYpH,KACvB2G,EAAOK,GAAQD,EAAOC,GAItBL,EAAOK,GAAQN,EAAW,GAAIO,EAAYF,EAAOC,OAIhDL,GA2sBTpH,EAAQ8H,KAhZR,SAAcrE,EAAKqB,EAAIE,GACrB,IAAKtB,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,mCAEtB0B,EAAWA,GAAYzC,EACvB,MAAMyB,EAASP,EAAIO,OACnB,GAAe,IAAXA,EACF,OAAOgB,IAET,IAAIC,EAAY,EAChB,IAAK,IAAI/E,EAAI,EAAGA,EAAI8D,EAAQ9D,IAC1B4E,EAAGrB,EAAIvD,GAAIkF,GAEb,SAASA,EAAKZ,GACZ,GAAIA,EAAK,CACP,MAAMa,EAAKL,EAGX,OAFAA,EAAWzC,OACX8C,EAAGb,KAGCS,IAAcjB,GAGpBgB,MA0XJhF,EAAQ+H,WAjXR,SAAoBtE,EAAKqB,EAAIE,GAC3B,IAAKtB,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,mCAEtB0B,EAAWA,GAAYzC,EACvB,MAAMyB,EAASP,EAAIO,OACnB,GAAe,IAAXA,EACF,OAAOgB,IAET,IAAIgD,EACAnB,EAAQ,EACZ/B,EAAGrB,EAAI,GAKP,SAAS2B,EAAKZ,GACZ,GAAIA,EACF,OAAOQ,EAASR,GAElB,GAAIqC,GAAS7C,EACX,OAAOgB,SAEIiD,IAATD,IACFA,GAAO,GAET,GAAIA,EACF,OAAOE,QAAQC,SAAS,WACtBrD,EAAGrB,EAAIoD,KAAUzB,KAGrBN,EAAGrB,EAAIoD,KAAUzB,UAnBN6C,IAATD,IACFA,GAAO,IAsWXhI,EAAQoI,WAAaxH,OAAO0B,OAAO,IAEnCtC,EAAQqC,YAAcA,EACtBrC,EAAQqI,OAjxBR,SAAgBjB,GAgBd,OAfgB1D,MAAM5B,UAAUuF,MAAMhH,KAAKiH,UAAW,GAC9CC,QAAQ,SAAUC,GACxB,IAAKA,EACH,OAEF,MAAM/B,EAAO7E,OAAO6E,KAAK+B,GACzB,IAAK,IAAItH,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAMuB,EAAMgE,EAAKvF,GACXiB,EAAQqG,EAAO/F,QACPwG,IAAV9G,IAGJiG,EAAO3F,GAAON,MAGXiG,GAkwBTpH,EAAQsI,SA9zBR,SAAkBC,EAAYC,GAI5B,OAHID,IACFC,EAAMC,OAAS,qBAAuBF,EAAWG,OAAOH,EAAWI,QAAQ,MAAQ,IAE9EH,GA2zBTxI,EAAQ4I,UAhVR,SAAmBnF,EAAKqB,EAAIE,GAC1B,OAAOH,EAAQpB,EAAKqB,GAAI,EAAME,IAgVhChF,EAAQ6I,YArsBR,SAAqBpI,EAAMqI,GACzB,OAAO,SAAWC,EAAGnG,GACnB,QAAuB,IAAZmG,EAAEtI,GACX,OAAO,EAET,MAAMuI,EAAOD,EAAEtI,GAAMwI,MAAMF,EAAGD,GACxBI,EAAOtG,EAAEnC,GAAMwI,MAAMrG,EAAGkG,GAC9B,OAAIE,EAAOE,EACF,EAELF,EAAOE,GACD,EAEH,IAyrBXlJ,EAAQmJ,aAjnBR,SAAsB1F,EAAK2F,EAAMvF,GAC/B,GAAmB,IAAfJ,EAAIO,OACN,OAAOP,EAAI4F,KAAKD,GAElB,IAAIE,EAAW1F,EAAaH,EAAK2F,EAAMvF,GACnCyF,EAAW,IACbA,GAAYA,GAEd7F,EAAI8F,OAAOD,EAAU,EAAGF,IA0mB1BpJ,EAAQwJ,gBAnqBR,SAAyBC,GACvB,MAAMC,EAAS,GACf,IAAIN,EAAOK,EAASrE,OACpB,MAAQgE,EAAKtC,MACX4C,EAAOL,KAAKD,EAAKjI,OACjBiI,EAAOK,EAASrE,OAElB,OAAOsE,GA6pBT1J,EAAQ2J,IAtzBR,SAAaC,EAAMC,EAAMC,GACvB,IAAKnF,KAAKoF,WAAY,CACpB,IAAKpF,KAAKqF,UAAYrF,KAAKqF,QAAQD,WACjC,MAAM,IAAIE,MAAM,2BAElBtF,KAAKoF,WAAapF,KAAKqF,QAAQD,WAEjCpF,KAAKoF,WAAW,MAAOH,EAAMjF,KAAKkD,YAAYpH,KAAMoJ,EAAMC,GAAe,KAgzB3E9J,EAAQkK,IA5UR,SAAazG,EAAKqB,EAAIE,GACpB,OAAOH,EAAQpB,EAAKqB,GAAI,EAAOE,IA4UjChF,EAAQmK,UAxRR,SAAmB1G,EAAKqB,EAAIE,GAC1B,IAAKtB,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,oCAEtB0B,EAAWA,GAAYzC,EACvB,MAAMyB,EAASP,EAAIO,OACnB,GAAe,IAAXA,EACF,OAAOgB,EAAS,KAAM,IAExB,MAAMP,EAAS,IAAIf,MAAMM,GACzB,IACIgE,EADAnB,EAAQ,EAOZ,SAAS3B,EAAOhF,GACd4E,EAAGrB,EAAIvD,GAAI,SAAyBsE,EAAKW,GACvCV,EAAOvE,GAAKiF,EAKhB,SAAcX,GACZ,GAAIA,EACF,OAAOQ,EAASR,GAElB,KAAMqC,IAAU7C,EACd,OAAOgB,EAAS,KAAMP,QAEXwD,IAATD,IACFA,GAAO,GAET,MAAM9H,EAAI2G,EACV,GAAImB,EACF,OAAOE,QAAQC,SAAS,WACtBjD,EAAOhF,KAGXgF,EAAO2B,GApBLzB,CAAKZ,KARTU,EAAO,QACM+C,IAATD,IACFA,GAAO,IA2QXhI,EAAQoK,OA34BO,iBA44BfpK,EAAQuC,KAAOA,EACfvC,EAAQqK,aA7gBR,SAAsBvE,GACpB,IAAKA,EACH,OAAO9F,EAAQoI,WAEjB,MAAM3C,EAAO7E,OAAO6E,KAAKK,GACnB4D,EAAS,IAAIhG,MAAM+B,EAAKzB,QAC9B,IAAK,IAAI9D,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAC/BwJ,EAAOxJ,GAAK4F,EAAIL,EAAKvF,IAEvB,OAAOwJ,GAqgBT1J,EAAQsK,SA5OR,SAAkB7G,EAAKuB,GACrB,IAAKtB,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,oCAEtB0B,EAAWA,GAAYzC,EACvB,MAAMyB,EAASP,EAAIO,OACnB,IAAIiB,EAAY,EAChB,IAAK,IAAI/E,EAAI,EAAGA,EAAI8D,EAAQ9D,IAC1BuD,EAAIvD,GAAGkF,GAET,SAASA,EAAKZ,GACZ,GAAIA,EAAK,CACP,MAAMa,EAAKL,EAEX,OADAA,EAAWzC,EACJ8C,EAAGb,KAENS,IAAcjB,GAGpBgB,MA0NJhF,EAAQuK,eA5fR,SAAwBP,EAASQ,EAAkBpG,GACjD,GAAgC,mBAArBoG,EAGT,YADApG,EAAQ/D,KAAKsE,KAAM6F,GAGrB,MAAMC,EAAUT,EAAQU,gBAAkBvG,EACpCwG,EAAOhG,KACb,OAAO8F,EAAQ,SAAwBzF,GACrCZ,EAAQ/D,KAAKsK,EAAM3F,MAofvBhF,EAAQ4K,YA5tBR,SAAqBC,GACnB,OAAO,SAAU9B,EAAGnG,GAClB,OAAImG,EAAE8B,GAAYjI,EAAEiI,GACX,EAEL9B,EAAE8B,GAAYjI,EAAEiI,IACV,EAEH,IAqtBX7K,EAAQ8K,OAlNR,SAAgBrH,EAAKuB,GACnB,IAAKtB,MAAMC,QAAQF,GACjB,MAAM,IAAIH,UAAU,oCAEtB0B,EAAWA,GAAYzC,EACvB,IACIyF,EADAnB,EAAQ,GAGZ,SAASzB,EAAKZ,EAAKC,GACjB,GAAID,EACF,OAAOQ,EAASR,GAElB,GAAIqC,IAAUpD,EAAIO,OAChB,OAAOgB,EAAS,KAAMP,GAExB,GAAIuD,EACF,OAAOE,QAAQC,SAAS,WACtBH,GAAO,EACPvE,EAAIoD,KAASzB,GACb4C,GAAO,IAGXA,GAAO,EACPvE,EAAIoD,KAASzB,GACb4C,GAAO,EAjBT5C,IA4MFpF,EAAQ+K,aAliBR,SAAsBC,EAAKC,GACzB,OAAKA,GAASA,EAAQ,EACb,KAEK,IAAVA,EACKD,EAEF,IAAItH,MAAMuH,EAAQ,GAAGC,KAAKF,IA4hBnChL,EAAQmL,aA/dR,SAAsB1H,GAEpB,IAAK,IAAIvD,EAAIuD,EAAIO,OAAS,EAAG9D,EAAI,EAAGA,IAAK,CAEvC,MAAMkL,EAAIC,KAAKC,MAAMD,KAAKE,UAAYrL,EAAI,IACpCsL,EAAO/H,EAAIvD,GACjBuD,EAAIvD,GAAKuD,EAAI2H,GACb3H,EAAI2H,GAAKI,IAydbxL,EAAQiL,MApLR,SAAeQ,EAAOC,EAAc1G,GAGlC,GAFAA,EAAWA,GAAYzC,EACvBkJ,GAASA,EACLE,MAAMF,IAAoB,IAAVA,EAClB,OAAOzG,IAET,IAAIC,EAAY,EAChB,IAAK,IAAI/E,EAAI,EAAGA,EAAIuL,EAAOvL,IACzBwL,EAAaxL,EAAGkF,GAElB,SAASA,EAAKZ,GACZ,GAAIA,EAAK,CACP,MAAMa,EAAKL,EAEX,OADAA,EAAWzC,EACJ8C,EAAGb,KAENS,IAAcwG,GAGpBzG,MAkKJhF,EAAQ4L,WAxJR,SAAoBH,EAAOI,EAAOH,EAAc1G,GAC9C,IAAIgD,OAAOC,EACXjD,EAAWA,GAAYzC,EAEvB,IACIrC,EADA2G,GADJgF,EAAQR,KAAKS,IAAID,EAAOJ,IACJ,EAEhBxG,EAAY,EAChB,IAAK/E,EAAI,EAAGA,EAAI2L,EAAO3L,IACrBwL,EAAaxL,EAAGkF,GAGlB,SAASA,EAAKZ,GACZ,GAAIA,EAAK,CACP,MAAMa,EAAKL,EAGX,OAFAA,EAAWzC,OACX8C,EAAGb,GAGL,KAAMS,IAAcwG,EAClB,OAAOzG,IAGT,OADA6B,GACa4E,GAAb,CAMA,QAHaxD,IAATD,IACFA,EAAQ9H,GAAK,GAEX8H,EAAM,CACR,MAAM+D,EAAelF,EACrB,OAAOqB,QAAQC,SAAS,WACtBuD,EAAaK,EAAc3G,KAG/BsG,EAAa7E,EAAOzB,IAxBtBlF,GAAK,GA+IPF,EAAQgM,YA9GR,SAAqBP,EAAOQ,EAAkBjH,GAE5C,GADAyG,GAASA,EACLE,MAAMF,IAAUA,EAAQ,EAC1B,OAAOzG,IAET,IACIgD,EADAnB,EAAQ,EAEZoF,EAAiB,EAIjB,SAAS7G,EAAKZ,GACZ,GAAIA,EACF,OAAOQ,EAASR,GAElB,GAAIqC,IAAU4E,EACZ,OAAOzG,SAEIiD,IAATD,IACFA,GAAO,GAET,MAAM9H,EAAI2G,IACV,GAAImB,EAEF,OAAOE,QAAQC,SAAS,WACtB8D,EAAiB/L,EAAGkF,KAIxB6G,EAAiB/L,EAAGkF,UArBT6C,IAATD,IACFA,GAAO,IAsGXhI,EAAQkM,YAxzBR,SAAsBzI,GACpB,GAAmB,IAAfA,EAAIO,OACN,OAAOP,EAAI,GAAGO,OAEhB,IAAImI,EAAQ,EAMZ,OALA1I,EAAI8D,QAAQ,SAAU6B,GACpB,IAAIpF,EAASoF,EAAKpF,OAElBmI,GADAnI,EAASA,GAAkB,IAGtBmI,GA+yBTnM,EAAQoM,WAlnBR,SAAoBtH,EAAIrE,GACtB,GAAkB,mBAAPqE,EACT,MAAM,IAAI1C,EAAO8D,cAAc/D,EAAKgE,OAAO,uBAAwB1F,GAAQ,aAE7E,OAAOqE,GA+mBT9E,EAAQqM,OA3ER,SAAgBC,EAAWxH,EAAIE,GAC7B,IAAIgD,EAAO,GAEX,SAAS5C,EAAKZ,GACZ,GAAIA,EACF,OAAOQ,EAASR,GAElB,IAAK8H,IACH,OAAOtH,IAET,GAAa,IAATgD,EAaF,OAZAA,EAAO,EACPlD,EAAG,SAAUN,GACE,IAATwD,IAEFA,EAAO,GAET5C,EAAKZ,UAEM,IAATwD,IAEFA,EAAO,IAIX,GAAa,IAATA,EAEF,OAAOE,QAAQC,SAAS,WACtBrD,EAAGM,KAIPN,EAAGM,GA9BLA,IA0EFpF,EAAQ0E,QAAUA,G,6BCl6BlB,MAAMvC,EAAO,EAAQ,GAEfC,EAAS,EAAQ,GACjBmK,EAAW,EAAQ,KACnBC,EAAO,EAAQ,IACfC,EAAkB,EAAQ,KAC1BC,EAAQ,EAAQ,GAOhBC,EAAO,EAAQ,IAkBfC,EAAgB,CACpBC,IAAc,EACdC,IAAc,EACdC,IAAc,EACdC,MAAc,EACdC,OAAc,EACdC,IAAc,EACdC,YAAc,EACdC,WAAc,EACdC,OAAc,EACdC,YAAc,EACdC,SAAc,IAOVC,EAAsB,GAC5BA,EAAoBZ,EAAcC,KAAO,MACzCW,EAAoBZ,EAAcE,KAAO,MACzCU,EAAoBZ,EAAcG,KAAO,MACzCS,EAAoBZ,EAAcI,OAAS,QAC3CQ,EAAoBZ,EAAcK,QAAU,SAC5CO,EAAoBZ,EAAcM,KAAO,MACzCM,EAAoBZ,EAAcO,aAAe,eACjDK,EAAoBZ,EAAcQ,YAAc,cAChDI,EAAoBZ,EAAcS,QAAU,SAC5CG,EAAoBZ,EAAcU,aAAe,eACjDE,EAAoBZ,EAAcW,UAAY,YAgC9C,MAAME,EAAY,CAChBC,OAAY,EACZC,MAAY,EACZC,OAAY,EACZC,KAAY,EACZC,QAAY,EACZC,QAAY,EACZC,QAAY,EACZC,OAAY,EACZC,MAAY,EACZC,IAAY,EACZ/K,KAAY,GACZgL,UAAY,GACZC,KAAY,GACZC,QAAY,GACZC,OAAY,GACZC,SAAY,GACZC,KAAY,GACZC,KAAY,GACZC,KAAY,GACZC,SAAY,GACZC,QAAY,GACZC,KAAY,GACZ5E,IAAY,GACZ6E,IAAY,GACZC,IAAY,GACZC,MAAY,GAMZC,UAAY,SAASzO,GAEnB,IADAA,EAAOA,EAAKuF,eACH2C,QAAQ,KAAO,EAAG,CACzB,MAAMwG,EAAc,qBAAqBC,KAAK3O,GAC9C,GAAI0O,EACF,MAAO,CAAEE,KAAM1K,KAAKwK,EAAY,IAAKtF,KAAMlF,KAAKuK,UAAUC,EAAY,KAExE,MAAMG,EAAa,2BAA2BF,KAAK3O,GACnD,GAAI6O,EACF,MAAO,CAAED,KAAM1K,KAAK2K,EAAW,IAAKzF,KAAM,CAAClF,KAAKuK,UAAUI,EAAW,IAAK3K,KAAKuK,UAAUI,EAAW,MAEtG,MAAMC,EAAa,gBAAgBH,KAAK3O,GACxC,GAAI8O,EAEF,MAAO,CAAEF,KAAM1K,KAAK4K,EAAW,IAAK1F,KAAM0F,EAAW,IAEvD,MAAMC,EAAe,kBAAkBJ,KAAK3O,GAC5C,GAAI+O,EAEF,MAAO,CAAEH,KAAM1K,KAAK6K,EAAa,IAAK3F,KAAM2F,EAAa,GAAGC,MAAM,KAAKvF,IAAI,SAAUwF,GACnF,OAAO/K,KAAKuK,UAAUQ,EAAEC,SACvBhL,OAGP,MAAMiL,EAAW,CAAEP,KAAM1K,KAAKlE,GAAOoJ,KAAM,MAC3C,GAA6B,iBAAlB+F,EAASP,KAClB,MAAM,IAAI/L,UAAU,uBAAyB7C,EAAO,cAEtD,OAAOmP,IASLC,EAAmB,WACvB,MAAMpL,EAAS,GACf,IAAK,MAAMhD,KAAOgM,EAAW,CAC3B,IAAKA,EAAU1L,eAAeN,GAC5B,SAEF,MAAMuJ,EAAMyC,EAAUhM,GACH,iBAARuJ,IAGXvG,EAAOuG,GAAOvJ,GAEhB,OAAOgD,EAZgB,GAkJnBqL,EAAQlP,OAAO0B,OAAO,CAAC,OAAS,IAOhCyN,EAAmBpD,EAAKqD,QAAQ,KAMtC,IAAIC,EAAkB,EA4GtB,SAASC,EAAYC,EAASC,EAAOC,EAAUC,EAAQC,GACrD5L,KAAKwL,QAAUA,EACfxL,KAAKyL,MAAQA,EACbzL,KAAK0L,SAAWA,EAChB1L,KAAK2L,OAASA,EACd3L,KAAK4L,WAAaA,EA4IpB,SAASC,EAAcC,GACrBD,EAAaE,OAAOrQ,KAAKsE,KAAM8L,EAAS9L,KAAKkD,aAC7ClD,KAAKkF,KAAO,4FAvIdqG,EAAYvN,KAAO,SAAUwN,GAC3B,OAAI1D,EAAgBkE,oBAAoBR,GAC/B,EAEF,GAQTD,EAAYU,mBAAqB,SAAUC,GACzC,OAAmB,IAAZA,EAAO,IAQhBX,EAAYY,WAAa,SAAU9J,EAAK+J,GACtC,IAAIV,EAAW,EACVU,IACHA,EAAS,GAEX,MAAMZ,EAA0B,IAAhBnJ,EAAI+J,KACdX,EAAQpJ,EAAIgK,UAAUD,KAQ5B,OAPKtE,EAAgBkE,oBAAoBR,IAIvCE,EAAWrJ,EAAIiK,YAAYF,GAC3BA,GAAU,GAJVV,EAAWrJ,EAAIkK,SAASH,KAMnB,IAAIb,EAAYC,EAASC,EAAOC,EAAUrJ,EAAIgK,UAAUD,KAAW/J,EAAImK,aAAaJ,KAI7Fb,EAAYpO,UAAUsP,SAAW,WAC/B,MAAMpK,EAAM0F,EAAM3J,kBAAkBmN,EAAYvN,KAAKgC,KAAKwL,UAC1DnJ,EAAIqK,WAAW1M,KAAKwL,QAAS,GAC7BnJ,EAAIqK,WAAW1M,KAAKyL,MAAO,GAC3B,IAAIW,EAAS,EAUb,OATKtE,EAAgBkE,oBAAoBhM,KAAKwL,UAI5CnJ,EAAIsK,aAAa3M,KAAK0L,SAAU,GAChCU,EAAS,GAJT/J,EAAIuK,UAAU5M,KAAK0L,SAAU,GAM/BrJ,EAAIqK,WAAW1M,KAAK2L,OAAQS,KAC5B/J,EAAIwK,cAAc7M,KAAK4L,WAAYQ,GAC5B/J,GAMT2F,EAAKmE,WAAa,SAAU3P,GAC1B,KAAMA,aAAiBsB,QACrB,MAAM,IAAIa,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,OAAO,IAAIwL,EAAKxL,EAAMsQ,YAAY,GAAItQ,EAAMsQ,YAAY,KAO1D9E,EAAKyE,SAAW,SAAUjQ,GACxB,KAAMA,aAAiBwL,GACrB,MAAM,IAAIrJ,UAAU,2BAA6BnB,EAAKoB,QAAQpC,IAEhE,MAAM0P,EAASnE,EAAM3J,kBAAkB,GAGvC,OAFA8N,EAAOW,cAAcrQ,EAAMuQ,sBAAuB,GAClDb,EAAOW,cAAcrQ,EAAMwQ,qBAAsB,GAC1Cd,GAOTlE,EAAK7K,UAAUyB,QAAU,WACvB,MAAO,SAAWoB,KAAKiN,YAOzBjF,EAAK7K,UAAU+P,OAAS,WACtB,OAAOlN,KAAKiN,YAqCdzP,EAAK2P,SAJL,SAASC,EAAiBC,GACxBD,EAAiBrB,OAAOrQ,KAAKsE,KAAMqN,EAAEvB,QAAS9L,KAAKkD,aACnDlD,KAAKsN,cAAgBD,GAES5P,EAAO8P,aAOvC/P,EAAK2P,SAAStB,EAAcpO,EAAO8P,aAEnClS,EAAQmS,QAjYQ,CACd3J,MAAgB,EAChB4J,QAAgB,EAChBC,MAAgB,EAChBC,aAAgB,EAChBC,YAAgB,EAChBvI,QAAgB,EAChBwI,UAAgB,EAChBC,MAAgB,EAChBhO,OAAgB,EAChBiO,QAAgB,EAChBC,QAAgB,GAChBC,SAAgB,GAChBC,MAAgB,GAChBC,MAAgB,GAChBC,cAAgB,GAChBC,aAAgB,GAChBC,YAAgB,GAKhBC,UAAW,SAAU7D,GACnB,OAAOA,EAAO1K,KAAK6D,OAAS6G,EAAO1K,KAAKkO,QA2W5C7S,EAAQ4M,cAAgBA,EACxB5M,EAAQwN,oBAAsBA,EAC9BxN,EAAQyN,UAAYA,EACpBzN,EAAQmT,sBAhMR,SAASA,EAAsB/J,GAC7B,IAAKA,GAA6B,iBAAdA,EAAKiG,KACvB,MAAM,IAAIjN,EAAO8D,cAAc,qCAEjC,MAAMkN,EAAWvD,EAAiBzG,EAAKiG,MACvC,IAAK+D,EACH,MAAM,IAAIhR,EAAO8D,cAAc/D,EAAKgE,OAAO,8BAA+BiD,EAAKiG,OAEjF,OAAKjG,EAAKS,KAGN1H,EAAKwB,QAAQyF,EAAKS,MACZuJ,EACN,IACAhK,EAAKS,KAAKK,IAAI,SAAU9I,GACtB,OAAO+R,EAAsB/R,KAC5B8J,KAAK,MACR,IAE0B,iBAAnB9B,EAAKS,KAAKwF,KACZ+D,EAAW,IAAMD,EAAsB/J,EAAKS,MAAQ,IAEtDuJ,EAbEA,GAwLXpT,EAAQqT,SAjZS,CACfC,MAAU,EACVC,OAAU,EACVC,QAAU,GA+YZxT,EAAQyT,WAnSW,CACjBC,YAAgB,EAChBC,QAAgB,EAChBC,cAAgB,EAChBC,QAAgB,GAgSlB7T,EAAQ8T,eAvWe,CACrBC,eAAgB,kBAChBC,aAAc,gBACdC,aAAc,iBAqWhBjU,EAAQyM,gBAAkBA,EAC1BzM,EAAQkU,mBA7UmB,CACzBC,YAAwB,EACxBC,cAAwB,GACxBC,eAAwB,IACxBC,qBAAwB,KACxBC,WAAwB,KACxBC,gBAAwB,KACxBC,cAAwB,KACxBC,aAAwB,KACxBC,YAAwB,KACxBC,YAAwB,KACxBC,gBAAwB,KACxBC,aAAwB,KACxBC,YAAwB,KACxBC,aAAwB,KACxBC,QAAwB,KACxBC,YAAwB,KACxBC,cAAwB,KACxBC,WAAwB,MA4T1BpV,EAAQqV,WApTW,CACjBC,WAAiB,EACjBC,KAAiB,EACjBC,YAAiB,EACjBC,SAAiB,EACjBxB,aAAiB,GAgTnBjU,EAAQwO,SApQR,SAAkBxE,EAAS6G,EAAQE,GACjC,IAAIrC,EACAgH,EACAC,EACAC,EACA5L,IAC2B,iBAAlBA,EAAQ6L,QACjBnH,EAAO,IAAIoH,KAAK9L,EAAQ6L,QAEtB7L,EAAQ6L,iBAAiBC,OAC3BpH,EAAO1E,EAAQ6L,OAEb1T,EAAKwB,QAAQqG,EAAQ+L,QACvBJ,EAASjJ,EAAMlJ,qBAAqBwG,EAAQ+L,OAEd,iBAArB/L,EAAQgM,WACjBJ,EAAUlJ,EAAM3J,kBAAkB,IAC1BkT,cAAcjM,EAAQgM,SAAU,GAEb,iBAAlBhM,EAAQkM,QACjBR,EAAQ1L,EAAQkM,QAGpB,MAAM7H,EAAO,IAAI9B,EAASmC,EAAMgH,EAAOC,EAAQC,GAC/C,OAAI/E,aAAkBpO,QAEpB4L,EAAK8H,YAAYjP,KAAK2J,EAAQE,GAAU,GACjCF,GAEFxC,EAAKuD,YAwOd5R,EAAQqO,KAhOR,SAAcrE,EAAS6G,EAAQE,GAC7B,IAAI1C,EASJ,OARIrE,GACE7H,EAAKwB,QAAQqG,EAAQuB,UACvB8C,EAAO,IAAI7B,EAAKE,EAAMlJ,qBAAqBwG,EAAQuB,UAGlD8C,IACHA,EAAO7B,EAAKjB,UAEVsF,aAAkBpO,QAEpB4L,EAAK8H,YAAYjP,KAAK2J,EAAQE,GAAU,GACjCF,GAEFxC,EAAKuD,YAkNd5R,EAAQoW,WAAa,EAAQ,KAC7BpW,EAAQqW,SAAW,EAAQ,KAC3BrW,EAAQkQ,YAAcA,EACtBlQ,EAAQsW,YAAc,EAAQ,KAC9BtW,EAAQuW,QAAU,EAAQ,IAC1BvW,EAAQwW,UAAY,EAAQ,KAC5BxW,EAAQyW,UAAY,EAAQ,KAC5BzW,EAAQ2M,KAAOA,EACf3M,EAAQ0W,UAAY,EAAQ,KAC5B1W,EAAQ2W,aAAe,EAAQ,KAC/B3W,EAAQ4W,IAAM,EAAQ,KAEtB5W,EAAQkS,YAAc9P,EAAO8P,YAC7BlS,EAAQwQ,aAAeA,EACvBxQ,EAAQuM,SAAWA,EACnBvM,EAAQ6W,MAAQ,EAAQ,KACxB7W,EAAQwM,KAAOA,EACfxM,EAAQ8P,MAAQA,EAChB9P,EAAQ8W,kBApER,SAA2BpI,EAAMqI,GAC1BrI,IACHA,EAAO,IAAIoH,MAEb,IAAIkB,EAAYrK,EAAKsK,KAWrB,MAV4B,iBAAjBF,GAA6BA,GAAgB,GAAKA,EAAe,IAC1EC,EAAYrK,EAAKqD,QAAQ+G,IAGrB9G,EAAkB,MACpBA,EAAkB,GAEpB+G,EAAYrK,EAAKqD,QAAQC,GACzBA,KAEKtD,EACJuK,WAAWxI,EAAKyI,WAChBC,SAASrH,GACTzK,IAAI0R,K,6BChjBT,MAAM7U,EAAO,EAAQ,GAWrB,SAAS+P,EAAazB,GACpBxG,MAAM5J,KAAKsE,KAAM8L,GACjBxG,MAAMoN,kBAAkB1S,KAAMA,KAAKkD,aACnClD,KAAKlE,KAAOkE,KAAKkD,YAAYpH,KAC7BkE,KAAKkF,KAAO,yBAEZlF,KAAK8L,QAAUA,EAWjB,SAAS6G,EAAqBC,EAAa9G,GAIzC,GAHAyB,EAAY7R,KAAKsE,KAAM8L,GACvB9L,KAAK4S,YAAcA,EACnB5S,KAAKkF,KAAO,wHACP4G,IACH9L,KAAK8L,QAAU,sCACX8G,GAAa,CACf,MAAMC,EAAW5W,OAAO6E,KAAK8R,GAC7B,GAAIC,EAASxT,OAAS,EAAG,CACvB,MAAMyT,EAAOD,EAAS,GACtB7S,KAAK8L,SAAWtO,EAAKgE,OAAO,8CAA+CsR,EAAMF,EAAYE,MAcrG,SAASC,EAAcrI,EAAMoB,GAC3ByB,EAAY7R,KAAKsE,KAAM8L,GAKvB9L,KAAK0K,KAAOA,EACZ1K,KAAKkF,KAAO,8CAUd,SAAS8N,EAAoBlH,GAC3ByB,EAAY7R,KAAKsE,KAAM8L,GACvB9L,KAAKkF,KAAO,6DAUd,SAAS+N,EAAoBnH,GAC3ByB,EAAY7R,KAAKsE,KAAM8L,GACvB9L,KAAKkF,KAAO,+EAUd,SAAS3D,EAAcuK,GACrByB,EAAY7R,KAAKsE,KAAM8L,GACvB9L,KAAKkF,KAAO,kGAYd,SAASgO,EAAuBpH,EAASgH,GACvCvF,EAAY7R,KAAKsE,KAAM8L,EAAS9L,KAAKkD,aACrClD,KAAKkF,KAAO,mIAOZlF,KAAK8S,KAAOA,EAUd,SAASK,EAAkBrH,GACzByB,EAAY7R,KAAKsE,KAAM8L,EAAS9L,KAAKkD,aACrClD,KAAKkF,KAAO,wFAad,SAASkO,EAAoBC,EAASC,EAA0BC,GAC9D,MAAMzH,EAAUtO,EAAKgE,OAAO,uEAC1B6R,EAASC,EAA+C,IAArBC,EAAyB,sBAAuB,mBACrFhG,EAAY7R,KAAKsE,KAAM8L,EAAS9L,KAAKkD,aACrClD,KAAKkF,KAAO,sLA7Hd1H,EAAK2P,SAASI,EAAajI,OAwB3B9H,EAAK2P,SAASwF,EAAsBpF,GAkBpC/P,EAAK2P,SAAS4F,EAAexF,GAY7B/P,EAAK2P,SAAS6F,EAAqBzF,GAYnC/P,EAAK2P,SAAS8F,EAAqB1F,GAYnC/P,EAAK2P,SAAS5L,EAAegM,GAqB7B/P,EAAK2P,SAAS+F,EAAwB3F,GAYtC/P,EAAK2P,SAASgG,EAAmB5F,GAkBjC/P,EAAK2P,SAASiG,EAAqB7F,GAEnClS,EAAQkG,cAAgBA,EACxBlG,EAAQ4X,oBAAsBA,EAC9B5X,EAAQ+X,oBAAsBA,EAC9B/X,EAAQkS,YAAcA,EACtBlS,EAAQ6X,uBAAyBA,EACjC7X,EAAQ2X,oBAAsBA,EAC9B3X,EAAQsX,qBAAuBA,EAC/BtX,EAAQ8X,kBAAoBA,EAC5B9X,EAAQ0X,cAAgBA,G,cChKxBzX,EAAOD,QAAUkC,QAAQ,W,6BCKzB,MAAMC,EAAO,EAAQ,IACf,eAAEgW,GAAmB,EAAQ,GAC7BvO,EAAO,SAEP,OACLhC,EAAM,SACNwQ,EAAQ,qBACRC,EAAoB,UACpBC,EAAS,WACTC,EAAU,SACVC,EAAQ,kCACRC,EAAiC,aACjCC,GACG,EAAQ,KACN,mBACLC,EAAkB,cAClBC,EAAa,kBACbC,GACG,EAAQ,IA2JZ,SAASC,EAAiBC,GACzB,MAAO,KACN,MAAMC,EAAMlD,KAAKkD,MAAQ,SACV/Q,IAAX8Q,EACHpU,KAAKoK,IAAIiK,GAETrU,KAAKoK,IAAIgK,EAAQC,IAKpB,SAASC,EAAWC,GACnB,MAAO,KACN,MAAMC,EAAQjR,QAAQkR,SACtB,OAAOC,IACN,MAAMC,EAAQpR,QAAQkR,OAAOD,GAC7BxU,KAAKoK,IACJnO,OAAO2Y,OAAO,GAAIL,EAAaG,GAC/BC,EAAM,GAAKA,EAAM,GAAK,OAM1B,SAASE,EAAIT,GACZ,MAAO,CAAC5X,EAAOiN,KACd,MAAMqL,EAAOC,EAAuBX,EAAQ5X,GAC5CwD,KAAKoK,IACJ0K,EAAKV,OACLpU,KAAKgV,UAAUF,EAAKV,SAAWU,EAAKtY,OAAS,GAC7CiN,IAKH,SAASwL,EAAIb,GACZ,MAAO,CAAC5X,EAAOiN,KACd,MAAMqL,EAAOC,EAAuBX,EAAQ5X,GAC5CwD,KAAKoK,IACJ0K,EAAKV,OACLpU,KAAKgV,UAAUF,EAAKV,SAAWU,EAAKtY,OAAS,GAC7CiN,IAKH,SAASW,EAAIgK,GACZ,MAAO,CAAC5X,EAAOiN,KACd,GAAqB,iBAAVjN,EACV,MAAM,IAAImC,0CAA0CnB,EAAKgE,OAAOhF,MAEjE,GAAIiN,IAAcxG,EAAOwG,KAAeyL,OAAOC,SAAS1L,GACvD,MAAM,IAAI9K,sDACmCnB,EAAKgE,OAAOiI,MAI1D2K,EAASA,GAAU,GAEnBH,EAAcjU,KAAKoV,WAAYhB,GAC/BpU,KAAKqV,QAAU5B,EAASzT,KAAKqV,QAAS7Y,EAAO4X,EAAQ3K,IAYvD,SAASsL,EAAuBX,EAAQ5X,GACvC,OAAKqX,EAASO,GAMP,CACNA,SACA5X,SAPO,CACNA,MAAO4X,EACPA,OAAQ,IASX9Y,EAAOD,QA9OP,MAOC,YAAYS,EAAMwZ,EAAMlB,GACvB,IAAImB,EAsBJ,GArBI1B,EAAS/X,IACZyZ,EAAStZ,OAAO2Y,OACf,CACCQ,WAAY,IAEbtZ,IAGW0Z,YACXD,EAAOC,UAAY,CAAChC,KAGrBM,IACAyB,EAAS,CACRzZ,OACAwZ,OACAF,WAAYhB,EACZoB,UAAW,CAAChC,MAIT+B,EAAOD,KACX,MAAM,IAAIhQ,MAAM,oCAEjB,IAAKiQ,EAAOzZ,KACX,MAAM,IAAIwJ,MAAM,oCAEjB,IAAK0O,EAAmBuB,EAAOzZ,MAC9B,MAAM,IAAIwJ,MAAM,uBAEjB,IAAK4O,EAAkBqB,EAAOH,YAC7B,MAAM,IAAI9P,MAAM,sBAGjBtF,KAAKlE,KAAOyZ,EAAOzZ,KACnBkE,KAAKoV,WAAaG,EAAOH,YAAc,GACvCpV,KAAKyV,QACLzV,KAAKsV,KAAOC,EAAOD,KACnBtV,KAAK0V,WAAaH,EAAOG,YAAc,MAEvCH,EAAOC,UAAU5S,QAAQ+S,GACxBA,EAAiBC,eAAe5V,OAWlC,IAAIoU,EAAQ5X,EAAOiN,GAClB,OAAKoK,EAASO,GAGPhK,EAAI1O,KAAKsE,KAAMoU,EAAfhK,CAAuB5N,EAAOiN,GAF7BW,EAAI1O,KAAKsE,KAAM,KAAfoK,CAAqBgK,EAAQ5X,GAStC,QACC,OAgJF,WACCwD,KAAKqV,QAAU,GAEgB,IAA3BrV,KAAKoV,WAAW/V,SACnBW,KAAKqV,QAAU5B,EAAS,GAAI,EAAG,MApJlB/X,KAAKsE,MAUnB,IAAIoU,EAAQ5X,EAAOiN,GAClBwL,EAAIvZ,KAAKsE,KAAMoU,EAAfa,CAAuBzY,EAAOiN,GAU/B,IAAI2K,EAAQ5X,EAAOiN,GAClBoL,EAAInZ,KAAKsE,KAAMoU,EAAfS,CAAuBrY,EAAOiN,GAQ/B,iBAAiB2K,GAChB,OAAOD,EAAiBzY,KAAKsE,KAAMoU,EAA5BD,GAaR,WAAWC,GACV,OAAOE,EAAW5Y,KAAKsE,KAAMoU,EAAtBE,GAGR,MACC,MAAO,CACNgB,KAAMtV,KAAKsV,KACXxZ,KAAMkE,KAAKlE,KACXmJ,OACAF,OAAQ2O,EAAqB1T,KAAKqV,SAClCK,WAAY1V,KAAK0V,YAInB,UAAUtB,GACT,MAAMyB,EAAOjC,EAAWQ,GAAU,IAClC,OAAOpU,KAAKqV,QAAQQ,GAAQ7V,KAAKqV,QAAQQ,GAAMrZ,MAAQ,EAGxD,SACC,MAAM4X,EAAST,EAAU3T,KAAKoV,WAAYzS,WAC1C,MAAO,CACNsS,IAAKA,EAAIvZ,KAAKsE,KAAMoU,GACpBS,IAAKA,EAAInZ,KAAKsE,KAAMoU,GACpBhK,IAAKA,EAAI1O,KAAKsE,KAAMoU,GACpBD,iBAAkBA,EAAiBzY,KAAKsE,KAAMoU,GAC9CE,WAAYA,EAAW5Y,KAAKsE,KAAMoU,IAIpC,SACC,MAAMA,EAAST,EAAU3T,KAAKoV,WAAYzS,WAC1CoR,EAAarY,KAAKsE,KAAMA,KAAKqV,QAASjB,M,gBCzKjB,oBAAZ7Q,SAA4C,aAAjBA,QAAQ0B,KAC5C3J,EAAOD,QAAU,EAAQ,KAEzBC,EAAOD,QAAU,EAAQ,M;;;;;;ACE3B,IAAIya,iBAAmB,oBAAQ,IAAgBA,iBAC3CC,mBAAqB,oBAAQ,IAAgBA,mBAC7CC,SAAW,oBAAQ,GAAQA,SAM/B1a,OAAOD,QAAU4a,KAMjB,IAAIC,SAAW3S,QAAQ4S,MAMvB,SAASC,kBAAmBC,EAAKC,GAI/B,IAHA,IAAIC,EAAOF,EAAIvL,MAAM,SACjBlO,EAAK4Z,OAAOF,GAAWjV,cAElB9F,EAAI,EAAGA,EAAIgb,EAAKlX,OAAQ9D,IAAK,CACpC,IAAI8K,EAAMkQ,EAAKhb,GAGf,GAAI8K,IAAgB,MAARA,GAAeA,EAAIhF,gBAAkBzE,GAC/C,OAAO,EAIX,OAAO,EAOT,SAAS6Z,gCAAiCtV,EAAK2B,EAAMgJ,GACnD,IAAI4K,EAAaza,OAAO0a,yBAAyBxV,EAAK2B,GAClDtG,EAAQka,EAAWla,MAavB,OAXAka,EAAWta,IAAM,WAAqB,OAAOI,GAEzCka,EAAWE,WACbF,EAAWtM,IAAM,SAAiB/D,GAAO,OAAQ7J,EAAQ6J,WAGpDqQ,EAAWla,aACXka,EAAWE,SAElB3a,OAAOC,eAAeiF,EAAK2B,EAAM4T,GAE1BA,EAOT,SAASG,sBAAuBC,GAG9B,IAFA,IAAIT,EAAM,GAED9a,EAAI,EAAGA,EAAIub,EAAOvb,IACzB8a,GAAO,QAAU9a,EAGnB,OAAO8a,EAAItS,OAAO,GAOpB,SAASgT,kBAAmBjT,GAC1B,IAAIuS,EAAMrW,KAAKlE,KAAO,KAAOkE,KAAKsW,UAE9BtW,KAAK8L,UACPuK,GAAO,eAAiBrW,KAAK8L,SAG/B,IAAK,IAAIvQ,EAAI,EAAGA,EAAIuI,EAAMzE,OAAQ9D,IAChC8a,GAAO,YAAcP,iBAAiBhS,EAAMvI,IAG9C,OAAO8a,EAOT,SAASJ,KAAMK,GACb,IAAKA,EACH,MAAM,IAAI3X,UAAU,kCAGtB,IAEIqY,EADOC,iBADCC,WACsB,IAClB,GAEhB,SAASC,EAAWrL,GAElB9G,IAAItJ,KAAKyb,EAAWrL,GAYtB,OATAqL,EAAUC,MAAQJ,EAClBG,EAAUE,SAAWC,UAAUhB,GAC/Ba,EAAUI,WAAajB,EACvBa,EAAUK,QAAUC,SAASnB,GAC7Ba,EAAUO,QAAUzb,OAAOY,OAAO,MAElCsa,EAAUQ,SAAWC,aACrBT,EAAUja,SAAW2a,aAEdV,EAOT,SAASG,UAAWhB,GAElB,QAAI/S,QAAQuU,eAQL1B,kBAHG7S,QAAQwU,IAAIC,gBAAkB,GAGV1B,GAOhC,SAASmB,SAAUnB,GAEjB,QAAI/S,QAAQ0U,kBAQL7B,kBAHG7S,QAAQwU,IAAIG,mBAAqB,GAGb5B,GAOhC,SAAStR,IAAK8G,EAASqM,GACrB,IAAIC,EAA8D,IAA/CrC,mBAAmBxS,QAAS,eAG/C,GAAK6U,IAAgBpY,KAAKqX,SAA1B,CAIA,IAAIgB,EACAC,EACAC,EACAC,EACAjd,EAAI,EACJkd,GAAO,EACP3U,EAAQoT,WACRF,EAAOhX,KAAKoX,MAgBhB,IAdIe,GAEFK,EAAUL,GACVI,EAAWtB,iBAAiBnT,EAAM,KACzBhI,KAAO0c,EAAQ1c,KACxBkb,EAAOuB,EAAS,IAKhBA,EADAC,EAAUvB,iBAAiBnT,EAD3BvI,EAAI,IAMCA,EAAIuI,EAAMzE,OAAQ9D,IAIvB,IAFA+c,GADAD,EAASpB,iBAAiBnT,EAAMvI,KACd,MAEDyb,EACfyB,GAAO,OACF,GAAIH,IAAatY,KAAKoX,MAC3BJ,EAAOhX,KAAKoX,WACP,GAAIqB,EACT,MAIJ,IAAI3b,EAAMub,EACNG,EAAQjS,KAAK,KAAO,KAAO8R,EAAO9R,KAAK,UACvCjD,EAEJ,UAAYA,IAARxG,GAAqBA,KAAOkD,KAAK0X,SAArC,CAKA1X,KAAK0X,QAAQ5a,IAAO,EAGpB,IAAI4b,EAAM5M,EAQV,GAPK4M,IACHA,EAAMH,IAAaC,GAAYD,EAASzc,KAEpC6c,eAAeJ,GADfI,eAAeH,IAKjBJ,EAAJ,CACE,IAAIvY,EAAM+Y,iBAAiB5Y,KAAKuX,WAAYmB,EAAK5U,EAAMpB,MAAMnH,IAC7DgI,QAAQsV,KAAK,cAAehZ,OAF9B,CAOA,IAGIiZ,GAHSvV,QAAQwV,OAAOC,MACxBC,YACAC,aACgBxd,KAAKsE,KAAM0Y,EAAKL,EAAQvU,EAAMpB,MAAMnH,IACxDgI,QAAQwV,OAAOI,MAAML,EAAS,KAAM,WAOtC,SAAS7B,iBAAkBsB,GACzB,IAAIvB,EAAOuB,EAASa,eAAiB,cACjCC,EAAOd,EAASe,gBAChBC,EAAOhB,EAASiB,kBAEhBjB,EAASkB,WACXzC,EAAOuB,EAASmB,gBAAkB,KAAO1C,GAG3C,IAAImB,EAAO,CAACnB,EAAMqC,EAAME,GAKxB,OAHApB,EAAKI,SAAWA,EAChBJ,EAAKrc,KAAOyc,EAASoB,kBAEdxB,EAOT,SAASQ,eAAgBR,GACvB,IAAII,EAAWJ,EAAKI,SAChBqB,EAAWzB,EAAKrc,KAGf8d,IACHA,EAAW,cAAgBC,eAAe1B,GAAQ,KAGpD,IAAI2B,EAAUvB,EAASwB,UACnBtL,EAAWqL,GAAWvB,EAASyB,cAYnC,MATiB,WAAbvL,IACFA,OAAWnL,GAII,aAAbmL,IACFA,EAAWqL,EAAQhe,MAAQ2S,GAGtBA,GAAY8J,EAAS0B,gBACxBxL,EAAW,IAAMmL,EACjBA,EAON,SAASV,YAAaR,EAAKL,EAAQvU,GACjC,IAEIoW,GAFY,IAAI/I,MAAOgJ,cAGzB,IAAMna,KAAKuX,WACX,eAAiBmB,EAGnB,GAAI1Y,KAAKwX,QAAS,CAChB,IAAK,IAAIjc,EAAI,EAAGA,EAAIuI,EAAMzE,OAAQ9D,IAChC2e,GAAa,YAAcpE,iBAAiBhS,EAAMvI,IAGpD,OAAO2e,EAOT,OAJI7B,IACF6B,GAAa,OAASL,eAAexB,IAGhC6B,EAOT,SAASjB,YAAaP,EAAKL,EAAQvU,GACjC,IAAIoW,EAAY,UAAela,KAAKuX,WAAa,0CAElCmB,EAAM,QAGrB,GAAI1Y,KAAKwX,QAAS,CAChB,IAAK,IAAIjc,EAAI,EAAGA,EAAIuI,EAAMzE,OAAQ9D,IAChC2e,GAAa,iBAAsBpE,iBAAiBhS,EAAMvI,IAAM,QAGlE,OAAO2e,EAOT,OAJI7B,IACF6B,GAAa,SAAcL,eAAexB,GAAU,SAG/C6B,EAOT,SAASL,eAAgBtB,GACvB,OAAOvC,SAASE,SAAUqC,EAAS,IACjC,IAAMA,EAAS,GACf,IAAMA,EAAS,GAOnB,SAASrB,WACP,IAAIhQ,EAAQ5B,MAAM8U,gBACdjZ,EAAM,GACNkZ,EAAO/U,MAAMgV,kBAEjBhV,MAAMgV,kBAAoBC,wBAC1BjV,MAAM8U,gBAAkB1T,KAAK8T,IAAI,GAAItT,GAGrC5B,MAAMoN,kBAAkBvR,GAGxB,IAAI2C,EAAQ3C,EAAI2C,MAAMpB,MAAM,GAK5B,OAHA4C,MAAMgV,kBAAoBD,EAC1B/U,MAAM8U,gBAAkBlT,EAEjBpD,EAOT,SAASyW,wBAAyBpZ,EAAK2C,GACrC,OAAOA,EAOT,SAAS8T,aAAczX,GAAI2L,SACzB,GAAkB,mBAAP3L,GACT,MAAM,IAAIxB,UAAU,kCAGtB,IAAI8b,KAAO5D,sBAAsB1W,GAAGd,QAChC8X,UAAYnX,KACZ8D,MAAQoT,WACRiB,KAAOlB,iBAAiBnT,MAAM,IAElCqU,KAAKrc,KAAOqE,GAAGrE,KAGf,IAAI4e,aAAeC,KAAK,cAAgBF,KAAO,+FAM/C,OAAOC,aAOT,SAAS7C,aAAc1W,EAAK2B,EAAMgJ,GAChC,IAAK3K,GAAuB,iBAARA,GAAmC,mBAARA,EAC7C,MAAM,IAAIxC,UAAU,+BAGtB,IAAI+X,EAAaza,OAAO0a,yBAAyBxV,EAAK2B,GAEtD,IAAK4T,EACH,MAAM,IAAI/X,UAAU,sCAGtB,IAAK+X,EAAWkE,aACd,MAAM,IAAIjc,UAAU,iCAGtB,IAAIwY,EAAYnX,KAEZmY,EAAOlB,iBADCC,WACsB,IAGlCiB,EAAKrc,KAAOgH,EAGR,UAAW4T,IACbA,EAAaD,gCAAgCtV,EAAK2B,EAAMgJ,IAG1D,IAAI1P,EAAMsa,EAAWta,IACjBgO,EAAMsM,EAAWtM,IAGF,mBAARhO,IACTsa,EAAWta,IAAM,WAEf,OADA4I,IAAItJ,KAAKyb,EAAWrL,EAASqM,GACtB/b,EAAIkI,MAAMtE,KAAM2C,aAKR,mBAARyH,IACTsM,EAAWtM,IAAM,WAEf,OADApF,IAAItJ,KAAKyb,EAAWrL,EAASqM,GACtB/N,EAAI9F,MAAMtE,KAAM2C,aAI3B1G,OAAOC,eAAeiF,EAAK2B,EAAM4T,GAOnC,SAASkC,iBAAkBtC,EAAWxK,EAAShI,GAC7C,IACI+W,EADAhX,EAAQ,IAAIyB,MA4ChB,OAzCArJ,OAAOC,eAAe2H,EAAO,cAAe,CAC1CrH,MAAOoc,mBAGT3c,OAAOC,eAAe2H,EAAO,UAAW,CACtC+W,cAAc,EACdze,YAAY,EACZK,MAAOsP,EACP8K,UAAU,IAGZ3a,OAAOC,eAAe2H,EAAO,OAAQ,CACnC1H,YAAY,EACZye,cAAc,EACdpe,MAAO,mBACPoa,UAAU,IAGZ3a,OAAOC,eAAe2H,EAAO,YAAa,CACxC+W,cAAc,EACdze,YAAY,EACZK,MAAO8Z,EACPM,UAAU,IAGZ3a,OAAOC,eAAe2H,EAAO,QAAS,CACpC+W,cAAc,EACdze,YAAY,EACZC,IAAK,WACH,YAAoBkH,IAAhBuX,EACKA,EAIDA,EAAc9D,kBAAkBrb,KAAKsE,KAAM8D,IAErDsG,IAAK,SAAiB/D,GACpBwU,EAAcxU,KAIXxC,I,6BCvgBT,MAAM,iBAAEiX,GAAqB,EAAQ,IAErC,SAASC,EAAa1E,GACrB,OAAOA,EAAI2E,QAAQ,MAAO,OAAOA,QAAQ,WAAY,QAStD,MAAMC,EAAqB,CAC1BC,YAAY,GAGb,MAAMC,EACL,cACCnb,KAAKob,SAAW,GAChBpb,KAAKqb,eAAiB,GAGvB,oBACC,OAAOpf,OAAO6E,KAAKd,KAAKob,UAAU7V,IAAIvF,KAAKsb,gBAAiBtb,MAG7D,4BAA4Bub,EAAQC,GACnC,MAAMC,EAAOxf,OAAO2Y,OAAO,GAAIqG,EAAoBO,GAC7C/W,EAAO8W,EAAOnf,MACdN,EAAOif,EAAatW,EAAK3I,MACzBwZ,YAAiBxZ,KAAQif,EAAatW,EAAK6Q,QAC3CrQ,YAAiBnJ,KAAQ2I,EAAKQ,OAC9ByW,EAAoBzf,OAAO6E,KAAKd,KAAKqb,gBAE3C,IAAItW,EAAS,GACb,IAAK,MAAMsB,KAAO5B,EAAKM,QAAU,GAAI,CACpCsB,EAAI+N,OAAS/N,EAAI+N,QAAU,GAEvBsH,EAAkBrc,OAAS,IAE9BgH,EAAI+N,OAASnY,OAAO2Y,OAAO,GAAIvO,EAAI+N,SAGpC,IAAK,MAAMuH,KAAaD,EACvBrV,EAAI+N,OAAOuH,GACVtV,EAAI+N,OAAOuH,IAAc3b,KAAKqb,eAAeM,GAG/C,IAAIvH,EAAS,GACb,IAAK,MAAMtX,KAAOb,OAAO6E,KAAKuF,EAAI+N,QACjCA,MAAatX,MA7CSuZ,EA6CgBhQ,EAAI+N,OAAOtX,GA5CjC,iBAARuZ,EACHA,EAED0E,EAAa1E,GAAK2E,QAAQ,KAAM,WA4CrC,IAAIY,EAAavV,EAAIuV,YAAcnX,EAAK3I,KACpCsY,IACHwH,OAAkBxH,EAAOyH,UAAU,EAAGzH,EAAO/U,OAAS,OAGvD,IAAIga,KAAUuC,KAAcd,EAAiBzU,EAAI7J,SAC7Cif,EAAKP,YAAc7U,EAAIoD,YAC1B4P,OAAYhT,EAAIoD,aAEjB1E,MAAasU,EAAKrO,WAzDrB,IAA0BqL,EA4DxB,SAAUf,MAASrQ,MAASF,IAASiG,OAGtC,QAAQyQ,GACP,IAAIK,EAAU,GAEd,IAAK,MAAMP,KAAUvb,KAAK+b,oBACzBD,MAAc9b,KAAKgc,4BAA4BT,EAAQE,SAGxD,OAAOK,EAAQD,UAAU,EAAGC,EAAQzc,OAAS,GAG9C,eAAe4c,GACd,GACCjc,KAAKob,SAASa,EAASngB,OACvBkE,KAAKob,SAASa,EAASngB,QAAUmgB,EAEjC,MAAM,IAAI3W,gCACiB2W,EAASngB,qCAIrCkE,KAAKob,SAASa,EAASngB,MAAQmgB,EAGhC,QACCjc,KAAKob,SAAW,GAChBpb,KAAKqb,eAAiB,GAGvB,mBACC,MAAMS,EAAU,GACVJ,EAAoBzf,OAAO6E,KAAKd,KAAKqb,gBAE3C,IAAK,MAAME,KAAUvb,KAAK+b,oBAAqB,CAC9C,MAAMtX,EAAO8W,EAAOnf,MAEpB,GAAIqI,EAAKM,OACR,IAAK,MAAMsB,KAAO5B,EAAKM,OACtB,IAAK,MAAM4W,KAAaD,EACvBrV,EAAI+N,OAAOuH,GACVtV,EAAI+N,OAAOuH,IAAc3b,KAAKqb,eAAeM,GAKjDG,EAAQpX,KAAKD,GAGd,OAAOqX,EAGR,mBAAmBhgB,UACXkE,KAAKob,SAAStf,GAGtB,wBAAwBA,GACvB,OAAOkE,KAAKgc,4BAA4Bhc,KAAKob,SAAStf,IAGvD,gBAAgBA,GACf,OAAOkE,KAAKob,SAAStf,GAGtB,iBAAiBsY,GAChBpU,KAAKqb,eAAiBjH,EAGvB,eACC,IAAK,MAAMmH,KAAUvb,KAAKob,SACzBpb,KAAKob,SAASG,GAAQ9F,QAIxB,kBACC,MAAO,2CAGR,aAAaD,GACZ,MAAM0G,EAAiB,IAAIf,EAQ3B,OANuB3F,EAAU2G,OAChC,CAACC,EAAKC,IAAQD,EAAIE,OAAOD,EAAIN,qBAC7B,IAGcnZ,QAAQsZ,EAAetG,eAAgBsG,GAC/CA,GAIT5gB,EAAOD,QAAU8f,EACjB7f,EAAOD,QAAQmY,eAAiB,IAAI2H,G,cC/JpC7f,EAAOD,QAAUkC,QAAQ,S,cCAzBjC,EAAOD,QAAUkC,QAAQ,O,cCAzBjC,EAAOD,QAAUkC,QAAQ,W,cCAzBjC,EAAOD,QAAUkC,QAAQ,W,6BCEzB,MAAMgf,EAAsB,GAuD5B,SAAS3I,EAAWQ,GAInB,IAAItT,EAAO7E,OAAO6E,KAAKsT,GACvB,GAAoB,IAAhBtT,EAAKzB,OACR,MAAO,GAGJyB,EAAKzB,OAAS,IACjByB,EAAOA,EAAK0b,QAGb,IAAI3G,EAAO,GACPta,EAAI,EACR,MAAMyC,EAAO8C,EAAKzB,OAClB,KAAO9D,EAAIyC,EAAO,EAAGzC,IACpBsa,MAAW/U,EAAKvF,MAAM6Y,EAAOtT,EAAKvF,OAGnC,OADAsa,MAAW/U,EAAKvF,MAAM6Y,EAAOtT,EAAKvF,MAKnC,SAAS0H,EAAO9B,GACf,OAAOA,aAAegQ,OAASnK,MAAM7F,EAAIsb,WAM1C,SAASC,EAAiBhE,GACrB6D,EAAoB7D,KAIxB6D,EAAoB7D,IAAO,EAEvBnV,QAAQoZ,YACXpZ,QAAQoZ,YAAYjE,EAAK,sBAIzBkE,QAAQC,KAAK,IAAIvX,MAAMoT,KAhGzBrd,EAAQ4H,OAASA,EAEjB5H,EAAQqY,qBAAuB,SAAS2B,GAEvC,OADYpZ,OAAO6E,KAAKuU,GAAS9P,IAAIwF,GAAKsK,EAAQtK,KAInD1P,EAAQyf,iBAAmB,SAAwBte,GAClD,OAAI0Y,OAAOlO,MAAMxK,GACT,MACI0Y,OAAOC,SAAS3Y,MAOjBA,IANNA,EAAQ,EACJ,OAEA,QAOVnB,EAAQ0Y,aAAe,SAAsBsB,EAASjB,UAE9CiB,EADMzB,EAAWQ,KAIzB/Y,EAAQoY,SAAW,SAAkB4B,EAAS7Y,EAAO4X,EAAQ3K,GAW5D,OATA4L,EADazB,EAAWQ,IACR,CACf5X,MAAwB,iBAAVA,EAAqBA,EAAQ,EAC3C4X,OAAQA,GAAU,GAClB3K,UAAWxG,EAAOwG,GACfA,EAAUgT,UACVvH,OAAOC,SAAS1L,GAChBA,OACAnG,GAEG+R,GAIRha,EAAQsY,UAAY,SAASyB,EAAYqF,GACxC,GAAIrF,EAAW/V,SAAWob,EAAKpb,OAC9B,MAAM,IAAIiG,MAAM,+BAGjB,MAAMwX,EAAc/d,MAAM5B,UAAUuF,MAAMhH,KAAK+e,GAC/C,OAAOrF,EAAW+G,OAAO,CAACC,EAAKW,EAAO7a,KACrCka,EAAIW,GAASD,EAAY5a,GAClBka,GACL,KAyBJ/gB,EAAQuY,WAAaA,EAKrBvY,EAAQwY,SAAW,SAAkB1S,GACpC,OAAOA,IAAQlF,OAAOkF,IAmBvB9F,EAAQyY,kCAAoC,KAC3C4I,EACC,4EAIFrhB,EAAQ2hB,4CAA8CC,IACrDP,2GAC0GO,YAoB3G5hB,EAAQ6hB,QAhBR,cAAsBC,IAOrB,IAAIrgB,EAAKN,GACJwD,KAAKod,IAAItgB,GACZkD,KAAK5D,IAAIU,GAAK4H,KAAKlI,GAEnBwD,KAAKoK,IAAItN,EAAK,CAACN,O;;;;;;GCjHlB,IAAIsB,EAAS,EAAQ,IAAeA,OAChCuf,EAAqB,EAAQ,IAC7BC,EAAc,EAAQ,IACtBnG,EAAY,EAAQ,EAAR,CAAgB,WAC5BoG,EAAU,EAAQ,IAClBC,EAAO,EAAQ,IAAQA,KACvBC,EAAO,EAAQ,IACfC,EAAY,EAAQ,IACpBC,EAAK,EAAQ,IACbC,EAAc,EAAQ,IA0P1B,SAASC,EAAqBxY,GAC5B,OAAO,SAAuByY,EAAMpf,GAClC,IAAI2D,EAAOvE,EAAOigB,SAASD,GAEvBA,EADAhgB,EAAOU,KAAKsf,EAAMpf,GAGtB,OAAO+e,EAAKpb,EAAKgD,IAWrB,SAAS2Y,EAAyB3H,GAChC,OAAOsH,EAAGM,MAAM5H,EAAK,CACnB6H,iBAAiB,IAWrB,SAASC,IACP,MAAO,GA9QT9iB,EAAQoiB,KAAOI,EAAoB,CAAEO,MAAM,IAW3C/iB,EAAQgjB,MAAQR,EAAoB,CAAEO,MAAM,IAU5C/iB,EAAQijB,WAAa,SAASC,GAC5B,MAAI,MAAQA,EAAK,KACb,MAAQA,EAAK,KAAO,OAASA,EAAK,IAAM,MAAQA,EAAK,MACrD,SAAWA,EAAK1C,UAAU,EAAG,SAAjC,KAWFxgB,EAAQkiB,QAAUpG,EAAUQ,SAAS4F,EACnC,uDAUFliB,EAAQmjB,cAAgB,SAASvZ,GAC/B,OAAQA,EAAKjB,QAAQ,KA6CvB,SAAsBqS,EAAKnU,GAIzB,IAHA,IAAIuc,EAAQpI,EAAIvL,MAAM,SAClB4T,EAAM,CAAEliB,MAAOiiB,EAAM,GAAIE,QAAS,EAAG3d,OAAQ,GAAI4d,cAAe1c,GAE3D3G,EAAI,EAAGA,EAAIkjB,EAAMpf,SAAU9D,EAAG,CACrC,IAAIsjB,EAAMJ,EAAMljB,GAAGuP,MAAM,SACrB,MAAQ+T,EAAI,GACdH,EAAIC,QAAUG,WAAWD,EAAI,IAE7BH,EAAI1d,OAAO6d,EAAI,IAAMA,EAAI,GAI7B,OAAOH,EAzDHK,CAAa9Z,GACb,CAAEzI,MAAOghB,EAAKwB,OAAO/Z,GAAOjE,OAAQ,KAW1C3F,EAAQ4jB,eAAiB,SAASC,GAGhC,IAFA,IAAIR,EAAM,GAEDnjB,EAAI,EAAGA,EAAI2jB,EAAM7f,SAAU9D,EAClCmjB,EAAIha,KAAKrJ,EAAQmjB,cAAcU,EAAM3jB,KAGvC,OAAOmjB,GAYTrjB,EAAQgiB,mBAAqBlG,EAAUQ,SAAS0F,EAC9C,wEAoCFhiB,EAAQ8jB,YAAc,SAAS9Y,GAC7B,IAAIlG,EAEJ,GAAmB,mBAARkG,EACT,OAAOA,EAGT,OAAQA,GACN,KAAK,EACHlG,EAAK9E,EAAQgjB,MACb,MACF,KAAK,EACH,MACF,IAAK,SACHle,EAAK9E,EAAQoiB,KACb,MACF,IAAK,OACHtd,EAAK9E,EAAQgjB,MACb,MACF,QACE,MAAM,IAAI1f,UAAU,oCAAsC0H,GAG9D,OAAOlG,GAWT9E,EAAQ+jB,mBAAqB,SAA4B/Y,GACvD,IAAIlG,EAEJ,GAAmB,mBAARkG,EACT,OAAOA,EAGT,OAAQA,GACN,KAAK,EACHlG,EAAKyd,EAAYK,MACjB,MACF,KAAK,EACH9d,EAAKge,EACL,MACF,IAAK,WACHhe,EAAK6d,EACL,MACF,IAAK,SACH7d,EAAKyd,EAAYK,MACjB,MACF,QACE,MAAM,IAAItf,UAAU,4CAA8C0H,GAGtE,OAAOlG,GAWT9E,EAAQgkB,aAAe,SAAShZ,GAC9B,MAAmB,mBAARA,EAA2BA,GAE1B,IAARA,EAEK,WAAY,OAAO,GAGT,iBAARA,EAEF,SAASjC,EAAG7I,GAAI,OAAOA,EAAI8K,IAGjB,iBAARA,IAETA,EAAMA,EAAIyE,MAAM,UAGX4S,EAAU4B,QAAQjZ,GAAO,MAYlChL,EAAQkkB,WAAa,SAAoBta,EAAMua,GAC7C,IAAKva,IAASua,EACZ,OAAOva,EAIT,IAAIwa,EAASnC,EAAYW,MAAMhZ,GAM/B,OAHAwa,EAAOC,WAAWF,QAAUA,EAGrBlC,EAAY9b,OAAOie,K,6BCjQ5B,IAKI3iB,EALAoP,EAAS,EAAQ,IACjBpO,EAASoO,EAAOpO,OAEhB6hB,EAAQ,GAIZ,IAAK7iB,KAAOoP,EACLA,EAAO9O,eAAeN,IACf,eAARA,GAAgC,WAARA,IAC5B6iB,EAAM7iB,GAAOoP,EAAOpP,IAGtB,IAAI8iB,EAAQD,EAAM7hB,OAAS,GAC3B,IAAKhB,KAAOgB,EACLA,EAAOV,eAAeN,IACf,gBAARA,GAAiC,oBAARA,IAC7B8iB,EAAM9iB,GAAOgB,EAAOhB,IAqCtB,GAlCA6iB,EAAM7hB,OAAOX,UAAYW,EAAOX,UAE3ByiB,EAAMphB,MAAQohB,EAAMphB,OAASqhB,WAAWrhB,OAC3CohB,EAAMphB,KAAO,SAAUhC,EAAOsjB,EAAkBzgB,GAC9C,GAAqB,iBAAV7C,EACT,MAAM,IAAImC,UAAU,yEAA2EnC,GAEjG,GAAIA,QAAiC,IAAjBA,EAAM6C,OACxB,MAAM,IAAIV,UAAU,yHAA2HnC,GAEjJ,OAAOsB,EAAOtB,EAAOsjB,EAAkBzgB,KAItCugB,EAAM7hB,QACT6hB,EAAM7hB,MAAQ,SAAUC,EAAMG,EAAMO,GAClC,GAAoB,iBAATV,EACT,MAAM,IAAIW,UAAU,oEAAsEX,GAE5F,GAAIA,EAAO,GAAKA,GAAQ,GAAK,GAAK,IAChC,MAAM,IAAI+hB,WAAW,cAAgB/hB,EAAO,kCAE9C,IAAIqE,EAAMvE,EAAOE,GAQjB,OAPKG,GAAwB,IAAhBA,EAAKkB,OAEa,iBAAbX,EAChB2D,EAAIlE,KAAKA,EAAMO,GAEf2D,EAAIlE,KAAKA,GAJTkE,EAAIlE,KAAK,GAMJkE,KAINsd,EAAMK,iBACT,IACEL,EAAMK,iBAAmBzc,QAAQ0c,QAAQ,UAAUD,iBACnD,MAAO3S,IAMNsS,EAAMO,YACTP,EAAMO,UAAY,CAChBC,WAAYR,EAAMS,YAEhBT,EAAMK,mBACRL,EAAMO,UAAUG,kBAAoBV,EAAMK,mBAI9C1kB,EAAOD,QAAUskB,G,cC5EjBrkB,EAAOD,QAAUkC,QAAQ,W,6BCCzB,MAAMC,EAAO,EAAQ,GAEf8iB,EAAc,EAAQ,IAAaA,YACnCpB,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChBwY,EAAmB,EAAQ,IAAuBA,iBAClDC,EAAc,EAAQ,IAMtBC,EAAY,CAChB1b,OAAwB,EACxB2b,aAAwB,EACxBC,SAAwB,EACxBC,gBAAwB,EACxBC,sBAAwB,GACxBC,qBAAwB,GACxBC,kBAAwB,IAOpBC,EAAY,CAChBH,sBAAwB,GACxBC,qBAAwB,GACxBC,kBAAwB,IAGpBE,EAAY,CAChBC,OAAQ,EACRC,SAAU,EACV/X,QAAS,GAMX,MAAMgY,EACJ,cACEphB,KAAKX,OAAS,EAUhB,MAAMgiB,EAAS3V,GACb,MAAM,IAAIpG,MAAM,8BAOlB,QACE,MAAMgc,EAAa,IAAKthB,KAAgB,YAClCuhB,EAAYtlB,OAAO6E,KAAKd,MAC9B,IAAK,IAAIzE,EAAI,EAAGA,EAAIgmB,EAAUliB,OAAQ9D,IAAK,CACzC,MAAMuB,EAAMykB,EAAUhmB,GACtB+lB,EAAWxkB,GAAOkD,KAAKlD,GAEzB,OAAOwkB,GAWX,MAAME,UAAuBJ,EAQ3B,YAAYtT,EAAO2T,EAASzgB,EAAQU,EAAaggB,GAC/CC,QAEA3hB,KAAK8N,MAAQA,EACb9N,KAAKyhB,QAAUA,EACfzhB,KAAKgB,OAASA,EACdhB,KAAK0hB,KAAOA,EACZ1hB,KAAKqF,QAAU3D,GAAe6e,EAAiBqB,QAC/C5hB,KAAK6hB,YAAc7hB,KAAKqF,QAAQyc,kBAAoB5C,EAAMjX,cAAcE,IAGxEnI,KAAK2B,iBAAkB,EAGzB,aAAaO,GACX,MAAM6f,EAAa/hB,KAAK0hB,KAAKzgB,QAAQiB,GACrC,OAAO6f,EAAaA,EAAW9c,KAAO,KAGxC,MAAMoc,EAAS3V,GAOb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQQ,SAClD,IAAIiU,EAAcjiB,KAAKqF,QAAQ6c,iBAAmBhD,EAAMpQ,WAAWE,QAAU,EAY7E,OAXIhP,KAAKqF,QAAQ8c,qBAEfF,GAAe/C,EAAMpQ,WAAWG,cAChC+S,EAAYI,mBAAmBpiB,KAAKqF,QAAQ8c,qBAE9CH,EAAYK,gBAAgBriB,KAAKyhB,SACjCzhB,KAAKsiB,qBAAqBN,EAAaX,GAGvCrhB,KAAKX,OAAS2iB,EAAYpW,WAEnBoW,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,EAAUuW,GAQ9D,qBAAqBD,EAAaX,GAIhC,IAAI5V,EAAQ,EAEZ,MAAMhC,EAAYzJ,KAAKqF,QAAQkd,yBAa/B,GAXIrD,EAAMpX,gBAAgB0a,eAAenB,EAAQvZ,mBAC/C2D,GAAUzL,KAAKgB,QAAUhB,KAAKgB,OAAO3B,OAAUohB,EAAU1b,OAAS,EAClE0G,GAAUzL,KAAKqF,QAAQod,eAAiB,EAAKhC,EAAUE,SAAW,EAClElV,GAASzL,KAAKqF,QAAQqd,eAAiBjC,EAAUG,gBAAkB,EACnEnV,GAASzL,KAAKqF,QAAQsd,uBAAyBlC,EAAUI,sBAAwB,EACjFpV,GAAShC,QAAgDgX,EAAUK,qBAAuB,EAC1FrV,GAASzL,KAAK2B,gBAAkB8e,EAAUM,kBAAoB,EAC9DiB,EAAYY,WAAW5iB,KAAK6hB,aAC5BG,EAAYa,UAAUpX,IAGpBzL,KAAKgB,QAAUhB,KAAKgB,OAAO3B,OAAQ,CACrC2iB,EAAYY,WAAW5iB,KAAKgB,OAAO3B,QACnC,IAAK,IAAI9D,EAAI,EAAGA,EAAIyE,KAAKgB,OAAO3B,OAAQ9D,IAAK,CAC3C,IAAIunB,EAAa9iB,KAAKgB,OAAOzF,GACzBkQ,EAAQgV,EAAUM,oBAEpBiB,EAAYe,YAAYD,EAAWhnB,MACnCgnB,EAAaA,EAAWtmB,OAE1BwlB,EAAYgB,WAAW3B,EAAQ4B,OAAOH,EAAY9iB,KAAKkjB,aAAa3nB,MAIxE,IAAK2jB,EAAMpX,gBAAgB0a,eAAenB,EAAQvZ,iBAMhD,OALK9H,KAAKgB,QAAWhB,KAAKgB,OAAO3B,QAE/B2iB,EAAYY,WAAW,QAEzBZ,EAAYY,WAAW5iB,KAAK6hB,aAG1BpW,EAAQgV,EAAUE,UACpBqB,EAAYmB,SAASnjB,KAAKqF,QAAQod,gBAEhChX,EAAQgV,EAAUG,iBACpBoB,EAAYgB,WAAWhjB,KAAKqF,QAAQqd,gBAElCjX,EAAQgV,EAAUI,uBACpBmB,EAAYY,WAAW5iB,KAAKqF,QAAQsd,wBAElClX,EAAQgV,EAAUK,sBACpBkB,EAAYoB,UAAU3Z,IA+I5B,MAAM4Z,UAAqBjC,EAMzB,YAAYkC,EAAS5hB,GACnBigB,QACA3hB,KAAKsjB,QAAUA,EACftjB,KAAKqF,QAAU3D,EACf1B,KAAK6B,MAAQH,EAAYK,YAAcgG,EAAMtE,WAC7CzD,KAAKiF,KAAOgc,EAAUC,OAElBxf,EAAY6hB,iBACdvjB,KAAKiF,KAAOgc,EAAU7X,QACZ1H,EAAY8hB,kBACtBxjB,KAAKiF,KAAOgc,EAAUE,UAO1B,MAAME,EAAS3V,GAGb,KAAK1L,KAAKsjB,SAAatjB,KAAKsjB,QAAQjkB,OAAS,GAC3C,MAAM,IAAIV,UAAUnB,EAAKgE,OAAO,8BAA+BxB,KAAKsjB,UAEtE,MAAMtB,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQW,OAClD,IAAI8T,EAAcjiB,KAAKqF,QAAQ6c,iBAAmBhD,EAAMpQ,WAAWE,QAAU,EACzEhP,KAAKqF,QAAQ8c,qBAEfF,GAAe/C,EAAMpQ,WAAWG,cAChC+S,EAAYI,mBAAmBpiB,KAAKqF,QAAQ8c,qBAE9CH,EAAYa,UAAU7iB,KAAKiF,MAC3B+c,EAAYY,WAAW5iB,KAAKsjB,QAAQjkB,QACpC,MAAM2G,EAAOhG,KAwBb,GAvBAA,KAAKsjB,QAAQ1gB,QAAQ,SAAmB6B,EAAMlJ,GAC5C,MAAMsG,EAAQmE,EAAKnE,MAAMtG,GACnByF,EAASyD,EAAKzD,QAAU+G,EAAMtE,WACpC,IAAIyf,EACAze,EAAKgd,SAEPO,EAAYa,UAAU,GACtBb,EAAYK,gBAAgB5d,EAAKgd,SACjCyB,EAAe3nB,GAAKkJ,EAAKid,KAAKzgB,QAAQ1F,GAAG0J,OAIzC+c,EAAYa,UAAU,GACtBb,EAAYyB,aAAahf,EAAKqJ,OAC9BoV,EAAerhB,EAAStG,GAAKsG,EAAMtG,GAAM,IAAO,MAGlDymB,EAAYY,WAAW5hB,EAAO3B,QAC9B2B,EAAO4B,QAAQ,CAAC8gB,EAAOxhB,IAAU8f,EAAYgB,WAAW3B,EAAQ4B,OAAOS,EAAOR,EAAahhB,OAC1FlC,MAEHgiB,EAAYY,WAAW5iB,KAAKqF,QAAQyc,kBAEhC5C,EAAMpX,gBAAgB6b,kBAAkBtC,EAAQvZ,iBAAkB,CAEpE,IAAI2D,EAAQzL,KAAKqF,QAAQsd,uBAAyB3B,EAAUH,sBAAwB,EACpF,MAAMpX,EAAYzJ,KAAKqF,QAAQkd,yBAC/B9W,GAAShC,QAAgDuX,EAAUF,qBAAuB,EAC1FkB,EAAYa,UAAUpX,GAElBA,EAAQuV,EAAUH,uBACpBmB,EAAYY,WAAW5iB,KAAKqF,QAAQsd,wBAGlClX,EAAQuV,EAAUF,sBACpBkB,EAAYoB,UAAU3Z,GAO1B,OAFAzJ,KAAKX,OAAS2iB,EAAYpW,WAEnBoW,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,EAAUuW,GAG9D,QACE,OAAO,IAAIoB,EAAarjB,KAAKsjB,QAAStjB,KAAKqF,UAiB/C,MAAMA,EAAU,IAbhB,cAA6B+b,EAE3B,MAAMC,EAAS3V,GAEb,OADoB,IAAI4U,EAAYpB,EAAM1R,QAAQnI,SAC/B8T,MAAMkI,EAAQvZ,gBAAiB4D,EAAU,GAG9D,QAEE,OAAO1L,OAMX3E,EAAQuoB,oBAtIR,cAAkCxC,EAChC,YAAYyC,GACVlC,QACA3hB,KAAK6jB,MAAQA,EAGf,MAAMxC,EAAS3V,GACb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQa,cAElD,OADA2T,EAAYgB,WAAWhjB,KAAK6jB,OACrB7B,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,KA8HtDrQ,EAAQgoB,aAAeA,EACvBhoB,EAAQyoB,mBAxHR,cAAiC1C,EAC/B,YAAY2C,EAAUC,GACpBrC,QACA3hB,KAAK+jB,SAAWA,EAChB/jB,KAAKgkB,SAAWA,EAGlB,MAAM3C,EAAS3V,GACb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQI,aAElD,OADAoU,EAAYiC,eAAe,CAAEF,SAAS/jB,KAAK+jB,SAAUC,SAAShkB,KAAKgkB,WAC5DhC,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,KA+GtDrQ,EAAQmmB,eAAiBA,EACzBnmB,EAAQ6oB,eAvMR,cAA6B9C,EAC3B,YAAYtT,GACV6T,QACA3hB,KAAK8N,MAAQA,EAGf,MAAMuT,EAAS3V,GACb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQO,SAElD,OADAiU,EAAYyB,aAAazjB,KAAK8N,OACvBkU,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,KA+LtDrQ,EAAQ8oB,aAvPR,cAA2B3C,EAOzB,YAAY1T,EAAO9M,EAAQU,EAAaC,GACtCggB,MAAM7T,EAAO,KAAM9M,EAAQU,EAAa,MACxC1B,KAAK6B,MAAQ7B,KAAKqF,QAAQtD,YAAcgG,EAAMtE,WAC9CzD,KAAK2B,gBAAkBA,EAGzB,aAAaO,GACX,OAAOlC,KAAK6B,MAAMK,GAGpB,MAAMmf,EAAS3V,GAMb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQM,OAClD,IAAImU,EAAcjiB,KAAKqF,QAAQ6c,iBAAmBhD,EAAMpQ,WAAWE,QAAU,EAmB7E,OAlBIhP,KAAKqF,QAAQ8c,qBAEfF,GAAe/C,EAAMpQ,WAAWG,cAChC+S,EAAYI,mBAAmBpiB,KAAKqF,QAAQ8c,qBAG9CH,EAAYyB,aAAazjB,KAAK8N,OAEzBoR,EAAMpX,gBAAgB0a,eAAenB,EAAQvZ,iBAIhD9H,KAAKsiB,qBAAqBN,EAAaX,GAHvCW,EAAYY,WAAW5iB,KAAK6hB,aAO9B7hB,KAAKX,OAAS2iB,EAAYpW,WAEnBoW,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,EAAUuW,KA6MhE5mB,EAAQ+lB,QAAUA,EAClB/lB,EAAQ+oB,gBA9JR,cAA8BhD,EAC5B,YAAYiD,GACV1C,QACA3hB,KAAKqkB,OAASA,EAGhB,MAAMhD,EAAS3V,GACb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQS,UAElD,OADA+T,EAAYsC,gBAAgBtkB,KAAKqkB,QAC1BrC,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,KAsJtDrQ,EAAQkpB,eA9LR,cAA6BnD,EAQ3B,YAAY/b,GACVsc,QACA3hB,KAAKqF,QAAUA,GAAW,GAG5B,MAAMgc,EAAS3V,GACb,MAAMsW,EAAc,IAAI1B,EAAYpB,EAAM1R,QAAQC,SAE5C+W,EAAiB,CACrBC,YAAazkB,KAAKqF,QAAQqf,YAAc,QACxCC,YAAanE,EAAYoE,YACzBC,eAAgBrE,EAAYhV,SAQ9B,OALGxL,KAAKqF,QAAQyf,YACdN,EAA2B,WAAI,QAGjCxC,EAAYiC,eAAeO,GACpBxC,EAAY7I,MAAMkI,EAAQvZ,gBAAiB4D,KAoKtDrQ,EAAQgK,QAAUA,G;;;;;;GC3alB/J,EAAOD,QAuCP,SAAemB,EAAO6I,GACpB,GAAqB,iBAAV7I,EACT,OAAOyhB,EAAMzhB,GAGf,GAAqB,iBAAVA,EACT,OAAOgF,EAAOhF,EAAO6I,GAGvB,OAAO,MA/CT/J,EAAOD,QAAQmG,OAASA,EACxBlG,EAAOD,QAAQ4iB,MAAQA,EAOvB,IAAI8G,EAAwB,wBAExBC,EAAuB,wBAEvBzf,EAAM,CACRtH,EAAI,EACJgnB,GAAI,KACJC,GAAI,GAAK,GACTC,GAAI,GAAK,GACTC,GAAI1e,KAAK2e,IAAI,KAAM,GACnBC,GAAI5e,KAAK2e,IAAI,KAAM,IAGjBE,EAAc,gDA+ClB,SAAS/jB,EAAOhF,EAAO6I,GACrB,IAAK6P,OAAOC,SAAS3Y,GACnB,OAAO,KAGT,IAAIgpB,EAAM9e,KAAK+e,IAAIjpB,GACfkpB,EAAsBrgB,GAAWA,EAAQqgB,oBAAuB,GAChEC,EAAiBtgB,GAAWA,EAAQsgB,eAAkB,GACtDC,EAAiBvgB,QAAqC/B,IAA1B+B,EAAQugB,cAA+BvgB,EAAQugB,cAAgB,EAC3FC,EAAgBC,QAAQzgB,GAAWA,EAAQwgB,eAC3CE,EAAQ1gB,GAAWA,EAAQ0gB,MAAS,GAEnCA,GAASxgB,EAAIwgB,EAAK1kB,iBAEnB0kB,EADEP,GAAOjgB,EAAI+f,GACN,KACEE,GAAOjgB,EAAI6f,GACb,KACEI,GAAOjgB,EAAI4f,GACb,KACEK,GAAOjgB,EAAI2f,GACb,KACEM,GAAOjgB,EAAI0f,GACb,KAEA,KAIX,IACI5O,GADM7Z,EAAQ+I,EAAIwgB,EAAK1kB,gBACb2kB,QAAQJ,GAUtB,OARKC,IACHxP,EAAMA,EAAI2E,QAAQgK,EAAsB,OAGtCU,IACFrP,EAAMA,EAAI2E,QAAQ+J,EAAuBW,IAGpCrP,EAAMsP,EAAgBI,EAc/B,SAAS9H,EAAM5X,GACb,GAAmB,iBAARA,IAAqBW,MAAMX,GACpC,OAAOA,EAGT,GAAmB,iBAARA,EACT,OAAO,KAIT,IACI4f,EADAC,EAAUX,EAAY9a,KAAKpE,GAE3B0f,EAAO,IAYX,OAVKG,GAMHD,EAAanH,WAAWoH,EAAQ,IAChCH,EAAOG,EAAQ,GAAG7kB,gBALlB4kB,EAAaE,SAAS9f,EAAK,IAC3B0f,EAAO,KAOFrf,KAAKC,MAAMpB,EAAIwgB,GAAQE,K,6BC9JhC3qB,EAAOD,QAAUY,OAAOmqB,iBAAmB,CAAEC,UAAW,cAAgBtnB,MAExE,SAAqBoC,EAAKmlB,GAExB,OADAnlB,EAAIklB,UAAYC,EACTnlB,GAGT,SAA0BA,EAAKmlB,GAC7B,IAAK,IAAIxjB,KAAQwjB,EACVnlB,EAAI/D,eAAe0F,KACtB3B,EAAI2B,GAAQwjB,EAAMxjB,IAGtB,OAAO3B,K;;;;;;GCDT,IAAIolB,EAAQ,EAAQ,KA8EpB,SAASC,EAAQ9b,GACf,GAAoB,iBAATA,EAAmB,CAC5B,IAAK8b,EAAO9b,GAAO,MAAM,IAAIpF,MAAM,wBAA0BoF,GAC7D,OAAOA,EAGT,GAAoB,iBAATA,EACT,MAAM,IAAI/L,UAAU,mCAItB,IAAI3B,EAAImpB,SAASzb,EAAM,IACvB,IAAK1D,MAAMhK,GAAI,CACb,IAAKwpB,EAAOxpB,GAAI,MAAM,IAAIsI,MAAM,wBAA0BtI,GAC1D,OAAOA,EAIT,KADAA,EAAIwpB,EAAO9b,EAAKrJ,gBACR,MAAM,IAAIiE,MAAM,4BAA8BoF,EAAO,KAC7D,OAAO1N,EA1FT1B,EAAOD,QAAUmrB,EAGjBA,EAAOC,aAAeF,EAGtBC,EAAOD,MAgCP,SAA8BG,EAAUH,GACtC,IAAIznB,EAAM,GAeV,OAbA7C,OAAO6E,KAAKylB,GAAO3jB,QAAQ,SAAsB8H,GAC/C,IAAIoB,EAAUya,EAAM7b,GAChB8b,EAAStR,OAAOxK,GAGpBgc,EAASF,GAAU1a,EACnB4a,EAAS5a,GAAW0a,EACpBE,EAAS5a,EAAQzK,eAAiBmlB,EAGlC1nB,EAAI4F,KAAK8hB,KAGJ1nB,EAhDM6nB,CAAoBH,EAAQD,GAG3CC,EAAOI,SAAW,CAChBC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,EACLC,KAAK,GAIPX,EAAO5E,MAAQ,CACbwF,KAAK,EACLC,KAAK,EACLC,KAAK,GAIPd,EAAOe,MAAQ,CACbC,KAAK,EACLC,KAAK,EACLC,KAAK,I;;;;;;GCrCP,IAAIC,EAAQ,EAAQ,KAChBnK,EAAO,EAAQ,IA2BnB,SAASoK,EAAQprB,EAAOqrB,GACtB,IAAItsB,EAwBA0J,EAvBAia,EAAQ2I,EAGRxhB,EAgNN,SAA2B7J,GACzB,IAAKA,EACH,OAAO,KAGT,IACE,OAzBJ,SAAwBA,GAEtB,IAAIyI,EAAO0iB,EAAM1J,MAAMzhB,GAMvB,OAHAyI,EAAKya,gBAAapc,EAGXqkB,EAAMnmB,OAAOyD,GAiBXuZ,CAAchiB,GACrB,MAAOqD,GACP,OAAO,MAxNCioB,CAAiBtrB,GAG3B,IAAK6J,EACH,OAAO,EAIT,GAAI6Y,IAAUngB,MAAMC,QAAQkgB,GAE1B,IADAA,EAAQ,IAAIngB,MAAM4D,UAAUtD,OAAS,GAChC9D,EAAI,EAAGA,EAAI2jB,EAAM7f,OAAQ9D,IAC5B2jB,EAAM3jB,GAAKoH,UAAUpH,EAAI,GAK7B,IAAK2jB,IAAUA,EAAM7f,OACnB,OAAOgH,EAIT,IAAK9K,EAAI,EAAGA,EAAI2jB,EAAM7f,OAAQ9D,IAC5B,GAAIwsB,EAAUC,EAAU/iB,EAAOia,EAAM3jB,IAAK8K,GACxC,MAAmB,MAAZpB,EAAK,KAAqC,IAAvBA,EAAKjB,QAAQ,KACnCqC,EACApB,EAKR,OAAO,EAcT,SAASgjB,EAASC,GAChB,YAA4C5kB,IAArC4kB,EAAIC,QAAQ,uBAChBnhB,MAAMkhB,EAAIC,QAAQ,mBAmEvB,SAASH,EAAW/iB,GAClB,GAAoB,iBAATA,EAET,OAAO,EAGT,OAAQA,GACN,IAAK,aACH,MAAO,oCACT,IAAK,YACH,MAAO,cAGX,MAAgB,MAAZA,EAAK,GAEA,MAAQA,GAGa,IAAvBA,EAAKjB,QAAQ,KAChBwZ,EAAKwB,OAAO/Z,GACZA,EAcN,SAAS8iB,EAAWK,EAAUC,GAE5B,IAAiB,IAAbD,EACF,OAAO,EAIT,IAAIE,EAAcD,EAAOvd,MAAM,KAC3Byd,EAAgBH,EAAStd,MAAM,KAGnC,OAA2B,IAAvBwd,EAAYjpB,QAAyC,IAAzBkpB,EAAclpB,UAKrB,MAArBkpB,EAAc,IAAcA,EAAc,KAAOD,EAAY,MAK3B,OAAlCC,EAAc,GAAGxkB,OAAO,EAAG,GACtBwkB,EAAc,GAAGlpB,QAAUipB,EAAY,GAAGjpB,OAAS,GACxDkpB,EAAc,GAAGxkB,OAAO,KAAOukB,EAAY,GAAGvkB,OAAO,EAAIwkB,EAAc,GAAGlpB,QAIrD,MAArBkpB,EAAc,IAAcA,EAAc,KAAOD,EAAY,KAvMnEhtB,EAAOD,QAoGP,SAAwB6sB,EAAKL,GAC3B,IAAI3I,EAAQ2I,EAGZ,IAAKI,EAAQC,GACX,OAAO,KAIT,GAAIvlB,UAAUtD,OAAS,EAAG,CACxB6f,EAAQ,IAAIngB,MAAM4D,UAAUtD,OAAS,GACrC,IAAK,IAAI9D,EAAI,EAAGA,EAAI2jB,EAAM7f,OAAQ9D,IAChC2jB,EAAM3jB,GAAKoH,UAAUpH,EAAI,GAO7B,OAAOqsB,EAFKM,EAAIC,QAAQ,gBAEHjJ,IAtHvB5jB,EAAOD,QAAQmtB,GAAKZ,EACpBtsB,EAAOD,QAAQotB,QAAUR,EACzB3sB,EAAOD,QAAQ2sB,UAAYA,EAC3B1sB,EAAOD,QAAQqtB,MAAQX,G;;;;;;GCZvB,IAAIY,EAAM,EAAQ,IACd1K,EAAQ0K,EAAI1K,MACZ2K,EAAMD,EAAIC,IAkBd,SAASC,EAAUX,GACjB,IAAIS,EAAMT,EAAIS,IAEd,QAAYrlB,IAARqlB,EAAJ,CAKA,IAAIlJ,EAASyI,EAAIY,WAEjB,OAAIC,EAAMJ,EAAKlJ,GAENA,IAITA,EAASuJ,EAAUL,IACZM,KAAON,EAENT,EAAIY,WAAarJ,IAyC3B,SAASuJ,EAAW3S,GAClB,GAAmB,iBAARA,GAA0C,KAAtBA,EAAI6S,WAAW,GAC5C,OAAOjL,EAAM5H,GAUf,IAPA,IAAI8S,EAAW9S,EACXvI,EAAQ,KACRsb,EAAS,KAKJ7tB,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,IAC9B,OAAQ8a,EAAI6S,WAAW3tB,IACrB,KAAK,GACY,OAAX6tB,IACFD,EAAW9S,EAAIwF,UAAU,EAAGtgB,GAC5BuS,EAAQuI,EAAIwF,UAAUtgB,EAAI,GAC1B6tB,EAAS/S,EAAIwF,UAAUtgB,IAEzB,MACF,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,IACL,KAAK,MACH,OAAO0iB,EAAM5H,GAInB,IAAIsS,OAAcrlB,IAARslB,EACN,IAAIA,EACJ,GAWJ,OATAD,EAAIpK,KAAOlI,EACXsS,EAAIU,KAAOhT,EACXsS,EAAIQ,SAAWA,EAEA,OAAXC,IACFT,EAAI7a,MAAQA,EACZ6a,EAAIS,OAASA,GAGRT,EAYT,SAASI,EAAOJ,EAAKW,GACnB,MAA4B,iBAAdA,GACE,OAAdA,SACShmB,IAARslB,GAAqBU,aAAqBV,IAC3CU,EAAUL,OAASN,EArIvBrtB,EAAOD,QAAUwtB,EACjBvtB,EAAOD,QAAQkuB,SAwCf,SAAsBrB,GACpB,IAAIS,EAAMT,EAAIsB,YAEd,GAAmB,iBAARb,EAET,OAAOE,EAASX,GAGlB,IAAIzI,EAASyI,EAAIuB,mBAEjB,GAAIV,EAAMJ,EAAKlJ,GAEb,OAAOA,EAOT,OAHAA,EAASuJ,EAAUL,IACZM,KAAON,EAENT,EAAIuB,mBAAqBhK,I,cCnFnCnkB,EAAOD,QAAUkC,QAAQ,S,gBCAzB;;;;;GAyBQ,EAAO,QAAW,0BAAP,EAMV,WACL,aAYA,SAASyK,EAAK7I,EAAKC,EAAMsqB,GAOrB1pB,KAAKb,IAAU,EAAJA,EAOXa,KAAKZ,KAAY,EAALA,EAOZY,KAAK0pB,WAAaA,EA2BtB1hB,EAAK2hB,WAEL1tB,OAAOC,eAAe8L,EAAK7K,UAAW,aAAc,CAChDX,OAAO,EACPL,YAAY,EACZye,cAAc,IASlB5S,EAAK4hB,OAAS,SAAgBzoB,GAC1B,OAAsC,KAA9BA,GAAOA,EAAgB,aAQnC,IAAI0oB,EAAY,GAOZC,EAAa,GASjB9hB,EAAKqD,QAAU,SAAiB7O,EAAOktB,GACnC,IAAIvoB,EAAK4oB,EACT,OAAKL,EAaG,IADJltB,KAAkB,IACAA,EAAQ,MACtButB,EAAYD,EAAWttB,IAEZutB,GAEf5oB,EAAM,IAAI6G,EAAKxL,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5C,GAAKA,GAASA,EAAQ,MACtBstB,EAAWttB,GAAS2E,GACjBA,IAnBF,MADL3E,GAAgB,IACKA,EAAQ,MACzButB,EAAYF,EAAUrtB,IAEXutB,GAEf5oB,EAAM,IAAI6G,EAAKxL,EAAOA,EAAQ,GAAK,EAAI,GAAG,IACrC,KAAOA,GAASA,EAAQ,MACzBqtB,EAAUrtB,GAAS2E,GAChBA,IAsBf6G,EAAKuK,WAAa,SAAoB/V,EAAOktB,GAEzC,OADAA,IAAaA,EACT1iB,MAAMxK,KAAW2Y,SAAS3Y,GACnBwL,EAAKsK,MACXoX,GAAYltB,IAAUwtB,EAChBhiB,EAAKiiB,WACXP,GAAYltB,EAAQ,GAAKwtB,EACnBhiB,EAAKkiB,UACZR,GAAYltB,GAAS2tB,EACdniB,EAAKoiB,mBACZ5tB,EAAQ,EACDwL,EAAKuK,YAAY/V,EAAOktB,GAAUW,SACtC,IAAIriB,EAAMxL,EAAQ8tB,EAAkB,EAAI9tB,EAAQ8tB,EAAkB,EAAGZ,IAYhF1hB,EAAKuiB,SAAW,SAAkBC,EAASC,EAAUf,GACjD,OAAO,IAAI1hB,EAAKwiB,EAASC,EAAUf,IAWvC1hB,EAAK0iB,WAAa,SAAoBrU,EAAKqT,EAAUiB,GACjD,GAAmB,IAAftU,EAAIhX,OACJ,MAAMiG,MAAM,qCAChB,GAAY,QAAR+Q,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAOrO,EAAKsK,KAKhB,GAJwB,iBAAboX,IACPiB,EAAQjB,EACRA,GAAW,IACfiB,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMrlB,MAAM,uBAAyBqlB,GAEzC,IAAIttB,EACJ,IAAKA,EAAIgZ,EAAIrS,QAAQ,MAAQ,EACzB,MAAMsB,MAAM,gDAAkD+Q,GAC7D,GAAU,IAANhZ,EACL,OAAO2K,EAAK0iB,WAAWrU,EAAIwF,UAAU,GAAI6N,EAAUiB,GAAON,SAO9D,IAHA,IAAIO,EAAe5iB,EAAKuK,WAAW7L,KAAK2e,IAAIsF,EAAO,IAE/C7qB,EAASkI,EAAKsK,KACT/W,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,GAAK,EAAG,CACpC,IAAIyC,EAAO0I,KAAKS,IAAI,EAAGkP,EAAIhX,OAAS9D,GAChCiB,EAAQ2pB,SAAS9P,EAAIwF,UAAUtgB,EAAGA,EAAIyC,GAAO2sB,GACjD,GAAI3sB,EAAO,EAAG,CACV,IAAI6sB,EAAQ7iB,EAAKuK,WAAW7L,KAAK2e,IAAIsF,EAAO3sB,IAC5C8B,EAASA,EAAO2S,SAASoY,GAAOlqB,IAAIqH,EAAKuK,WAAW/V,SAGpDsD,GADAA,EAASA,EAAO2S,SAASmY,IACTjqB,IAAIqH,EAAKuK,WAAW/V,IAI5C,OADAsD,EAAO4pB,SAAWA,EACX5pB,GASXkI,EAAK8iB,UAAY,SAAmBzkB,GAChC,OAAIA,aAAmC2B,EAC5B3B,EACQ,iBAARA,EACA2B,EAAKuK,WAAWlM,GACR,iBAARA,EACA2B,EAAK0iB,WAAWrkB,GAEpB,IAAI2B,EAAK3B,EAAIlH,IAAKkH,EAAIjH,KAAMiH,EAAIqjB,WAW3C,IAcIY,EAAiBS,WAOjBZ,EAAiBG,EAAiBA,EAOlCN,EAAiBG,EAAiB,EAOlCa,EAAahjB,EAAKqD,QA5BD,GAAK,IAsyB1B,OAnwBArD,EAAKsK,KAAOtK,EAAKqD,QAAQ,GAOzBrD,EAAKijB,MAAQjjB,EAAKqD,QAAQ,GAAG,GAO7BrD,EAAKkjB,IAAMljB,EAAKqD,QAAQ,GAOxBrD,EAAKmjB,KAAOnjB,EAAKqD,QAAQ,GAAG,GAO5BrD,EAAKojB,QAAUpjB,EAAKqD,SAAS,GAO7BrD,EAAKkiB,UAAYliB,EAAKuiB,UAAS,EAAc,YAAc,GAO3DviB,EAAKoiB,mBAAqBpiB,EAAKuiB,UAAS,GAAc,GAAc,GAOpEviB,EAAKiiB,UAAYjiB,EAAKuiB,SAAS,GAAG,YAAc,GAOhDviB,EAAK7K,UAAUkuB,MAAQ,WACnB,OAAOrrB,KAAK0pB,SAAW1pB,KAAKb,MAAQ,EAAIa,KAAKb,KAQjD6I,EAAK7K,UAAUmuB,SAAW,WACtB,OAAItrB,KAAK0pB,UACI1pB,KAAKZ,OAAS,GAAKkrB,GAAmBtqB,KAAKb,MAAQ,GAEzDa,KAAKZ,KAAOkrB,GAAkBtqB,KAAKb,MAAQ,IAWtD6I,EAAK7K,UAAU8P,SAAW,SAAkB0d,GAExC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAM5K,WAAW,uBAAyB4K,GAC9C,GAAI3qB,KAAKurB,SACL,MAAO,IACX,IAAIC,EACJ,GAAIxrB,KAAKyrB,aAAc,CACnB,GAAIzrB,KAAK0rB,OAAO1jB,EAAKiiB,WAAY,CAG7B,IAAI0B,EAAY3jB,EAAKuK,WAAWoY,GAC5BiB,EAAM5rB,KAAK6rB,OAAOF,GAEtB,OADAH,EAAMI,EAAInZ,SAASkZ,GAAWG,SAAS9rB,MAChC4rB,EAAI3e,SAAS0d,GAASa,EAAIH,QAAQpe,SAAS0d,GAElD,MAAO,IAAM3qB,KAAKqqB,SAASpd,SAAS0d,GAK5C,IAAIC,EAAe5iB,EAAKuK,WAAW7L,KAAK2e,IAAIsF,EAAO,GAAI3qB,KAAK0pB,UAC5D8B,EAAMxrB,KAEN,IADA,IAAIF,EAAS,KACA,CACT,IAAIisB,EAASP,EAAIK,OAAOjB,GAEpBoB,GADSR,EAAIM,SAASC,EAAOtZ,SAASmY,IAAeS,UAAY,GACjDpe,SAAS0d,GAE7B,IADAa,EAAMO,GACER,SACJ,OAAOS,EAASlsB,EAEhB,KAAOksB,EAAO3sB,OAAS,GACnB2sB,EAAS,IAAMA,EACnBlsB,EAAS,GAAKksB,EAASlsB,IAUnCkI,EAAK7K,UAAU8uB,YAAc,WACzB,OAAOjsB,KAAKZ,MAQhB4I,EAAK7K,UAAU4P,oBAAsB,WACjC,OAAO/M,KAAKZ,OAAS,GAQzB4I,EAAK7K,UAAU+uB,WAAa,WACxB,OAAOlsB,KAAKb,KAQhB6I,EAAK7K,UAAU6P,mBAAqB,WAChC,OAAOhN,KAAKb,MAAQ,GAQxB6I,EAAK7K,UAAUgvB,cAAgB,WAC3B,GAAInsB,KAAKyrB,aACL,OAAOzrB,KAAK0rB,OAAO1jB,EAAKiiB,WAAa,GAAKjqB,KAAKqqB,SAAS8B,gBAE5D,IADA,IAAI9lB,EAAmB,GAAbrG,KAAKZ,KAAYY,KAAKZ,KAAOY,KAAKb,IACnCitB,EAAM,GAAIA,EAAM,GACK,IAArB/lB,EAAO,GAAK+lB,GADOA,KAG5B,OAAoB,GAAbpsB,KAAKZ,KAAYgtB,EAAM,GAAKA,EAAM,GAQ7CpkB,EAAK7K,UAAUouB,OAAS,WACpB,OAAqB,IAAdvrB,KAAKZ,MAA2B,IAAbY,KAAKb,KAQnC6I,EAAK7K,UAAUsuB,WAAa,WACxB,OAAQzrB,KAAK0pB,UAAY1pB,KAAKZ,KAAO,GAQzC4I,EAAK7K,UAAUkvB,WAAa,WACxB,OAAOrsB,KAAK0pB,UAAY1pB,KAAKZ,MAAQ,GAQzC4I,EAAK7K,UAAUmvB,MAAQ,WACnB,OAA0B,IAAP,EAAXtsB,KAAKb,MAQjB6I,EAAK7K,UAAUovB,OAAS,WACpB,OAA0B,IAAP,EAAXvsB,KAAKb,MASjB6I,EAAK7K,UAAUuuB,OAAS,SAAgBc,GAGpC,OAFKxkB,EAAK4hB,OAAO4C,KACbA,EAAQxkB,EAAK8iB,UAAU0B,KACvBxsB,KAAK0pB,WAAa8C,EAAM9C,UAAa1pB,KAAKZ,OAAS,IAAQ,GAAMotB,EAAMptB,OAAS,IAAQ,IAErFY,KAAKZ,OAASotB,EAAMptB,MAAQY,KAAKb,MAAQqtB,EAAMrtB,KAU1D6I,EAAKykB,GAAKzkB,EAAK7K,UAAUuuB,OAQzB1jB,EAAK7K,UAAUuvB,UAAY,SAAmBF,GAC1C,OAAQxsB,KAAK0rB,OAAuBc,IAUxCxkB,EAAK2kB,IAAM3kB,EAAK7K,UAAUuvB,UAQ1B1kB,EAAK7K,UAAUyvB,SAAW,SAAkBJ,GACxC,OAAOxsB,KAAK6sB,QAAwBL,GAAS,GAUjDxkB,EAAK7K,UAAU2vB,GAAK9kB,EAAK7K,UAAUyvB,SAQnC5kB,EAAK7K,UAAU4vB,gBAAkB,SAAyBP,GACtD,OAAOxsB,KAAK6sB,QAAwBL,IAAU,GAUlDxkB,EAAK7K,UAAU6vB,IAAMhlB,EAAK7K,UAAU4vB,gBAQpC/kB,EAAK7K,UAAU8vB,YAAc,SAAqBT,GAC9C,OAAOxsB,KAAK6sB,QAAwBL,GAAS,GAUjDxkB,EAAK7K,UAAU+vB,GAAKllB,EAAK7K,UAAU8vB,YAQnCjlB,EAAK7K,UAAUgwB,mBAAqB,SAA4BX,GAC5D,OAAOxsB,KAAK6sB,QAAwBL,IAAU,GAUlDxkB,EAAK7K,UAAUiwB,IAAMplB,EAAK7K,UAAUgwB,mBASpCnlB,EAAK7K,UAAU0vB,QAAU,SAAiBL,GAGtC,GAFKxkB,EAAK4hB,OAAO4C,KACbA,EAAQxkB,EAAK8iB,UAAU0B,IACvBxsB,KAAK0rB,OAAOc,GACZ,OAAO,EACX,IAAIa,EAAUrtB,KAAKyrB,aACf6B,EAAWd,EAAMf,aACrB,OAAI4B,IAAYC,GACJ,GACPD,GAAWC,EACL,EAENttB,KAAK0pB,SAGF8C,EAAMptB,OAAS,EAAMY,KAAKZ,OAAS,GAAOotB,EAAMptB,OAASY,KAAKZ,MAASotB,EAAMrtB,MAAQ,EAAMa,KAAKb,MAAQ,GAAO,EAAI,EAFhHa,KAAK8rB,SAASU,GAAOf,cAAgB,EAAI,GAUxDzjB,EAAK7K,UAAUktB,OAAS,WACpB,OAAKrqB,KAAK0pB,UAAY1pB,KAAK0rB,OAAO1jB,EAAKiiB,WAC5BjiB,EAAKiiB,UACTjqB,KAAKutB,MAAM5sB,IAAIqH,EAAKkjB,MAS/BljB,EAAK7K,UAAUqwB,IAAMxlB,EAAK7K,UAAUktB,OAQpCriB,EAAK7K,UAAUwD,IAAM,SAAa8sB,GACzBzlB,EAAK4hB,OAAO6D,KACbA,EAASzlB,EAAK8iB,UAAU2C,IAI5B,IAAIC,EAAM1tB,KAAKZ,OAAS,GACpBuuB,EAAkB,MAAZ3tB,KAAKZ,KACXwuB,EAAM5tB,KAAKb,MAAQ,GACnB0uB,EAAiB,MAAX7tB,KAAKb,IAEX2uB,EAAML,EAAOruB,OAAS,GACtB2uB,EAAoB,MAAdN,EAAOruB,KACb4uB,EAAMP,EAAOtuB,MAAQ,GAGrB8uB,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbJ,EAAOtuB,QAIF,GACfivB,GAAO,MAEPF,IADAC,GAAOP,EAAMI,KACE,GACfG,GAAO,MAEPF,IADAC,GAAOP,EAAMI,KACE,GACfG,GAAO,MACPD,GAAOP,EAAMI,EACbG,GAAO,MACAjmB,EAAKuiB,SAAU4D,GAAO,GAAMC,EAAMH,GAAO,GAAMC,EAAKluB,KAAK0pB,WASpE1hB,EAAK7K,UAAU2uB,SAAW,SAAkBuC,GAGxC,OAFKrmB,EAAK4hB,OAAOyE,KACbA,EAAarmB,EAAK8iB,UAAUuD,IACzBruB,KAAKW,IAAI0tB,EAAWhE,WAU/BriB,EAAK7K,UAAUmxB,IAAMtmB,EAAK7K,UAAU2uB,SAQpC9jB,EAAK7K,UAAUsV,SAAW,SAAkB8b,GACxC,GAAIvuB,KAAKurB,SACL,OAAOvjB,EAAKsK,KAGhB,GAFKtK,EAAK4hB,OAAO2E,KACbA,EAAavmB,EAAK8iB,UAAUyD,IAC5BA,EAAWhD,SACX,OAAOvjB,EAAKsK,KAChB,GAAItS,KAAK0rB,OAAO1jB,EAAKiiB,WACjB,OAAOsE,EAAWjC,QAAUtkB,EAAKiiB,UAAYjiB,EAAKsK,KACtD,GAAIic,EAAW7C,OAAO1jB,EAAKiiB,WACvB,OAAOjqB,KAAKssB,QAAUtkB,EAAKiiB,UAAYjiB,EAAKsK,KAEhD,GAAItS,KAAKyrB,aACL,OAAI8C,EAAW9C,aACJzrB,KAAKqqB,SAAS5X,SAAS8b,EAAWlE,UAElCrqB,KAAKqqB,SAAS5X,SAAS8b,GAAYlE,SAC3C,GAAIkE,EAAW9C,aAClB,OAAOzrB,KAAKyS,SAAS8b,EAAWlE,UAAUA,SAG9C,GAAIrqB,KAAK4sB,SAAS5B,IAAeuD,EAAW3B,SAAS5B,GACjD,OAAOhjB,EAAKuK,WAAWvS,KAAKsrB,WAAaiD,EAAWjD,WAAYtrB,KAAK0pB,UAKzE,IAAIgE,EAAM1tB,KAAKZ,OAAS,GACpBuuB,EAAkB,MAAZ3tB,KAAKZ,KACXwuB,EAAM5tB,KAAKb,MAAQ,GACnB0uB,EAAiB,MAAX7tB,KAAKb,IAEX2uB,EAAMS,EAAWnvB,OAAS,GAC1B2uB,EAAwB,MAAlBQ,EAAWnvB,KACjB4uB,EAAMO,EAAWpvB,MAAQ,GACzBqvB,EAAuB,MAAjBD,EAAWpvB,IAEjB8uB,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMW,KACE,GACfJ,GAAO,MAEPF,IADAC,GAAOP,EAAMY,KACE,GACfL,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GACfG,GAAO,MAEPF,IADAC,GAAOP,EAAMa,KACE,GACfN,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GACfG,GAAO,MACPD,GAAOP,EAAMc,EAAMb,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EACjDG,GAAO,MACAjmB,EAAKuiB,SAAU4D,GAAO,GAAMC,EAAMH,GAAO,GAAMC,EAAKluB,KAAK0pB,WAUpE1hB,EAAK7K,UAAUsxB,IAAMzmB,EAAK7K,UAAUsV,SAQpCzK,EAAK7K,UAAU0uB,OAAS,SAAgB6C,GAGpC,GAFK1mB,EAAK4hB,OAAO8E,KACbA,EAAU1mB,EAAK8iB,UAAU4D,IACzBA,EAAQnD,SACR,MAAK,IAAKjmB,MAAM,oBACpB,GAAItF,KAAKurB,SACL,OAAOvrB,KAAK0pB,SAAW1hB,EAAKijB,MAAQjjB,EAAKsK,KAC7C,IAAIqc,EAAQnD,EAAKoD,EACjB,GAAI5uB,KAAK0rB,OAAO1jB,EAAKiiB,WACjB,OAAIyE,EAAQhD,OAAO1jB,EAAKkjB,MAAQwD,EAAQhD,OAAO1jB,EAAKojB,SACzCpjB,EAAKiiB,UACPyE,EAAQhD,OAAO1jB,EAAKiiB,WAClBjiB,EAAKkjB,KAIZyD,EADe3uB,KAAK6uB,WAAW,GACbhD,OAAO6C,GAASI,UAAU,IACjCpD,OAAO1jB,EAAKsK,MACZoc,EAAQjD,aAAezjB,EAAKkjB,IAAMljB,EAAKojB,SAE9CI,EAAMxrB,KAAK8rB,SAAS4C,EAAQjc,SAASkc,IACrCC,EAAMD,EAAOhuB,IAAI6qB,EAAIK,OAAO6C,KAIjC,GAAIA,EAAQhD,OAAO1jB,EAAKiiB,WAC3B,OAAOjqB,KAAK0pB,SAAW1hB,EAAKijB,MAAQjjB,EAAKsK,KAC7C,GAAItS,KAAKyrB,aACL,OAAIiD,EAAQjD,aACDzrB,KAAKqqB,SAASwB,OAAO6C,EAAQrE,UACjCrqB,KAAKqqB,SAASwB,OAAO6C,GAASrE,SAClC,GAAIqE,EAAQjD,aACf,OAAOzrB,KAAK6rB,OAAO6C,EAAQrE,UAAUA,SASzC,IAFAuE,EAAM5mB,EAAKsK,KACXkZ,EAAMxrB,KACCwrB,EAAI2B,mBAAmBuB,IAAU,CAGpCC,EAASjoB,KAAK8T,IAAI,EAAG9T,KAAKC,MAAM6kB,EAAIF,WAAaoD,EAAQpD,aAWzD,IAPA,IAAIyD,EAAOroB,KAAKsoB,KAAKtoB,KAAK1B,IAAI2pB,GAAUjoB,KAAKuoB,KACzCta,EAASoa,GAAQ,GAAM,EAAIroB,KAAK2e,IAAI,EAAG0J,EAAO,IAI9CG,EAAYlnB,EAAKuK,WAAWoc,GAC5BQ,EAAYD,EAAUzc,SAASic,GAC5BS,EAAU1D,cAAgB0D,EAAUlC,YAAYzB,IACnDmD,GAAUha,EAEVwa,GADAD,EAAYlnB,EAAKuK,WAAWoc,EAAQ3uB,KAAK0pB,WACnBjX,SAASic,GAK/BQ,EAAU3D,WACV2D,EAAYlnB,EAAKkjB,KAErB0D,EAAMA,EAAIjuB,IAAIuuB,GACd1D,EAAMA,EAAIM,SAASqD,GAEvB,OAAOP,GAUX5mB,EAAK7K,UAAUyuB,IAAM5jB,EAAK7K,UAAU0uB,OAQpC7jB,EAAK7K,UAAUiyB,OAAS,SAAgBV,GAGpC,OAFK1mB,EAAK4hB,OAAO8E,KACbA,EAAU1mB,EAAK8iB,UAAU4D,IACtB1uB,KAAK8rB,SAAS9rB,KAAK6rB,OAAO6C,GAASjc,SAASic,KAUvD1mB,EAAK7K,UAAUkyB,IAAMrnB,EAAK7K,UAAUiyB,OAOpCpnB,EAAK7K,UAAUowB,IAAM,WACjB,OAAOvlB,EAAKuiB,UAAUvqB,KAAKb,KAAMa,KAAKZ,KAAMY,KAAK0pB,WASrD1hB,EAAK7K,UAAUmyB,IAAM,SAAa9C,GAG9B,OAFKxkB,EAAK4hB,OAAO4C,KACbA,EAAQxkB,EAAK8iB,UAAU0B,IACpBxkB,EAAKuiB,SAASvqB,KAAKb,IAAMqtB,EAAMrtB,IAAKa,KAAKZ,KAAOotB,EAAMptB,KAAMY,KAAK0pB,WAS5E1hB,EAAK7K,UAAUoyB,GAAK,SAAY/C,GAG5B,OAFKxkB,EAAK4hB,OAAO4C,KACbA,EAAQxkB,EAAK8iB,UAAU0B,IACpBxkB,EAAKuiB,SAASvqB,KAAKb,IAAMqtB,EAAMrtB,IAAKa,KAAKZ,KAAOotB,EAAMptB,KAAMY,KAAK0pB,WAS5E1hB,EAAK7K,UAAUqyB,IAAM,SAAahD,GAG9B,OAFKxkB,EAAK4hB,OAAO4C,KACbA,EAAQxkB,EAAK8iB,UAAU0B,IACpBxkB,EAAKuiB,SAASvqB,KAAKb,IAAMqtB,EAAMrtB,IAAKa,KAAKZ,KAAOotB,EAAMptB,KAAMY,KAAK0pB,WAS5E1hB,EAAK7K,UAAU2xB,UAAY,SAAmBW,GAG1C,OAFIznB,EAAK4hB,OAAO6F,KACZA,EAAUA,EAAQpE,SACE,IAAnBoE,GAAW,IACLzvB,KACFyvB,EAAU,GACRznB,EAAKuiB,SAASvqB,KAAKb,KAAOswB,EAAUzvB,KAAKZ,MAAQqwB,EAAYzvB,KAAKb,MAAS,GAAKswB,EAAWzvB,KAAK0pB,UAEhG1hB,EAAKuiB,SAAS,EAAGvqB,KAAKb,KAAQswB,EAAU,GAAKzvB,KAAK0pB,WAUjE1hB,EAAK7K,UAAUuyB,IAAM1nB,EAAK7K,UAAU2xB,UAQpC9mB,EAAK7K,UAAU0xB,WAAa,SAAoBY,GAG5C,OAFIznB,EAAK4hB,OAAO6F,KACZA,EAAUA,EAAQpE,SACE,IAAnBoE,GAAW,IACLzvB,KACFyvB,EAAU,GACRznB,EAAKuiB,SAAUvqB,KAAKb,MAAQswB,EAAYzvB,KAAKZ,MAAS,GAAKqwB,EAAWzvB,KAAKZ,MAAQqwB,EAASzvB,KAAK0pB,UAEjG1hB,EAAKuiB,SAASvqB,KAAKZ,MAASqwB,EAAU,GAAKzvB,KAAKZ,MAAQ,EAAI,GAAK,EAAGY,KAAK0pB,WAUxF1hB,EAAK7K,UAAUwyB,IAAM3nB,EAAK7K,UAAU0xB,WAQpC7mB,EAAK7K,UAAUyyB,mBAAqB,SAA4BH,GAI5D,GAHIznB,EAAK4hB,OAAO6F,KACZA,EAAUA,EAAQpE,SAEN,IADhBoE,GAAW,IAEP,OAAOzvB,KAEP,IAAIZ,EAAOY,KAAKZ,KAChB,GAAIqwB,EAAU,GAAI,CACd,IAAItwB,EAAMa,KAAKb,IACf,OAAO6I,EAAKuiB,SAAUprB,IAAQswB,EAAYrwB,GAAS,GAAKqwB,EAAWrwB,IAASqwB,EAASzvB,KAAK0pB,UACvF,OAAgB,KAAZ+F,EACAznB,EAAKuiB,SAASnrB,EAAM,EAAGY,KAAK0pB,UAE5B1hB,EAAKuiB,SAASnrB,IAAUqwB,EAAU,GAAK,EAAGzvB,KAAK0pB,WAWlE1hB,EAAK7K,UAAU0yB,KAAO7nB,EAAK7K,UAAUyyB,mBAOrC5nB,EAAK7K,UAAU2yB,SAAW,WACtB,OAAK9vB,KAAK0pB,SAEH,IAAI1hB,EAAKhI,KAAKb,IAAKa,KAAKZ,MAAM,GAD1BY,MASfgI,EAAK7K,UAAU4yB,WAAa,WACxB,OAAI/vB,KAAK0pB,SACE1pB,KACJ,IAAIgI,EAAKhI,KAAKb,IAAKa,KAAKZ,MAAM,IAGlC4I,IA5hCe,gC,6BCvB1B,MAAMD,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAChBzhB,EAAS,EAAQ,GAUvB,MAAM8iB,EAKJ,eAQA,eACE,OAAO,IAAIA,EAQb,wBASA,kBAUA,oBASA,gBASA,gBASA,YAYA,cAUA,kBAUA,iBAUA,gBASA,cASA,kBAcA,eAQA,0BASA,gBAQA,sBAYA,kBASA,kBASA,kBASA,0BAUA,qBASA,iBAUA,mBASA,wBAUA,gBASA,SAAS1e,IAUT,YAAYmuB,IAQZ,gBAUA,kBAAkBC,IASlB,cAAczzB,KAUhB,MAAM0zB,UAAgC3P,EAOpC,YAAY4P,EAAcC,EAAQC,GAehC,GAdA1O,QACA3hB,KAAKswB,cAAgBH,EACrBnwB,KAAKuwB,aAAeF,EACpBrwB,KAAKwwB,YAAcxwB,KAAKswB,cAAcG,WACtCzwB,KAAK0wB,OAAS1wB,KAAKswB,cAAczuB,MACjC7B,KAAK2wB,UAAY3wB,KAAKswB,cAAcN,SACpChwB,KAAK4wB,gBAAkB5wB,KAAKswB,cAAcL,eAC1CjwB,KAAK6wB,WAAqD,iBAAjC7wB,KAAKswB,cAAcQ,UAC1C/oB,EAAMzJ,sBAAsB0B,KAAKswB,cAAcQ,UAAW,OAAS9wB,KAAKswB,cAAcQ,UAExF9wB,KAAK+wB,QAAUX,EACfpwB,KAAKgxB,qBAAuBZ,EAAO/qB,QAAQ8qB,aAC3CnwB,KAAKixB,SAAWb,EAAOc,eAAeC,WAAWnxB,KAAKswB,cAAcc,mBAE/DpxB,KAAKixB,SACR,MAAM,IAAIxzB,EAAO8D,oCAAoCvB,KAAKswB,cAAcc,+BAY5E,cAAcjB,EAAcC,EAAQC,GAKlC,OAJKF,GAAwC,mBAAjBA,IAE1BA,EAAepoB,EAAMrK,aAEhB,IAAIwyB,EAAwBC,EAAcC,EAAQC,GAG3D,uBACE,OAAOgB,EAAYrxB,KAAKswB,cAAc5d,kBAAmB1S,KAAKgxB,qBAAqBte,mBAGrF,iBACE,OAAO4e,EAAatxB,KAAKswB,cAAczO,YAAa7hB,KAAKixB,SAASpP,YAChE7hB,KAAKgxB,qBAAqBnP,aAG9B,mBACE,OAAOwP,EAAYrxB,KAAKswB,cAAcrhB,cAAejP,KAAKgxB,qBAAqB/hB,eAGjF,eACE,OAAOoiB,EAAYrxB,KAAKswB,cAAciB,UAAWvxB,KAAKgxB,qBAAqBO,WAG7E,eACE,OAAOvxB,KAAKswB,cAAcxd,KAG5B,WACE,OAAO9S,KAAK0wB,OAGd,aACE,OAAOW,EAAYrxB,KAAKswB,cAAckB,SAAUxxB,KAAKgxB,qBAAqBQ,UAG5E,iBACE,OAAOH,EAAYrxB,KAAKswB,cAAclnB,SAAS,GAGjD,gBACE,OAAOkoB,EAAatxB,KAAKswB,cAAcpP,OAAQlhB,KAAKgxB,qBAAqB9P,QAAQ,GAGnF,eACE,OAAOmQ,EAAYrxB,KAAKswB,cAAcmB,aAAczxB,KAAKgxB,qBAAqBS,cAOhF,aACE,OAAOJ,EAAYrxB,KAAKswB,cAAcviB,QAAS/N,KAAKgxB,qBAAqBjjB,SAG3E,iBACE,OAAOsjB,EAAYrxB,KAAKswB,cAAcoB,WAAY1xB,KAAKgxB,qBAAqBU,YAG9E,cACE,OAAO1xB,KAAK2wB,UAGd,yBACE,OAAO3wB,KAAKixB,SAASU,cAGvB,yBACE,IAAI7xB,EAASE,KAAK4xB,eAElB,QAAetuB,IAAXxD,EAAsB,CACxB,MAAM+xB,EAAY7xB,KAAK+wB,QAAQ1rB,QAAQysB,SAASC,oBAG9CjyB,EADGof,EAAMpX,gBAAgB6b,kBAAkB3jB,KAAK+wB,QAAQiB,kBAAkBlqB,kBAAoB+pB,EACrFA,EAAUpxB,KAAKT,KAAK+wB,SAEpB,KAIb,MAAyB,iBAAXjxB,EAAsBof,EAAMlX,KAAKuK,WAAWzS,GAAUA,EAGtE,eACE,OAAOE,KAAK6wB,WAGd,qBACE,OAAO7wB,KAAKswB,cAGd,iBACE,OAAOgB,EAAatxB,KAAKswB,cAActgB,YAAahQ,KAAKixB,SAASjhB,YAChEhQ,KAAK+wB,QAAQ1rB,QAAQ4sB,cAAcjiB,aAGvC,iBACE,OAAOshB,EAAatxB,KAAKswB,cAAc/I,MAAOvnB,KAAKixB,SAAS1J,MAAOvnB,KAAK+wB,QAAQ1rB,QAAQysB,SAASvK,OAGnG,oBACE,OAAOvnB,KAAK4wB,gBAGd,gBACE,OAAO5wB,KAAKwwB,YAGd,kBACE,OAAOxwB,KAAKswB,cAAc4B,aAO5B,iBACE,OAAOlyB,KAAKuwB,aAGd,uBACE,OAAOe,EACLtxB,KAAKswB,cAAc6B,kBAAmBnyB,KAAKixB,SAASkB,kBAAmBnyB,KAAKgxB,qBAAqBmB,mBAGrG,eACE,OAAOnyB,KAAKswB,cAAc7mB,UAM5B,SAAS5H,GACP7B,KAAK0wB,OAAS7uB,EAMhB,YAAYmuB,GACVhwB,KAAK2wB,UAAYX,EAMnB,aAAac,GACX9wB,KAAK6wB,WAAaC,EAMpB,kBAAkBb,GAChBjwB,KAAK4wB,gBAAkBX,EAGzB,cAAczzB,GACZwD,KAAKwwB,YAAch0B,GAIvB,SAAS60B,EAAYe,EAAIC,GACvB,YAAc/uB,IAAP8uB,EAAmBA,EAAKC,EAGjC,SAASf,EAAac,EAAIC,EAAIC,GAC5B,YAAWhvB,IAAP8uB,EACKA,OAEK9uB,IAAP+uB,EAAmBA,EAAKC,EAGjCh3B,EAAOD,QAAU,CAAEklB,mBAAkB2P,4B,6BCphBrC,MAAM1yB,EAAO,EAAQ,GAGf+0B,EAAe,6BACfC,EAAc,2BAEpBn3B,EAAQ2Y,mBAAqB,SAASlY,GACrC,OAAOy2B,EAAaE,KAAK32B,IAG1BT,EAAQ6Y,kBAAoB,SAASwe,GACpC,IAAIC,GAAQ,EAMZ,OALCD,GAAS,IAAI9vB,QAAQ9G,IAChB02B,EAAYC,KAAK32B,KACrB62B,GAAQ,KAGHA,GAGRt3B,EAAQ4Y,cAAgB,SAAuB2e,EAAaxe,GAC3DnY,OAAO6E,KAAKsT,GAAQxR,QAAQma,IAC3B,IAAoC,IAAhC6V,EAAY5uB,QAAQ+Y,GACvB,MAAM,IAAIzX,sBACOyX,2CAA+Cvf,EAAKoB,QACnEg0B,U;;;;;GCLL,IAAIC,EAAe,mKACfC,EAAc,wCACdC,EAAe,gCAQfC,EAAc,6BAKdC,EAAe,WASfC,EAAc,6DAyJlB,SAASC,EAAS9sB,GAChB,IAAIgQ,EAAMG,OAAOnQ,GAGjB,GAAI0sB,EAAaN,KAAKpc,GACpB,OAAOA,EAGT,GAAIA,EAAIhX,OAAS,IAAMyzB,EAAYL,KAAKpc,GACtC,MAAM,IAAI1X,UAAU,2BAGtB,MAAO,IAAM0X,EAAI2E,QAAQiY,EAAc,QAAU,IAOnD,SAASG,EAAanuB,GACpBjF,KAAK0f,WAAazjB,OAAOY,OAAO,MAChCmD,KAAKiF,KAAOA,EAvKd5J,EAAQmG,OAWR,SAAiBL,GACf,IAAKA,GAAsB,iBAARA,EACjB,MAAM,IAAIxC,UAAU,4BAGtB,IAAI+gB,EAAave,EAAIue,WACjBza,EAAO9D,EAAI8D,KAEf,IAAKA,IAASiuB,EAAYT,KAAKxtB,GAC7B,MAAM,IAAItG,UAAU,gBAGtB,IAAI00B,EAASpuB,EAGb,GAAIya,GAAoC,iBAAfA,EAIvB,IAHA,IAAIgE,EACA1iB,EAAS/E,OAAO6E,KAAK4e,GAAYlD,OAE5BjhB,EAAI,EAAGA,EAAIyF,EAAO3B,OAAQ9D,IAAK,CAGtC,GAFAmoB,EAAQ1iB,EAAOzF,IAEVw3B,EAAaN,KAAK/O,GACrB,MAAM,IAAI/kB,UAAU,0BAGtB00B,GAAU,KAAO3P,EAAQ,IAAMyP,EAAQzT,EAAWgE,IAItD,OAAO2P,GAxCTh4B,EAAQ4iB,MAmDR,SAAgBoV,GACd,IAAKA,EACH,MAAM,IAAI10B,UAAU,+BAItB,IAAI20B,EAA2B,iBAAXD,EA8DtB,SAAyBlyB,GACvB,IAAImyB,EAEyB,mBAAlBnyB,EAAIoyB,UAEbD,EAASnyB,EAAIoyB,UAAU,gBACS,iBAAhBpyB,EAAIgnB,UAEpBmL,EAASnyB,EAAIgnB,SAAWhnB,EAAIgnB,QAAQ,iBAGtC,GAAsB,iBAAXmL,EACT,MAAM,IAAI30B,UAAU,8CAGtB,OAAO20B,EA5EHE,CAAeH,GACfA,EAEJ,GAAsB,iBAAXC,EACT,MAAM,IAAI30B,UAAU,8CAGtB,IAAIuD,EAAQoxB,EAAOtvB,QAAQ,KACvBiB,GAAkB,IAAX/C,EACPoxB,EAAOvvB,OAAO,EAAG7B,GAAO8I,OACxBsoB,EAAOtoB,OAEX,IAAKkoB,EAAYT,KAAKxtB,GACpB,MAAM,IAAItG,UAAU,sBAGtB,IAAIwC,EAAM,IAAIiyB,EAAYnuB,EAAK5D,eAG/B,IAAe,IAAXa,EAAc,CAChB,IAAIpF,EACA4rB,EACAlsB,EAIJ,IAFAq2B,EAAaY,UAAYvxB,EAEjBwmB,EAAQmK,EAAapoB,KAAK6oB,IAAU,CAC1C,GAAI5K,EAAMxmB,QAAUA,EAClB,MAAM,IAAIvD,UAAU,4BAGtBuD,GAASwmB,EAAM,GAAGrpB,OAClBvC,EAAM4rB,EAAM,GAAGrnB,cAGE,OAFjB7E,EAAQksB,EAAM,IAEJ,KAERlsB,EAAQA,EACLuH,OAAO,EAAGvH,EAAM6C,OAAS,GACzB2b,QAAQgY,EAAa,OAG1B7xB,EAAIue,WAAW5iB,GAAON,EAGxB,GAAI0F,IAAUoxB,EAAOj0B,OACnB,MAAM,IAAIV,UAAU,4BAIxB,OAAOwC,I;;;;;;GCpJT,IAAIgW,EAAY,EAAQ,EAAR,CAAgB,eAC5BiP,EAAiB,EAAQ,IACzBM,EAAW,EAAQ,IACnBvZ,EAAW,EAAQ,KACnBumB,EAAe,EAAQ,IAkB3B,SAASC,EAAWnN,GAClB,OAAOtR,OAAOsB,OAAOgQ,GAAQoN,OAAO,GAAK,MA8L3C,SAASC,EAAUC,EAAMh4B,GACvB,IAAIi4B,EAAO93B,OAAO0a,yBAAyBmd,EAAM,QAE7CC,GAAQA,EAAKnZ,eACfmZ,EAAKv3B,MAAQV,EACbG,OAAOC,eAAe43B,EAAM,OAAQC,IA/MxCz4B,EAAOD,QAsBP,SAAS24B,IAEP,IAAIn0B,EACJ,IAAI6Y,EACJ,IAAI8N,EAAS,IACb,IAAIyN,EAAQ,GACZ,IAAK,IAAI14B,EAAI,EAAGA,EAAIoH,UAAUtD,OAAQ9D,IAAK,CACzC,IAAI24B,EAAMvxB,UAAUpH,GACpB,GAAI24B,aAAe5uB,MAEjBkhB,GADA3mB,EAAMq0B,GACO1N,QAAU3mB,EAAIs0B,YAAc3N,OAG3C,cAAe0N,GACb,IAAK,SACHxb,EAAMwb,EACN,MACF,IAAK,SACH1N,EAAS0N,EACC,IAAN34B,GACF4b,EAAU,4DAA8D+c,EAAM,UAEhF,MACF,IAAK,SACHD,EAAQC,GAKQ,iBAAX1N,IAAwBA,EAAS,KAAOA,GAAU,MAC3DrP,EAAU,4DAGU,iBAAXqP,IACPE,EAASF,KAAYA,EAAS,KAAOA,GAAU,QACjDA,EAAS,KAIX,IAAI4N,EAAYJ,EAAYxN,IAAWwN,EAAYL,EAAUnN,IAExD3mB,IAEHA,EAAMu0B,EACF,IAAIA,EAAU1b,GACd,IAAIpT,MAAMoT,GAAOgO,EAASF,IAC9BlhB,MAAMoN,kBAAkB7S,EAAKm0B,IAG1BI,GAAev0B,aAAeu0B,GAAcv0B,EAAI2mB,SAAWA,IAE9D3mB,EAAIw0B,OAAS7N,EAAS,IACtB3mB,EAAI2mB,OAAS3mB,EAAIs0B,WAAa3N,GAGhC,IAAK,IAAI1pB,KAAOm3B,EACF,WAARn3B,GAA4B,eAARA,IACtB+C,EAAI/C,GAAOm3B,EAAMn3B,IAIrB,OAAO+C,GAlFTvE,EAAOD,QAAQ+4B,UA0Ff,WACE,SAASA,IACP,MAAM,IAAIz1B,UAAU,mCAKtB,OAFAwO,EAASinB,EAAW9uB,OAEb8uB,EAjGkBE,GAuN3B,SAAqCj5B,EAASkrB,EAAO6N,GACnD7N,EAAM3jB,QAAQ,SAAsB8H,GAClC,IAAI6pB,EACAz4B,EAAO43B,EAAahN,EAAShc,IAEjC,OAAQipB,EAAUjpB,IAChB,KAAK,IACH6pB,EArHR,SAAuCH,EAAWt4B,EAAM4O,GACtD,IAAI8pB,EAAY14B,EAAK4sB,MAAM,UAAY5sB,EAAOA,EAAO,QAErD,SAAS24B,EAAa3oB,GAEpB,IAAI4M,EAAiB,MAAX5M,EAAkBA,EAAU4a,EAAShc,GAC3C7K,EAAM,IAAIyF,MAAMoT,GAwBpB,OArBApT,MAAMoN,kBAAkB7S,EAAK40B,GAG7BrO,EAAevmB,EAAK40B,EAAYt3B,WAGhClB,OAAOC,eAAe2D,EAAK,UAAW,CACpC1D,YAAY,EACZye,cAAc,EACdpe,MAAOkc,EACP9B,UAAU,IAIZ3a,OAAOC,eAAe2D,EAAK,OAAQ,CACjC1D,YAAY,EACZye,cAAc,EACdpe,MAAOg4B,EACP5d,UAAU,IAGL/W,EAUT,OAPAsN,EAASsnB,EAAaL,GACtBP,EAASY,EAAaD,GAEtBC,EAAYt3B,UAAUqpB,OAAS9b,EAC/B+pB,EAAYt3B,UAAUg3B,WAAazpB,EACnC+pB,EAAYt3B,UAAUk3B,QAAS,EAExBI,EA6EWC,CAA6BN,EAAWt4B,EAAM4O,GAC1D,MACF,KAAK,IACH6pB,EAxER,SAAuCH,EAAWt4B,EAAM4O,GACtD,IAAI8pB,EAAY14B,EAAK4sB,MAAM,UAAY5sB,EAAOA,EAAO,QAErD,SAAS64B,EAAa7oB,GAEpB,IAAI4M,EAAiB,MAAX5M,EAAkBA,EAAU4a,EAAShc,GAC3C7K,EAAM,IAAIyF,MAAMoT,GAwBpB,OArBApT,MAAMoN,kBAAkB7S,EAAK80B,GAG7BvO,EAAevmB,EAAK80B,EAAYx3B,WAGhClB,OAAOC,eAAe2D,EAAK,UAAW,CACpC1D,YAAY,EACZye,cAAc,EACdpe,MAAOkc,EACP9B,UAAU,IAIZ3a,OAAOC,eAAe2D,EAAK,OAAQ,CACjC1D,YAAY,EACZye,cAAc,EACdpe,MAAOg4B,EACP5d,UAAU,IAGL/W,EAUT,OAPAsN,EAASwnB,EAAaP,GACtBP,EAASc,EAAaH,GAEtBG,EAAYx3B,UAAUqpB,OAAS9b,EAC/BiqB,EAAYx3B,UAAUg3B,WAAazpB,EACnCiqB,EAAYx3B,UAAUk3B,QAAS,EAExBM,EAgCWC,CAA6BR,EAAWt4B,EAAM4O,GAI1D6pB,IAEFl5B,EAAQqP,GAAQ6pB,EAChBl5B,EAAQS,GAAQy4B,KAKpBl5B,EAAQ,cAAgB8b,EAAUQ,SAAStc,EAAQw5B,UACjD,0CA3OJC,CAA2Bx5B,EAAOD,QAASqrB,EAASH,MAAOjrB,EAAOD,QAAQ+4B,Y,cC7B1E94B,EAAOD,QAAUkC,QAAQ,Q;;;;;GCazB,IAAIy2B,EAAc,EAAQ,IACtBe,EAAU,EAAQ,KAClBC,EAAQ,EAAQ,IAChBC,EAAa,EAAQ,IACrBC,EAAO,EAAQ,KAMnB55B,EAAOD,QAcP,SAAe6sB,EAAK0G,EAAKnuB,EAAMwd,EAAOkX,EAAO9vB,GAC3C,IAAIhG,EAEA+1B,EADA3Z,EAAOpW,EAIX6iB,EAAImN,OAAQ,EAGZ,IAAI32B,EAA6B,OAAlB+c,EAAK/c,SAChB+c,EAAK/c,SACL,KACA42B,EAAS7Z,EAAK6Z,OAElB,IAEEF,EA0FJ,SAAwBlN,EAAKiN,EAAOI,GAClC,IAEIH,EAFA12B,GAAYwpB,EAAIC,QAAQ,qBAAuB,YAAY9mB,cAC3DhC,EAAS6oB,EAAIC,QAAQ,kBAKzB,GAFAgN,EAAM,wBAAyBz2B,IAEf,IAAZ62B,GAAkC,aAAb72B,EACvB,MAAMs1B,EAAY,IAAK,+BAAgC,CACrDt1B,SAAUA,EACVuG,KAAM,yBAIV,OAAQvG,GACN,IAAK,UACH02B,EAASF,EAAKM,gBACdL,EAAM,gBACNjN,EAAIuN,KAAKL,GACT,MACF,IAAK,OACHA,EAASF,EAAKQ,eACdP,EAAM,eACNjN,EAAIuN,KAAKL,GACT,MACF,IAAK,YACHA,EAASlN,GACF7oB,OAASA,EAChB,MACF,QACE,MAAM20B,EAAY,IAAK,iCAAmCt1B,EAAW,IAAK,CACxEA,SAAUA,EACVuG,KAAM,yBAIZ,OAAOmwB,EA9HIO,CAAczN,EAAKiN,EAAO1Z,EAAK8Z,SACxCl2B,EAAS+1B,EAAO/1B,OAChB+1B,EAAO/1B,YAASiE,EAChB,MAAOzD,GACP,OAAOY,EAAKZ,GAUd,GANA4b,EAAKpc,OAASA,EACdoc,EAAK/c,SAAW42B,EACZ,KACA52B,EAGkB,OAAlB+c,EAAK/c,UAAkC,OAAbA,IAAsBs2B,EAAMY,eAAel3B,GACvE,OAAO+B,EAAKuzB,EAAY,IAAK,wBAA0Bt1B,EAASm3B,cAAgB,IAAK,CACnFrW,QAAS9gB,EAAS2C,cAClB4D,KAAM,yBAKVkwB,EAAM,aACNJ,EAAQK,EAAQ3Z,EAAM,SAAU5X,EAAOia,GAEnC,IAAIgY,EADN,GAAIjyB,EAmBF,OAdEiyB,EAFiB,yBAAfjyB,EAAMoB,KAEC+uB,EAAY,IAAK,wBAA0Bt1B,EAASm3B,cAAgB,IAAK,CAChFrW,QAAS9gB,EAAS2C,cAClB4D,KAAM,wBAIC+uB,EAAY,IAAKnwB,GAI5BuxB,EAAOW,cACPd,EAAW/M,EAAK,WACdznB,EAAKuzB,EAAY,IAAK8B,MAM1B,GAAIR,EACF,IACEH,EAAM,eACNG,EAAOpN,EAAK0G,EAAK9Q,EAAMpf,GACvB,MAAOmB,GAKP,YAJAY,EAAKuzB,EAAY,IAAKn0B,EAAK,CACzBie,KAAMA,EACN7Y,KAAMpF,EAAIoF,MAAQ,0BAOxB,IAAIoR,EAAMyH,EACV,IACEqX,EAAM,cACN9e,EAAsB,iBAATyH,GAAkC,OAAbpf,EAC9Bs2B,EAAMgB,OAAOlY,EAAMpf,GACnBof,EACJoK,EAAIpK,KAAOG,EAAM5H,GACjB,MAAOxW,GAKP,YAJAY,EAAKuzB,EAAY,IAAKn0B,EAAK,CACzBie,KAAMzH,EACNpR,KAAMpF,EAAIoF,MAAQ,yBAKtBxE,Q;;;;;;GCnHJnF,EAAOD,QA8BP,SAAoBqd,EAAKud,GACvB,IAAwB,IAApBC,EAAWxd,GAEb,OADAyd,EAAMF,EAAU,KAAMvd,GACfA,EAMT,OAsFF,SAAwBA,EAAKud,GAC3B,IAAIG,EAAW1d,EAAI2d,aAGdD,GAAaA,EAASE,QACzBF,EAAW1d,EAAI2d,aAenB,SAAwB3d,GACtB,SAASud,EAASp2B,GAEhB,GADI6Y,EAAI2d,eAAiBJ,IAAUvd,EAAI2d,aAAe,MACjDJ,EAASK,MAAd,CAEA,IAAIA,EAAQL,EAASK,MACrBL,EAASK,MAAQ,KAEjB,IAAK,IAAI/6B,EAAI,EAAGA,EAAI+6B,EAAMj3B,OAAQ9D,IAChC+6B,EAAM/6B,GAAGsE,EAAK6Y,IAMlB,OAFAud,EAASK,MAAQ,GAEVL,EA9ByBM,CAAe7d,GAvDjD,SAAgCA,EAAKrY,GACnC,IAAIm2B,EACAC,EACAC,GAAW,EAEf,SAASC,EAAS9yB,GAChB2yB,EAAMI,SACNH,EAASG,SAETF,GAAW,EACXr2B,EAASwD,GAMX,SAASgzB,EAASC,GAEhBpe,EAAIqe,eAAe,SAAUF,GAEzBH,GACAF,IAAUC,IAGdA,EAAWO,EAAM,CAAC,CAACF,EAAQ,QAAS,UAAWH,IAGjD,GAbAH,EAAQC,EAAWO,EAAM,CAAC,CAACte,EAAK,MAAO,WAAYie,GAa/Cje,EAAIoe,OAGN,YADAD,EAASne,EAAIoe,QAKfpe,EAAIue,GAAG,SAAUJ,QAEEvzB,IAAfoV,EAAIoe,QA4DV,SAA2BlI,EAAKvuB,GAC9B,IAAI62B,EAAetI,EAAIsI,aAEvB,GAA4B,mBAAjBA,EAA6B,OAGxCtI,EAAIsI,aAAe,SAAuBJ,GACxCI,EAAax7B,KAAKsE,KAAM82B,GACxBz2B,EAASy2B,IAlETK,CAAkBze,EAAKme,GAkBvBO,CAAuB1e,EAAK0d,IAG9BA,EAASE,MAAM5xB,KAAKuxB,GAjGpBoB,CAAe3e,EAAKud,GAEbvd,GAtCTpd,EAAOD,QAAQ66B,WAAaA,EAO5B,IAAIc,EAAQ,EAAQ,KAQhBb,EAAgC,mBAAjBmB,aACfA,aACA,SAASn3B,GAAKoD,QAAQC,SAASrD,EAAGpD,KAAKuH,MAAMnE,EAAIwC,aAgCrD,SAASuzB,EAAWxd,GAClB,IAAIoe,EAASpe,EAAIoe,OAEjB,MAA4B,kBAAjBpe,EAAIge,SAEN5Q,QAAQpN,EAAIge,UAAaI,IAAWA,EAAOlgB,UAGxB,kBAAjB8B,EAAI6e,SAENzR,QAAQpN,EAAI8e,UAAYV,IAAWA,EAAOW,UAAa/e,EAAI6e,WAAa7e,EAAI+e,eAFrF,I;;;;;GC3DFn8B,EAAOD,QA0CP,SAAoBstB,GAClB,OAAOnS,OAAOmS,GACX3N,QAAQ0c,EAAiCC,GACzC3c,QAAQ4c,EAAqBC,YArClC,IAAID,EAAsB,2GAOtBF,EAAkC,2EAOlCC,EAAmC,S;;;;;;;GCpBvC,IAAIG,EAAkB,UAOtBx8B,EAAOD,QAUP,SAAoBg4B,GAClB,IAOI0E,EAPA1hB,EAAM,GAAKgd,EACX3K,EAAQoP,EAAgBrtB,KAAK4L,GAEjC,IAAKqS,EACH,OAAOrS,EAIT,IAAI2hB,EAAO,GACP91B,EAAQ,EACRuxB,EAAY,EAEhB,IAAKvxB,EAAQwmB,EAAMxmB,MAAOA,EAAQmU,EAAIhX,OAAQ6C,IAAS,CACrD,OAAQmU,EAAI6S,WAAWhnB,IACrB,KAAK,GACH61B,EAAS,SACT,MACF,KAAK,GACHA,EAAS,QACT,MACF,KAAK,GACHA,EAAS,QACT,MACF,KAAK,GACHA,EAAS,OACT,MACF,KAAK,GACHA,EAAS,OACT,MACF,QACE,SAGAtE,IAAcvxB,IAChB81B,GAAQ3hB,EAAIwF,UAAU4X,EAAWvxB,IAGnCuxB,EAAYvxB,EAAQ,EACpB81B,GAAQD,EAGV,OAAOtE,IAAcvxB,EACjB81B,EAAO3hB,EAAIwF,UAAU4X,EAAWvxB,GAChC81B,I,6BCvEN18B,EAAOD,QAoDP,SAAuB48B,EAAOC,GAC5B,GAAa,MAATA,EACF,OAvBJ,SAASC,EAAgBF,EAAOn4B,GAC9B,IAAK,IAAIvE,EAAI,EAAGA,EAAI08B,EAAM54B,OAAQ9D,IAAK,CACrC,IAAIiB,EAAQy7B,EAAM18B,GAEdwD,MAAMC,QAAQxC,GAChB27B,EAAe37B,EAAOsD,GAEtBA,EAAO4E,KAAKlI,GAIhB,OAAOsD,EAYEq4B,CAAeF,EAAO,IAG/B,OA/CF,SAASG,EAAkBH,EAAOn4B,EAAQo4B,GACxC,IAAK,IAAI38B,EAAI,EAAGA,EAAI08B,EAAM54B,OAAQ9D,IAAK,CACrC,IAAIiB,EAAQy7B,EAAM18B,GAEd28B,EAAQ,GAAKn5B,MAAMC,QAAQxC,GAC7B47B,EAAiB57B,EAAOsD,EAAQo4B,EAAQ,GAExCp4B,EAAO4E,KAAKlI,GAIhB,OAAOsD,EAoCAs4B,CAAiBH,EAAO,GAAIC,K,cC/C3B58B,EAAOD,QAAU,SAAS+I,EAAGnG,GACrC,GAAImG,GAAKnG,EACP,IAAK,IAAInB,KAAOmB,EACdmG,EAAEtH,GAAOmB,EAAEnB,GAGf,OAAOsH,I,+kCCnBT,MAAM8a,EAAQ,EAAQ,GAChB1hB,EAAO,EAAQ,GAEf66B,EAAoBnZ,EAAMpW,UAAUyB,UAAU,UAC9C+tB,EAAmBpZ,EAAMpW,UAAUyB,UAAU,UAC7CguB,EAAoBrZ,EAAMpW,UAAUyB,UAAU,QAKpD,MAAMiuB,EACJ,YAAYh8B,GACVwD,KAAKy4B,OAASj8B,EAOhB,UACE,MAAM,IAAI8I,MAAM,iEAMlB,WACE,OAAOtF,KAAKy4B,OAGd,WACE,OAAOz4B,KAAKy4B,OAAOxrB,WAUrB,QAAQuf,GACN,OAAOxsB,KAAKy4B,OAAO5L,QAAQL,EAAMiM,QAGnC,OAAOjM,GACL,OAA+B,IAAxBxsB,KAAK6sB,QAAQL,GAGtB,UACE,OAAOxsB,KAAKkD,YAAYpH,KAAO,MAAQkE,KAAKiN,WAAa,MAmE7D,MAAMyrB,EACJ,YAAYlkB,EAAOmkB,EAAKC,GACtB54B,KAAKwU,MAAQA,EACbxU,KAAK24B,IAAMA,EACX18B,OAAOC,eAAe8D,KAAM,aAAc,CAAExD,MAAOo8B,EAAWz8B,YAAY,IAc5E,YAAY08B,GACV,GAAIA,EAAiB,EACnB,MAAM,IAAIvzB,MAAM9H,EAAKgE,OAAO,8CAA+Cq3B,IAE7E,GAAI74B,KAAK84B,UACP,MAAM,IAAIxzB,MAAM,2BAA6BtF,KAAKiN,YAGpD,MAAM8rB,EAAc,GACdC,EAAch5B,KAAKi5B,WAAWnuB,MAAM9K,KAAKwU,MAAOxU,KAAK24B,IAAKE,GAChE,IACIK,EADAC,EAAan5B,KAAKwU,MAEtB,IAAK,IAAI4kB,EAAa,EAAGA,EAAaJ,EAAY35B,OAAQ+5B,IACxDF,EAAWF,EAAYI,GACvBL,EAAYr0B,KAAK,IAAIg0B,EAAWS,EAAYD,EAAUl5B,KAAKi5B,aAC3DE,EAAaD,EAGf,OADAH,EAAYr0B,KAAK,IAAIg0B,EAAWS,EAAYn5B,KAAK24B,IAAK34B,KAAKi5B,aACpDF,EAWT,UACE,OAAO/4B,KAAKwU,MAAMkX,OAAO1rB,KAAK24B,OAAS34B,KAAKwU,MAAMkX,OAAO1rB,KAAKi5B,WAAWI,YAU3E,kBACE,OAAOr5B,KAAKwU,MAAMqY,QAAQ7sB,KAAK24B,KAAO,IAAM34B,KAAK24B,IAAIjN,OAAO1rB,KAAKi5B,WAAWI,YAc9E,SACE,OAAIr5B,KAAKs5B,kBACA,CACL,IAAIZ,EAAW14B,KAAKwU,MAAOxU,KAAKi5B,WAAWI,WAAYr5B,KAAKi5B,YAC5D,IAAIP,EAAW14B,KAAKi5B,WAAWI,WAAYr5B,KAAK24B,IAAK34B,KAAKi5B,aAGvD,CAACj5B,MASV,SAAS6jB,GACP,GAAI7jB,KAAK84B,UACP,OAAO,EAET,MAAMO,EAAWr5B,KAAKi5B,WAAWI,WACjC,GAAIr5B,KAAK24B,IAAIjN,OAAO2N,GAClB,QAAIr5B,KAAKwU,MAAMkX,OAAO2N,OAEXxV,EAAM6H,OAAO2N,IAGjBxV,EAAMgJ,QAAQ7sB,KAAKwU,OAAS,GAGrC,MAAM+kB,EAAe1V,EAAMgJ,QAAQ7sB,KAAKwU,OAAS,EAC3CglB,EAAc3V,EAAMgJ,QAAQ7sB,KAAK24B,MAAQ,EAG/C,OAAO34B,KAAKs5B,kBACRC,GAAgBC,EAChBD,GAAgBC,EAStB,OAAOhN,GACL,OAAIA,IAAUxsB,MAEHwsB,aAAiBkM,GACK,IAAxB14B,KAAK6sB,QAAQL,GAYxB,QAAQA,GACN,MAAMiN,EAAez5B,KAAKwU,MAAMqY,QAAQL,EAAMhY,OAC9C,OAAwB,IAAjBilB,EAAqBA,EAAez5B,KAAK24B,IAAI9L,QAAQL,EAAMmM,KAGpE,WACE,OAAOn7B,EAAKgE,OAAO,WACjBxB,KAAKwU,MAAMvH,WACXjN,KAAK24B,IAAI1rB,aAKf5R,EAAQm9B,MAAQA,EAChBn9B,EAAQq9B,WAAaA,EACrBr9B,EAAQq+B,iBA9KR,cAA+BlB,EAC7B,YAAYh8B,GACVmlB,MAAMnlB,GAGR,UACE,OAAO+7B,EAGT,WACE,OAAOv4B,KAAKy4B,OAAOxrB,SAAS,OAAO4oB,gBAqKvCx6B,EAAQs+B,aA/MR,cAA2BnB,EACzB,YAAYh8B,GACVmlB,MAAMnlB,GAGR,UACE,OAAO67B,IA0MXh9B,EAAQu+B,YAhMR,cAA0BpB,EACxB,YAAYh8B,GACVmlB,MAAMnlB,GAGR,UACE,OAAO87B,K,6BCpDXh9B,EAAOD,QAAU,CAChBw+B,sBA/BD,SAA+B1vB,GAC9B,MAAM2K,EAAO,GAEb,IAAK,IAAIvZ,EAAI,EAAGA,EAAI4O,EAAK9K,OAAQ9D,IAAK,CACrC,MAAMu+B,EAAc3vB,EAAK5O,GAEpBu+B,QAAkD,IAA5BA,EAAY52B,cAInC4R,EAAK1X,eAAe08B,EAAY52B,YAAYpH,MAC/CgZ,EAAKglB,EAAY52B,YAAYpH,OAAS,EAEtCgZ,EAAKglB,EAAY52B,YAAYpH,MAAQ,GAGvC,OAAOgZ,GAgBPilB,cAbD,SAAuBC,EAAOllB,EAAMmlB,GACnCD,EAAMvkB,QACN,IAAK,MAAM3Y,KAAOgY,EACbmlB,EACHD,EAAM5vB,IAAI,CAAEnF,KAAMnI,GAAOgY,EAAKhY,GAAMqU,KAAKkD,OAEzC2lB,EAAM5vB,IAAI,CAAEnF,KAAMnI,GAAOgY,EAAKhY,O,2noBCzBjC,IAAIo9B,EAAY,EAAQ,KACpBjc,EAAQ,EAAQ,KAChBkc,EAAU,EAAQ,IAEtB7+B,EAAOD,QAAU,CACb8+B,QAASA,EACTlc,MAAOA,EACPic,UAAWA,I,cCTf5+B,EAAOD,QAAUkC,QAAQ,Q;;;;;;GCczB,IAAI68B,EAAO,EAAQ,IAOnB9+B,EAAOD,QAQE++B,EAAKC,SAAWD,EAAKC,QAAQ90B,IAAI,SAAyB+0B,GAC/D,OAAOA,EAAOj5B,iBAUT,CACL,MACA,OACA,MACA,OACA,SACA,UACA,QACA,OACA,OACA,QACA,OACA,QACA,WACA,YACA,SACA,SACA,aACA,WACA,QACA,WACA,SACA,YACA,cACA,QACA,SACA,Y;;;;;;GCpDJ,IAAI2yB,EAAc,EAAQ,KACtBmB,EAAQ,EAAQ,EAAR,CAAiB,QACzBhe,EAAY,EAAQ,EAAR,CAAgB,QAC5BojB,EAAU,EAAQ,KAClBC,EAAY,EAAQ,IACpBC,EAAa,EAAQ,IACrBhd,EAAO,EAAQ,IACfsL,EAAQ,EAAQ,IAChB2R,EAAK,EAAQ,IACbld,EAAO,EAAQ,KACfmd,EAAK,EAAQ,KACb1F,EAAa,EAAQ,IACrB2F,EAAa,EAAQ,IACrBrc,EAAO,EAAQ,GACfmI,EAAW,EAAQ,IACnBmU,EAAS,EAAQ,IACjBr9B,EAAO,EAAQ,GAOfs9B,EAAUvc,EAAKuc,QACfv0B,EAAOgY,EAAKhY,KACZyhB,EAAYzJ,EAAKyJ,UACjBroB,EAAU4e,EAAK5e,QACfo7B,EAAMxc,EAAKwc,IAOXC,EAAqB,YAOrBC,EAAa,QAObC,EAAiB,+BAiCrB,SAASC,EAAYjT,EAAK3J,EAAMlZ,GAC9Bw1B,EAAOn/B,KAAKsE,MAEZ,IAAIyb,EAAOpW,GAAW,GAsBtB,GApBArF,KAAKqF,QAAUoW,EACfzb,KAAKue,KAAOA,EACZve,KAAKkoB,IAAMA,EAEXloB,KAAKo7B,mBAAsC93B,IAAtBmY,EAAK4f,cACtBvV,QAAQrK,EAAK4f,cAGjBr7B,KAAKs7B,mBAAsCh4B,IAAtBmY,EAAK8f,cACtBzV,QAAQrK,EAAK8f,cAGjBv7B,KAAKw7B,WAAsBl4B,IAAdmY,EAAKgC,MACdqI,QAAQrK,EAAKgC,MAGjBzd,KAAKy7B,eAA8Bn4B,IAAlBmY,EAAKigB,SAClBjgB,EAAKigB,SACL,SAEmB,WAAnB17B,KAAKy7B,WAA6C,UAAnBz7B,KAAKy7B,WAA4C,SAAnBz7B,KAAKy7B,UACpE,MAAM,IAAI98B,UAAU,wDAGtBqB,KAAK27B,QAAU7V,QAAQrK,EAAKmgB,aAERt4B,IAAhBmY,EAAKmgB,QACPzkB,EAAU,2BAA8BnX,KAAK27B,QAAU,QAAU,UAAY,kBAIzDr4B,IAAlBmY,EAAKigB,WACP17B,KAAKy7B,eAAYn4B,GAGnBtD,KAAK67B,iBAAkCv4B,IAApBmY,EAAKqgB,WACpBC,EAActgB,EAAKqgB,WAAY,qBAC/B,GAEJ97B,KAAKg8B,gBAAgC14B,IAAnBmY,EAAKwgB,WACnBnW,QAAQrK,EAAKwgB,WAGjBj8B,KAAKk8B,YAAwB54B,IAAfmY,EAAKvZ,MACf65B,EAActgB,EAAKvZ,MAAO,gBAC1B,CAAC,cAELlC,KAAKm8B,mBAAsC74B,IAAtBmY,EAAK2gB,cACtBtW,QAAQrK,EAAK2gB,cAGjBp8B,KAAKq8B,QAAU5gB,EAAK6gB,QAAU7gB,EAAK8gB,OACnCv8B,KAAKq8B,QAAkC,iBAAjBr8B,KAAKq8B,QACvB1B,EAAG36B,KAAKq8B,SACRnnB,OAAOlV,KAAKq8B,SAChBr8B,KAAKq8B,QAAWr1B,MAAMhH,KAAKq8B,SAEvB,EADA31B,KAAKS,IAAIT,KAAK8T,IAAI,EAAGxa,KAAKq8B,SAAUpB,GAGxCj7B,KAAKw8B,MAAQ/gB,EAAKghB,KACd98B,EAAQ8b,EAAKghB,MACb,MAECz8B,KAAKw8B,OAAS/gB,EAAKjd,MACtBwB,KAAKxB,KAAKid,EAAKjd,MAmxBnB,SAASk+B,EAAcz3B,EAAMjH,EAAM2+B,GACjC,OAAO13B,EAAO,KAAO03B,EAAQA,EAAMnoB,MAAQ,IAAMmoB,EAAMhE,IAAM,KAAO,IAAM36B,EAW5E,SAAS4+B,EAAoBC,EAAO/e,GAClC,MAAO,6EAIO+e,EAAQ,mCAGV/e,EAAO,6BA+BrB,SAASgf,EAAgBlO,GACvB,MAAqC,mBAAvBA,EAAIkO,eACd7gC,OAAO6E,KAAK8tB,EAAImO,UAAY,IAC5BnO,EAAIkO,iBAeV,SAASE,EAAcC,EAASh4B,GAK9B,OAJ6C,mBAA1Bg4B,EAAQC,cACvBD,EAAQE,UAAUl4B,GAAM5F,OACxB49B,EAAQC,cAAcj4B,IAEX,EAyBjB,SAAS82B,EAAe11B,EAAKvK,GAG3B,IAFA,IAAIqO,EAAO,GAAGmS,OAAOjW,GAAO,IAEnB9K,EAAI,EAAGA,EAAI4O,EAAK9K,OAAQ9D,IAC/B,GAAuB,iBAAZ4O,EAAK5O,GACd,MAAM,IAAIoD,UAAU7C,EAAO,sCAI/B,OAAOqO,EAUT,SAASizB,EAAerzB,GACtB,IAAIN,EAAYM,GAAQoH,KAAK8M,MAAMlU,GAEnC,MAA4B,iBAAdN,EACVA,EACA4zB,IA7+BN/hC,EAAOD,QAaP,SAAe6sB,EAAK3J,EAAMlZ,GACxB,OAAO,IAAI81B,EAAWjT,EAAK3J,EAAMlZ,IAbnC/J,EAAOD,QAAQmiB,KAAOA,EAsGtBhgB,EAAK2P,SAASguB,EAAYN,GAU1BM,EAAWh+B,UAAUsgB,KAAOtG,EAAUQ,SAAS,SAAetR,GAG5D,OAFArG,KAAKw7B,MAAQ1V,QAAQzf,GACrB8uB,EAAM,UAAWn1B,KAAKw7B,OACfx7B,MACN,kCAUHm7B,EAAWh+B,UAAUy+B,OAASzkB,EAAUQ,SAAS,SAAiBtR,GAIhE,OAHArG,KAAK27B,QAAU7V,QAAQzf,GACvBrG,KAAKy7B,eAAYn4B,EACjB6xB,EAAM,YAAan1B,KAAK27B,SACjB37B,MACN,oCAWHm7B,EAAWh+B,UAAU+E,MAAQiV,EAAUQ,SAAS,SAAgB2lB,GAC9D,IAAIp7B,EAASo7B,EAAavB,EAAcuB,EAAO,kBAA1B,GAGrB,OAFAnI,EAAM,WAAYmI,GAClBt9B,KAAKk8B,OAASh6B,EACPlC,MACN,oCAUHm7B,EAAWh+B,UAAUs/B,KAAO,SAAele,GAGzC,OAFAve,KAAKw8B,MAAQ78B,EAAQ6W,OAAO+H,IAC5B4W,EAAM,UAAWn1B,KAAKw8B,OACfx8B,MAGTm7B,EAAWh+B,UAAUqB,KAAO2Y,EAAUQ,SAASwjB,EAAWh+B,UAAUs/B,KAClE,kCAEFtB,EAAWh+B,UAAUs/B,KAAOtlB,EAAUQ,SAASwjB,EAAWh+B,UAAUs/B,KAClE,kCAUFtB,EAAWh+B,UAAUo/B,OAASplB,EAAUQ,SAAS,SAAiB2kB,GAQhE,OAPAt8B,KAAKq8B,QAA4B,iBAAXC,EAClB3B,EAAG2B,GACHpnB,OAAOonB,GACXt8B,KAAKq8B,QAAWr1B,MAAMhH,KAAKq8B,SAEvB,EADA31B,KAAKS,IAAIT,KAAK8T,IAAI,EAAGxa,KAAKq8B,SAAUpB,GAExC9F,EAAM,aAAcn1B,KAAKq8B,SAClBr8B,MACN,sCAUHm7B,EAAWh+B,UAAU0G,MAAQ,SAAgB2iB,EAAQ3mB,GAEnD,GAAIm9B,EAAah9B,KAAM,SACrB,OAAOA,KAAK6Y,KAAK,QAASmb,EAAYxN,EAAQ3mB,EAAK,CACjDw0B,QAAQ,KAIZ,IAAIzF,EAAM5uB,KAAK4uB,IACXlW,EAAMgO,EAASF,IAAWhQ,OAAOgQ,GACjC+W,EAAMX,EAAmB,QAASnC,EAAW/hB,KAgnBnD,SAAuBkW,GAGrB,IAFA,IAAIzG,EAAU2U,EAAelO,GAEpBrzB,EAAI,EAAGA,EAAI4sB,EAAQ9oB,OAAQ9D,IAClCqzB,EAAI4O,aAAarV,EAAQ5sB,IAjnB3BkiC,CAAa7O,GAGT/uB,GAAOA,EAAIsoB,SAu0BjB,SAAqByG,EAAKzG,GAGxB,IAFA,IAAIrnB,EAAO7E,OAAO6E,KAAKqnB,GAEd5sB,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,IAAIuB,EAAMgE,EAAKvF,GACfqzB,EAAI8O,UAAU5gC,EAAKqrB,EAAQrrB,KA30B3B6gC,CAAW/O,EAAK/uB,EAAIsoB,SAItByG,EAAIuF,WAAa3N,EACjBoI,EAAI8O,UAAU,eAAgB,4BAC9B9O,EAAI8O,UAAU,iBAAkB5/B,OAAO8/B,WAAWL,IAClD3O,EAAI8O,UAAU,0BAA2B,sBACzC9O,EAAI8O,UAAU,yBAA0B,WACxC9O,EAAI+J,IAAI4E,IAUVpC,EAAWh+B,UAAU0gC,iBAAmB,WACtC,MAA2C,MAApC79B,KAAKue,KAAKve,KAAKue,KAAKlf,OAAS,IAUtC87B,EAAWh+B,UAAU2gC,iBAAmB,WACtC,OAAO99B,KAAKkoB,IAAIC,QAAQ,aACtBnoB,KAAKkoB,IAAIC,QAAQ,wBACjBnoB,KAAKkoB,IAAIC,QAAQ,kBACjBnoB,KAAKkoB,IAAIC,QAAQ,sBAUrBgT,EAAWh+B,UAAU4gC,sBAAwB,WAC3C,IAAI7V,EAAMloB,KAAKkoB,IACX0G,EAAM5uB,KAAK4uB,IAGXlG,EAAQR,EAAIC,QAAQ,YACxB,GAAIO,EAAO,CACT,IAAIjL,EAAOmR,EAAI2E,UAAU,QACzB,OAAQ9V,GAAmB,MAAViL,GA6uBrB,SAAyBrS,GAMvB,IALA,IAAIsiB,EAAM,EACNxuB,EAAO,GACPqK,EAAQ,EAGHjZ,EAAI,EAAGyiC,EAAM3nB,EAAIhX,OAAQ9D,EAAIyiC,EAAKziC,IACzC,OAAQ8a,EAAI6S,WAAW3tB,IACrB,KAAK,GACCiZ,IAAUmkB,IACZnkB,EAAQmkB,EAAMp9B,EAAI,GAEpB,MACF,KAAK,GACH4O,EAAKzF,KAAK2R,EAAIwF,UAAUrH,EAAOmkB,IAC/BnkB,EAAQmkB,EAAMp9B,EAAI,EAClB,MACF,QACEo9B,EAAMp9B,EAAI,EAQhB,OAFA4O,EAAKzF,KAAK2R,EAAIwF,UAAUrH,EAAOmkB,IAExBxuB,EAvwB6B8zB,CAAevV,GAAOwV,MAAM,SAAUxV,GACtE,OAAOA,IAAUjL,GAAQiL,IAAU,KAAOjL,GAAQ,KAAOiL,IAAUjL,IAKvE,IAAI0gB,EAAkBf,EAAclV,EAAIC,QAAQ,wBAChD,IAAKnhB,MAAMm3B,GAAkB,CAC3B,IAAI/B,EAAegB,EAAcxO,EAAI2E,UAAU,kBAC/C,OAAOvsB,MAAMo1B,IAAiBA,EAAe+B,EAG/C,OAAO,GASThD,EAAWh+B,UAAUihC,0BAA4B,WAI/C,IAHA,IAAIxP,EAAM5uB,KAAK4uB,IACXzG,EAAU2U,EAAelO,GAEpBrzB,EAAI,EAAGA,EAAI4sB,EAAQ9oB,OAAQ9D,IAAK,CACvC,IAAI+3B,EAASnL,EAAQ5sB,GACO,aAAxB+3B,EAAOvvB,OAAO,EAAG,IAAgC,qBAAXuvB,GACxC1E,EAAI4O,aAAalK,KAWvB6H,EAAWh+B,UAAUkhC,YAAc,WACjC,IAAIzP,EAAM5uB,KAAK4uB,IACfuG,EAAM,gBACNn1B,KAAKo+B,4BACLxP,EAAIuF,WAAa,IACjBvF,EAAI+J,OASNwC,EAAWh+B,UAAUmhC,mBAAqB,WACxC,IAAIz+B,EAAM,IAAIyF,MAAM,0CACpB6vB,EAAM,wBACNn1B,KAAK6D,MAAM,IAAKhE,IAWlBs7B,EAAWh+B,UAAUohC,WAAa,WAChC,IAAIpK,EAAan0B,KAAK4uB,IAAIuF,WAC1B,OAAQA,GAAc,KAAOA,EAAa,KACzB,MAAfA,GAUJgH,EAAWh+B,UAAUqhC,YAAc,SAAsB36B,GACvD,OAAQA,EAAM6G,MACZ,IAAK,eACL,IAAK,SACL,IAAK,UACH1K,KAAK6D,MAAM,IAAKA,GAChB,MACF,QACE7D,KAAK6D,MAAM,IAAKA,KAYtBs3B,EAAWh+B,UAAUshC,QAAU,WAC7B,OAAO1V,EAAM/oB,KAAKkoB,IAAIC,QAAS,CAC7B,KAAQnoB,KAAK4uB,IAAI2E,UAAU,QAC3B,gBAAiBvzB,KAAK4uB,IAAI2E,UAAU,oBAWxC4H,EAAWh+B,UAAUuhC,aAAe,WAClC,IAAIC,EAAU3+B,KAAKkoB,IAAIC,QAAQ,YAE/B,IAAKwW,EACH,OAAO,EAIT,IAA8B,IAA1BA,EAAQ36B,QAAQ,KAAa,CAC/B,IAAIyZ,EAAOzd,KAAK4uB,IAAI2E,UAAU,QAC9B,OAAOzN,QAAQrI,IAAmC,IAA3BkhB,EAAQ36B,QAAQyZ,IAKzC,OAAO2f,EADYp9B,KAAK4uB,IAAI2E,UAAU,mBACA6J,EAAcuB,IAUtDxD,EAAWh+B,UAAUypB,SAAW,SAAmBrI,GACjD,IAAIqQ,EAAM5uB,KAAK4uB,IAEf,GAAIoO,EAAah9B,KAAM,aACrBA,KAAK6Y,KAAK,YAAa+V,EAAKrQ,QAI9B,GAAIve,KAAK69B,mBACP79B,KAAK6D,MAAM,SADb,CAKA,IAAI+6B,EAAMpE,EA2aZ,SAAiCnkB,GAC/B,IAAK,IAAI9a,EAAI,EAAGA,EAAI8a,EAAIhX,QACP,MAAXgX,EAAI9a,GADsBA,KAMhC,OAAOA,EAAI,EACP,IAAM8a,EAAItS,OAAOxI,GACjB8a,EApbgBwoB,CAAuB7+B,KAAKue,KAAO,MACnDgf,EAAMX,EAAmB,cAAe,2BAA6BnC,EAAWmE,GAAO,KACzFnE,EAAWmE,GAAO,QAGpBhQ,EAAIuF,WAAa,IACjBvF,EAAI8O,UAAU,eAAgB,4BAC9B9O,EAAI8O,UAAU,iBAAkB5/B,OAAO8/B,WAAWL,IAClD3O,EAAI8O,UAAU,0BAA2B,sBACzC9O,EAAI8O,UAAU,yBAA0B,WACxC9O,EAAI8O,UAAU,WAAYkB,GAC1BhQ,EAAI+J,IAAI4E,KAWVpC,EAAWh+B,UAAUs4B,KAAO,SAAe7G,GAEzC,IAAI6N,EAAOz8B,KAAKw8B,MAGhBx8B,KAAK4uB,IAAMA,EAGX,IAYInQ,EAZAF,EAqdN,SAAiBA,GACf,IACE,OAAOugB,mBAAmBvgB,GAC1B,MAAO1e,GACP,OAAQ,GAzdCm2B,CAAOh2B,KAAKue,MACvB,IAAc,IAAVA,EAEF,OADAve,KAAK6D,MAAM,KACJ+qB,EAIT,IAAKrQ,EAAKva,QAAQ,MAEhB,OADAhE,KAAK6D,MAAM,KACJ+qB,EAIT,GAAa,OAAT6N,EAAe,CAOjB,GALIle,IACFA,EAAOyJ,EAAU,IAAM+S,EAAMxc,IAI3B2c,EAAezI,KAAKlU,GAGtB,OAFA4W,EAAM,sBAAuB5W,GAC7Bve,KAAK6D,MAAM,KACJ+qB,EAITnQ,EAAQF,EAAKzT,MAAMiwB,GAGnBxc,EAAOyJ,EAAUzhB,EAAKk2B,EAAMle,QACvB,CAEL,GAAI2c,EAAezI,KAAKlU,GAGtB,OAFA4W,EAAM,sBAAuB5W,GAC7Bve,KAAK6D,MAAM,KACJ+qB,EAITnQ,EAAQuJ,EAAUzJ,GAAMzT,MAAMiwB,GAG9Bxc,EAAO5e,EAAQ4e,GAIjB,GAgXF,SAA0BE,GACxB,IAAK,IAAIljB,EAAI,EAAGA,EAAIkjB,EAAMpf,OAAQ9D,IAAK,CACrC,IAAIwjC,EAAOtgB,EAAMljB,GACjB,GAAIwjC,EAAK1/B,OAAS,GAAiB,MAAZ0/B,EAAK,GAC1B,OAAO,EAIX,OAAO,EAxXHC,CAAgBvgB,GAAQ,CAC1B,IAAIwgB,EAASj/B,KAAKy7B,UAUlB,YAPen4B,IAAX27B,IACFA,EAAwC,MAA/BxgB,EAAMA,EAAMpf,OAAS,GAAG,GAC5BW,KAAK27B,QAAU,QAAU,SAC1B,SAGNxG,EAAM,kBAAmB8J,EAAQ1gB,GACzB0gB,GACN,IAAK,QACH,MACF,IAAK,OAEH,OADAj/B,KAAK6D,MAAM,KACJ+qB,EACT,IAAK,SACL,QAEE,OADA5uB,KAAK6D,MAAM,KACJ+qB,GAKb,OAAI5uB,KAAKk8B,OAAO78B,QAAUW,KAAK69B,oBAC7B79B,KAAKk/B,UAAU3gB,GACRqQ,IAGT5uB,KAAKm/B,SAAS5gB,GACPqQ,IAUTuM,EAAWh+B,UAAUiiC,KAAO,SAAe7gB,EAAM8gB,GAC/C,IAAIrB,EAAMqB,EAAKrhC,KACXqH,EAAUrF,KAAKqF,QACfoW,EAAO,GACPmT,EAAM5uB,KAAK4uB,IACX1G,EAAMloB,KAAKkoB,IACXoX,EAASpX,EAAIC,QAAQwU,MACrBvwB,EAAS/G,EAAQmP,OAAS,EAE9B,GAsaF,SAAsBoa,GACpB,MAAkC,kBAApBA,EAAI2Q,YACdzZ,QAAQ8I,EAAI4Q,SACZ5Q,EAAI2Q,YAzaJA,CAAY3Q,GAEd5uB,KAAKs+B,yBAFP,CAeA,GATAnJ,EAAM,YAAa5W,GAGnBve,KAAK09B,UAAUnf,EAAM8gB,GAGrBr/B,KAAKiF,KAAKsZ,GAGNve,KAAK89B,mBAAoB,CAC3B,GAAI99B,KAAK+9B,wBAEP,YADA/9B,KAAK6D,MAAM,KAIb,GAAI7D,KAAKu+B,cAAgBv+B,KAAKy+B,UAE5B,YADAz+B,KAAKq+B,cAOT,GADAL,EAAMt3B,KAAK8T,IAAI,EAAGwjB,EAAM5xB,QACJ9I,IAAhB+B,EAAQszB,IAAmB,CAC7B,IAAI8G,EAAQp6B,EAAQszB,IAAMvsB,EAAS,EAC/B4xB,EAAMyB,IAAOzB,EAAMyB,GAIzB,GAAIz/B,KAAKo7B,eAAiBJ,EAAmBvI,KAAK6M,GAAS,CAazD,GAXAA,EAAS1E,EAAWoD,EAAKsB,EAAQ,CAC/BI,SAAS,IAIN1/B,KAAK0+B,iBACRvJ,EAAM,eACNmK,GAAU,IAII,IAAZA,EAOF,OANAnK,EAAM,uBAGNvG,EAAI8O,UAAU,gBAAiBhB,EAAa,QAASsB,IAG9Ch+B,KAAK6D,MAAM,IAAK,CACrBskB,QAAS,CAAE,gBAAiByG,EAAI2E,UAAU,qBAK9B,IAAZ+L,GAAmC,IAAlBA,EAAOjgC,SAC1B81B,EAAM,WAAYmK,GAGlB1Q,EAAIuF,WAAa,IACjBvF,EAAI8O,UAAU,gBAAiBhB,EAAa,QAASsB,EAAKsB,EAAO,KAGjElzB,GAAUkzB,EAAO,GAAG9qB,MACpBwpB,EAAMsB,EAAO,GAAG3G,IAAM2G,EAAO,GAAG9qB,MAAQ,GAK5C,IAAK,IAAI1R,KAAQuC,EACfoW,EAAK3Y,GAAQuC,EAAQvC,GAIvB2Y,EAAKjH,MAAQpI,EACbqP,EAAKkd,IAAMjyB,KAAK8T,IAAIpO,EAAQA,EAAS4xB,EAAM,GAG3CpP,EAAI8O,UAAU,iBAAkBM,GAGb,SAAf9V,EAAIoS,OAKRt6B,KAAKo1B,OAAO7W,EAAM9C,GAJhBmT,EAAI+J,QAaRwC,EAAWh+B,UAAUgiC,SAAW,SAAmB5gB,GACjD,IAAIhjB,EAAI,EACJyK,EAAOhG,KAEXm1B,EAAM,YAAa5W,GACnBmc,EAAG2E,KAAK9gB,EAAM,SAAiB1e,EAAKw/B,GAClC,OAAIx/B,GAAoB,WAAbA,EAAI6K,OAAsBowB,EAAQvc,IAASA,EAAKA,EAAKlf,OAAS,KAAO07B,EAUlF,SAASt6B,EAAMZ,GACb,GAAImG,EAAK61B,YAAYx8B,QAAU9D,EAC7B,OAAOsE,EACHmG,EAAKw4B,YAAY3+B,GACjBmG,EAAKnC,MAAM,KAGjB,IAAIxG,EAAIkhB,EAAO,IAAMvY,EAAK61B,YAAYtgC,KAEtC45B,EAAM,YAAa93B,GACnBq9B,EAAG2E,KAAKhiC,EAAG,SAAUwC,EAAKw/B,GACxB,OAAIx/B,EAAYY,EAAKZ,GACjBw/B,EAAKM,cAAsBl/B,KAC/BuF,EAAK6S,KAAK,OAAQxb,EAAGgiC,QACrBr5B,EAAKo5B,KAAK/hC,EAAGgiC,MAtBN5+B,CAAKZ,GAEVA,EAAYmG,EAAKw4B,YAAY3+B,GAC7Bw/B,EAAKM,cAAsB35B,EAAK4gB,SAASrI,IAC7CvY,EAAK6S,KAAK,OAAQ0F,EAAM8gB,QACxBr5B,EAAKo5B,KAAK7gB,EAAM8gB,OA4BpBlE,EAAWh+B,UAAU+hC,UAAY,SAAoB3gB,GACnD,IAAIhjB,GAAK,EACLyK,EAAOhG,MAEX,SAASS,EAAMZ,GACb,KAAMtE,GAAKyK,EAAKk2B,OAAO78B,OACrB,OAAIQ,EAAYmG,EAAKw4B,YAAY3+B,GAC1BmG,EAAKnC,MAAM,KAGpB,IAAIxG,EAAIkJ,EAAKgY,EAAMvY,EAAKk2B,OAAO3gC,IAE/B45B,EAAM,YAAa93B,GACnBq9B,EAAG2E,KAAKhiC,EAAG,SAAUwC,EAAKw/B,GACxB,OAAIx/B,EAAYY,EAAKZ,GACjBw/B,EAAKM,cAAsBl/B,KAC/BuF,EAAK6S,KAAK,OAAQxb,EAAGgiC,QACrBr5B,EAAKo5B,KAAK/hC,EAAGgiC,MAIjB5+B,IAWF06B,EAAWh+B,UAAUi4B,OAAS,SAAiB7W,EAAMlZ,GAEnD,IAAIqxB,GAAW,EACX1wB,EAAOhG,KACP4uB,EAAM5uB,KAAK4uB,IAGXwG,EAASsF,EAAGkF,iBAAiBrhB,EAAMlZ,GACvCrF,KAAK6Y,KAAK,SAAUuc,GACpBA,EAAOK,KAAK7G,GAGZqG,EAAWrG,EAAK,WACd8H,GAAW,EACX6D,EAAQnF,KAIVA,EAAO6B,GAAG,QAAS,SAAkBp3B,GAE/B62B,IAGJA,GAAW,EACX6D,EAAQnF,GAGRpvB,EAAKw4B,YAAY3+B,MAInBu1B,EAAO6B,GAAG,MAAO,WACfjxB,EAAK6S,KAAK,UAYdsiB,EAAWh+B,UAAU8H,KAAO,SAAesZ,GACzC,IAAIqQ,EAAM5uB,KAAK4uB,IAEf,IAAIA,EAAI2E,UAAU,gBAAlB,CAEA,IAAItuB,EAAOuY,EAAKwB,OAAOT,GAEvB,GAAKtZ,EAAL,CAKA,IAAIua,EAAUhC,EAAKqiB,SAAS7gB,OAAO/Z,GAEnCkwB,EAAM,kBAAmBlwB,GACzB2pB,EAAI8O,UAAU,eAAgBz4B,GAAQua,EAAU,aAAeA,EAAU,UAPvE2V,EAAM,qBAmBVgG,EAAWh+B,UAAUugC,UAAY,SAAoBnf,EAAM8gB,GACzD,IAAIzQ,EAAM5uB,KAAK4uB,IASf,GAPA5uB,KAAK6Y,KAAK,UAAW+V,EAAKrQ,EAAM8gB,GAE5Br/B,KAAKo7B,gBAAkBxM,EAAI2E,UAAU,mBACvC4B,EAAM,iBACNvG,EAAI8O,UAAU,gBAAiB,UAG7B19B,KAAKs7B,gBAAkB1M,EAAI2E,UAAU,iBAAkB,CACzD,IAAIgI,EAAe,mBAAqB70B,KAAKC,MAAM3G,KAAKq8B,QAAU,KAE9Dr8B,KAAKg8B,aACPT,GAAgB,eAGlBpG,EAAM,mBAAoBoG,GAC1B3M,EAAI8O,UAAU,gBAAiBnC,GAGjC,GAAIv7B,KAAKm8B,gBAAkBvN,EAAI2E,UAAU,iBAAkB,CACzD,IAAIuM,EAAWT,EAAKU,MAAM5lB,cAC1Bgb,EAAM,cAAe2K,GACrBlR,EAAI8O,UAAU,gBAAiBoC,GAGjC,GAAI9/B,KAAKw7B,QAAU5M,EAAI2E,UAAU,QAAS,CACxC,IAAIltB,EAAMoX,EAAK4hB,GACflK,EAAM,UAAW9uB,GACjBuoB,EAAI8O,UAAU,OAAQr3B,M,6BCx3B1B,MAAM7I,EAAO,EAAQ,GAEfs0B,EAAW,EAAQ,IACnB5S,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChBi4B,EAAU,EAAQ,IAClBlkB,EAAU,EAAQ,IAGlBmkB,EAA2B,CAC/B,CAAC/gB,EAAMxQ,SAASC,OAAQ,EACxB,CAACuQ,EAAMxQ,SAASE,QAAS,EACzB,CAACsQ,EAAMxQ,SAASG,SAAU,GAItBqxB,EAA2B,CAC/B,CAAChhB,EAAMxQ,SAASC,OAAQ,EACxB,CAACuQ,EAAMxQ,SAASE,QAAS,EACzB,CAACsQ,EAAMxQ,SAASG,SAAU,GAItBsxB,EAA6B,IAG7BC,EAA6B,KAKnC,SAASC,IACP,MAAO,CACLvO,SAAU,CACRwO,kBAAmBxO,EAASyO,2BAC5B5O,cAAeG,EAAS0O,6BACxBC,aAAc3O,EAAS4O,4BACvBnZ,MAAOuK,EAAS6O,qBAChBC,qBAAsB9O,EAAS+O,oCAC/B9O,oBAAqBD,EAASgP,6BAEhC3Q,aAAc,CACZtO,YAAa3C,EAAMjX,cAAcW,SACjC2oB,UAAW,IACXxjB,SAAS,EACT2E,mBAAmB,GAErBquB,gBAAiB,CACfC,KAAM,KACNC,8BAA+B,GAC/BC,WAAY,EACZpc,WAAW,GAEbqc,QAAS,CACPC,kBAAmB,IACnBC,QAAQ,GAEVpP,cAAe,CACbqP,eAAgB,IAChBC,4BAA6B,GAC7BC,WAAW,EACXC,eAAgB,EAChBzxB,YAAa,KACb0xB,YAAY,EACZC,oBAAqB,OAEvBC,aAAc,KACdC,eAAgB,KAChB/lB,QAAS,IAAIA,EAAQgmB,eACrBC,YAAa,IACbC,mBAAoB,IACpBC,uBAAuB,EACvBC,mBAAmB,EACnBC,eAAe,EACfzjC,SAAU,CACR0D,YAAY,EACZggC,qBAAqB,IA4J3B/mC,EAAQqI,OAjJR,SAAgB2+B,EAAaC,GACF,IAArB3/B,UAAUtD,SACZijC,EAAc3/B,UAAU,GACxB0/B,EAAc,IAEhB,MAAMh9B,EAAU0C,EAAMvF,WAAW6/B,EAAahC,IAAkBiC,GAChE,IAAK9kC,EAAKwB,QAAQqG,EAAQk9B,gBAAmD,IAAjCl9B,EAAQk9B,cAAcljC,OAChE,MAAM,IAAIV,UAAU,oCAEtB,IAAK,IAAIpD,EAAI,EAAGA,EAAI8J,EAAQk9B,cAAcljC,OAAQ9D,IAAK,CACrD,MAAMinC,EAAWn9B,EAAQk9B,cAAchnC,GACvC,IAAKinC,EACH,MAAM,IAAI7jC,UAAUnB,EAAKgE,OAAO,uIAC0DjG,EAAGinC,IAMjG,GAHKn9B,EAAQD,aACXC,EAAQD,WAAa,eAElBC,EAAQ8qB,aACX,MAAM,IAAIxxB,UAAU,uCAGtB,GAA+B,OAA3B0G,EAAQw8B,kBAA6Bx8B,EAAQw8B,0BAA0B7B,EAAQyC,gBACjF,MAAM,IAAI9jC,UAAU,wDAGtB,KAAM0G,EAAQyW,mBAAmBA,EAAQ4mB,eACvC,MAAM,IAAI/jC,UAAU,gDAQtB,GAWF,SAAiCgkC,GAC/B,IAAKA,EACH,MAAM,IAAIhkC,UAAU,mCAEtB,KAAMgkC,EAAgBhR,yBAAyBG,EAASH,cAAciR,qBACpE,MAAM,IAAIjkC,UAAU,oEAEtB,KAAMgkC,EAAgBlC,wBAAwB3O,EAAS2O,aAAaoC,oBAClE,MAAM,IAAIlkC,UAAU,iEAEtB,KAAMgkC,EAAgBpb,iBAAiBuK,EAASvK,MAAMub,aACpD,MAAM,IAAInkC,UAAU,mDAEtB,KAAMgkC,EAAgBrC,6BAA6BxO,EAASwO,kBAAkByC,mBAC5E,MAAM,IAAIpkC,UAAU,sEAEtB,GAA4C,OAAxCgkC,EAAgB5Q,uBAChB4Q,EAAgB5Q,+BAA+BD,EAASC,oBAAoBiR,oBAC9E,MAAM,IAAIrkC,UAAU,yEAlCtBskC,CAAwB59B,EAAQysB,UA2ClC,SAAiCiP,GAC/B,IAAKA,EACH,MAAM,IAAIpiC,UAAU,0CAEtB,MAAM6M,EAAUu1B,EAAgBG,WAChC,GAAI11B,IAA+B,iBAAZA,IAAyB0T,EAAMpX,gBAAgBo7B,YAAY13B,IAChF,MAAM,IAAI7M,UAAUnB,EAAKgE,OAAO,sDAAuDgK,IAhDzF23B,CAAwB99B,EAAQ07B,iBAyDlC,SAA+B9O,GAC7B,IAAKA,EACH,MAAM,IAAItzB,UAAU,wCAEtB,GAAyC,iBAA9BszB,EAAcjiB,YACvB,MAAM,IAAIrR,UAAU,8CAEtB,GAAiD,iBAAtCszB,EAAc0P,qBAAoC1P,EAAc0P,qBAAuB,EAChG,MAAM,IAAIhjC,UAAU,+DAhEtBykC,CAAsB/9B,EAAQ4sB,eAC9B5sB,EAAQ3G,SAAW2G,EAAQ3G,UAAY,GAwEzC,SAAiC2kC,GAC/B,GAAIA,EAAgB99B,IAAK,CACvB,MAAM+9B,EAAiBD,EAAgB99B,IACvC,GAA8B,mBAAnB+9B,GACmC,mBAArCA,EAAenmC,UAAUyF,SACQ,mBAAjC0gC,EAAenmC,UAAUiN,IAChC,MAAM,IAAIzL,UAAU,6BAIxB,GAAI0kC,EAAgBj5B,IAAK,CACvB,MAAMm5B,EAAiBF,EAAgBj5B,IACvC,GAA8B,mBAAnBm5B,GACmC,mBAArCA,EAAepmC,UAAUyF,SACQ,mBAAjC2gC,EAAepmC,UAAUwD,IAChC,MAAM,IAAIhC,UAAU,6BAIxB,IAAK0kC,EAAgBG,iBAAmBH,EAAgBI,oBAAwC,oBAAXC,OACnF,MAAM,IAAI/kC,UAAU,oDA3FtBglC,CAAwBt+B,EAAQ3G,UAC5B2G,EAAQu+B,WAAapmC,EAAKwB,QAAQqG,EAAQu+B,UAC5C,MAAM,IAAIjlC,UAAU,2DAEtB,OAAO0G,GA2GThK,EAAQglC,eAAiBA,EACzBhlC,EAAQ4kC,yBAA2BA,EACnC5kC,EAAQ6kC,yBAA2BA,EACnC7kC,EAAQ8kC,2BAA6BA,EACrC9kC,EAAQ+kC,2BAA6BA,EACrC/kC,EAAQwoC,6BAhBR,SAAsCx+B,EAASmG,GAC7C,IAAIs4B,EAAyB5D,EACzB5sB,EAA2B8sB,EAC1BlhB,EAAMpX,gBAAgBkE,oBAAoBR,KAC7Cs4B,EAAyB7D,EACzB3sB,EAA2B6sB,GAE7B96B,EAAQ87B,QAAUp5B,EAAMvF,WAAW,GAAI,CAAEshC,yBAAwBxwB,4BAA4BjO,EAAQ87B,W,6BCpOvG,MAAM1jC,EAAS,EAAQ,GAMvB,MAAMsmC,EAOJ,YAAYjnC,EAAKN,EAAOwnC,GAKtBhkC,KAAKlD,IAAMA,EAKXkD,KAAKxD,MAAQA,EAKbwD,KAAKgkC,eAAiBA,GAQ1B,MAAMC,EACJ,YAAYC,EAAM1nC,EAAO2nC,GAIvBnkC,KAAKkkC,KAAOA,EAKZlkC,KAAKxD,MAAQA,EAMbwD,KAAKmkC,WAAaA,GAsBtB,MAAMC,EAAI,CACRC,IAAK,SAAavlC,GAChB,IAAKC,MAAMC,QAAQF,GACjB,MAAM,IAAIrB,EAAO8D,cAAc,0CAEjC,OAAO,IAAIwiC,EAAc,KAAMjlC,IAGjCouB,GAAI,SAAY1wB,GACd,OAAO,IAAIunC,EAAc,IAAKvnC,IAGhC4wB,IAAK,SAAa5wB,GAChB,OAAO,IAAIunC,EAAc,KAAMvnC,IAGjCswB,GAAI,SAAYtwB,GACd,OAAO,IAAIunC,EAAc,IAAKvnC,IAGhCwwB,IAAK,SAAaxwB,GAChB,OAAO,IAAIunC,EAAc,KAAMvnC,IAGjC8nC,MAAO,SAAe9nC,GACpB,OAAO,IAAIunC,EAAc,KAAMvnC,IAGjC8yB,IAAK,SAAUiV,EAAYC,GACzB,OAAO,IAAIT,EAAc,MAAO,CAAEQ,EAAYC,IAAc,IAG9DC,KAAM,SAAcjoC,GAClB,OAAO,IAAIynC,EAAgB,IAAKznC,IAGlCkoC,KAAM,SAAcloC,GAClB,OAAO,IAAIynC,EAAgB,IAAKznC,IAGlCmoC,OAAQ,SAAgBnoC,GACtB,OAAO,IAAIynC,EAAgB,IAAKznC,IAGlCooC,QAAS,SAAiBpoC,GACxB,OAAO,IAAIynC,EAAgB,IAAKznC,GAAO,IAGzCqoC,OAAQ,SAAgBroC,GACtB,OAAO,IAAIynC,EAAgB,IAAKznC,KAIpCnB,EAAQ+oC,EAAIA,EACZ/oC,EAAQ4oC,gBAAkBA,EAC1B5oC,EAAQ0oC,cAAgBA,G,6BC5ExBzoC,EAAOD,QAjDP,MAOE,YAAYioB,EAASia,EAAKuH,EAASC,GACjC/kC,KAAKglC,SAAW1hB,EAChBtjB,KAAKilC,KAAO1H,EACZv9B,KAAKklC,SAAWJ,EAChB9kC,KAAKmlC,aAAeJ,EAUtB,YAAYjmC,GACV,IACIsmC,EADA3T,GAAe,EAEnB,OAAOzxB,KAAKglC,SAASK,KAAK/hB,IACxBA,EAAQ1gB,QAAQwhC,IAEd3S,EAAeA,GAAgB2S,EAAE3S,aAGjC2T,EAAYhB,EAAEgB,UAEdtmC,EAAI4F,KAAK,CAAEoJ,MAAOs2B,EAAEt2B,MAAO9M,OAAQojC,EAAEkB,aAAatlC,KAAKilC,KAAMjlC,KAAKklC,cAG7D,CAAEzT,eAAc2T,eAS3B,iBACE,OAAOplC,KAAKmlC,gB,6BCjDhB,MAAM3nC,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAChBw9B,EAAgB/nC,EAAKoB,QAAQmK,QAAU,UAmH7CzN,EAAOD,QA7GP,MAOE,YAAYmqC,EAAItgC,EAAMugC,GACpBzlC,KAAK0lC,IAAMF,EACXxlC,KAAK2lC,MAAQzgC,EACblF,KAAK4lC,YAAcH,EAMnBzlC,KAAK6lC,YAA8B,OAAfL,EAAGvkC,SACI,IAAtBukC,EAAGvkC,QAAQ5B,QAAuC,IAAvBW,KAAK0lC,IAAII,WAA0C,cAAvBN,EAAGvkC,QAAQ,GAAGnF,KAU1EkE,KAAKX,OAASW,KAAK6lC,YAAc,EAAKL,EAAGM,WAAa,EAWtD9lC,KAAK8wB,UAAY0U,EAAG1U,UAatB,aACE,OAAO9wB,KAAK0lC,IAAIK,aAMlB,QACE,OAAK/lC,KAAK0lC,IAAII,WAAa9lC,KAAK6lC,YACvB,KAEF7lC,KAAK4lC,YAAY5lC,KAAK0lC,IAAI90B,KAAK,GAAI5Q,KAAK2lC,OAMjD,EAAErpC,OAAOwI,YACP,IAAI9E,KAAK6lC,YAKT,IAAK,IAAItqC,EAAI,EAAGA,EAAIyE,KAAK0lC,IAAI90B,KAAKvR,OAAQ9D,UAClCyE,KAAK4lC,YAAY5lC,KAAK0lC,IAAI90B,KAAKrV,GAAIyE,KAAK2lC,OAQlD,UACE,OAAI3lC,KAAK6lC,YACA99B,EAAMtE,WAGRzD,KAAK0lC,IAAI90B,KAAKrL,IAAIygC,GAAOhmC,KAAK4lC,YAAYI,EAAKhmC,KAAK2lC,QAQ7D,QAAQtlC,EAAU4lC,GAChB,IAAI/jC,EAAQ,EACZ+jC,EAAUA,GAAWjmC,KACrB,IAAK,MAAMu9B,KAAOv9B,KAChBK,EAAS3E,KAAKuqC,EAAS1I,EAAKr7B,KAIhC,CAACqjC,KACC,OAAOvlC,KAAKa,a;;;;;GCtGhB,IAAIqlC,EAAe,EAAQ,GAAUA,aAuCrC,SAASC,EAAchlC,EAAK2B,EAAM/G,GAahCE,OAAOC,eAAeiF,EAAK2B,EAAM,CAC/B8X,cAAc,EACdze,YAAY,EACZC,IAfF,WACE,IAAIiK,EAAMtK,IAQV,OANAE,OAAOC,eAAeiF,EAAK2B,EAAM,CAC/B8X,cAAc,EACdze,YAAY,EACZK,MAAO6J,IAGFA,KAcX,SAAS4G,EAAU9L,GACjB,OAAOA,EAAI8L,WAzDbk5B,EAAa7qC,EAAOD,QAAS,mBAAoB,WAC/C,IAAI6L,EAAQ5B,MAAM8U,gBACdjZ,EAAM,GACNkZ,EAAO/U,MAAMgV,kBAMjBhV,MAAMgV,kBAJN,SAAkCnZ,EAAK2C,GACrC,OAAOA,GAITwB,MAAM8U,gBAAkB,EAGxB9U,MAAMoN,kBAAkBvR,GAGxB,IAAI2C,EAAQ3C,EAAI2C,MAAMpB,QAKtB,OAHA4C,MAAMgV,kBAAoBD,EAC1B/U,MAAM8U,gBAAkBlT,EAEjBpD,EAAM,GAAGmJ,SAAWA,EAAW,EAAQ,OAGhDk5B,EAAa7qC,EAAOD,QAAS,qBAAsB,WACjD,OAAO6qC,EAAahJ,eAAiB,EAAQ,Q;;;;;;AClC/C5hC,EAAOD,QAUP,SAAuBgb,GACrB,OAAOA,EACJvL,MAAM,KACNvF,IAAI,SAAUse,GACb,OAAOA,EAAMnhB,MAAM,EAAG,GAAGmzB,cAAgBhS,EAAMnhB,MAAM,KAEtD6D,KAAK,IACLyU,QAAQ,gBAAiB,M,gBCM9B,IAAIorB,EA4BJ,SAASC,EAAY/vB,GAEnB,SAAS6e,IAEP,GAAKA,EAAMmR,QAAX,CAEA,IAAItgC,EAAOmvB,EAGPoR,GAAQ,IAAIp1B,KACZwpB,EAAK4L,GAAQH,GAAYG,GAC7BvgC,EAAKwgC,KAAO7L,EACZ30B,EAAKygC,KAAOL,EACZpgC,EAAKugC,KAAOA,EACZH,EAAWG,EAIX,IADA,IAAI9rB,EAAO,IAAI1b,MAAM4D,UAAUtD,QACtB9D,EAAI,EAAGA,EAAIkf,EAAKpb,OAAQ9D,IAC/Bkf,EAAKlf,GAAKoH,UAAUpH,GAGtBkf,EAAK,GAAKpf,EAAQqrC,OAAOjsB,EAAK,IAE1B,iBAAoBA,EAAK,IAE3BA,EAAKksB,QAAQ,MAIf,IAAIzkC,EAAQ,EACZuY,EAAK,GAAKA,EAAK,GAAGO,QAAQ,gBAAiB,SAAS0N,EAAOlnB,GAEzD,GAAc,OAAVknB,EAAgB,OAAOA,EAC3BxmB,IACA,IAAI0kC,EAAYvrC,EAAQwrC,WAAWrlC,GACnC,GAAI,mBAAsBolC,EAAW,CACnC,IAAIvgC,EAAMoU,EAAKvY,GACfwmB,EAAQke,EAAUlrC,KAAKsK,EAAMK,GAG7BoU,EAAK7V,OAAO1C,EAAO,GACnBA,IAEF,OAAOwmB,IAITrtB,EAAQyrC,WAAWprC,KAAKsK,EAAMyU,IAElB0a,EAAMnwB,KAAO3J,EAAQ2J,KAAO4X,QAAQ5X,IAAIjI,KAAK6f,UACnDtY,MAAM0B,EAAMyU,IAapB,OAVA0a,EAAM7e,UAAYA,EAClB6e,EAAMmR,QAAUjrC,EAAQirC,QAAQhwB,GAChC6e,EAAM4R,UAAY1rC,EAAQ0rC,YAC1B5R,EAAM6R,MA5ER,SAAqB1wB,GACnB,IAAc/a,EAAVsa,EAAO,EAEX,IAAKta,KAAK+a,EACRT,GAAUA,GAAQ,GAAKA,EAAQS,EAAU4S,WAAW3tB,GACpDsa,GAAQ,EAGV,OAAOxa,EAAQ4rC,OAAOvgC,KAAK+e,IAAI5P,GAAQxa,EAAQ4rC,OAAO5nC,QAoExC6nC,CAAY5wB,GAGtB,mBAAsBjb,EAAQ8rC,MAChC9rC,EAAQ8rC,KAAKhS,GAGRA,GAtHT95B,EAAUC,EAAOD,QAAUgrC,EAAYlR,MAAQkR,EAAqB,QAAIA,GAChEK,OA6LR,SAAgBrgC,GACd,OAAIA,aAAef,MAAce,EAAIvC,OAASuC,EAAIyF,QAC3CzF,GA9LThL,EAAQ+rC,QAyJR,WACE/rC,EAAQgsC,OAAO,KAzJjBhsC,EAAQgsC,OA8HR,SAAgBC,GACdjsC,EAAQksC,KAAKD,GAEbjsC,EAAQq3B,MAAQ,GAChBr3B,EAAQmsC,MAAQ,GAKhB,IAHA,IAAI18B,GAA+B,iBAAfw8B,EAA0BA,EAAa,IAAIx8B,MAAM,UACjEkzB,EAAMlzB,EAAMzL,OAEP9D,EAAI,EAAGA,EAAIyiC,EAAKziC,IAClBuP,EAAMvP,KAEW,OADtB+rC,EAAax8B,EAAMvP,GAAGyf,QAAQ,MAAO,QACtB,GACb3f,EAAQmsC,MAAM9iC,KAAK,IAAI+iC,OAAO,IAAMH,EAAWvjC,OAAO,GAAK,MAE3D1I,EAAQq3B,MAAMhuB,KAAK,IAAI+iC,OAAO,IAAMH,EAAa,QA5IvDjsC,EAAQirC,QAmKR,SAAiBxqC,GACf,IAAIP,EAAGyiC,EACP,IAAKziC,EAAI,EAAGyiC,EAAM3iC,EAAQmsC,MAAMnoC,OAAQ9D,EAAIyiC,EAAKziC,IAC/C,GAAIF,EAAQmsC,MAAMjsC,GAAGk3B,KAAK32B,GACxB,OAAO,EAGX,IAAKP,EAAI,EAAGyiC,EAAM3iC,EAAQq3B,MAAMrzB,OAAQ9D,EAAIyiC,EAAKziC,IAC/C,GAAIF,EAAQq3B,MAAMn3B,GAAGk3B,KAAK32B,GACxB,OAAO,EAGX,OAAO,GA9KTT,EAAQqsC,SAAW,EAAQ,KAM3BrsC,EAAQq3B,MAAQ,GAChBr3B,EAAQmsC,MAAQ,GAQhBnsC,EAAQwrC,WAAa,I,6BCxBrB,IAAI/oC,EAAS,EAAQ,IAAgBA,OAEjC6pC,EAAc,EAAQ,KACtB3S,EAAQ15B,EAAOD,QAInB25B,EAAM4S,UAAY,KAGlB5S,EAAM6S,mBAAqB,IAC3B7S,EAAM8S,sBAAwB,IAG9B9S,EAAM/R,OAAS,SAAgB5M,EAAK3X,EAAU2G,GAC1CgR,EAAM,IAAMA,GAAO,IAEnB,IAAIgL,EAAU2T,EAAM+S,WAAWrpC,EAAU2G,GAErCupB,EAAMvN,EAAQlI,MAAM9C,GACpB2xB,EAAQ3mB,EAAQsX,MAEpB,OAAQqP,GAASA,EAAM3oC,OAAS,EAAKvB,EAAOwe,OAAO,CAACsS,EAAKoZ,IAAUpZ,GAGvEoG,EAAMgB,OAAS,SAAgB3zB,EAAK3D,EAAU2G,GACvB,iBAARhD,IACF2yB,EAAMiT,oBACPrrB,QAAQ/Y,MAAM,4IACdmxB,EAAMiT,mBAAoB,GAG9B5lC,EAAMvE,EAAOU,KAAK,IAAM6D,GAAO,IAAK,WAGxC,IAAI6lC,EAAUlT,EAAMmT,WAAWzpC,EAAU2G,GAErCupB,EAAMsZ,EAAQ/uB,MAAM9W,GACpB2lC,EAAQE,EAAQvP,MAEpB,OAAOqP,EAASpZ,EAAMoZ,EAASpZ,GAGnCoG,EAAMY,eAAiB,SAAwBwS,GAC3C,IAEI,OADApT,EAAMqT,SAASD,IACR,EACT,MAAO/6B,GACL,OAAO,IAKf2nB,EAAMsT,WAAatT,EAAM/R,OACzB+R,EAAMuT,aAAevT,EAAMgB,OAG3BhB,EAAMwT,gBAAkB,GACxBxT,EAAMqT,SAAW,SAAkB3pC,GAC1Bs2B,EAAM4S,YACP5S,EAAM4S,UAAY,EAAQ,MAO9B,IAJA,IAAIQ,EAAMpT,EAAMyT,sBAAsB/pC,GAGlCgqC,EAAe,KACN,CACT,IAAIC,EAAQ3T,EAAMwT,gBAAgBJ,GAClC,GAAIO,EACA,OAAOA,EAEX,IAAIC,EAAW5T,EAAM4S,UAAUQ,GAE/B,cAAeQ,GACX,IAAK,SACDR,EAAMQ,EACN,MAEJ,IAAK,SACD,IAAK,IAAI9rC,KAAO8rC,EACZF,EAAa5rC,GAAO8rC,EAAS9rC,GAE5B4rC,EAAaG,eACdH,EAAaG,aAAeT,GAEhCA,EAAMQ,EAAS3jC,KACf,MAEJ,IAAK,WASD,OARKyjC,EAAaG,eACdH,EAAaG,aAAeT,GAIhCO,EAAQ,IAAIC,EAASF,EAAc1T,GAEnCA,EAAMwT,gBAAgBE,EAAaG,cAAgBF,EAC5CA,EAEX,QACI,MAAM,IAAIrjC,MAAM,6BAA+B5G,EAAW,oBAAoB0pC,EAAI,SAKlGpT,EAAMyT,sBAAwB,SAAS/pC,GAEnC,OAAQ,GAAGA,GAAU2C,cAAc2Z,QAAQ,qBAAsB,KAGrEga,EAAM+S,WAAa,SAAoBrpC,EAAU2G,GAC7C,IAAIsjC,EAAQ3T,EAAMqT,SAAS3pC,GACvB2iB,EAAU,IAAIsnB,EAAMtnB,QAAQhc,EAASsjC,GAKzC,OAHIA,EAAMG,UAAYzjC,GAAWA,EAAQ0jC,SACrC1nB,EAAU,IAAIsmB,EAAYqB,WAAW3nB,EAAShc,IAE3Cgc,GAGX2T,EAAMmT,WAAa,SAAoBzpC,EAAU2G,GAC7C,IAAIsjC,EAAQ3T,EAAMqT,SAAS3pC,GACvBwpC,EAAU,IAAIS,EAAMT,QAAQ7iC,EAASsjC,GAKzC,OAHIA,EAAMG,UAAczjC,IAAgC,IAArBA,EAAQ4jC,WACvCf,EAAU,IAAIP,EAAYuB,SAAShB,EAAS7iC,IAEzC6iC,GAKX,IAAIiB,EAA6B,oBAAZ5lC,SAA2BA,QAAQ6lC,UAAY7lC,QAAQ6lC,SAASh4B,KACrF,GAAI+3B,EAAS,CAGT,IAAIE,EAAaF,EAAQr+B,MAAM,KAAKvF,IAAI2P,SACpCm0B,EAAW,GAAK,GAAKA,EAAW,IAAM,KACtC,EAAQ,IAAR,CAAqBrU,GAIzB,EAAQ,IAAR,CAAyBA,K;;;;;GCtI7B15B,EAAOD,QA0BP,SAAgB+5B,GACd,IAAKA,EACH,MAAM,IAAIz2B,UAAU,+BAGtB,GAA6B,mBAAlBy2B,EAAOkU,OAGhB,YADAlU,EAAOkU,SAKT,IA/BF,SAA8BlU,GAG5B,IAFA,IAAI+H,EAAY/H,EAAO+H,UAAU,QAExB5hC,EAAI,EAAGA,EAAI4hC,EAAU99B,OAAQ9D,IACpC,GAA0B,WAAtB4hC,EAAU5hC,GAAGO,KACf,OAAO,EAIX,OAAO,EAsBFytC,CAAqBnU,GACxB,OAMF,IAHA,IAAIa,EACAkH,EAAY/H,EAAO+H,UAAU,SAExB5hC,EAAI,EAAGA,EAAI4hC,EAAU99B,OAAQ9D,IAGd,aAFtB06B,EAAWkH,EAAU5hC,IAERO,MAAwC,YAAlBm6B,EAASn6B,MAK5Cm6B,EAASv6B,KAAK05B,K;;;;;;GCpDlB,IA2IuB0G,EAAY5c,EAE7BsqB,EA7IFC,EAAK,EAAQ,KACb3O,EAAU,EAAQ,GAAQA,QAO1B4O,EAAsB,0BACtBC,EAAmB,WAyBvB,SAASnqB,EAASva,GAChB,IAAKA,GAAwB,iBAATA,EAClB,OAAO,EAIT,IAAIyjB,EAAQghB,EAAoBj/B,KAAKxF,GACjCuY,EAAOkL,GAAS+gB,EAAG/gB,EAAM,GAAGrnB,eAEhC,OAAImc,GAAQA,EAAKgC,QACRhC,EAAKgC,WAIVkJ,IAASihB,EAAiBlX,KAAK/J,EAAM,MAChC,QAjCXrtB,EAAQmkB,QAAUA,EAClBnkB,EAAQwkC,SAAW,CAAE7gB,OAAQQ,GAC7BnkB,EAAQiiB,YA4CR,SAAsBjH,GAEpB,IAAKA,GAAsB,iBAARA,EACjB,OAAO,EAGT,IAAImH,GAA6B,IAAtBnH,EAAIrS,QAAQ,KACnB3I,EAAQ2jB,OAAO3I,GACfA,EAEJ,IAAKmH,EACH,OAAO,EAIT,IAAiC,IAA7BA,EAAKxZ,QAAQ,WAAmB,CAClC,IAAIwb,EAAUnkB,EAAQmkB,QAAQhC,GAC1BgC,IAAShC,GAAQ,aAAegC,EAAQne,eAG9C,OAAOmc,GA/DTniB,EAAQuuC,UAyER,SAAoB3kC,GAClB,IAAKA,GAAwB,iBAATA,EAClB,OAAO,EAIT,IAAIyjB,EAAQghB,EAAoBj/B,KAAKxF,GAGjC4kC,EAAOnhB,GAASrtB,EAAQygC,WAAWpT,EAAM,GAAGrnB,eAEhD,IAAKwoC,IAASA,EAAKxqC,OACjB,OAAO,EAGT,OAAOwqC,EAAK,IAvFdxuC,EAAQygC,WAAa7/B,OAAOY,OAAO,MACnCxB,EAAQ2jB,OAgGR,SAAiBT,GACf,IAAKA,GAAwB,iBAATA,EAClB,OAAO,EAIT,IAAIqrB,EAAY9O,EAAQ,KAAOvc,GAC5Bld,cACA0C,OAAO,GAEV,IAAK6lC,EACH,OAAO,EAGT,OAAOvuC,EAAQ6jB,MAAM0qB,KAAc,GA7GrCvuC,EAAQ6jB,MAAQjjB,OAAOY,OAAO,MAqHPi/B,EAlHVzgC,EAAQygC,WAkHc5c,EAlHF7jB,EAAQ6jB,MAoHnCsqB,EAAa,CAAC,QAAS,cAAUlmC,EAAW,QAEhDrH,OAAO6E,KAAK2oC,GAAI7mC,QAAQ,SAA0BqC,GAChD,IAAIuY,EAAOisB,EAAGxkC,GACV4kC,EAAOrsB,EAAKse,WAEhB,GAAK+N,GAASA,EAAKxqC,OAAnB,CAKAy8B,EAAW72B,GAAQ4kC,EAGnB,IAAK,IAAItuC,EAAI,EAAGA,EAAIsuC,EAAKxqC,OAAQ9D,IAAK,CACpC,IAAIquC,EAAYC,EAAKtuC,GAErB,GAAI2jB,EAAM0qB,GAAY,CACpB,IAAIprC,EAAOgrC,EAAWxlC,QAAQylC,EAAGvqB,EAAM0qB,IAAY/mC,QAC/CinC,EAAKN,EAAWxlC,QAAQwZ,EAAK3a,QAEjC,GAAyB,6BAArBqc,EAAM0qB,KACPprC,EAAOsrC,GAAOtrC,IAASsrC,GAAyC,iBAAnC5qB,EAAM0qB,GAAW7lC,OAAO,EAAG,KAEzD,SAKJmb,EAAM0qB,GAAa3kC,O,6BCtLzB,IAAImY,EAAMnhB,OAAOkB,UAAUC,eACvB4B,EAAUD,MAAMC,QAEhB+qC,EAAY,WAEZ,IADA,IAAI9R,EAAQ,GACH18B,EAAI,EAAGA,EAAI,MAAOA,EACvB08B,EAAMvzB,KAAK,MAAQnJ,EAAI,GAAK,IAAM,IAAMA,EAAE0R,SAAS,KAAK4oB,eAG5D,OAAOoC,EANI,GA4BX+R,EAAgB,SAAuBnnC,EAAQwC,GAE/C,IADA,IAAIlE,EAAMkE,GAAWA,EAAQ4kC,aAAehuC,OAAOY,OAAO,MAAQ,GACzDtB,EAAI,EAAGA,EAAIsH,EAAOxD,SAAU9D,OACR,IAAdsH,EAAOtH,KACd4F,EAAI5F,GAAKsH,EAAOtH,IAIxB,OAAO4F,GAkLX7F,EAAOD,QAAU,CACb2uC,cAAeA,EACfp1B,OAzHS,SAA4BnS,EAAQI,GAC7C,OAAO5G,OAAO6E,KAAK+B,GAAQsZ,OAAO,SAAUC,EAAKtf,GAE7C,OADAsf,EAAItf,GAAO+F,EAAO/F,GACXsf,GACR3Z,IAsHHi9B,QAPU,SAAiBt7B,EAAGnG,GAC9B,MAAO,GAAGqe,OAAOlY,EAAGnG,IAOpBisC,QA5CU,SAAiB1tC,GAI3B,IAHA,IAAI85B,EAAQ,CAAC,CAAEn1B,IAAK,CAAEnF,EAAGQ,GAASsG,KAAM,MACpCqnC,EAAO,GAEF5uC,EAAI,EAAGA,EAAI+6B,EAAMj3B,SAAU9D,EAKhC,IAJA,IAAIkJ,EAAO6xB,EAAM/6B,GACb4F,EAAMsD,EAAKtD,IAAIsD,EAAK3B,MAEpBhC,EAAO7E,OAAO6E,KAAKK,GACdsF,EAAI,EAAGA,EAAI3F,EAAKzB,SAAUoH,EAAG,CAClC,IAAI3J,EAAMgE,EAAK2F,GACXJ,EAAMlF,EAAIrE,GACK,iBAARuJ,GAA4B,OAARA,IAAuC,IAAvB8jC,EAAKnmC,QAAQqC,KACxDiwB,EAAM5xB,KAAK,CAAEvD,IAAKA,EAAK2B,KAAMhG,IAC7BqtC,EAAKzlC,KAAK2B,IAOtB,OA1Le,SAAsBiwB,GACrC,KAAOA,EAAMj3B,OAAS,GAAG,CACrB,IAAIoF,EAAO6xB,EAAM8T,MACbjpC,EAAMsD,EAAKtD,IAAIsD,EAAK3B,MAExB,GAAI9D,EAAQmC,GAAM,CAGd,IAFA,IAAIkpC,EAAY,GAEP5jC,EAAI,EAAGA,EAAItF,EAAI9B,SAAUoH,OACR,IAAXtF,EAAIsF,IACX4jC,EAAU3lC,KAAKvD,EAAIsF,IAI3BhC,EAAKtD,IAAIsD,EAAK3B,MAAQunC,IA0K9BC,CAAahU,GAEN95B,GAwBPw5B,OArHS,SAAU3f,EAAK6xB,EAAS1oB,GACjC,IAAI+qB,EAAiBl0B,EAAI2E,QAAQ,MAAO,KACxC,GAAgB,eAAZwE,EAEA,OAAO+qB,EAAevvB,QAAQ,iBAAkBwvB,UAGpD,IACI,OAAO1L,mBAAmByL,GAC5B,MAAOl9B,GACL,OAAOk9B,IA4GXtnB,OAxGS,SAAgB5M,EAAKo0B,EAAgBjrB,GAG9C,GAAmB,IAAfnJ,EAAIhX,OACJ,OAAOgX,EAGX,IAAIgd,EAAwB,iBAARhd,EAAmBA,EAAMG,OAAOH,GAEpD,GAAgB,eAAZmJ,EACA,OAAOuY,OAAO1E,GAAQrY,QAAQ,kBAAmB,SAAU0vB,GACvD,MAAO,SAAWvkB,SAASukB,EAAGhoC,MAAM,GAAI,IAAM,QAKtD,IADA,IAAIioC,EAAM,GACDpvC,EAAI,EAAGA,EAAI83B,EAAOh0B,SAAU9D,EAAG,CACpC,IAAIK,EAAIy3B,EAAOnK,WAAW3tB,GAGhB,KAANK,GACS,KAANA,GACM,KAANA,GACM,MAANA,GACCA,GAAK,IAAQA,GAAK,IAClBA,GAAK,IAAQA,GAAK,IAClBA,GAAK,IAAQA,GAAK,IAEtB+uC,GAAOtX,EAAOO,OAAOr4B,GAIrBK,EAAI,IACJ+uC,GAAYZ,EAASnuC,GAIrBA,EAAI,KACJ+uC,GAAaZ,EAAS,IAAQnuC,GAAK,GAAMmuC,EAAS,IAAY,GAAJnuC,GAI1DA,EAAI,OAAUA,GAAK,MACnB+uC,GAAaZ,EAAS,IAAQnuC,GAAK,IAAOmuC,EAAS,IAASnuC,GAAK,EAAK,IAASmuC,EAAS,IAAY,GAAJnuC,IAIpGL,GAAK,EACLK,EAAI,QAAiB,KAAJA,IAAc,GAA8B,KAAvBy3B,EAAOnK,WAAW3tB,IACxDovC,GAAOZ,EAAS,IAAQnuC,GAAK,IACvBmuC,EAAS,IAASnuC,GAAK,GAAM,IAC7BmuC,EAAS,IAASnuC,GAAK,EAAK,IAC5BmuC,EAAS,IAAY,GAAJnuC,IAG3B,OAAO+uC,GAkDP5sB,SAnBW,SAAkB5c,GAC7B,SAAKA,GAAsB,iBAARA,OAITA,EAAI+B,aAAe/B,EAAI+B,YAAY6a,UAAY5c,EAAI+B,YAAY6a,SAAS5c,KAelFypC,SAxBW,SAAkBzpC,GAC7B,MAA+C,oBAAxClF,OAAOkB,UAAU8P,SAASvR,KAAKyF,IAwBtC0pC,MAxLQ,SAASA,EAAMpoC,EAAQI,EAAQwC,GACvC,IAAKxC,EACD,OAAOJ,EAGX,GAAsB,iBAAXI,EAAqB,CAC5B,GAAI7D,EAAQyD,GACRA,EAAOiC,KAAK7B,OACT,KAAIJ,GAA4B,iBAAXA,EAKxB,MAAO,CAACA,EAAQI,IAJXwC,IAAYA,EAAQ4kC,cAAgB5kC,EAAQ6Y,mBAAsBd,EAAI1hB,KAAKO,OAAOkB,UAAW0F,MAC9FJ,EAAOI,IAAU,GAMzB,OAAOJ,EAGX,IAAKA,GAA4B,iBAAXA,EAClB,MAAO,CAACA,GAAQ6Z,OAAOzZ,GAG3B,IAAIioC,EAAcroC,EAKlB,OAJIzD,EAAQyD,KAAYzD,EAAQ6D,KAC5BioC,EAAcd,EAAcvnC,EAAQ4C,IAGpCrG,EAAQyD,IAAWzD,EAAQ6D,IAC3BA,EAAOD,QAAQ,SAAU6B,EAAMlJ,GAC3B,GAAI6hB,EAAI1hB,KAAK+G,EAAQlH,GAAI,CACrB,IAAIwvC,EAAatoC,EAAOlH,GACpBwvC,GAAoC,iBAAfA,GAA2BtmC,GAAwB,iBAATA,EAC/DhC,EAAOlH,GAAKsvC,EAAME,EAAYtmC,EAAMY,GAEpC5C,EAAOiC,KAAKD,QAGhBhC,EAAOlH,GAAKkJ,IAGbhC,GAGJxG,OAAO6E,KAAK+B,GAAQsZ,OAAO,SAAUC,EAAKtf,GAC7C,IAAIN,EAAQqG,EAAO/F,GAOnB,OALIsgB,EAAI1hB,KAAK0gB,EAAKtf,GACdsf,EAAItf,GAAO+tC,EAAMzuB,EAAItf,GAAMN,EAAO6I,GAElC+W,EAAItf,GAAON,EAER4f,GACR0uB,M,6BC/FP,IAAI9vB,EAAUxE,OAAOrZ,UAAU6d,QAC3BgwB,EAAkB,OAEtB1vC,EAAOD,QAAU,CACb,QAAW,UACXwrC,WAAY,CACRoE,QAAS,SAAUzuC,GACf,OAAOwe,EAAQtf,KAAKc,EAAOwuC,EAAiB,MAEhDE,QAAS,SAAU1uC,GACf,OAAOA,IAGfyuC,QAAS,UACTC,QAAS,Y,cChBb5vC,EAAOD,QAAUkC,QAAQ,gB;;;;;;;GCezB,IAAI4tC,EAAQ,EAAQ,IAChBC,EAAQ,EAAQ,IAChBC,EAAU,EAAQ,IAClBC,EAAQ,EAAQ,IAChBnW,EAAQ,EAAQ,EAAR,CAAiB,kBACzBhe,EAAY,EAAQ,EAAR,CAAgB,WAC5BoG,EAAU,EAAQ,IAClBguB,EAAW,EAAQ,IACnBnlB,EAAiB,EAAQ,IAOzBolB,EAAe,qBACf9oC,EAAQ3D,MAAM5B,UAAUuF,MACxBuK,EAAWhR,OAAOkB,UAAU8P,SAU5BqZ,EAAQhrB,EAAOD,QAAU,SAASgK,GACpC,IAAIoW,EAAOpW,GAAW,GAEtB,SAASomC,EAAOvjB,EAAK0G,EAAKnuB,GACxBgrC,EAAOC,OAAOxjB,EAAK0G,EAAKnuB,GAa1B,OATA2lB,EAAeqlB,EAAQnlB,GAEvBmlB,EAAOzqC,OAAS,GAChByqC,EAAOE,QAAU,GACjBF,EAAOG,cAAgBnwB,EAAKmwB,cAC5BH,EAAOI,YAAcpwB,EAAKowB,YAC1BJ,EAAOK,OAASrwB,EAAKqwB,OACrBL,EAAO3nC,MAAQ,GAER2nC,GAwcT,SAASM,EAAc5hC,EAAM6hC,GAC3B,IAAK,IAAIzwC,EAAI,EAAGA,EAAIywC,EAAS3sC,OAAQ9D,IAAK,CACxC,IAAI++B,EAAS0R,EAASzwC,IACQ,IAA1B4O,EAAKnG,QAAQs2B,IACfnwB,EAAKzF,KAAK41B,IAgChB,SAAS2R,EAAQ9qC,GACf,IAAI8D,SAAc9D,EAElB,MAAa,WAAT8D,EACKA,EAIFgI,EAASvR,KAAKyF,GAClB6Z,QAAQwwB,EAAc,MAW3B,SAASU,EAAWC,EAAO5tB,GACzB,IACE,OAAO4tB,EAAMzjB,MAAMnK,GACnB,MAAO1e,GACP,OAAOA,GA/dXymB,EAAM5C,MAAQ,SAAe5nB,EAAMqE,GAEjC,GAAoB,mBAATrE,EAGT,OAFAqb,EAAU,sDACVnX,KAAK2rC,QAAQjnC,KAAK5I,GAKpB,IAEI4iB,EAFA1d,EAAShB,KAAK2rC,QACd3N,EAAMh9B,EAAO3B,OAGD,MAAZvD,EAAK,KACPqb,EAAU,gBAAkBi1B,KAAKlS,UAAUp+B,GAAQ,2BAA6BswC,KAAKlS,UAAUp+B,EAAKiI,OAAO,IAAM,iBACjHjI,EAAOA,EAAKiI,OAAO,IAGrB,IAAK,IAAIxI,EAAI,EAAGA,EAAIyiC,IAAOziC,GACrBmjB,EAAM1d,EAAOzF,GAAGO,EAAMqE,MACxBA,EAAKue,GAMT,GAAI,mBAAsBve,EACxB,MAAM,IAAImF,MAAM,4BAA8BxJ,EAAO,SAAWqE,GAIlE,OADCH,KAAKgB,OAAOlF,GAAQkE,KAAKgB,OAAOlF,IAAS,IAAI4I,KAAKvE,GAC5CH,MAQTsmB,EAAMolB,OAAS,SAAgBxjB,EAAK0G,EAAK+b,GACvC,IAAI3kC,EAAOhG,KAEXm1B,EAAM,oBAAqBjN,EAAIoS,OAAQpS,EAAIS,KAE3C,IAAI0jB,EAAM,EACNC,EAyYN,SAAsB3jB,GACpB,GAAmB,iBAARA,GAAmC,IAAfA,EAAItpB,QAA2B,MAAXspB,EAAI,GACrD,OAGF,IAAI4jB,EAAc5jB,EAAI3kB,QAAQ,KAC1BwoC,GAA8B,IAAjBD,EACbA,EACA5jB,EAAItpB,OACJotC,EAAY9jB,EAAI5kB,OAAO,EAAGyoC,GAAYxoC,QAAQ,OAElD,OAAsB,IAAfyoC,EACH9jB,EAAI5kB,OAAO,EAAG4kB,EAAI3kB,QAAQ,IAAK,EAAIyoC,SACnCnpC,EAtZYopC,CAAaxkB,EAAIS,MAAQ,GACrCgkB,EAAU,GACVC,GAAa,EACbC,EAAc,GAIdxnC,EAAU,GAGVvB,EAAQkC,EAAKlC,MAGbgpC,EAAe5kB,EAAIlnB,OACnB+rC,EAAY7kB,EAAI8kB,SAAW,GAC3B7qC,EA+cN,SAAiBhC,EAAIgB,GAInB,IAHA,IAAI8yB,EAAQ,IAAIl1B,MAAM4D,UAAUtD,OAAS,GACrCkX,EAAO,IAAIxX,MAAM4D,UAAUtD,OAAS,GAE/B9D,EAAI,EAAGA,EAAI04B,EAAM50B,OAAQ9D,IAChC04B,EAAM14B,GAAKoH,UAAUpH,EAAI,GACzBgb,EAAKhb,GAAK4F,EAAI8yB,EAAM14B,IAGtB,OAAO,WAEL,IAAK,IAAIA,EAAI,EAAGA,EAAI04B,EAAM50B,OAAQ9D,IAChC4F,EAAI8yB,EAAM14B,IAAMgb,EAAKhb,GAGvB,OAAO4E,EAAGmE,MAAMtE,KAAM2C,YA9dbsqC,CAAQtC,EAAKziB,EAAK,UAAW,OAAQ,UAmBhD,SAASznB,EAAKZ,GACZ,IAAIqtC,EAAqB,UAARrtC,EACb,KACAA,EAgBJ,GAbI+sC,IACF1kB,EAAIS,IAAMT,EAAIS,IAAI5kB,OAAO,GACzB6oC,GAAa,GAIQ,IAAnBD,EAAQttC,SACV6oB,EAAI8kB,QAAUD,EACd7kB,EAAIS,IAAM2jB,EAAYK,EAAUzkB,EAAIS,IAAI5kB,OAAOuoC,EAAUjtC,QACzDstC,EAAU,IAIO,WAAfO,EAMJ,GAAIb,GAAOvoC,EAAMzE,OACfi4B,aAAan1B,EAAM+qC,OADrB,CAMA,IAOIf,EACAzjB,EACAykB,EATA5uB,EA+TR,SAAqB2J,GACnB,IACE,OAAOqjB,EAASrjB,GAAKiB,SACrB,MAAOtpB,GACP,QAnUWutC,CAAYllB,GAEvB,GAAY,MAAR3J,EACF,OAAOpc,EAAK+qC,GAQd,MAAiB,IAAVxkB,GAAkB2jB,EAAMvoC,EAAMzE,QAUnC,GARAqpB,EAAQwjB,EADRC,EAAQroC,EAAMuoC,KACY9tB,GAC1B4uB,EAAQhB,EAAMgB,MAEO,kBAAVzkB,IAETwkB,EAAaA,GAAcxkB,IAGf,IAAVA,GAICykB,EAKL,GAAID,EAEFxkB,GAAQ,MAFV,CAMA,IAAI4R,EAASpS,EAAIoS,OACb+S,EAAaF,EAAMG,gBAAgBhT,GAGlC+S,GAAyB,YAAX/S,GACjByR,EAAc1mC,EAAS8nC,EAAMI,YAI1BF,GAAyB,SAAX/S,IACjB5R,GAAQ,GAMZ,IAAc,IAAVA,EACF,OAAOvmB,EAAK+qC,GAIVC,IACFjlB,EAAIilB,MAAQA,GAIdjlB,EAAIlnB,OAASgF,EAAK6lC,YAwTtB,SAAqB7qC,EAAQwsC,GAC3B,GAAsB,iBAAXA,IAAwBA,EACjC,OAAOxsC,EAIT,IAAIG,EAAMmqC,EAAM,GAAIkC,GAGpB,KAAM,KAAKxsC,GAAa,KAAKwsC,GAC3B,OAAOlC,EAAMnqC,EAAKH,GAGpB,IAAIzF,EAAI,EACJS,EAAI,EAGR,KAAOT,KAAKyF,GACVzF,IAGF,KAAOS,KAAKwxC,GACVxxC,IAIF,IAAKT,IAAKA,GAAK,EAAGA,IAChByF,EAAOzF,EAAIS,GAAKgF,EAAOzF,GAGnBA,EAAIS,UACCgF,EAAOzF,GAIlB,OAAO+vC,EAAMnqC,EAAKH,GA1VZ6qC,CAAYM,EAAMnrC,OAAQ8rC,GAC1BX,EAAMnrC,OACV,IAAIysC,EAAYtB,EAAM5tB,KAGtBvY,EAAK0nC,eAAevB,EAAOU,EAAa3kB,EAAK0G,EAAK,SAAU/uB,GAC1D,OAAIA,EACKY,EAAKysC,GAAcrtC,GAGxBstC,EACKhB,EAAMwB,eAAezlB,EAAK0G,EAAKnuB,QAO5C,SAAqB0rC,EAAOe,EAAYO,EAAWlvB,GACjD,GAAyB,IAArBkvB,EAAUpuC,OAAc,CAE1B,IAAIzD,EAAI2iB,EAAKkvB,EAAUpuC,QACvB,GAAIzD,GAAW,MAANA,GAAmB,MAANA,EAAW,OAAO6E,EAAKysC,GAI7C/X,EAAM,+BAAgCsY,EAAWvlB,EAAIS,KACrDgkB,EAAUc,EACVvlB,EAAIS,IAAM2jB,EAAYpkB,EAAIS,IAAI5kB,OAAOuoC,EAAUjtC,OAASstC,EAAQttC,QAG3DitC,GAA4B,MAAfpkB,EAAIS,IAAI,KACxBT,EAAIS,IAAM,IAAMT,EAAIS,IACpBikB,GAAa,GAIf1kB,EAAI8kB,QAAUD,GAA6C,MAAhCJ,EAAQA,EAAQttC,OAAS,GAChDstC,EAAQ9wB,UAAU,EAAG8wB,EAAQttC,OAAS,GACtCstC,GAGNxX,EAAM,aAAcgX,EAAMrwC,KAAM2xC,EAAWvlB,EAAIsB,aAE3C0jB,EACFf,EAAMyB,aAAaV,EAAYhlB,EAAK0G,EAAKnuB,GAEzC0rC,EAAMwB,eAAezlB,EAAK0G,EAAKnuB,GAjC/BotC,CAAY1B,EAAOe,EAAYO,EAAWlvB,UAxF1C+Y,aAAan1B,EAAM,MApCvB+lB,EAAIznB,KAAOA,EAGQ,YAAfynB,EAAIoS,SACNn4B,EAueJ,SAAc2rC,EAAK3tC,GACjB,OAAO,WACL,IAAIsa,EAAO,IAAI1b,MAAM4D,UAAUtD,OAAS,GAExCob,EAAK,GAAKqzB,EACV,IAAK,IAAIvyC,EAAI,EAAGyiC,EAAMr7B,UAAUtD,OAAQ9D,EAAIyiC,EAAKziC,IAC/Ckf,EAAKlf,EAAI,GAAKoH,UAAUpH,GAG1B4E,EAAGmE,MAAMtE,KAAMya,IAhfRszB,CAAK5rC,EAAM,SAAS2rC,EAAKjuC,GAC9B,GAAIA,GAA0B,IAAnBwF,EAAQhG,OAAc,OAAOyuC,EAAIjuC,IA2dlD,SAA6B+uB,EAAKvpB,EAAS5E,GACzC,IACE,IAAIqd,EAAOzY,EAAQkB,KAAK,KACxBqoB,EAAIxkB,IAAI,QAAS0T,GACjB8Q,EAAIwQ,KAAKthB,GACT,MAAOje,GACPY,EAAKZ,IAheHmuC,CAAoBpf,EAAKvpB,EAASyoC,MAKtC5lB,EAAI8kB,QAAUD,EACd7kB,EAAIsB,YAActB,EAAIsB,aAAetB,EAAIS,IAEzCloB,KAyJF6lB,EAAMonB,eAAiB,SAAwBvB,EAAO8B,EAAQ/lB,EAAK0G,EAAKzsB,GACtE,IAAInB,EAAShB,KAAKgB,OAGdF,EAAOqrC,EAAMrrC,KAGjB,IAAKA,GAAwB,IAAhBA,EAAKzB,OAChB,OAAO8C,IAGT,IACIrG,EAEAgB,EACAoxC,EACAC,EACAC,EANA7yC,EAAI,EAEJ8yC,EAAa,EAQjB,SAAS3qB,EAAM7jB,GACb,OAAIA,EACKsC,EAAKtC,GAGVtE,GAAKuF,EAAKzB,OACL8C,KAGTksC,EAAa,EACbvxC,EAAMgE,EAAKvF,KACXO,EAAOgB,EAAIhB,KACXoyC,EAAWhmB,EAAIlnB,OAAOlF,GACtBqyC,EAAiBntC,EAAOlF,GACxBsyC,EAAcH,EAAOnyC,QAEJwH,IAAb4qC,GAA2BC,EAK3BC,IAAgBA,EAAY1lB,QAAUwlB,GACpCE,EAAYvqC,OAA+B,UAAtBuqC,EAAYvqC,QAErCqkB,EAAIlnB,OAAOlF,GAAQsyC,EAAY5xC,MAGxBknB,EAAM0qB,EAAYvqC,SAG3BoqC,EAAOnyC,GAAQsyC,EAAc,CAC3BvqC,MAAO,KACP6kB,MAAOwlB,EACP1xC,MAAO0xC,QAGTI,KAnBS5qB,KAuBX,SAAS4qB,EAAczuC,GACrB,IAAIM,EAAKguC,EAAeE,KAKxB,GAFAD,EAAY5xC,MAAQ0rB,EAAIlnB,OAAOlE,EAAIhB,MAE/B+D,EAIF,OAFAuuC,EAAYvqC,MAAQhE,OACpB6jB,EAAM7jB,GAIR,IAAKM,EAAI,OAAOujB,IAEhB,IACEvjB,EAAG+nB,EAAK0G,EAAK0f,EAAeJ,EAAUpxC,EAAIhB,MAC1C,MAAOuR,GACPihC,EAAcjhC,IAIlBqW,KAkBF4C,EAAMioB,IAAM,SAAapuC,GACvB,IAAIiM,EAAS,EACTmS,EAAO,IAIX,GAAkB,mBAAPpe,EAAmB,CAG5B,IAFA,IAAI+zB,EAAM/zB,EAEHpB,MAAMC,QAAQk1B,IAAuB,IAAfA,EAAI70B,QAC/B60B,EAAMA,EAAI,GAIO,mBAARA,IACT9nB,EAAS,EACTmS,EAAOpe,GAIX,IAAIquC,EAAYjxB,EAAQ7a,EAAMhH,KAAKiH,UAAWyJ,IAE9C,GAAyB,IAArBoiC,EAAUnvC,OACZ,MAAM,IAAIV,UAAU,+CAGtB,IAAK,IAAIpD,EAAI,EAAGA,EAAIizC,EAAUnvC,OAAQ9D,IAAK,CAGzC,GAAkB,mBAFd4E,EAAKquC,EAAUjzC,IAGjB,MAAM,IAAIoD,UAAU,yDAA2DstC,EAAQ9rC,IAIzFg1B,EAAM,YAAa5W,EAAMpe,EAAGrE,MAAQ,eAEpC,IAAIqwC,EAAQ,IAAIf,EAAM7sB,EAAM,CAC1BkwB,UAAWzuC,KAAK4rC,cAChBE,QAAQ,EACRnT,KAAK,GACJx4B,GAEHgsC,EAAMgB,WAAQ7pC,EAEdtD,KAAK8D,MAAMY,KAAKynC,GAGlB,OAAOnsC,MAgBTsmB,EAAM6mB,MAAQ,SAAe5uB,GAC3B,IAAI4uB,EAAQ,IAAIhC,EAAM5sB,GAElB4tB,EAAQ,IAAIf,EAAM7sB,EAAM,CAC1BkwB,UAAWzuC,KAAK4rC,cAChBE,OAAQ9rC,KAAK8rC,OACbnT,KAAK,GACJwU,EAAMuB,SAAS3xC,KAAKowC,IAKvB,OAHAhB,EAAMgB,MAAQA,EAEdntC,KAAK8D,MAAMY,KAAKynC,GACTgB,GAIT9B,EAAQ/uB,OAAO,OAAO1Z,QAAQ,SAAS03B,GACrChU,EAAMgU,GAAU,SAAS/b,GACvB,IAAI4uB,EAAQntC,KAAKmtC,MAAM5uB,GAEvB,OADA4uB,EAAM7S,GAAQh2B,MAAM6oC,EAAOzqC,EAAMhH,KAAKiH,UAAW,IAC1C3C,S;;;;;;;GC/eX,IAAIm1B,EAAQ,EAAQ,EAAR,CAAiB,wBACzB5X,EAAU,EAAQ,IAClB6tB,EAAQ,EAAQ,IAChBC,EAAU,EAAQ,IAOlB3oC,EAAQ3D,MAAM5B,UAAUuF,MACxBuK,EAAWhR,OAAOkB,UAAU8P,SAgBhC,SAASk+B,EAAM5sB,GACbve,KAAKue,KAAOA,EACZve,KAAK8D,MAAQ,GAEbqxB,EAAM,SAAU5W,GAGhBve,KAAKqrC,QAAU,GAhBjB/vC,EAAOD,QAAU8vC,EAwBjBA,EAAMhuC,UAAUmwC,gBAAkB,SAAyBhT,GACzD,GAAIt6B,KAAKqrC,QAAQsD,KACf,OAAO,EAGT,IAAI7yC,EAAOw+B,EAAOj5B,cAMlB,MAJa,SAATvF,GAAoBkE,KAAKqrC,QAAc,OACzCvvC,EAAO,OAGFgqB,QAAQ9lB,KAAKqrC,QAAQvvC,KAQ9BqvC,EAAMhuC,UAAUowC,SAAW,WACzB,IAAIlC,EAAUpvC,OAAO6E,KAAKd,KAAKqrC,SAG3BrrC,KAAKqrC,QAAQjvC,MAAQ4D,KAAKqrC,QAAQuD,MACpCvD,EAAQ3mC,KAAK,QAGf,IAAK,IAAInJ,EAAI,EAAGA,EAAI8vC,EAAQhsC,OAAQ9D,IAElC8vC,EAAQ9vC,GAAK8vC,EAAQ9vC,GAAGs6B,cAG1B,OAAOwV,GAQTF,EAAMhuC,UAAUuxC,SAAW,SAAkBxmB,EAAK0G,EAAKzsB,GACrD,IAAIkqC,EAAM,EACNvoC,EAAQ9D,KAAK8D,MACjB,GAAqB,IAAjBA,EAAMzE,OACR,OAAO8C,IAGT,IAAIm4B,EAASpS,EAAIoS,OAAOj5B,cACT,SAAXi5B,GAAsBt6B,KAAKqrC,QAAc,OAC3C/Q,EAAS,OAGXpS,EAAIilB,MAAQntC,KAIZ,SAASS,EAAKZ,GAEZ,GAAIA,GAAe,UAARA,EACT,OAAOsC,IAIT,GAAItC,GAAe,WAARA,EACT,OAAOsC,EAAKtC,GAGd,IAAIssC,EAAQroC,EAAMuoC,KAClB,IAAKF,EACH,OAAOhqC,EAAKtC,GAGd,GAAIssC,EAAM7R,QAAU6R,EAAM7R,SAAWA,EACnC,OAAO75B,EAAKZ,GAGVA,EACFssC,EAAMyB,aAAa/tC,EAAKqoB,EAAK0G,EAAKnuB,GAElC0rC,EAAMwB,eAAezlB,EAAK0G,EAAKnuB,GAzBnCA,IA0DF0qC,EAAMhuC,UAAUoL,IAAM,WAGpB,IAFA,IAAIsmC,EAAUtxB,EAAQ7a,EAAMhH,KAAKiH,YAExBpH,EAAI,EAAGA,EAAIszC,EAAQxvC,OAAQ9D,IAAK,CACvC,IAAImwC,EAASmD,EAAQtzC,GAErB,GAAsB,mBAAXmwC,EAAuB,CAChC,IAAIzmC,EAAOgI,EAASvR,KAAKgwC,GACrBhzB,EAAM,sDAAwDzT,EAClE,MAAM,IAAItG,UAAU+Z,GAGtB,IAAIyzB,EAAQf,EAAM,IAAK,GAAIM,GAC3BS,EAAM7R,YAASh3B,EAEftD,KAAKqrC,QAAQsD,MAAO,EACpB3uC,KAAK8D,MAAMY,KAAKynC,GAGlB,OAAOnsC,MAGTqrC,EAAQzoC,QAAQ,SAAS03B,GACvB6Q,EAAMhuC,UAAUm9B,GAAU,WAGxB,IAFA,IAAIuU,EAAUtxB,EAAQ7a,EAAMhH,KAAKiH,YAExBpH,EAAI,EAAGA,EAAIszC,EAAQxvC,OAAQ9D,IAAK,CACvC,IAAImwC,EAASmD,EAAQtzC,GAErB,GAAsB,mBAAXmwC,EAAuB,CAChC,IAAIzmC,EAAOgI,EAASvR,KAAKgwC,GACrBhzB,EAAM,SAAW4hB,EAAS,6CAA+Cr1B,EAC7E,MAAM,IAAIK,MAAMoT,GAGlByc,EAAM,QAASmF,EAAQt6B,KAAKue,MAE5B,IAAI4tB,EAAQf,EAAM,IAAK,GAAIM,GAC3BS,EAAM7R,OAASA,EAEft6B,KAAKqrC,QAAQ/Q,IAAU,EACvBt6B,KAAK8D,MAAMY,KAAKynC,GAGlB,OAAOnsC,S;;;;;;;GCtMX,IAAI8uC,EAAa,EAAQ,KACrB3Z,EAAQ,EAAQ,EAAR,CAAiB,wBAOzB/3B,EAAiBnB,OAAOkB,UAAUC,eAStC,SAASguC,EAAM7sB,EAAMlZ,EAASlF,GAC5B,KAAMH,gBAAgBorC,GACpB,OAAO,IAAIA,EAAM7sB,EAAMlZ,EAASlF,GAGlCg1B,EAAM,SAAU5W,GAChB,IAAI9C,EAAOpW,GAAW,GAEtBrF,KAAK0rC,OAASvrC,EACdH,KAAKlE,KAAOqE,EAAGrE,MAAQ,cACvBkE,KAAKgB,YAASsC,EACdtD,KAAKue,UAAOjb,EACZtD,KAAK+uC,OAASD,EAAWvwB,EAAMve,KAAKc,KAAO,GAAI2a,GAG/Czb,KAAK+uC,OAAOC,UAAqB,MAATzwB,EACxBve,KAAK+uC,OAAOE,WAAsB,MAAT1wB,IAA6B,IAAb9C,EAAKkd,IAqHhD,SAASuW,EAAa7oC,GACpB,GAAmB,iBAARA,GAAmC,IAAfA,EAAIhH,OACjC,OAAOgH,EAGT,IACE,OAAOy4B,mBAAmBz4B,GAC1B,MAAOxG,GAMP,MALIA,aAAesvC,WACjBtvC,EAAIiM,QAAU,2BAA8BzF,EAAM,IAClDxG,EAAI2mB,OAAS3mB,EAAIs0B,WAAa,KAG1Bt0B,GApJVvE,EAAOD,QAAU+vC,EA+BjBA,EAAMjuC,UAAUywC,aAAe,SAAsB/pC,EAAOqkB,EAAK0G,EAAKnuB,GACpE,IAAIN,EAAKH,KAAK0rC,OAEd,GAAkB,IAAdvrC,EAAGd,OAEL,OAAOoB,EAAKoD,GAGd,IACE1D,EAAG0D,EAAOqkB,EAAK0G,EAAKnuB,GACpB,MAAOZ,GACPY,EAAKZ,KAaTurC,EAAMjuC,UAAUwwC,eAAiB,SAAgBzlB,EAAK0G,EAAKnuB,GACzD,IAAIN,EAAKH,KAAK0rC,OAEd,GAAIvrC,EAAGd,OAAS,EAEd,OAAOoB,IAGT,IACEN,EAAG+nB,EAAK0G,EAAKnuB,GACb,MAAOZ,GACPY,EAAKZ,KAaTurC,EAAMjuC,UAAUurB,MAAQ,SAAenK,GACrC,IAAImK,EAEJ,GAAY,MAARnK,EAAc,CAEhB,GAAIve,KAAK+uC,OAAOE,WAGd,OAFAjvC,KAAKgB,OAAS,GACdhB,KAAKue,KAAO,IACL,EAIT,GAAIve,KAAK+uC,OAAOC,UAGd,OAFAhvC,KAAKgB,OAAS,CAAC,EAAKkuC,EAAa3wB,IACjCve,KAAKue,KAAOA,GACL,EAITmK,EAAQ1oB,KAAK+uC,OAAOtkC,KAAK8T,GAG3B,IAAKmK,EAGH,OAFA1oB,KAAKgB,YAASsC,EACdtD,KAAKue,UAAOjb,GACL,EAITtD,KAAKgB,OAAS,GACdhB,KAAKue,KAAOmK,EAAM,GAKlB,IAHA,IAAI5nB,EAAOd,KAAKc,KACZE,EAAShB,KAAKgB,OAETzF,EAAI,EAAGA,EAAImtB,EAAMrpB,OAAQ9D,IAAK,CACrC,IACIuH,EADMhC,EAAKvF,EAAI,GACJO,KACXuK,EAAM6oC,EAAaxmB,EAAMntB,SAEjB+H,IAAR+C,GAAuBjJ,EAAe1B,KAAKsF,EAAQ8B,KACrD9B,EAAO8B,GAAQuD,GAInB,OAAO,I;;;;;;;GC5IT,IAAIwkC,EAAQ,EAAQ,IAChBU,EAAW,EAAQ,IACnB5tB,EAAK,EAAQ,IAQjBriB,EAAOD,QAAU,SAAegK,GAC9B,IAAIoW,EAAOovB,EAAM,GAAIxlC,GACjB+pC,EAAazxB,EAAGM,MAYpB,MAVuB,mBAAZ5Y,IACT+pC,EAAa/pC,EACboW,OAAOnY,QAGIA,IAATmY,QAA+CnY,IAAzBmY,EAAKyC,kBAE7BzC,EAAKyC,iBAAkB,GAGlB,SAAegK,EAAK0G,EAAKnuB,GAC9B,IAAKynB,EAAIpa,MAAO,CACd,IAAIzH,EAAMklC,EAASrjB,GAAKpa,MACxBoa,EAAIpa,MAAQshC,EAAW/oC,EAAKoV,GAG9Bhb,O,gBC3CJ,IAAIyL,EAAS,EAAQ,IACjBpO,EAASoO,EAAOpO,OAGpB,SAASuxC,EAAWC,EAAKC,GACvB,IAAK,IAAIzyC,KAAOwyC,EACdC,EAAIzyC,GAAOwyC,EAAIxyC,GAWnB,SAAS0yC,EAAYtb,EAAKpU,EAAkBzgB,GAC1C,OAAOvB,EAAOo2B,EAAKpU,EAAkBzgB,GATnCvB,EAAOU,MAAQV,EAAOC,OAASD,EAAOO,aAAeP,EAAO2xC,gBAC9Dn0C,EAAOD,QAAU6Q,GAGjBmjC,EAAUnjC,EAAQ7Q,GAClBA,EAAQyC,OAAS0xC,GAQnBH,EAAUvxC,EAAQ0xC,GAElBA,EAAWhxC,KAAO,SAAU01B,EAAKpU,EAAkBzgB,GACjD,GAAmB,iBAAR60B,EACT,MAAM,IAAIv1B,UAAU,iCAEtB,OAAOb,EAAOo2B,EAAKpU,EAAkBzgB,IAGvCmwC,EAAWzxC,MAAQ,SAAUC,EAAMG,EAAMO,GACvC,GAAoB,iBAATV,EACT,MAAM,IAAIW,UAAU,6BAEtB,IAAI0D,EAAMvE,EAAOE,GAUjB,YATasF,IAATnF,EACsB,iBAAbO,EACT2D,EAAIlE,KAAKA,EAAMO,GAEf2D,EAAIlE,KAAKA,GAGXkE,EAAIlE,KAAK,GAEJkE,GAGTmtC,EAAWnxC,YAAc,SAAUL,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIW,UAAU,6BAEtB,OAAOb,EAAOE,IAGhBwxC,EAAWC,gBAAkB,SAAUzxC,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIW,UAAU,6BAEtB,OAAOuN,EAAOwjC,WAAW1xC,K;;;;;GC/C3B1C,EAAOD,QAkIP,SAA6Bs0C,EAAUtqC,GACrC,IAAIoW,EAAOpW,GAAW,GAGlBJ,EAAOwW,EAAKxW,MAAQ,aAGpBjE,EAeN,SAAuB2uC,EAAUC,GAC/B,QAAiBtsC,IAAbqsC,EACF,OAGF,IAAI3uC,EAAS,GAEb,GAAwB,iBAAb2uC,EACT,MAAM,IAAIhxC,UAAU,kCAIL2E,IAAbssC,IACFA,GAAW,GAGb,GAAwB,iBAAbA,GAA6C,kBAAbA,EACzC,MAAM,IAAIjxC,UAAU,wCAGtB,GAAwB,iBAAbixC,GAAyBC,EAAkBpd,KAAKmd,GACzD,MAAM,IAAIjxC,UAAU,sCAItB,IAAI7C,EAAOg0C,EAASH,GAGhBI,EAAiBjd,EAAYL,KAAK32B,GAGlCk0C,EAAmC,iBAAbJ,EACtBA,GAAYK,EAAUn0C,GACtBg0C,EAASF,GACTM,EAAsC,iBAAjBF,GAA6BA,IAAiBl0C,GAGnEo0C,IAAgBH,GAAkBI,EAAkB1d,KAAK32B,MAC3DkF,EAAO,aAAelF,IAIpBi0C,GAAkBG,KACpBlvC,EAAO2uC,SAAWO,EACdF,EACAl0C,GAGN,OAAOkF,EA/DMovC,CAAaT,EAAUl0B,EAAKm0B,UAGzC,OAyEF,SAAiBzuC,GACf,IAAIue,EAAave,EAAIue,WACjBza,EAAO9D,EAAI8D,KAEf,IAAKA,GAAwB,iBAATA,IAAsB8tB,EAAaN,KAAKxtB,GAC1D,MAAM,IAAItG,UAAU,gBAItB,IAAI00B,EAAS7c,OAAOvR,GAAM5D,cAG1B,GAAIqe,GAAoC,iBAAfA,EAIvB,IAHA,IAAIgE,EACA1iB,EAAS/E,OAAO6E,KAAK4e,GAAYlD,OAE5BjhB,EAAI,EAAGA,EAAIyF,EAAO3B,OAAQ9D,IAAK,CAGtC,IAAI8K,EAA2B,OAF/Bqd,EAAQ1iB,EAAOzF,IAECwI,QAAQ,GACpBssC,EAAQ3wB,EAAWgE,IACnByP,EAAQzT,EAAWgE,IAEvB2P,GAAU,KAAO3P,EAAQ,IAAMrd,EAInC,OAAOgtB,EApGA7xB,CAAO,IAAI8uC,EAAmBrrC,EAAMjE,KA3I7C1F,EAAOD,QAAQ4iB,MA2Sf,SAAgBoV,GACd,IAAKA,GAA4B,iBAAXA,EACpB,MAAM,IAAI10B,UAAU,+BAGtB,IAAI+pB,EAAQ6nB,EAAwB9lC,KAAK4oB,GAEzC,IAAK3K,EACH,MAAM,IAAI/pB,UAAU,uBAItB,IAGI7B,EAGAN,EANA0F,EAAQwmB,EAAM,GAAGrpB,OACjB4F,EAAOyjB,EAAM,GAAGrnB,cAGhBqxB,EAAQ,GACR1xB,EAAS,GAIbkB,EAAQ2wB,EAAaY,UAAoC,MAAxB/K,EAAM,GAAG3kB,QAAQ,GAC9C7B,EAAQ,EACRA,EAGJ,KAAQwmB,EAAQmK,EAAapoB,KAAK4oB,IAAU,CAC1C,GAAI3K,EAAMxmB,QAAUA,EAClB,MAAM,IAAIvD,UAAU,4BAOtB,GAJAuD,GAASwmB,EAAM,GAAGrpB,OAClBvC,EAAM4rB,EAAM,GAAGrnB,cACf7E,EAAQksB,EAAM,IAEc,IAAxBgK,EAAM1uB,QAAQlH,GAChB,MAAM,IAAI6B,UAAU,+BAGtB+zB,EAAMhuB,KAAK5H,GAEPA,EAAIkH,QAAQ,KAAO,IAAMlH,EAAIuC,OAUN,iBAAhB2B,EAAOlE,KAID,MAAbN,EAAM,KAERA,EAAQA,EACLuH,OAAO,EAAGvH,EAAM6C,OAAS,GACzB2b,QAAQgY,EAAa,OAG1BhyB,EAAOlE,GAAON,IAnBZM,EAAMA,EAAI4F,MAAM,GAAI,GACpBlG,EAAQg0C,EAAYh0C,GAGpBwE,EAAOlE,GAAON,GAkBlB,IAAe,IAAX0F,GAAgBA,IAAUmxB,EAAOh0B,OACnC,MAAM,IAAIV,UAAU,4BAGtB,OAAO,IAAI2xC,EAAmBrrC,EAAMjE,IAzWtC,IAAI8uC,EAAW,EAAQ,GAAQA,SAC3BhyC,EAAS,EAAQ,KAAeA,OAOhC2yC,EAA8B,yCAO9BN,EAAoB,kBACpBO,EAA4B,qBAO5Bb,EAAoB,yBAUpB7c,EAAc,uBAOdC,EAAe,WA2BfJ,EAAe,oKACfC,EAAc,0BACdC,EAAe,gCAwBf4d,EAAmB,sIAgBnBJ,EAA0B,mDAsI9B,SAASC,EAAan6B,GACpB,IAAIqS,EAAQioB,EAAiBlmC,KAAK4L,GAElC,IAAKqS,EACH,MAAM,IAAI/pB,UAAU,gCAGtB,IAEInC,EAFAgjB,EAAUkJ,EAAM,GAAGrnB,cAKnBuvC,EAJUloB,EAAM,GAIC1N,QAAQ01B,EAA2BG,GAExD,OAAQrxB,GACN,IAAK,aACHhjB,EAAQyzC,EAAUW,GAClB,MACF,IAAK,QACHp0C,EAAQsB,EAAOU,KAAKoyC,EAAQ,UAAU3jC,SAAS,QAC/C,MACF,QACE,MAAM,IAAItO,UAAU,yCAGxB,OAAOnC,EAWT,SAASyzC,EAAW5pC,GAElB,OAAOmQ,OAAOnQ,GAAK2U,QAAQ60B,EAAmB,KA4FhD,SAASgB,EAASx6B,EAAKy6B,GACrB,OAAOt6B,OAAOu6B,aAAa5qB,SAAS2qB,EAAK,KAW3C,SAASE,EAASC,GAChB,MAAO,IAAMz6B,OAAOy6B,GACjB/nB,WAAW,GACXjc,SAAS,IACT4oB,cAWL,SAAS1C,EAAS9sB,GAGhB,MAAO,IAFGmQ,OAAOnQ,GAEA2U,QAAQiY,EAAc,QAAU,IAWnD,SAASod,EAAShqC,GAChB,IAAIgQ,EAAMG,OAAOnQ,GAMjB,MAAO,UAHO6qC,mBAAmB76B,GAC9B2E,QAAQy1B,EAA6BO,GAc1C,SAASV,EAAoBrrC,EAAMya,GACjC1f,KAAKiF,KAAOA,EACZjF,KAAK0f,WAAaA,I;;;;;GC3bpBpkB,EAAOD,QAwDP,SAAe81C,EAAQ9rC,GACrB,GAAc,MAAV8rC,EACF,MAAM,IAAIxyC,UAAU,+BAItB,IAAIyyC,EA4BN,SAAkBjwC,GAEhB,GAAqB,mBAAVkwC,GAAwBlwC,aAAekwC,EAChD,OAAO,EAIT,OAAOlwC,GAAsB,iBAARA,GACnB,UAAWA,GAAoC,kBAA7B8L,EAASvR,KAAKyF,EAAImwC,QACpC,UAAWnwC,GAAoC,kBAA7B8L,EAASvR,KAAKyF,EAAI4+B,QACpC,QAAS5+B,GAA0B,iBAAZA,EAAIowC,KAC3B,SAAUpwC,GAA2B,iBAAbA,EAAInD,KAvChBwzC,CAAQL,GAClB/yB,EAAO/Y,GAAmC,kBAAjBA,EAAQ+Y,KACjC/Y,EAAQ+Y,KACRgzB,EAGJ,IAAKA,GAA6B,iBAAXD,IAAwBrzC,OAAOigB,SAASozB,GAC7D,MAAM,IAAIxyC,UAAU,uDAItB,IAAI8yC,EAAML,GAuCM/R,EAtCJ8R,EAuCRpR,EAAQV,EAAKU,MAAMvtB,UAAUvF,SAAS,IAGnC,IAFIoyB,EAAKrhC,KAAKiP,SAAS,IAEV,IAAM8yB,EAAQ,KA3FpC,SAAoBoR,GAClB,GAAsB,IAAlBA,EAAO9xC,OAET,MAAO,kCAIT,IAAIwW,EAAO67B,EACRC,WAAW,QACXC,OAAOT,EAAQ,QACfU,OAAO,UACPh2B,UAAU,EAAG,IAOhB,MAAO,KAJqB,iBAAXs1B,EACbrzC,OAAO8/B,WAAWuT,EAAQ,QAC1BA,EAAO9xC,QAEM4N,SAAS,IAAM,IAAM4I,EAAO,IAgCzCi8B,CAAUX,GAqChB,IAAkB9R,EACZU,EApCJ,OAAO3hB,EACH,KAAOqzB,EACPA,GAxEN,IAAIC,EAAS,EAAQ,IACjBL,EAAQ,EAAQ,IAAMA,MAOtBpkC,EAAWhR,OAAOkB,UAAU8P,U;;;;;;GCdhC,IAAI8kC,EAAgC,iCA+EpC,SAAS3U,EAAerzB,GACtB,IAAIN,EAAYM,GAAQoH,KAAK8M,MAAMlU,GAGnC,MAA4B,iBAAdN,EACVA,EACA4zB,IA9EN/hC,EAAOD,QAWP,SAAgB22C,EAAYC,GAE1B,IAAIC,EAAgBF,EAAW,qBAC3BG,EAAYH,EAAW,iBAG3B,IAAKE,IAAkBC,EACrB,OAAO,EAMT,IAAI5W,EAAeyW,EAAW,iBAC9B,GAAIzW,GAAgBwW,EAA8Btf,KAAK8I,GACrD,OAAO,EAIT,GAAI4W,GAA2B,MAAdA,EAAmB,CAClC,IAAI10B,EAAOw0B,EAAiB,KAE5B,IAAKx0B,EACH,OAAO,EAKT,IAFA,IAAI20B,GAAY,EACZC,EAkDR,SAAyBh8B,GAMvB,IALA,IAAIsiB,EAAM,EACNxuB,EAAO,GACPqK,EAAQ,EAGHjZ,EAAI,EAAGyiC,EAAM3nB,EAAIhX,OAAQ9D,EAAIyiC,EAAKziC,IACzC,OAAQ8a,EAAI6S,WAAW3tB,IACrB,KAAK,GACCiZ,IAAUmkB,IACZnkB,EAAQmkB,EAAMp9B,EAAI,GAEpB,MACF,KAAK,GACH4O,EAAKzF,KAAK2R,EAAIwF,UAAUrH,EAAOmkB,IAC/BnkB,EAAQmkB,EAAMp9B,EAAI,EAClB,MACF,QACEo9B,EAAMp9B,EAAI,EAQhB,OAFA4O,EAAKzF,KAAK2R,EAAIwF,UAAUrH,EAAOmkB,IAExBxuB,EA5ES8zB,CAAekU,GACpB52C,EAAI,EAAGA,EAAI82C,EAAQhzC,OAAQ9D,IAAK,CACvC,IAAImtB,EAAQ2pB,EAAQ92C,GACpB,GAAImtB,IAAUjL,GAAQiL,IAAU,KAAOjL,GAAQ,KAAOiL,IAAUjL,EAAM,CACpE20B,GAAY,EACZ,OAIJ,GAAIA,EACF,OAAO,EAKX,GAAIF,EAAe,CACjB,IAAI9V,EAAe6V,EAAW,iBAG9B,KAFqB7V,GAAkBgB,EAAchB,IAAiBgB,EAAc8U,IAGlF,OAAO,EAIX,OAAO,I;;;;;;GC0CT,SAASI,EAAc3V,EAAOz6B,GAC5B,MAAO,CACLsS,MAAOmoB,EAAMnoB,MACbmkB,IAAKgE,EAAMhE,IACXz2B,MAAOA,GASX,SAASqwC,EAAiB5V,GACxB,MAAO,CACLnoB,MAAOmoB,EAAMnoB,MACbmkB,IAAKgE,EAAMhE,KASf,SAAS6Z,EAAkBpuC,EAAGnG,GAC5B,OAAOmG,EAAElC,MAAQjE,EAAEiE,MAQrB,SAASuwC,EAAkBruC,EAAGnG,GAC5B,OAAOmG,EAAEoQ,MAAQvW,EAAEuW,MAlJrBlZ,EAAOD,QAYP,SAAsB2C,EAAMqY,EAAKhR,GAC/B,GAAmB,iBAARgR,EACT,MAAM,IAAI1X,UAAU,iCAGtB,IAAIuD,EAAQmU,EAAIrS,QAAQ,KAExB,IAAe,IAAX9B,EACF,OAAQ,EAIV,IAAIpD,EAAMuX,EAAI3T,MAAMR,EAAQ,GAAG4I,MAAM,KACjCw0B,EAAS,GAGbA,EAAOr6B,KAAOoR,EAAI3T,MAAM,EAAGR,GAG3B,IAAK,IAAI3G,EAAI,EAAGA,EAAIuD,EAAIO,OAAQ9D,IAAK,CACnC,IAAIohC,EAAQ79B,EAAIvD,GAAGuP,MAAM,KACrB0J,EAAQ2R,SAASwW,EAAM,GAAI,IAC3BhE,EAAMxS,SAASwW,EAAM,GAAI,IAGzB31B,MAAMwN,IACRA,EAAQxW,EAAO26B,EACfA,EAAM36B,EAAO,GAEJgJ,MAAM2xB,KACfA,EAAM36B,EAAO,GAIX26B,EAAM36B,EAAO,IACf26B,EAAM36B,EAAO,GAIXgJ,MAAMwN,IAAUxN,MAAM2xB,IAAQnkB,EAAQmkB,GAAOnkB,EAAQ,GAKzD8qB,EAAO56B,KAAK,CACV8P,MAAOA,EACPmkB,IAAKA,IAIT,GAAI2G,EAAOjgC,OAAS,EAElB,OAAQ,EAGV,OAAOgG,GAAWA,EAAQq6B,QAU5B,SAAwBJ,GAGtB,IAFA,IAAIoT,EAAUpT,EAAO/5B,IAAI+sC,GAAc91B,KAAKi2B,GAEnChsC,EAAI,EAAGlL,EAAI,EAAGA,EAAIm3C,EAAQrzC,OAAQ9D,IAAK,CAC9C,IAAIohC,EAAQ+V,EAAQn3C,GAChBo3C,EAAUD,EAAQjsC,GAElBk2B,EAAMnoB,MAAQm+B,EAAQha,IAAM,EAE9B+Z,IAAUjsC,GAAKk2B,EACNA,EAAMhE,IAAMga,EAAQha,MAE7Bga,EAAQha,IAAMgE,EAAMhE,IACpBga,EAAQzwC,MAAQwE,KAAKS,IAAIwrC,EAAQzwC,MAAOy6B,EAAMz6B,QAKlDwwC,EAAQrzC,OAASoH,EAAI,EAGrB,IAAImsC,EAAWF,EAAQl2B,KAAKg2B,GAAkBjtC,IAAIgtC,GAKlD,OAFAK,EAAS3tC,KAAOq6B,EAAOr6B,KAEhB2tC,EAnCHC,CAAcvT,GACdA,I;;;;;GCtENhkC,EAAOD,QAgNP,SAAoB6sB,EAAK4qB,GACvB,IAAK5qB,EACH,MAAM,IAAIvpB,UAAU,4BAGtB,IAAKm0C,EACH,MAAM,IAAIn0C,UAAU,8BAGtB,IAAIo0C,EAAQC,EAAS9qB,EAAK4qB,GAG1B,OAFWC,EAAMA,EAAM1zC,OAAS,IAzNlC/D,EAAOD,QAAQkN,IAAMyqC,EACrB13C,EAAOD,QAAQikB,QAAUA,EAOzB,IAAI2zB,EAAY,EAAQ,KACpBC,EAAS,EAAQ,KAOjBC,EAAe,WACfC,EAAOF,EAAOG,QACdC,EAAUJ,EAAOj1B,MAOjBs1B,EAAY,CACdC,UAAW,CAAC,iBAAkB,aAC9BC,SAAU,CAAC,cAAe,WAC1BC,YAAa,CAAC,aAAc,gBAAiB,iBAAkB,aAYjE,SAASV,EAAU9qB,EAAK4qB,GAEtB,IAAIC,EAAQE,EAAU/qB,GAEtB,IAAK4qB,EAEH,OAAOC,EAGY,mBAAVD,IACTA,EAAQxzB,EAAQwzB,IAGlB,IAAK,IAAIv3C,EAAI,EAAGA,EAAIw3C,EAAM1zC,OAAS,EAAG9D,IAChCu3C,EAAMC,EAAMx3C,GAAIA,KAEpBw3C,EAAM1zC,OAAS9D,EAAI,GAGrB,OAAOw3C,EAUT,SAASzzB,EAASjZ,GAChB,IAAKA,EACH,MAAM,IAAI1H,UAAU,wBAGtB,IAAIm0C,EAEJ,GAAmB,iBAARzsC,EACTysC,EAAQ,CAACzsC,OACJ,KAAItH,MAAMC,QAAQqH,GAGvB,MAAM,IAAI1H,UAAU,8BAFpBm0C,EAAQzsC,EAAI3D,QAKd,IAAK,IAAInH,EAAI,EAAGA,EAAIu3C,EAAMzzC,OAAQ9D,IAChC8K,EAAMysC,EAAMv3C,GAEPg4C,EAAUn2C,eAAeiJ,KAK9BA,EAAMktC,EAAUltC,GAChBysC,EAAMluC,OAAON,MAAMwuC,EAAO,CAACv3C,EAAG,GAAG+gB,OAAOjW,IACxC9K,GAAK8K,EAAIhH,OAAS,GAGpB,OA2BF,SAAuBs0C,GAErB,IAAI3V,EAAM2V,EAAat0C,OACvB,OAAe,IAAR2+B,EACH4V,EACQ,IAAR5V,GA6JgB6V,EA5JFF,EAAa,GA6J3BG,EAAWD,EAAO,GAClBE,EAAaD,EAASE,OACtBC,EAA8B,SAAfF,EACfG,EAAcL,EAAO,GAElB,SAAgBM,GACrB,IAAKf,EAAKe,GAAO,OAAO,EAExB,IAAIC,EAAKd,EAAQa,GAGjB,GAFWC,EAAGJ,SAEDD,EAAY,CACvB,GAAIE,IAAiBG,EAAGC,sBAEtB,OAAO,EAITD,EAAKH,EACDG,EAAGE,gBACHF,EAAGG,sBAGT,OAAOH,EAAG1rB,MAAMorB,EAAUI,MAvETM,EA5GFb,EA6GV,SAAgBQ,GACrB,IAAKf,EAAKe,GAAO,OAAO,EAMxB,IAJA,IACIM,EADAL,EAAKd,EAAQa,GAEbH,EAAOI,EAAGJ,OAELz4C,EAAI,EAAGA,EAAIi5C,EAAQn1C,OAAQ9D,IAAK,CACvC,IAAIs4C,EAASW,EAAQj5C,GACjBu4C,EAAWD,EAAO,GAClBE,EAAaD,EAASE,OACtBE,EAAcL,EAAO,GACrBa,EAAUN,EAEd,GAAIJ,IAASD,EAAY,CACvB,GAAmB,SAAfA,IAA0BK,EAAGC,sBAE/B,SAGGI,IAEHA,EAAwB,SAAfV,EACLK,EAAGE,gBACHF,EAAGG,uBAGTG,EAAUD,EAGZ,GAAIC,EAAQhsB,MAAMorB,EAAUI,GAC1B,OAAO,EAIX,OAAO,IApCX,IAAqBM,EA+CrB,IAAsBX,EAChBC,EACAC,EACAE,EACAC,EAjMG70B,CAUT,SAA8BvgB,GAG5B,IAFA,IAAI60C,EAAe,IAAI50C,MAAMD,EAAIO,QAExB9D,EAAI,EAAGA,EAAIuD,EAAIO,OAAQ9D,IAC9Bo4C,EAAap4C,GAAKo5C,EAAgB71C,EAAIvD,IAGxC,OAAOo4C,EAjBaiB,CAAoB9B,IA4C1C,SAAS6B,EAAiBE,GACxB,IAAIC,EAAMD,EAAKE,YAAY,KACvB1+B,GAAe,IAATy+B,EACND,EAAKh5B,UAAU,EAAGi5B,GAClBD,EAEJ,IAAKzB,EAAK/8B,GACR,MAAM,IAAI1X,UAAU,uBAAyB0X,GAG/C,IAAI+9B,EAAKd,EAAQj9B,IAEJ,IAATy+B,GAA4B,SAAdV,EAAGJ,QAAqBI,EAAGC,wBAE3CD,EAAKA,EAAGE,iBAGV,IAAI95B,EAAoB,SAAd45B,EAAGJ,OACT,IACA,GAEArX,GAAiB,IAATmY,EACRD,EAAKh5B,UAAUi5B,EAAM,EAAGD,EAAKx1C,QAC7B,KAYJ,IATEs9B,EADY,OAAVA,EACMniB,EACC24B,EAAa1gB,KAAKkK,GACnBxW,SAASwW,EAAO,IACD,SAAdyX,EAAGJ,QAAqBZ,EAAKzW,GAoB1C,SAAuBqY,GACrB,IAAIZ,EAAKd,EAAQ0B,GAGjB,MAAgB,SAFLZ,EAAGJ,OAGVI,EAAGa,6BACH,KAzBMC,CAAavY,GAEb,OAGG,GAAKA,EAAQniB,EACxB,MAAM,IAAI7b,UAAU,6BAA+Bk2C,GAGrD,MAAO,CAACT,EAAIzX,GAgDd,SAASiX,IACP,OAAO,I,6BCzOT,MAAMtT,EAAoBjlC,EAAQilC,kBAAoB,EAAQ,KACxD3O,EAAgBt2B,EAAQs2B,cAAgB,EAAQ,KAChD8O,EAAeplC,EAAQolC,aAAe,EAAQ,KAC9ClZ,EAAQlsB,EAAQksB,MAAQ,EAAQ,IAChCqZ,EAAuBvlC,EAAQulC,qBAAuB,EAAQ,KAC9D7O,EAAsB12B,EAAQ02B,oBAAsB,EAAQ,KAMlE12B,EAAQklC,yBAA2B,WACjC,OAAO,IAAID,EAAkByC,mBAO/B1nC,EAAQmlC,2BAA6B,WACnC,OAAO,IAAI7O,EAAcwjB,iBAAiB,IAAIxjB,EAAcyjB,0BAO9D/5C,EAAQslC,mBAAqB,WAC3B,OAAO,IAAIpZ,EAAMub,aAOnBznC,EAAQqlC,0BAA4B,WAClC,OAAO,IAAID,EAAa4U,8BAA8B,IAAM,KAAgB,IAQ9Eh6C,EAAQwlC,kCAAoC,WAC1C,OAAO,IAAID,EAAqB0U,8BAOlCj6C,EAAQylC,0BAA4B,WAClC,OAAO,IAAI/O,EAAoBwjB,8B,cC/DjCj6C,EAAOD,QAAUkC,QAAQ,Q,6BCEzB,MAAMm0C,EAAS,EAAQ,IACjB3pC,EAAQ,EAAQ,GAWtB,SAASF,EAAKqE,GACZ,IAAKA,GAA4B,KAAlBA,EAAO7M,OACpB,MAAM,IAAIiG,MAAM,iDAElBtF,KAAKkM,OAASA,EA0FhB,SAASspC,EAAsBtpC,GAS7B,OAPAA,EAAO,IAAM,GAEbA,EAAO,IAAM,GAEbA,EAAO,IAAM,GAEbA,EAAO,IAAM,IACN,IAAIrE,EAAKqE,GAgBlB,SAASupC,EAAgB/0C,GACvB,OAAOgxC,EAAOgE,YAAY,GAAIh1C,GA5GhCmH,EAAK6iB,WAAa,SAAUluB,GAE1B,GAAqB,iBAAVA,GAAuC,KAAjBA,EAAM6C,OACrC,MAAM,IAAIiG,MAAM,mGAElB,OAAO,IAAIuC,EAAKE,EAAMzJ,sBAAsB9B,EAAMwe,QAAQ,KAAM,IAAK,SASvEnT,EAAKjB,OAAS,SAAUvG,GACtB,IAAIA,EAOG,CAEL,OAAOm1C,EADQC,KAPfA,EAAe,SAAS51C,EAAKqM,GAC3B,OAAIrM,EACKQ,EAASR,GAEXQ,EAAS,KAAMm1C,EAAqBtpC,OAYjDrE,EAAK1K,UAAUqU,UAAY,WACzB,OAAOxR,KAAKkM,QAOdrE,EAAK1K,UAAUuuB,OAAS,SAAUc,GAChC,OAAOA,aAAiB3kB,GAAQ7H,KAAKkM,OAAOwf,OAAOc,EAAMtgB,SAQ3DrE,EAAK1K,UAAU8P,SAAW,WAExB,MAAM0oC,EAAkB31C,KAgDZkM,OAAOe,SAAS,OA/C5B,OACE0oC,EAAS5xC,OAAO,EAAG,GAAK,IACxB4xC,EAAS5xC,OAAO,EAAG,GAAK,IACxB4xC,EAAS5xC,OAAO,GAAI,GAAK,IACzB4xC,EAAS5xC,OAAO,GAAI,GAAK,IACzB4xC,EAAS5xC,OAAO,GAAI,KAOxB8D,EAAK1K,UAAUyB,QAAU,WACvB,OAAOoB,KAAKkD,YAAYpH,KAAO,KAAOkE,KAAKiN,YAO7CpF,EAAK1K,UAAU+P,OAAS,WACtB,OAAOlN,KAAKiN,YAsCd3R,EAAOD,QAAUwM,G,gBCzHjB,IAAIE,EAAQ,EAAQ,GAuBpB,SAAS6J,EAASgkC,EAAM1R,GAKtBlkC,KAAK61C,MAAQ,GAMb71C,KAAK81C,MAAQ5R,EAKb,IADA,IAAI6R,GAAM,EACDx6C,EAAIq6C,EAAKv2C,OAAS,EAAG9D,GAAK,EAAGA,IAAK,CACzC,IAAI8K,EAAgB,EAAVuvC,EAAKr6C,GACVw6C,GAAO1vC,GAAO69B,IACjBlkC,KAAK61C,MAAMt6C,GAAK8K,EAChB0vC,GAAM,IAeZnkC,EAAQokC,UAAY,GAQpBpkC,EAAQvG,QAAU,SAAS7O,GACzB,IAAK,KAAOA,GAASA,EAAQ,IAAK,CAChC,IAAIutB,EAAYnY,EAAQokC,UAAUx5C,GAClC,GAAIutB,EACF,OAAOA,EAIX,IAAI5oB,EAAM,IAAIyQ,EAAQ,CAAS,EAARpV,GAAYA,EAAQ,GAAK,EAAI,GAIpD,OAHK,KAAOA,GAASA,EAAQ,MAC3BoV,EAAQokC,UAAUx5C,GAAS2E,GAEtBA,GAUTyQ,EAAQW,WAAa,SAAS/V,GAC5B,GAAIwK,MAAMxK,KAAW2Y,SAAS3Y,GAC5B,OAAOoV,EAAQU,KACV,GAAI9V,EAAQ,EACjB,OAAOoV,EAAQW,YAAY/V,GAAO6tB,SAIlC,IAFA,IAAIurB,EAAO,GACPvwB,EAAM,EACD9pB,EAAI,EAAGiB,GAAS6oB,EAAK9pB,IAC5Bq6C,EAAKr6C,GAAMiB,EAAQ6oB,EAAO,EAC1BA,GAAOzT,EAAQqkC,gBAEjB,OAAO,IAAIrkC,EAAQgkC,EAAM,IAc7BhkC,EAAQ2Y,SAAW,SAASqrB,GAG1B,OAAO,IAAIhkC,EAAQgkC,EAFRA,EAAKA,EAAKv2C,OAAS,GAEG,GAAK,IAAO,EAAI,IAWnDuS,EAAQ8Y,WAAa,SAASrU,EAAK6/B,GACjC,GAAkB,GAAd7/B,EAAIhX,OACN,MAAMV,UAAU,qCAGlB,IAAIgsB,EAAQurB,GAAa,GACzB,GAAIvrB,EAAQ,GAAK,GAAKA,EACpB,MAAMrlB,MAAM,uBAAyBqlB,GAGvC,GAAqB,KAAjBtU,EAAIud,OAAO,GACb,OAAOhiB,EAAQ8Y,WAAWrU,EAAIwF,UAAU,GAAI8O,GAAON,SAC9C,GAAIhU,EAAIrS,QAAQ,MAAQ,EAC7B,MAAMrF,UAAU,+CAQlB,IAHA,IAAIisB,EAAehZ,EAAQW,WAAW7L,KAAK2e,IAAIsF,EAAO,IAElD7qB,EAAS8R,EAAQU,KACZ/W,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,GAAK,EAAG,CACtC,IAAIyC,EAAO0I,KAAKS,IAAI,EAAGkP,EAAIhX,OAAS9D,GAChCiB,EAAQ2pB,SAAS9P,EAAIwF,UAAUtgB,EAAGA,EAAIyC,GAAO2sB,GACjD,GAAI3sB,EAAO,EAAG,CACZ,IAAI6sB,EAAQjZ,EAAQW,WAAW7L,KAAK2e,IAAIsF,EAAO3sB,IAC/C8B,EAASA,EAAO2S,SAASoY,GAAOlqB,IAAIiR,EAAQW,WAAW/V,SAGvDsD,GADAA,EAASA,EAAO2S,SAASmY,IACTjqB,IAAIiR,EAAQW,WAAW/V,IAG3C,OAAOsD,GAST8R,EAAQzF,WAAa,SAAU9J,GAI7B,IAHA,IAAIuzC,EAAO,IAAI72C,MAAM2H,KAAKsoB,KAAK3sB,EAAIhD,OAAS,IAExC6kC,EAAgB,IAAT7hC,EAAI,IAAiB,EAAI,EAC3B9G,EAAI,EAAGA,EAAIq6C,EAAKv2C,OAAQ9D,IAAK,CACpC,IACIiB,EADA4P,EAAS/J,EAAIhD,OAAoB,GAAT9D,EAAI,GAEhC,GAAI6Q,EAAS,EAAG,CAEdA,GAAkB,EAClB5P,EAAQ,EACR,IAAK,IAAIiK,EAAI,EAAGA,EAAI2F,EAAQ3F,IAAK,CAC/B,IAAI0vC,EAAO9zC,EAAIoE,IACD,IAAVy9B,IAEFiS,EAAe,KAAPA,GAEV35C,GAAiB25C,GAA2B,GAAlB/pC,EAAS3F,EAAI,IAE3B,IAAVy9B,IAEF1nC,GAASA,QAIXA,EAAQ6F,EAAIyK,YAAYV,GAE1BwpC,EAAKr6C,GAAKiB,EAEZ,OAAO,IAAIoV,EAAQgkC,EAAM1R,IAW3BtyB,EAAQnF,SAAW,SAAUjQ,GAC3B,IAAI0nC,EAAO1nC,EAAMs5C,MACbF,EAAOp5C,EAAMq5C,MACjB,GAAoB,IAAhBD,EAAKv2C,OAEP,OAAO0I,EAAMlJ,qBAAqB,CAACrC,EAAMs5C,QAG3C,IAAIrrB,EAAWmrB,EAAKA,EAAKv2C,OAAO,IAClB,IAAV6kC,IACFzZ,GAAYA,GAEd,IAAIrrB,EAAO,GACPqrB,IAAa,GAAK,GACpBrrB,EAAKsF,KAAM+lB,GAAY,GAAM,KAE3BA,IAAa,GAAK,GACpBrrB,EAAKsF,KAAM+lB,GAAY,GAAM,KAE3BA,IAAa,EAAI,GACnBrrB,EAAKsF,KAAM+lB,GAAY,EAAK,KAE9BrrB,EAAKsF,KAAgB,IAAX+lB,GAGJrrB,EAAK,IAAM,GAAM,GAEnBA,EAAKunC,QAAQ,GAQjB,IADA,IAAItkC,EAAM0F,EAAM3J,kBAAkBgB,EAAKC,OAA4B,GAAjBu2C,EAAKv2C,OAAO,IACrDoH,EAAI,EAAGA,EAAIrH,EAAKC,OAAQoH,IAAK,CACpC,IAAIxI,EAAImB,EAAKqH,GAEXpE,EAAIoE,IADQ,IAAVy9B,GACQjmC,EAGDA,EAGb,IAAK,IAAI1C,EAAI,EAAGA,EAAIq6C,EAAKv2C,OAAS,EAAG9D,IAAK,CACxC,IAAI66C,EAAQR,EAAKA,EAAKv2C,OAAS,EAAI9D,GAC/B6Q,EAAShN,EAAKC,OAAa,EAAJ9D,EAC3B8G,EAAIg0C,aAAaD,EAAOhqC,GAE1B,OAAO/J,GAUTuP,EAAQqkC,gBAAkB,WAI1BrkC,EAAQU,KAAOV,EAAQvG,QAAQ,GAI/BuG,EAAQsZ,IAAMtZ,EAAQvG,QAAQ,GAO9BuG,EAAQ0kC,YAAc1kC,EAAQvG,QAAQ,GAAK,IAO3CuG,EAAQzU,UAAUkuB,MAAQ,WACxB,OAAOrrB,KAAK61C,MAAMx2C,OAAS,EAAIW,KAAK61C,MAAM,GAAK71C,KAAK81C,OAKtDlkC,EAAQzU,UAAUmuB,SAAW,WAC3B,GAAItrB,KAAKyrB,aACP,OAAQzrB,KAAKqqB,SAASiB,WAItB,IAFA,IAAIjlB,EAAM,EACNgf,EAAM,EACD9pB,EAAI,EAAGA,EAAIyE,KAAK61C,MAAMx2C,OAAQ9D,IACrC8K,GAAOrG,KAAKu2C,gBAAgBh7C,GAAK8pB,EACjCA,GAAOzT,EAAQqkC,gBAEjB,OAAO5vC,GAUXuL,EAAQzU,UAAU8P,SAAW,SAASipC,GACpC,IAAIvrB,EAAQurB,GAAa,GACzB,GAAIvrB,EAAQ,GAAK,GAAKA,EACpB,MAAMrlB,MAAM,uBAAyBqlB,GAGvC,GAAI3qB,KAAKurB,SACP,MAAO,IACF,GAAIvrB,KAAKyrB,aACd,MAAO,IAAMzrB,KAAKqqB,SAASpd,SAAS0d,GAStC,IAJA,IAAIC,EAAehZ,EAAQW,WAAW7L,KAAK2e,IAAIsF,EAAO,IAElDa,EAAMxrB,KACNF,EAAS,KACA,CACX,IAAIisB,EAASP,EAAIK,OAAOjB,GAEpBoB,EADSR,EAAIM,SAASC,EAAOtZ,SAASmY,IAAeS,QACrCpe,SAAS0d,GAG7B,IADAa,EAAMO,GACER,SACN,OAAOS,EAASlsB,EAEhB,KAAOksB,EAAO3sB,OAAS,GACrB2sB,EAAS,IAAMA,EAEjBlsB,EAAS,GAAKksB,EAASlsB,IAY7B8R,EAAQzU,UAAUq5C,QAAU,SAASt0C,GACnC,OAAIA,EAAQ,EACH,EACEA,EAAQlC,KAAK61C,MAAMx2C,OACrBW,KAAK61C,MAAM3zC,GAEXlC,KAAK81C,OAUhBlkC,EAAQzU,UAAUo5C,gBAAkB,SAASr0C,GAC3C,IAAImE,EAAMrG,KAAKw2C,QAAQt0C,GACvB,OAAOmE,GAAO,EAAIA,EAAMuL,EAAQqkC,gBAAkB5vC,GAKpDuL,EAAQzU,UAAUs5C,QAAU,WAC1B,OAAOz2C,KAAK81C,OAKdlkC,EAAQzU,UAAUouB,OAAS,WACzB,GAAkB,GAAdvrB,KAAK81C,MACP,OAAO,EAET,IAAK,IAAIv6C,EAAI,EAAGA,EAAIyE,KAAK61C,MAAMx2C,OAAQ9D,IACrC,GAAqB,GAAjByE,KAAK61C,MAAMt6C,GACb,OAAO,EAGX,OAAO,GAKTqW,EAAQzU,UAAUsuB,WAAa,WAC7B,OAAsB,GAAfzrB,KAAK81C,OAKdlkC,EAAQzU,UAAUmvB,MAAQ,WACxB,OAA6B,GAArBtsB,KAAK61C,MAAMx2C,SAAgC,GAAfW,KAAK81C,OACtC91C,KAAK61C,MAAMx2C,OAAS,GAA8B,IAAN,EAAhBW,KAAK61C,MAAM,KAQ5CjkC,EAAQzU,UAAUuuB,OAAS,SAASc,GAClC,GAAIxsB,KAAK81C,OAAStpB,EAAMspB,MACtB,OAAO,EAGT,IADA,IAAI9X,EAAMt3B,KAAK8T,IAAIxa,KAAK61C,MAAMx2C,OAAQmtB,EAAMqpB,MAAMx2C,QACzC9D,EAAI,EAAGA,EAAIyiC,EAAKziC,IACvB,GAAIyE,KAAKw2C,QAAQj7C,IAAMixB,EAAMgqB,QAAQj7C,GACnC,OAAO,EAGX,OAAO,GAQTqW,EAAQzU,UAAUuvB,UAAY,SAASF,GACrC,OAAQxsB,KAAK0rB,OAAOc,IAQtB5a,EAAQzU,UAAU8vB,YAAc,SAAST,GACvC,OAAOxsB,KAAK6sB,QAAQL,GAAS,GAQ/B5a,EAAQzU,UAAUgwB,mBAAqB,SAASX,GAC9C,OAAOxsB,KAAK6sB,QAAQL,IAAU,GAQhC5a,EAAQzU,UAAUyvB,SAAW,SAASJ,GACpC,OAAOxsB,KAAK6sB,QAAQL,GAAS,GAQ/B5a,EAAQzU,UAAU4vB,gBAAkB,SAASP,GAC3C,OAAOxsB,KAAK6sB,QAAQL,IAAU,GAUhC5a,EAAQzU,UAAU0vB,QAAU,SAASL,GACnC,IAAIga,EAAOxmC,KAAK8rB,SAASU,GACzB,OAAIga,EAAK/a,cACC,EACC+a,EAAKjb,SACP,EAEA,GAWX3Z,EAAQzU,UAAUu5C,QAAU,SAASjnB,GAInC,IAHA,IAAIknB,EAAalnB,EAAU,GAAM,EAC7BmnB,GAAannB,EAAU,GAAK,GAC5BmmB,EAAO,GACFr6C,EAAI,EAAGA,EAAIo7C,EAAWp7C,IAC7Bq6C,EAAKr6C,GAAKyE,KAAKw2C,QAAQj7C,GAEzB,IAAIs7C,EAAuB,IAAbD,EAAkB,YAAc,GAAMA,EAAY,GAAM,EAClEvwC,EAAMrG,KAAKw2C,QAAQG,GAAaE,EAEpC,OAAIxwC,EAAO,GAAKuwC,GACdvwC,GAAO,WAAawwC,EACpBjB,EAAKe,GAAatwC,EACX,IAAIuL,EAAQgkC,GAAO,KAE1BA,EAAKe,GAAatwC,EACX,IAAIuL,EAAQgkC,EAAM,KAM7BhkC,EAAQzU,UAAUktB,OAAS,WACzB,OAAOrqB,KAAKutB,MAAM5sB,IAAIiR,EAAQsZ,MAShCtZ,EAAQzU,UAAUwD,IAAM,SAAS6rB,GAK/B,IAJA,IAAIwR,EAAMt3B,KAAK8T,IAAIxa,KAAK61C,MAAMx2C,OAAQmtB,EAAMqpB,MAAMx2C,QAC9CP,EAAM,GACNg4C,EAAQ,EAEHv7C,EAAI,EAAGA,GAAKyiC,EAAKziC,IAAK,CAC7B,IAAIw7C,EAAK/2C,KAAKw2C,QAAQj7C,KAAO,GACzBy7C,EAAuB,MAAlBh3C,KAAKw2C,QAAQj7C,GAElB07C,EAAKzqB,EAAMgqB,QAAQj7C,KAAO,GAG1B27C,EAAKJ,EAAQE,GAFW,MAAnBxqB,EAAMgqB,QAAQj7C,IAGnB47C,GAAMD,IAAO,IAAMH,EAAKE,EAC5BH,EAAQK,IAAO,GACfD,GAAM,MACNC,GAAM,MACNr4C,EAAIvD,GAAM47C,GAAM,GAAMD,EAExB,OAAOtlC,EAAQ2Y,SAASzrB,IAS1B8S,EAAQzU,UAAU2uB,SAAW,SAASU,GACpC,OAAOxsB,KAAKW,IAAI6rB,EAAMnC,WASxBzY,EAAQzU,UAAUsV,SAAW,SAAS+Z,GACpC,GAAIxsB,KAAKurB,SACP,OAAO3Z,EAAQU,KACV,GAAIka,EAAMjB,SACf,OAAO3Z,EAAQU,KAGjB,GAAItS,KAAKyrB,aACP,OAAIe,EAAMf,aACDzrB,KAAKqqB,SAAS5X,SAAS+Z,EAAMnC,UAE7BrqB,KAAKqqB,SAAS5X,SAAS+Z,GAAOnC,SAElC,GAAImC,EAAMf,aACf,OAAOzrB,KAAKyS,SAAS+Z,EAAMnC,UAAUA,SAIvC,GAAIrqB,KAAK4sB,SAAShb,EAAQ0kC,cACxB9pB,EAAMI,SAAShb,EAAQ0kC,aACvB,OAAO1kC,EAAQW,WAAWvS,KAAKsrB,WAAakB,EAAMlB,YAMpD,IAFA,IAAI0S,EAAMh+B,KAAK61C,MAAMx2C,OAASmtB,EAAMqpB,MAAMx2C,OACtCP,EAAM,GACDvD,EAAI,EAAGA,EAAI,EAAIyiC,EAAKziC,IAC3BuD,EAAIvD,GAAK,EAEX,IAASA,EAAI,EAAGA,EAAIyE,KAAK61C,MAAMx2C,OAAQ9D,IACrC,IAAK,IAAIkL,EAAI,EAAGA,EAAI+lB,EAAMqpB,MAAMx2C,OAAQoH,IAAK,CAC3C,IAAIswC,EAAK/2C,KAAKw2C,QAAQj7C,KAAO,GACzBy7C,EAAuB,MAAlBh3C,KAAKw2C,QAAQj7C,GAElB07C,EAAKzqB,EAAMgqB,QAAQ/vC,KAAO,GAC1B2wC,EAAwB,MAAnB5qB,EAAMgqB,QAAQ/vC,GAEvB3H,EAAI,EAAIvD,EAAI,EAAIkL,IAAMuwC,EAAKI,EAC3BxlC,EAAQylC,SAASv4C,EAAK,EAAIvD,EAAI,EAAIkL,GAClC3H,EAAI,EAAIvD,EAAI,EAAIkL,EAAI,IAAMswC,EAAKK,EAC/BxlC,EAAQylC,SAASv4C,EAAK,EAAIvD,EAAI,EAAIkL,EAAI,GACtC3H,EAAI,EAAIvD,EAAI,EAAIkL,EAAI,IAAMuwC,EAAKC,EAC/BrlC,EAAQylC,SAASv4C,EAAK,EAAIvD,EAAI,EAAIkL,EAAI,GACtC3H,EAAI,EAAIvD,EAAI,EAAIkL,EAAI,IAAMswC,EAAKE,EAC/BrlC,EAAQylC,SAASv4C,EAAK,EAAIvD,EAAI,EAAIkL,EAAI,GAK1C,IAASlL,EAAI,EAAGA,EAAIyiC,EAAKziC,IACvBuD,EAAIvD,GAAMuD,EAAI,EAAIvD,EAAI,IAAM,GAAMuD,EAAI,EAAIvD,GAE5C,IAASA,EAAIyiC,EAAKziC,EAAI,EAAIyiC,EAAKziC,IAC7BuD,EAAIvD,GAAK,EAEX,OAAO,IAAIqW,EAAQ9S,EAAK,IAU1B8S,EAAQylC,SAAW,SAASzB,EAAM1zC,GAChC,MAAsB,MAAd0zC,EAAK1zC,KAAoB0zC,EAAK1zC,IACpC0zC,EAAK1zC,EAAQ,IAAM0zC,EAAK1zC,KAAW,GACnC0zC,EAAK1zC,IAAU,OAUnB0P,EAAQzU,UAAU0uB,OAAS,SAASW,GAClC,GAAIA,EAAMjB,SACR,MAAMjmB,MAAM,oBACP,GAAItF,KAAKurB,SACd,OAAO3Z,EAAQU,KAGjB,GAAItS,KAAKyrB,aACP,OAAIe,EAAMf,aACDzrB,KAAKqqB,SAASwB,OAAOW,EAAMnC,UAE3BrqB,KAAKqqB,SAASwB,OAAOW,GAAOnC,SAEhC,GAAImC,EAAMf,aACf,OAAOzrB,KAAK6rB,OAAOW,EAAMnC,UAAUA,SAUrC,IAFA,IAAIuE,EAAMhd,EAAQU,KACdkZ,EAAMxrB,KACHwrB,EAAI2B,mBAAmBX,IAAQ,CAcpC,IAXA,IAAImC,EAASjoB,KAAK8T,IAAI,EAAG9T,KAAKC,MAAM6kB,EAAIF,WAAakB,EAAMlB,aAIvDyD,EAAOroB,KAAKsoB,KAAKtoB,KAAK1B,IAAI2pB,GAAUjoB,KAAKuoB,KACzCta,EAASoa,GAAQ,GAAM,EAAIroB,KAAK2e,IAAI,EAAG0J,EAAO,IAI9CG,EAAYtd,EAAQW,WAAWoc,GAC/BQ,EAAYD,EAAUzc,SAAS+Z,GAC5B2C,EAAU1D,cAAgB0D,EAAUlC,YAAYzB,IACrDmD,GAAUha,EAEVwa,GADAD,EAAYtd,EAAQW,WAAWoc,IACTlc,SAAS+Z,GAK7B0C,EAAU3D,WACZ2D,EAAYtd,EAAQsZ,KAGtB0D,EAAMA,EAAIjuB,IAAIuuB,GACd1D,EAAMA,EAAIM,SAASqD,GAErB,OAAOP,GASThd,EAAQzU,UAAUiyB,OAAS,SAAS5C,GAClC,OAAOxsB,KAAK8rB,SAAS9rB,KAAK6rB,OAAOW,GAAO/Z,SAAS+Z,KAKnD5a,EAAQzU,UAAUowB,IAAM,WAGtB,IAFA,IAAIyQ,EAAMh+B,KAAK61C,MAAMx2C,OACjBP,EAAM,GACDvD,EAAI,EAAGA,EAAIyiC,EAAKziC,IACvBuD,EAAIvD,IAAMyE,KAAK61C,MAAMt6C,GAEvB,OAAO,IAAIqW,EAAQ9S,GAAMkB,KAAK81C,QAShClkC,EAAQzU,UAAUmyB,IAAM,SAAS9C,GAG/B,IAFA,IAAIwR,EAAMt3B,KAAK8T,IAAIxa,KAAK61C,MAAMx2C,OAAQmtB,EAAMqpB,MAAMx2C,QAC9CP,EAAM,GACDvD,EAAI,EAAGA,EAAIyiC,EAAKziC,IACvBuD,EAAIvD,GAAKyE,KAAKw2C,QAAQj7C,GAAKixB,EAAMgqB,QAAQj7C,GAE3C,OAAO,IAAIqW,EAAQ9S,EAAKkB,KAAK81C,MAAQtpB,EAAMspB,QAS7ClkC,EAAQzU,UAAUoyB,GAAK,SAAS/C,GAG9B,IAFA,IAAIwR,EAAMt3B,KAAK8T,IAAIxa,KAAK61C,MAAMx2C,OAAQmtB,EAAMqpB,MAAMx2C,QAC9CP,EAAM,GACDvD,EAAI,EAAGA,EAAIyiC,EAAKziC,IACvBuD,EAAIvD,GAAKyE,KAAKw2C,QAAQj7C,GAAKixB,EAAMgqB,QAAQj7C,GAE3C,OAAO,IAAIqW,EAAQ9S,EAAKkB,KAAK81C,MAAQtpB,EAAMspB,QAS7ClkC,EAAQzU,UAAUqyB,IAAM,SAAShD,GAG/B,IAFA,IAAIwR,EAAMt3B,KAAK8T,IAAIxa,KAAK61C,MAAMx2C,OAAQmtB,EAAMqpB,MAAMx2C,QAC9CP,EAAM,GACDvD,EAAI,EAAGA,EAAIyiC,EAAKziC,IACvBuD,EAAIvD,GAAKyE,KAAKw2C,QAAQj7C,GAAKixB,EAAMgqB,QAAQj7C,GAE3C,OAAO,IAAIqW,EAAQ9S,EAAKkB,KAAK81C,MAAQtpB,EAAMspB,QAS7ClkC,EAAQzU,UAAU2xB,UAAY,SAASW,GAKrC,IAJA,IAAI6nB,EAAY7nB,GAAW,EACvB8nB,EAAY9nB,EAAU,GACtBuO,EAAMh+B,KAAK61C,MAAMx2C,OAASi4C,GAAaC,EAAY,EAAI,EAAI,GAC3Dz4C,EAAM,GACDvD,EAAI,EAAGA,EAAIyiC,EAAKziC,IAErBuD,EAAIvD,GADFg8C,EAAY,EACJv3C,KAAKw2C,QAAQj7C,EAAI+7C,IAAcC,EACxCv3C,KAAKw2C,QAAQj7C,EAAI+7C,EAAY,KAAQ,GAAKC,EAElCv3C,KAAKw2C,QAAQj7C,EAAI+7C,GAG9B,OAAO,IAAI1lC,EAAQ9S,EAAKkB,KAAK81C,QAS/BlkC,EAAQzU,UAAU0xB,WAAa,SAASY,GAKtC,IAJA,IAAI6nB,EAAY7nB,GAAW,EACvB8nB,EAAY9nB,EAAU,GACtBuO,EAAMh+B,KAAK61C,MAAMx2C,OAASi4C,EAC1Bx4C,EAAM,GACDvD,EAAI,EAAGA,EAAIyiC,EAAKziC,IAErBuD,EAAIvD,GADFg8C,EAAY,EACJv3C,KAAKw2C,QAAQj7C,EAAI+7C,KAAeC,EACzCv3C,KAAKw2C,QAAQj7C,EAAI+7C,EAAY,IAAO,GAAKC,EAEjCv3C,KAAKw2C,QAAQj7C,EAAI+7C,GAG9B,OAAO,IAAI1lC,EAAQ9S,EAAKkB,KAAK81C,QAO/BlkC,EAAQzU,UAAUyB,QAAU,WAC1B,OAAOoB,KAAKkD,YAAYpH,KAAO,KAAOkE,KAAKiN,YAO7C2E,EAAQzU,UAAUsoB,IAAM,WACtB,OAAsB,IAAfzlB,KAAK81C,MAAc91C,KAAOA,KAAKqqB,UAOxCzY,EAAQzU,UAAU+P,OAAS,WACzB,OAAOlN,KAAKiN,YAGd3R,EAAOD,QAAUuW,G,6BCr1BjB,MAAMpU,EAAO,EAAQ,GAQrB,SAASslC,KAkJT,SAAS0U,EAA4BC,GACnCz3C,KAAK03C,aAAeD,GAAe,IAAI3U,EApIzCA,EAAY3lC,UAAUw6C,cAAgB,SAAUzyC,EAAM2c,EAAa+1B,EAAUC,GAC3E,OAAI3yC,EAAK4yC,QAAU,EACV93C,KAAK+3C,gBAEP/3C,KAAKg4C,iBAAY10C,GAAW,IAcrCw/B,EAAY3lC,UAAU86C,cAAgB,SAAU/yC,EAAM2c,EAAaq2B,EAAUC,EAAUC,GACrF,OAAIlzC,EAAK4yC,QAAU,EACV93C,KAAK+3C,gBAELG,GAAYC,IAAaC,EAChCp4C,KAAKg4C,cACLh4C,KAAK+3C,iBAeTjV,EAAY3lC,UAAUk7C,eAAiB,SAAUnzC,EAAM2c,EAAaq2B,EAAUC,EAAUG,GACtF,OAAIpzC,EAAK4yC,QAAU,EACV93C,KAAK+3C,gBAGO,cAAdO,EAA4Bt4C,KAAKg4C,cAAgBh4C,KAAK+3C,iBA2B/DjV,EAAY3lC,UAAUo7C,eAAiB,SAAUrzC,EAAM2c,EAAahiB,GAGlE,OAAOG,KAAKg4C,iBAAY10C,GAAW,IAUrCw/B,EAAY3lC,UAAU66C,YAAc,SAAUn2B,EAAa22B,GACzD,MAAO,CACLC,SAAU3V,EAAY4V,cAAcnxB,MACpC1F,YAAaA,EACb22B,gBAAmC,IAAnBA,IAQpB1V,EAAY3lC,UAAU46C,cAAgB,WACpC,MAAO,CAAEU,SAAU3V,EAAY4V,cAAcC,UAW/C7V,EAAY4V,cAAgB,CAC1BC,QAAU,EACVpxB,MAAU,EACVqxB,OAAU,GAwBZp7C,EAAK2P,SAASqqC,EAA6B1U,GAE3C0U,EAA4Br6C,UAAU86C,cAAgB,SAAU/yC,EAAM2c,EAAaq2B,EAAUC,EAAUC,GACrG,OAAOp4C,KAAK03C,aAAaO,cAAc/yC,EAAM2c,EAAaq2B,EAAUC,EAAUC,IAMhFZ,EAA4Br6C,UAAUo7C,eAAiB,SAAUrzC,EAAM2c,EAAahiB,GAClF,OAAIqF,EAAKG,QAAQosB,aACRzxB,KAAK03C,aAAaa,eAAerzC,EAAM2c,EAAahiB,GAEtDG,KAAK+3C,iBAGdP,EAA4Br6C,UAAUw6C,cAAgB,SAAUzyC,EAAM2c,EAAa+1B,EAAUC,GAC3F,OAAO73C,KAAK03C,aAAaC,cAAczyC,EAAM2c,EAAa+1B,EAAUC,IAMtEL,EAA4Br6C,UAAUk7C,eAAiB,SAAUnzC,EAAM2c,EAAaq2B,EAAUC,EAAUG,GACtG,OAAIpzC,EAAKG,QAAQosB,aACRzxB,KAAK03C,aAAaW,eAAenzC,EAAM2c,EAAaq2B,EAAUC,EAAUG,GAE1Et4C,KAAK+3C,iBAwBd18C,EAAQynC,YAAcA,EACtBznC,EAAQm8C,4BAA8BA,G,6BC5MtCn8C,EAAQw9C,cAAgB,EAAQ,KAChCx9C,EAAQonC,eAAiB,EAAQ,K,6BCiDjCnnC,EAAOD,QA7CP,MAeE,UAAUyX,EAAMhF,EAAO4R,EAAYo5B,EAAkBC,EAAeC,EAAgBC,IAkBpF,QAAQnmC,EAAMhF,EAAO4R,EAAYo5B,EAAkBC,EAAel5C,EAAKo5C,IAOvE,e,6BClDF,MAAMvW,EAAgB,EAAQ,IACxBZ,EAAiB,EAAQ,KAQ/BxmC,EAAOD,QAAU,CAAEqnC,gBAAeZ,mB,6BCqGlCxmC,EAAOD,QAzGP,MAKE,sBAAsBgS,IAOtB,qBAAqBA,IAMrB,kBAAkBA,IAOlB,aAAaA,IAMb,mBAAmBA,IAMnB,oBAAoBA,IAMpB,mBAAmBA,IAMnB,qBAAqBA,IAMrB,kBAAkBA,IAMlB,mBAAmBA,IAMnB,mBAAmBA,IAOnB,oBAAoBA,IAMpB,cAAcA,IAKd,0BAOA,qBAAqB4rC,IAQrB,WAAWA,O,6BC1Gb,MAAMlxC,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAuBtB,SAASg6B,EAAiBp9C,EAAMuJ,GAC9B,GAAoB,iBAATvJ,EACT,MAAM,IAAI6C,UAAU,2CAEtB0G,EAAUA,GAAW0C,EAAMrK,YAK3BsC,KAAKlE,KAAOA,EAKZkE,KAAK6hB,YAAcxc,EAAQwc,YAK3B7hB,KAAK2xB,cAAgBtsB,EAAQssB,cAK7B3xB,KAAKgQ,YAAc3K,EAAQ2K,YAK3BhQ,KAAKunB,MAAQliB,EAAQkiB,MAKrBvnB,KAAKmyB,kBAAoB9sB,EAAQ8sB,kBAQnC,SAASgnB,EAAe9zC,GACtBrF,KAAKo5C,UAAY/zC,EAAQu+B,UAAY,GACrC5jC,KAAKq5C,YAAYh0C,GAEjBrF,KAAKs5C,uBAAyB,GAE9Bt5C,KAAKu5C,aAAe,GACpBv5C,KAAKo5C,UAAUx2C,QAAQ,SAAUvF,GAS/B,OARA2C,KAAKu5C,aAAal8C,EAAEvB,MAAQuB,EAE5BA,EAAEs0B,cAAgBt0B,EAAEs0B,eAAiB3xB,KAAKw5C,gBAAgB7nB,eAGI,IAA1D3xB,KAAKs5C,uBAAuBt1C,QAAQ3G,EAAEs0B,gBACxC3xB,KAAKs5C,uBAAuB50C,KAAKrH,EAAEs0B,eAE9Bt0B,GACN2C,MAQLm5C,EAAeh8C,UAAUgqC,KAAO,SAAU/W,EAAQqpB,EAAOp5C,GACvD0H,EAAM3E,WAAWpD,KAAKs5C,uBAAwB,SAAUI,EAAQj5C,GAC9Di5C,EAAOvS,KAAK/W,EAAQqpB,EAAOh5C,IAC1BJ,IAOL84C,EAAeh8C,UAAUw8C,YAAc,SAAU7mC,GAC/C,IAAIpE,EAAWwQ,EAAMxQ,SAASG,QAE9B,IAAK,IAAItT,EAAI,EAAGA,EAAIyE,KAAKs5C,uBAAuBj6C,OAAQ9D,IAAK,CAC3D,MAAMM,EAAImE,KAAKs5C,uBAAuB/9C,GAAGo+C,YAAY7mC,GACrD,GAAIjX,EAAI6S,IACNA,EAAW7S,KACMqjB,EAAMxQ,SAASC,MAC9B,MAKN,OADAmE,EAAK8mC,YAAYlrC,GACVA,GAQTyqC,EAAeh8C,UAAUg0B,WAAa,SAAUr1B,GAC9C,OAAIA,aAAgBo9C,EACXp9C,EAEFkE,KAAKu5C,aAAaz9C,GAAQ,YAInCq9C,EAAeh8C,UAAU08C,WAAa,WACpC,OAAO75C,KAAKw5C,iBAIdL,EAAeh8C,UAAU28C,wBAA0B,WACjD,OAAO95C,KAAKw5C,gBAAgB7nB,eAO9BwnB,EAAeh8C,UAAUk8C,YAAc,SAAUh0C,GAC/CrF,KAAKw5C,gBAAkBx5C,KAAKo5C,UAAUW,OAAO,SAAU18C,GAAK,MAAkB,YAAXA,EAAEvB,OAAuB,GACvFkE,KAAKw5C,iBACRx5C,KAAKo5C,UAAU10C,KAAK1E,KAAKw5C,gBAAkB,IAAIN,EAAiB,YAGlEl5C,KAAKw5C,gBAAgB7nB,cAAgB3xB,KAAKw5C,gBAAgB7nB,eAAiBtsB,EAAQysB,SAASH,cAC5F3xB,KAAKw5C,gBAAgBjyB,MAAQvnB,KAAKw5C,gBAAgBjyB,OAASliB,EAAQysB,SAASvK,OAG9ElsB,EAAQ89C,eAAiBA,EACzB99C,EAAQ69C,iBAAmBA,G,6BC1J3B,MAAM70B,EAAS,EAAQ,GAEjBnF,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChBwD,EAAc2T,EAAM3T,YAoR1BlQ,EAAQ2+C,WA1HR,cAAyB31B,EAAO6hB,aAO9B,YAAY+T,EAAW54B,EAAShc,GAC9Bsc,QACA3hB,KAAKi6C,UAAYA,EACjBj6C,KAAKqhB,QAAUA,EACfrhB,KAAKk6C,WAAY,EAEjBl6C,KAAKs2B,MAAQ,GACbt2B,KAAK2hC,oBAAsBt8B,EAAQ4sB,cAAc0P,oBACjD3hC,KAAK6D,MAAQ,KAQf,KAAKs2C,EAAW95C,GACd,MAAM2F,EAAOhG,KACb,GAAIA,KAAK6D,MAEP,OAAON,QAAQC,SAAS,WACtBnD,EAAS2F,EAAKnC,SAGlB7D,KAAKs2B,MAAM5xB,KAAK,CAAEy1C,UAAWA,EAAW95C,SAAUA,IAClDL,KAAKo6C,MAGP,MACOp6C,KAAKk6C,YACRl6C,KAAKk6C,WAAY,EAEjB32C,QAAQC,SAAS,IAAMxD,KAAKuD,YAIhC,UACE,GAAIvD,KAAK6D,MACP,OAGF,MAAMw2C,EAAU,GACV7L,EAAY,GAClB,IAAIjnC,EAAc,EAElB,KAAOvH,KAAKs2B,MAAMj3B,OAAS,GAAKkI,EAAcvH,KAAK2hC,qBAAqB,CACtE,MAAM2Y,EAAYt6C,KAAKs2B,MAAMikB,QAC7B,IAAKD,EAAUH,UAAUK,eAAgB,CAGvCF,EAAUj6C,SAAS,IAAIiF,MAAM,2DAC7B,SAEF,IAAIwP,EACJ,IACEA,EAAOwlC,EAAUH,UAAUM,QAAQthC,MAAMnZ,KAAKqhB,QAASi5B,EAAUH,UAAUzuC,UAE7E,MAAO7L,GACLy6C,EAAUj6C,SAASR,GACnB,SAEF0H,GAAeuN,EAAKzV,OACpBg7C,EAAQ31C,KAAKoQ,GACb05B,EAAU9pC,KAAK41C,EAAUj6C,UAG3B,GAAoB,IAAhBkH,EAAJ,CAOA,IAAK,IAAIhM,EAAI,EAAGA,EAAIizC,EAAUnvC,OAAQ9D,IACpCizC,EAAUjzC,KAIZyE,KAAKi6C,UAAU9gC,MAAMrb,OAAOwe,OAAO+9B,EAAS9yC,GAAc1H,IACpDA,EACFG,KAAK06C,cAAc76C,GAGK,IAAtBG,KAAKs2B,MAAMj3B,OAMfi4B,aAAa,IAAMt3B,KAAKuD,WAJtBvD,KAAKk6C,WAAY,SAlBnBl6C,KAAKk6C,WAAY,EA8BrB,cAAcr6C,GACZA,EAAI86C,eAAgB,EACpB36C,KAAK6D,MAAQ,IAAIqb,EAAM3R,YAAY,qBACnCvN,KAAK6D,MAAM82C,eAAgB,EAE3B36C,KAAK6D,MAAM+2C,mBAAoB,EAC/B56C,KAAK6D,MAAMg3C,WAAah7C,EACxB,MAAMukC,EAAIpkC,KAAKs2B,MAEft2B,KAAKs2B,MAAQvuB,EAAMtE,WACnB,IAAK,IAAIlI,EAAI,EAAGA,EAAI6oC,EAAE/kC,OAAQ9D,IAAK,CACpB6oC,EAAE7oC,GAEV8E,SAASL,KAAK6D,UAMzBxI,EAAQilB,YAhRR,MAKE,YAAY3U,GACV,IAAKA,EACH,MAAM,IAAIrG,MAAM,uBAElBtF,KAAKq6C,QAAU,GACfr6C,KAAK2L,OAASA,EACd3L,KAAK4L,WAAa,EAGpB,IAAIvJ,GACFrC,KAAKq6C,QAAQ31C,KAAKrC,GAClBrC,KAAK4L,YAAcvJ,EAAIhD,OAGzB,WAAWy7C,GACT,MAAMz4C,EAAM0F,EAAM3J,kBAAkB,GACpCiE,EAAIiP,cAAcwpC,EAAK,GACvB96C,KAAKW,IAAI0B,GAGX,SAASy4C,GACP,MAAMz4C,EAAM0F,EAAM3J,kBAAkB,GACpCiE,EAAIg0C,aAAayE,EAAK,GACtB96C,KAAKW,IAAI0B,GAIX,UAAUy4C,GACR96C,KAAKW,IAAIue,EAAMlX,KAAKyE,SAASquC,IAO/B,WAAWrb,GACK,OAAVA,EAKAA,IAAUvgB,EAAM/T,OAKpBnL,KAAKmjB,SAASsc,EAAMpgC,QAEpBW,KAAKW,IAAI8+B,IANPz/B,KAAKmjB,UAAU,GAJfnjB,KAAKmjB,UAAU,GAiBnB,gBAAgBsc,GACD,OAAVA,GAMHz/B,KAAK4iB,WAAW6c,EAAMpgC,QAEtBW,KAAKW,IAAI8+B,IANPz/B,KAAK4iB,YAAY,GAarB,UAAUk4B,GACR96C,KAAKW,IAAIoH,EAAMlJ,qBAAqB,CAACi8C,KAGvC,YAAYzkC,GACV,QAAmB,IAARA,EACT,MAAM,IAAI/Q,MAAM,2BAElB,MAAM04B,EAAMlgC,OAAO8/B,WAAWvnB,EAAK,QAC7BhU,EAAM0F,EAAM3J,kBAAkB,EAAI4/B,GACxC37B,EAAIiP,cAAc0sB,EAAK,GACvB37B,EAAI8W,MAAM9C,EAAK,EAAGhU,EAAIhD,OAAO,EAAG,QAChCW,KAAKW,IAAI0B,GAGX,aAAagU,GACX,MAAM2nB,EAAMlgC,OAAO8/B,WAAWvnB,EAAK,QAC7BhU,EAAM0F,EAAM3J,kBAAkB,EAAI4/B,GACxC37B,EAAIg0C,aAAarY,EAAK,GACtB37B,EAAI8W,MAAM9C,EAAK,EAAGhU,EAAIhD,OAAO,EAAG,QAChCW,KAAKW,IAAI0B,GAGX,gBAAgB0C,GACd/E,KAAK4iB,WAAW7d,EAAO1F,QACvB0F,EAAOnC,QAAQ5C,KAAK+iB,YAAa/iB,MAGnC,mBAAmB+6C,GACjB,MAAMj6C,EAAO7E,OAAO6E,KAAKi6C,GACzB/6C,KAAK4iB,WAAW9hB,EAAKzB,QACrByB,EAAK8B,QAAQ,SAAUxB,GACrBpB,KAAK+iB,YAAY3hB,GACjBpB,KAAKgjB,WAAW+3B,EAAQ35C,KACvBpB,MAGL,eAAeuF,GACb,MAAMzE,EAAO,GACb,IAAK,MAAMM,KAAKmE,EACVA,EAAInI,eAAegE,IACrBN,EAAK4D,KAAKtD,GAIdpB,KAAK4iB,WAAW9hB,EAAKzB,QAErB,IAAI,IAAI9D,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACnC,MAAMuB,EAAMgE,EAAKvF,GACjByE,KAAK+iB,YAAYjmB,GACjBkD,KAAK+iB,YAAYxd,EAAIzI,KAWzB,MAAM0O,EAASE,EAAUD,GACvB,MACMuvC,EADS,IAAIzvC,EAAYC,EAASC,GAAS,EAAGC,EAAU1L,KAAK2L,OAAQ3L,KAAK4L,YACpDa,WAE5B,OADAzM,KAAKq6C,QAAQ1T,QAAQqU,GACdl9C,OAAOwe,OAAOtc,KAAKq6C,QAASW,EAAa37C,OAASW,KAAK4L,e,6BCtJlE,MAAMpO,EAAO,EAAQ,GACf6mB,EAAS,EAAQ,GAEjBtc,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAChB+7B,EAAqB,EAAQ,KAC7BC,EAAiB,EAAQ,IAW/B,SAASC,EAAK9nC,EAASvL,EAAiBzC,EAAS+1C,GAC/C/2B,EAAO6hB,aAAaxqC,KAAKsE,MAKzBA,KAAKqT,QAAUA,EACfrT,KAAKq7C,UAAY,EAQjBr7C,KAAKs7C,UAAY,KAEjBr/C,OAAOC,eAAe8D,KAAM,UAAW,CAAExD,MAAO6I,EAASlJ,YAAY,EAAOya,UAAU,IAQtF3a,OAAOC,eAAe8D,KAAM,OAAQ,CAAExD,MAAO,IAAIy+C,EAAmBj7C,KAAM8H,GAAkB3L,YAAY,IAExG,MAAM6J,EAAOhG,KACbA,KAAKu7C,KAAKtkB,GAAG,OAAQj3B,KAAKw7C,qBAAqBz+C,KAAKiD,OACpDA,KAAKu7C,KAAKtkB,GAAG,SAAU,WACrBjxB,EAAKy1C,oBAMPz7C,KAAK07C,iBAAmB,KAKxB17C,KAAK27C,WAAa,KAKlB37C,KAAK47C,KAAO,KAKZ57C,KAAK67C,OAAS,KAOd77C,KAAK87C,OAAS,KAGd97C,KAAK+7C,UAAY78B,EAAMxQ,SAASG,QAChC7O,KAAKg8C,uBAAyB,EAG9B//C,OAAOC,eAAe8D,KAAM,YAAa,CAAExD,MAAO4+C,EAAUj/C,YAAY,IACxEF,OAAOC,eAAe8D,KAAM,4BAA6B,CAAExD,MAAO,KAAML,YAAY,EAAOya,UAAU,IAErG5W,KAAKi8C,qBAAuBj8C,KAAKqF,QAAQysB,SAAS2O,aAAayb,cAC/Dl8C,KAAKm8C,kBAAoB,EAuU3B,SAASC,IACP/3B,EAAO6hB,aAAaxqC,KAAKsE,MACzBA,KAAKq8C,OAAS,GACdr8C,KAAKs8C,QAAU,KACfrgD,OAAOC,eAAe8D,KAAM,SAAU,CAAE5D,IAAK,WAAc,OAAO4D,KAAK+E,SAAS1F,QAAWlD,YAAY,IAxUzGqB,EAAK2P,SAASguC,EAAM92B,EAAO6hB,cAQ3BiV,EAAKh+C,UAAUo/C,QAAU,WAEA,IAAnBv8C,KAAKq7C,YAKLr7C,KAAKu7C,KAAKiB,cAKdx8C,KAAKq7C,UAAYlqC,KAAKkD,MAElBrU,KAAKu7C,KAAKkB,sBAAwB,EAEpCz8C,KAAKgF,IAAI,kBAAmBhF,KAAKqT,kDAAkDrT,KAAKm8C,wBAExFn8C,KAAKgF,IAAI,eAAgBhF,KAAKqT,+BAGhCrT,KAAK6Y,KAAK,QACV7Y,KAAKy7C,qBASPN,EAAKh+C,UAAUu/C,MAAQ,SAAUC,GAC1B38C,KAAKq7C,YAIVr7C,KAAKgF,IAAI,OAAQxH,EAAKgE,OAAO,wBAAyBxB,KAAKqT,UAC3DrT,KAAKq7C,UAAY,EACjBr7C,KAAKs7C,UAAYnqC,KAAKkD,MAEtBrU,KAAKi8C,qBAAuBj8C,KAAKqF,QAAQysB,SAAS2O,aAAayb,cAC3DS,GACF38C,KAAKu7C,KAAKqB,4BAEZ58C,KAAK6Y,KAAK,QAQZsiC,EAAKh+C,UAAU0/C,UAAY,WACrB78C,KAAK88C,SAGT98C,KAAKi8C,qBAAuBj8C,KAAKqF,QAAQysB,SAAS2O,aAAayb,cAC/Dl8C,KAAKm8C,kBAAoB,EACzBn8C,KAAKu7C,KAAKwB,kCAUZ5B,EAAKh+C,UAAU6/C,SAAW,SAAUC,EAAgB58C,GAOlD,GANAA,EAAWA,GAAY0H,EAAMnK,KAEzBoC,KAAKk9C,2BACPC,cAAcn9C,KAAKk9C,2BAGjBD,EAIF,OAHAj9C,KAAKu7C,KAAK6B,mBAGH/8C,IAGTL,KAAKu7C,KAAKyB,SAAS38C,IAOrB86C,EAAKh+C,UAAU2/C,KAAO,WACpB,OAAQ98C,KAAKq7C,WAOfF,EAAKh+C,UAAUkgD,oBAAsB,WACnC,MAAMr3C,EAAOhG,KAIb,OAAQA,KAAKq7C,YAFJ,IAAIlqC,MAAOqB,UAAYxM,EAAKq1C,WAAar1C,EAAKm2C,mBAWzDhB,EAAKh+C,UAAUy8C,YAAc,SAAUlrC,GACrC,MAAM4uC,EAAmBt9C,KAAK+7C,UAQ9B,OAPA/7C,KAAK+7C,UAAYrtC,GAAYwQ,EAAMxQ,SAASC,MACxC3O,KAAKqF,QAAQ87B,QAAQ2C,uBACvB9jC,KAAKu7C,KAAKkB,sBAAwBz8C,KAAKqF,QAAQ87B,QAAQ2C,uBAAuB9jC,KAAK+7C,YAAc,EAGjG/7C,KAAKu7C,KAAKkB,sBAAwB,EAEhCz8C,KAAK+7C,YAAcuB,EACdt9C,KAAK+7C,WAGV/7C,KAAKk9C,2BACPC,cAAcn9C,KAAKk9C,2BAGjBl9C,KAAK+7C,YAAc78B,EAAMxQ,SAASG,SAEpC7O,KAAK6Y,KAAK,UACV7Y,KAAKu7C,KAAK6B,qBAGLp9C,KAAK88C,QACR98C,KAAK68C,YAIP78C,KAAKk9C,0BAA4BK,YAAY,KAC3Cv9C,KAAKg8C,uBAAyBh8C,KAAKu7C,KAAKiC,8BArOV,MAyO3Bx9C,KAAK+7C,YASdZ,EAAKh+C,UAAUsgD,mBAAqB,SAAUjhD,GAC5CwD,KAAKu7C,KAAKzzC,gBAAkBtL,GAc9B2+C,EAAKh+C,UAAUugD,iBAAmB,SAAU1tB,EAAU2tB,EAAoBt9C,GACxE,GAAIs9C,EAEF,OAAO39C,KAAKu7C,KAAKmC,iBAAiB1tB,EAAU2tB,EAAoBt9C,GAGlEL,KAAKu7C,KAAKqC,0BAA0B5tB,EAAU3vB,IAShD86C,EAAKh+C,UAAU0gD,WAAa,SAAUx9C,GACpCL,KAAKu7C,KAAK1+C,QAAO,EAAMwD,IASzB86C,EAAKh+C,UAAU2gD,oBAAsB,WACnC,OAAK99C,KAAK88C,QAAW98C,KAAKu7C,KAAKwC,YAAY1+C,OAGpCW,KAAKu7C,KAAKwC,YAAY,GAFpB,MAYX5C,EAAKh+C,UAAU6gD,iBAAmB,WAEhC,OAAOh+C,KAAKg8C,uBAAyBh8C,KAAKu7C,KAAK0C,iBASjD9C,EAAKh+C,UAAU+gD,YAAc,SAAUC,GACjCA,EAAWC,oBAAsBp+C,KAAKqF,QAAQ4sB,cAAcsP,6BAGhEvhC,KAAKq+C,eAAeF,IAQtBhD,EAAKh+C,UAAUkhD,eAAiB,SAAUF,GACxCn+C,KAAKu7C,KAAK1W,OAAOsZ,GACjBn+C,KAAKy7C,mBAQPN,EAAKh+C,UAAUmhD,YAAc,WAC3B,OAAOt+C,KAAKu7C,KAAK+C,eASnBnD,EAAKh+C,UAAUs+C,gBAAkB,WAC/B,GAAIz7C,KAAKu7C,KAAKiB,YACZ,OAGEx8C,KAAKu7C,KAAKwC,YAAY1+C,OAASW,KAAKu7C,KAAKkB,wBAEtCz8C,KAAKu7C,KAAKgD,8BACbv+C,KAAKm8C,kBAAoBn8C,KAAKi8C,qBAAqBx7C,OAAOjE,MAC1DwD,KAAKu7C,KAAKiD,6BAA6Bx+C,KAAKm8C,qBAIlBn8C,KAAK+7C,YAAc78B,EAAMxQ,SAASG,SAAW7O,KAAKu7C,KAAKkB,sBAAwB,GAE/C,IAAjCz8C,KAAKu7C,KAAKwC,YAAY1+C,QAEjDW,KAAKu8C,WAQTpB,EAAKh+C,UAAUq+C,qBAAuB,SAAU37C,GAC9C,GAAIA,EAEF,YADAG,KAAKy7C,kBAGP,MAAMz1C,EAAOhG,KACb,SAASy+C,EAAiB5+C,GACpBA,GACFmG,EAAKhB,IAAI,UAAWxH,EAAKgE,OAAO,qCAAsCwE,EAAKqN,QAASxT,GAAMA,GAE5FmG,EAAK02C,QACL12C,EAAKu1C,KAAKmD,eAEZ,GAAI1+C,KAAK88C,SAAW98C,KAAKqF,QAAQ88B,cAC/B,OAAOsc,IAETz+C,KAAKgF,IAAI,OAAQxH,EAAKgE,OAAO,8DAA+DxB,KAAKqT,UACjG,MAAMsrC,EAAc3+C,KAAK4+C,UAAUC,iBACnC3D,EAAe4D,kBAAkB9+C,KAAM2+C,EAAaF,IAQtDtD,EAAKh+C,UAAU4hD,oBAAsB,WACnC,OAAK/+C,KAAK07C,iBAGH17C,KAAK07C,iBAAiB5wC,MAAM,KAAK,GAAGA,MAAM,KAAKvF,IAAIwF,GAAKob,SAASpb,EAAG,KAFlEhD,EAAMtE,YAKjB03C,EAAKh+C,UAAU6H,IAAM+C,EAAM/C,IAe3BxH,EAAK2P,SAASivC,EAAS/3B,EAAO6hB,cAe9BkW,EAAQj/C,UAAUyF,QAAU,SAAUvC,GAEpC,MAAMJ,EAAQD,KAAKq8C,OACnB,IAAK,MAAMv/C,KAAOmD,EACXA,EAAM7C,eAAeN,IAG1BuD,EAASJ,EAAMnD,GAAMA,IASzBs/C,EAAQj/C,UAAUf,IAAM,SAAUU,GAChC,OAAOkD,KAAKq8C,OAAOv/C,IAOrBs/C,EAAQj/C,UAAU2D,KAAO,WACvB,OAAO7E,OAAO6E,KAAKd,KAAKq8C,SAQ1BD,EAAQj/C,UAAU0nC,OAAS,SAAU/nC,GACnC,IAAKkD,KAAKq8C,OAAOj/C,eAAeN,GAE9B,OAGFkD,KAAKs8C,QAAU,KAEf,MAAM/5C,EAAOwF,EAAMrE,OAAO,GAAI1D,KAAKq8C,QAC7B2C,EAAIz8C,EAAKzF,UACRyF,EAAKzF,GACZkD,KAAKq8C,OAAS95C,EACdvC,KAAK6Y,KAAK,SAAUmmC,IAQtB5C,EAAQj/C,UAAU8hD,eAAiB,SAAUn+C,GAE3Cd,KAAKs8C,QAAU,KAEf,MAAM/5C,EAAOwF,EAAMrE,OAAO,GAAI1D,KAAKq8C,QAC7B6C,EAAe,GACrB,IAAK,IAAI3jD,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAMyjD,EAAIz8C,EAAKzB,EAAKvF,IACfyjD,IAGLE,EAAax6C,KAAKs6C,UACXz8C,EAAKzB,EAAKvF,KAEnByE,KAAKq8C,OAAS95C,EACd28C,EAAat8C,QAAQ,SAAUo8C,GAC7Bh/C,KAAK6Y,KAAK,SAAUmmC,IACnBh/C,OAULo8C,EAAQj/C,UAAUiN,IAAM,SAAUtN,EAAKN,GAErCwD,KAAKs8C,QAAU,KACf,MAAM6C,EAAgBn/C,KAAKq8C,OAAOv/C,GAClC,GAAIqiD,EAMF,OAJAn/C,KAAKq8C,OAAOv/C,GAAON,EAEnBwD,KAAK6Y,KAAK,SAAUsmC,QACpBn/C,KAAK6Y,KAAK,MAAOrc,GAInB,MAAM+F,EAAOwF,EAAMrE,OAAO,GAAI1D,KAAKq8C,QAInC,OAHA95C,EAAKzF,GAAON,EACZwD,KAAKq8C,OAAS95C,EACdvC,KAAK6Y,KAAK,MAAOrc,GACVA,GAWT4/C,EAAQj/C,UAAUuF,MAAQ,SAAU08C,EAAOzmB,GACzC,OAAKymB,GAAUzmB,GAIfymB,EAAQA,GAAS,EACVp/C,KAAK+E,SAASrC,MAAM08C,EAAOzmB,IAHzB34B,KAAK+E,UAMhBq3C,EAAQj/C,UAAUuH,KAAO03C,EAAQj/C,UAAUiN,IAM3CgyC,EAAQj/C,UAAU4H,OAAS,WACzB,IAAK/E,KAAKs8C,QAAS,CAEjB,MAAMv3C,EAAS,GACf,IAAK,MAAMjI,KAAOkD,KAAKq8C,OAChBr8C,KAAKq8C,OAAOj/C,eAAeN,IAGhCiI,EAAOL,KAAK1E,KAAKq8C,OAAOv/C,IAE1BkD,KAAKs8C,QAAUrgD,OAAO0B,OAAOoH,GAE/B,OAAO/E,KAAKs8C,SAOdF,EAAQj/C,UAAUkiD,MAAQ,WACxB,MAAMC,EAAgBt/C,KAAK+E,SAE3B/E,KAAKs8C,QAAU,KAEft8C,KAAKq8C,OAAS,GACd,IAAK,IAAI9gD,EAAI,EAAGA,EAAI+jD,EAAcjgD,OAAQ9D,IACxCyE,KAAK6Y,KAAK,SAAUymC,EAAc/jD,IAEpC,OAAO+jD,GAGTlD,EAAQj/C,UAAUyB,QAAU,WAC1B,OAAOoB,KAAKq8C,QAGdD,EAAQj/C,UAAU+P,OAAS,WACzB,OAAOlN,KAAKq8C,QAGdhhD,EAAQ8/C,KAAOA,EACf9/C,EAAQ+gD,QAAUA,G,6BCrlBlB,MAAM/3B,EAAS,EAAQ,GACjB7mB,EAAO,EAAQ,GACf+hD,EAAM,EAAQ,KAEdC,EAAU,EAAQ,IAClBxF,EAAa,EAAQ,IAAaA,WAClCyF,EAAW,EAAQ,IACnBC,EAAU,EAAQ,KAClB33C,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAChBzhB,EAAS,EAAQ,GACjBkiD,EAAgB,EAAQ,KACxBC,EAAiB,EAAQ,KACzBr/B,EAAmB,EAAQ,IAAuBA,iBAIxD,IAAIs/B,EAAM,EAAQ,IAUlB,SAASC,EAAWC,EAAUj4C,EAAiBzC,GAI7C,GAHAgf,EAAO6hB,aAAaxqC,KAAKsE,MACzBA,KAAKggD,gBAAgB,IAEhB36C,EACH,MAAM,IAAIC,MAAM,0BAgBlB,GATAtF,KAAK+/C,SAAWA,EAOhB//C,KAAKigD,qBAAuBF,GAEvB//C,KAAK+/C,UAAY//C,KAAK+/C,SAAS/7C,QAAQ,KAAO,EACjD,MAAM,IAAIsB,MAAM,uEAGlB,MAAM46C,EAAqBlgD,KAAK+/C,SAAShL,YAAY,KACrD/0C,KAAKqT,QAAUrT,KAAK+/C,SAASh8C,OAAO,EAAGm8C,GACvClgD,KAAKghC,KAAOhhC,KAAK+/C,SAASh8C,OAAOm8C,EAAqB,GAEtDjkD,OAAOC,eAAe8D,KAAM,UAAW,CAAExD,MAAO6I,EAASlJ,YAAY,EAAOya,UAAU,IAE9D,OAApB9O,IAEFA,EAAkBoX,EAAMpX,gBAAgBq4C,aACpC96C,EAAQ07B,gBAAgBG,aAE1Bp5B,EAAkBzC,EAAQ07B,gBAAgBG,YAG5ClhC,KAAKogD,kBAAmB,GAG1BpgD,KAAK8H,gBAAkBA,EAEvB9H,KAAKqgD,YAAc,GACnBrgD,KAAKsgD,eAAiB,GACtBtgD,KAAKugD,WAAa,GAKlBvgD,KAAKwgD,aAAe,KACpBxgD,KAAKo+C,mBAAqB,EAC1Bp+C,KAAKygD,WAAa,IAAId,EAAc3/C,KAAK8H,iBACzC9H,KAAKob,SAAW/V,EAAQyW,QAExB9b,KAAKqhB,QAAU,IAAIm+B,EAAQ13C,EAAiBzC,GAC5CrF,KAAKgwB,SAAW,KAChBhwB,KAAK0gD,WAAY,EAKjB1gD,KAAK2gD,WAAY,EAIjB3gD,KAAK4gD,cAAe,EAGtBpjD,EAAK2P,SAAS2yC,EAAYz7B,EAAO6hB,cAEjC4Z,EAAW3iD,UAAU6H,IAAM+C,EAAM/C,IAKjC86C,EAAW3iD,UAAU0jD,oBAAsB,WAEzC7gD,KAAKi6C,UAAU6G,mBAAmB,WAClC9gD,KAAKi6C,UAAU6G,mBAAmB,WAElC9gD,KAAK4gD,cAAe,EACpB5gD,KAAKi6C,UAAUhjB,GAAG,QAAS,KACzBj3B,KAAKgF,IAAI,wBAAyBhF,KAAKigD,+BACvCjgD,KAAK4gD,cAAe,EACpB,MAAMG,EAAe/gD,KAAK2gD,UAC1B3gD,KAAKghD,QACDD,GAEF/gD,KAAK6Y,KAAK,iBAId7Y,KAAKihD,SAAW,IAAIvB,EAAQwB,SAAS,CAAEC,YAAY,IACnDnhD,KAAKohD,OAAS,IAAI1B,EAAQ2B,OAAO,CAAEF,YAAY,GAAQnhD,KAAKqhB,SAC5D,MAAMigC,EAAgB,IAAI5B,EAAQ6B,cAAc,CAACJ,YAAY,IAC7DG,EAAcrqB,GAAG,SAAUj3B,KAAKwhD,aAAazkD,KAAKiD,OAClDshD,EAAcrqB,GAAG,MAAOj3B,KAAKyhD,UAAU1kD,KAAKiD,OAC5CshD,EAAcrqB,GAAG,aAAcj3B,KAAK0hD,aAAa3kD,KAAKiD,OACtDshD,EAAcrqB,GAAG,YAAaj3B,KAAK2hD,gBAAgB5kD,KAAKiD,OAExDA,KAAKi6C,UACFxkB,KAAKz1B,KAAKihD,UACVxrB,KAAKz1B,KAAKohD,QACV3rB,KAAK6rB,GAERthD,KAAK4hD,WAAa,IAAI5H,EAAWh6C,KAAKi6C,UAAWj6C,KAAKqhB,QAASrhB,KAAKqF,UAOtEy6C,EAAW3iD,UAAU0kD,KAAO,SAAUxhD,GACpC,MAAM2F,EAAOhG,KAGb,GAFAA,KAAKgF,IAAI,wBAAyBhF,KAAKigD,wBAElCjgD,KAAKqF,QAAQy8C,WAOX,CAEL,MAAMA,EAAa/5C,EAAMrE,OAAO,CAAEq+C,oBAAoB,GAAS/hD,KAAKqF,QAAQy8C,YAE5E9hD,KAAKi6C,UAAYsF,EAAIyC,QAAQhiD,KAAKghC,KAAMhhC,KAAKqT,QAASyuC,EAAY,WAChE97C,EAAKhB,IAAI,wCAAyCgB,EAAKi6C,wBACvDj6C,EAAK66C,sBACL76C,EAAKyH,QAAQpN,KAIfL,KAAKi6C,UAAUgI,mBAAmBjiD,KAAKqF,QAAQ4sB,cAAc0P,0BAjB7D3hC,KAAKi6C,UAAY,IAAI4F,EAAIqC,OAAO,CAAEC,cAAeniD,KAAKqF,QAAQ4sB,cAAc0P,sBAC5E3hC,KAAKi6C,UAAU+H,QAAQhiD,KAAKghC,KAAMhhC,KAAKqT,QAAS,WAC9CrN,EAAKhB,IAAI,iCAAkCgB,EAAKi6C,wBAChDj6C,EAAK66C,sBACL76C,EAAKyH,QAAQpN,KAgBjBL,KAAKi6C,UAAUmI,KAAK,QAAS,SAAqBviD,GAChDmG,EAAKq8C,gBAAgBxiD,GAAK,EAAOQ,KAGnCL,KAAKi6C,UAAUmI,KAAK,UAAW,WAC7B,MAAMviD,EAAM,IAAIqf,EAAM3R,YAAY,sBAClCvH,EAAKq8C,gBAAgBxiD,GAAK,EAAMQ,KAGlCL,KAAKi6C,UAAUqI,WAAWtiD,KAAKqF,QAAQ4sB,cAAcqP,gBAGjDthC,KAAKqF,QAAQ4sB,cAAcuP,WAC7BxhC,KAAKi6C,UAAUsI,cAAa,EAAMviD,KAAKqF,QAAQ4sB,cAAcwP,gBAG/DzhC,KAAKi6C,UAAUuI,aAAaxiD,KAAKqF,QAAQ4sB,cAAcyP,aAOzDoe,EAAW3iD,UAAUsQ,QAAU,SAAUpN,GACnCL,KAAKogD,kBACPpgD,KAAKgF,IAAI,OAAQ,oCAAsChF,KAAK8H,gBAAgBmF,SAAS,KAGvF,MAAMjH,EAAOhG,KACPy6C,EAAU,IAAIgF,EAASl7B,eAAe,CAAEO,UAAW9kB,KAAKqF,QAAQ07B,gBAAgBjc,YA2CtF,SAAS29B,EAAgB5iD,GACvB,OAAIA,EACKmG,EAAKq8C,gBAAgBxiD,GAAK,EAAOQ,GAGnC2F,EAAK08C,gBAAgBriD,GA9C9BL,KAAK2iD,WAAWlI,EAAS,KAAM,SAA0B56C,EAAK+iD,GAC5D,GAAI/iD,GAAOmG,EAAKo6C,iBAAkB,CAChC,IAAIyC,EAAmBhjD,aAAepC,EAAOsV,eAC3ClT,EAAI6K,OAASwU,EAAM3P,mBAAmBE,eACtC5P,EAAIiM,QAAQ9H,QAAQ,4CAA8C,EAQpE,IAPK6+C,GAAmB3jC,EAAMpX,gBAAgBg7C,iCAAiC98C,EAAK8B,mBAGlF+6C,EAAmBhjD,aAAepC,EAAOsV,eACvClT,EAAI6K,OAASwU,EAAM3P,mBAAmBC,aACtC3P,EAAIiM,QAAQ9H,QAAQ,8DAAgE,GAEpF6+C,EAAiB,CAGnB,IAAIE,EAAe/8C,EAAKi7C,SAASz1C,QAIjC,OAHIu3C,IAAiB/8C,EAAK8B,kBACxBi7C,EAAe7jC,EAAMpX,gBAAgBk7C,kBAAkBh9C,EAAK8B,kBAEzDi7C,GAIL/8C,EAAKhB,IAAI,OAAQ,cAAgBgB,EAAK8B,gBAAgBmF,SAAS,IAAM,2BAA6B81C,EAAa91C,SAAS,KACxHjH,EAAKi9C,gBAAgBF,QAErBzrB,aAAa,WACXtxB,EAAKg7C,MAAM,WAETh7C,EAAK67C,KAAKxhD,QATLoiD,EACL,IAAIn9C,MAAM,2DAA6DU,EAAK8B,mBAcpF,GAAI86C,GAAYA,EAASM,iBACvB,OAAOl9C,EAAKm9C,oBAAoBP,EAASQ,kBAAmBX,GAE9DA,EAAgB5iD,MAYpBigD,EAAW3iD,UAAUklD,gBAAkB,SAAUxiD,EAAK06B,EAASl6B,GAC7DL,KAAKgF,IAAI,mEAAoEhF,KAAKigD,uBAAwBpgD,GACtG06B,GAEFv6B,KAAKi6C,UAAU1f,UAGjBv6B,KAAKob,SAASioC,kBAAkBxjD,GAEhCQ,EAASR,IAMXigD,EAAW3iD,UAAUulD,gBAAkB,SAAUriD,GAC/CL,KAAK6Y,KAAK,aACV7Y,KAAK2gD,WAAY,EAEjB3gD,KAAKi6C,UAAU6G,mBAAmB,SAClC9gD,KAAKi6C,UAAUhjB,GAAG,QAASj3B,KAAKsjD,kBAAkBvmD,KAAKiD,OACvDK,KAIFy/C,EAAW3iD,UAAU8lD,gBAAkB,SAAUF,GAE/C/iD,KAAK8H,gBAAkBi7C,EACvB/iD,KAAKqhB,QAAQo8B,mBAAmBsF,GAChC/iD,KAAKygD,WAAW8C,WAAWR,IAM7BjD,EAAW3iD,UAAUmmD,kBAAoB,SAAUzjD,GACjDG,KAAKob,SAASioC,kBAAkBxjD,GAChCG,KAAKwjD,sBAAsB3jD,IAM7BigD,EAAW3iD,UAAUqmD,sBAAwB,SAAU3I,GACjD76C,KAAKwgD,eAEPiD,aAAazjD,KAAKwgD,cAClBxgD,KAAKwgD,aAAe,MAEtBxgD,KAAKygD,WAAWpB,QACZr/C,KAAK0gD,WACP1gD,KAAK6Y,KAAK,SAEZ,MAAMhZ,EAAM,IAAIqf,EAAM3R,YAAY,qBAClC1N,EAAI86C,eAAgB,EAChBE,IACFh7C,EAAIg7C,WAAaA,GAInB,MAAM6I,EAAa37C,EAAMrC,aAAa1F,KAAKqgD,aAG3CrgD,KAAKqgD,YAAc,GACfqD,EAAWrkD,OAAS,GACtBW,KAAKgF,IAAI,OAAQ,YAAc0+C,EAAWrkD,OAAS,sBAIrD0I,EAAM5E,KAAKugD,EAAY,SAAUvJ,EAAW15C,GAC1C05C,EAAUwJ,UAAU9jD,GACpBY,MAGF,MAAMmjD,EAAoB5jD,KAAKsgD,eAC/BtgD,KAAKsgD,eAAiB,GACtBv4C,EAAM5E,KAAKygD,EAAmB,SAAUzJ,EAAW15C,GACjD05C,EAAUwJ,UAAU9jD,GACpBY,OASJq/C,EAAW3iD,UAAUgmD,oBAAsB,SAAUC,EAAmB/iD,GACtE,IAAKL,KAAKqF,QAAQu8B,aAChB,OAAOvhC,EAAS,IAAI5C,EAAOwV,oBAAoB,oCAEjD,MAAM4wC,EAAgB7jD,KAAKqF,QAAQu8B,aAAakiB,iBAAiB9jD,KAAK+/C,SAAUqD,GAC1Ep9C,EAAOhG,KACb6jD,EAAcE,gBAAgB,SAAiClkD,EAAKgkB,GAElE,GAAIhkB,EACF,OAAOmG,EAAKg+C,sBAAsB3jD,EAAUR,GAE9CmG,EAAK2H,aAAak2C,EAAehgC,EAAOxjB,MAU5Cy/C,EAAW3iD,UAAUwQ,aAAe,SAASk2C,EAAehgC,EAAOxjB,GACjE,MAAM2F,EAAOhG,KACb,IAAIy6C,EAAU,IAAIgF,EAAS77B,oBAAoBC,GAC/C,GAA6B,IAAzB7jB,KAAK8H,gBAAuB,CAE9B,IAAK+7C,EAAc9/B,SACjB,OAAO/d,EAAKg+C,sBACV3jD,EAAU,IAAI5C,EAAOwV,oBAAoB,sEAG7CwnC,EAAU,IAAIgF,EAAS37B,mBAAmB+/B,EAAc9/B,SAAU8/B,EAAc7/B,UAGlFhkB,KAAK2iD,WAAWlI,EAAS,KAAM,SAA8B56C,EAAKC,GAChE,GAAID,EAAK,CACP,GAAIA,aAAepC,EAAOsV,eAAiBlT,EAAI6K,OAASwU,EAAM3P,mBAAmBG,eAAgB,CAC/F,MAAMu0C,EAAY,IAAIxmD,EAAOwV,oBAAoBpT,EAAIiM,SACrDm4C,EAAUC,eAAiBrkD,EAC3BA,EAAMokD,EAER,OAAOj+C,EAAKg+C,sBAAsB3jD,EAAUR,GAG9C,OAAIC,EAAO4N,OACTm2C,EAAcM,0BACP9jD,KAGLP,EAAOsO,cACFy1C,EAAcO,kBAAkBtkD,EAAO+jB,MAAO,SAA0BhkB,EAAKpD,GAClF,GAAIoD,EACF,OAAOmG,EAAKg+C,sBAAsB3jD,EAAUR,GAG9CmG,EAAK2H,aAAak2C,EAAepnD,EAAG4D,UAIxCA,EAAS,IAAI5C,EAAOuV,oBAAoB,uCAAyCxV,EAAKoB,QAAQkB,QAIlGggD,EAAW3iD,UAAU6mD,sBAAwB,SAAS3jD,EAAUR,GAC9DG,KAAKob,SAAS4oC,sBAAsBnkD,GACpCQ,EAASR,IAQXigD,EAAW3iD,UAAUknD,eAAiB,SAAUr0B,EAAU3vB,GACxD,IAAK2vB,GAAYhwB,KAAKgwB,WAAaA,EACjC,OAAO3vB,IAGT,GADAL,KAAKoiD,KAAK,kBAAmB/hD,GACzBL,KAAKskD,eAAiBt0B,EAExB,OAEFhwB,KAAKskD,aAAet0B,EACpB,MAAMliB,EAAQtQ,EAAKgE,OAAO,WAAYwuB,GAChChqB,EAAOhG,KACbA,KAAK2iD,WACH,IAAIlD,EAASt7B,aAAarW,EAAO,KAAM,MACvC,KACA,SAAwCjO,GAClCA,EACFmG,EAAKhB,IAAI,yBAA0BgB,EAAKi6C,wDAAyDpgD,GAGjGmG,EAAKgqB,SAAWA,EAElBhqB,EAAKs+C,aAAe,KACpBt+C,EAAK6S,KAAK,kBAAmBhZ,EAAKmwB,MASxC8vB,EAAW3iD,UAAUonD,YAAc,SAAUz2C,EAAOzN,GAClD,MAAMvE,GAASkE,KAAKgwB,UAAY,IAAOliB,EACvC,IAAI5I,EAAOlF,KAAKugD,WAAWzkD,GAC3B,GAAIkE,KAAKugD,WAAWzkD,GAElB,OAAOoJ,EAAKk9C,KAAK,WAAY/hD,IAE/B6E,EAAO,IAAImf,EAAO6hB,cACb8Z,gBAAgB,GACrB96C,EAAKk9C,KAAK,WAAY/hD,GACtBL,KAAKugD,WAAWzkD,GAAQoJ,EACxB,MAAMc,EAAOhG,KACbA,KAAK2iD,WAAW,IAAIlD,EAASv7B,eAAepW,GAAQ,KAAM,SAAUjO,EAAK+iD,GACvE19C,EAAK2T,KAAK,WAAYhZ,EAAK+iD,UACpB58C,EAAKu6C,WAAWzkD,MAY3BgkD,EAAW3iD,UAAUwlD,WAAa,SAAUlI,EAAS/4C,EAAarB,GAChEqB,EAAcA,GAAe6e,EAAiBqB,QAG9C,MAAMu4B,EAAY,IAAIyF,EAAenF,EAAS/4C,EAAY8iD,iBAAkB,CAAC3kD,EAAK+iD,EAAUvjD,KACrFQ,GAAQA,EAAI86C,eAGf36C,KAAK6Y,KAAK,oBAEZxY,EAASR,EAAK+iD,EAAUvjD,KAGpBqM,EAAW1L,KAAKykD,eAOtB,OAJAtK,EAAUuK,kBAAkBhjD,EAAa1B,KAAKqF,QAAQ4sB,cAAcjiB,YAAahQ,KAAK+/C,SACpF,IAAM//C,KAAKo+C,qBACX,IAAMp+C,KAAKo+C,sBAEI,OAAb1yC,GACF1L,KAAKgF,IAAI,OACP,aACAhF,KAAKsgD,eAAejhD,OACpB,0GACFW,KAAKsgD,eAAe57C,KAAKy1C,GAClBA,IAETn6C,KAAK2kD,OAAOxK,EAAWzuC,GAChByuC,IAST2F,EAAW3iD,UAAUwnD,OAAS,SAAUxK,EAAWzuC,GACjDyuC,EAAUzuC,SAAWA,EACrB,MAAM1F,EAAOhG,KACbA,KAAK4hD,WAAWl9C,KAAKy1C,EAAW,SAAwBt6C,GACtD,GAAIA,EAIF,OADAmG,EAAKy6C,WAAW/7C,KAAKgH,GACdyuC,EAAUwJ,UAAU9jD,GAE7BmG,EAAKhB,IAAI,UAAW,gBAAkB0G,EAAW,OAAS1F,EAAKi6C,sBAC3D9F,EAAUyK,WACZ5+C,EAAKo7C,OAAOyD,WAAWn5C,EAAU,CAAEo5C,OAAO,IAE5C9+C,EAAK++C,kBACL/+C,EAAKq6C,YAAY30C,GAAYyuC,KAIjC2F,EAAW3iD,UAAU4nD,gBAAkB,WACrC,IAAK/kD,KAAKqF,QAAQ87B,QAAQC,kBACxB,OAEF,MAAMp7B,EAAOhG,KAGPglD,EAAkBhlD,KAAKwgD,aAC7Bx6C,EAAKw6C,aAAe8B,WAAW,IAAMt8C,EAAKi/C,sBAAuBj/C,EAAKX,QAAQ87B,QAAQC,mBAClF4jB,GAEFvB,aAAauB,IAOjBlF,EAAW3iD,UAAU8nD,oBAAsB,WACrCjlD,KAAKklD,iBAGPllD,KAAKwgD,aAAe8B,WAAW,IAAMtiD,KAAKilD,sBAAuBjlD,KAAKqF,QAAQ87B,QAAQC,oBAIxFphC,KAAKgF,IAAI,2BAA4BhF,KAAKigD,yEAC1CjgD,KAAKklD,kBAAmB,EACxBllD,KAAK2iD,WAAWlD,EAASp6C,QAAS,KAAOxF,IACvCG,KAAKklD,kBAAmB,EACnBrlD,IAKLG,KAAKgF,IAAI,UAAW,mCAAoCnF,GACxDG,KAAK6Y,KAAK,mBAAoBhZ,EAAKG,WAQvC8/C,EAAW3iD,UAAUsnD,aAAe,WAClC,OAAOzkD,KAAKygD,WAAWrW,OAGzB0V,EAAW3iD,UAAUukD,aAAe,SAASpuB,GAC3C,MAAM5nB,EAAW4nB,EAAO5nB,SACpBA,EAAW,WAGR1L,KAAKqgD,YAAY30C,GACxB1L,KAAKygD,WAAW/7C,KAAKgH,GACjB1L,KAAK0gD,WAAuC,IAA1B1gD,KAAKygD,WAAW0E,OAA8C,IAA/BnlD,KAAKsgD,eAAejhD,QACvEW,KAAK6Y,KAAK,SAEZ7Y,KAAKolD,eAGPtF,EAAW3iD,UAAUioD,WAAa,WAChC,GAAmC,IAA/BplD,KAAKsgD,eAAejhD,OACtB,OAEF,MAAMqM,EAAW1L,KAAKykD,eACtB,GAAiB,OAAb/4C,EAEF,OAEF,MAAM1F,EAAOhG,KACb,IAAIm6C,EACJ,MAAQA,EAAYn6C,KAAKsgD,eAAe/F,WAAaJ,EAAUK,iBAI1DL,EAOL7iB,aAAa,WACXtxB,EAAK2+C,OAAOxK,EAAWzuC,KANvB1L,KAAKygD,WAAW/7C,KAAKgH,IAczBo0C,EAAW3iD,UAAUmhD,YAAc,WACjC,OAAOt+C,KAAKygD,WAAW0E,OAMzBrF,EAAW3iD,UAAUqkD,aAAe,SAAUluB,EAAQzzB,EAAKC,GACzD,MAAM4L,EAAW4nB,EAAO5nB,SACxB,GAAGA,EAAW,EACZ,OAAO1L,KAAKgF,IAAI,UAAW,iBAAkBsuB,GAE/C,MAAM6mB,EAAYn6C,KAAKqgD,YAAY30C,GACnC,IAAKyuC,EACH,OAAOn6C,KAAKgF,IAAI,QAAS,6CAA+C0G,GAE1E1L,KAAKgF,IAAI,UAAW,mBAAqB0G,EAAW,SAAW1L,KAAKigD,sBACpE9F,EAAUwJ,UAAU9jD,EAAKC,EAAQwzB,EAAO1nB,aAG1Ck0C,EAAW3iD,UAAUwkD,gBAAkB,SAAUruB,EAAQplB,GACvD,OAAQA,EAAMm3C,WACZ,KAAKnmC,EAAM/P,eAAeG,aACxBtP,KAAK6Y,KAAK,mBAAoB3K,GAC9B,MACF,KAAKgR,EAAM/P,eAAeC,eACxBpP,KAAK6Y,KAAK,qBAAsB3K,GAChC,MACF,KAAKgR,EAAM/P,eAAeE,aACxBrP,KAAK6Y,KAAK,mBAAoB3K,KAQpC4xC,EAAW3iD,UAAUskD,UAAY,SAAUnuB,EAAQ0S,EAAKtkB,EAAMokB,EAAWr6B,GACvE,MAAMC,EAAW4nB,EAAO5nB,SACxB,GAAGA,EAAW,EACZ,OAAO1L,KAAKgF,IAAI,UAAW,iBAAkBsuB,GAE/C,MAAM6mB,EAAYn6C,KAAKqgD,YAAY30C,GACnC,IAAKyuC,EACH,OAAOn6C,KAAKgF,IAAI,QAAS,6CAA+C0G,GAE1EyuC,EAAUmL,aAAatf,EAAKtkB,EAAMokB,EAAWr6B,EAAO6nB,IAQtDwsB,EAAW3iD,UAAU6jD,MAAQ,SAAU3gD,GAGrC,GAFAA,EAAWA,GAAY0H,EAAMnK,MAExBoC,KAAK2gD,YAAc3gD,KAAK4gD,aAC3B,OAAOvgD,IAQT,GALAL,KAAK2gD,WAAY,EAEjB3gD,KAAK8gD,mBAAmB,SACxB9gD,KAAKwjD,yBAEAxjD,KAAK4gD,aACR,OAAOvgD,IAITL,KAAK4gD,cAAe,EACpB5gD,KAAKgF,IAAI,mCAAoChF,KAAKigD,wBAClD,MAAMj6C,EAAOhG,KAGPulD,EAAajD,WAAW,KAC5BtiD,KAAKgF,IAAI,UAAWhF,KAAKigD,sEACpBjgD,KAAKqF,QAAQ4sB,cAAcqP,2CAChCthC,KAAKi6C,UAAU1f,WACdv6B,KAAKqF,QAAQ4sB,cAAcqP,gBAE9BthC,KAAKi6C,UAAUmI,KAAK,QAAS,SAAUoD,GACrC/B,aAAa8B,GACTC,GACFx/C,EAAKhB,IAAI,OAAQ,+CAEnBsyB,aAAaj3B,KAOfL,KAAKi6C,UAAU6G,mBAAmB,SAClC9gD,KAAKi6C,UAAUhjB,GAAG,QAASp3B,GAAOG,KAAKwjD,sBAAsB3jD,IAG7DG,KAAKi6C,UAAUthB,OAOjBmnB,EAAW3iD,UAAUsoD,gBAAkB,WACrC,GAAKzlD,KAAKi6C,UAIV,OAAOj6C,KAAKi6C,UAAUyL,cAGxBpqD,EAAOD,QAAUykD,G,6BCxtBjB,MAAMtiD,EAAO,EAAQ,GAEf0hB,EAAQ,EAAQ,GAChBpW,EAAYoW,EAAMpW,UAClBd,EAAOkX,EAAMlX,KACb4J,EAAUsN,EAAMtN,QAChBH,EAAayN,EAAMzN,WACnBk0C,EAAc,EAAQ,IACtB59C,EAAQ,EAAQ,GAChB8b,EAAQ,EAAQ,IAEhB+hC,EAAY,kEAEZvL,EAAU,CACdwL,UAAW99C,EAAMlJ,qBAAqB,CAAC,EAAG,IAC1CinD,UAAW/9C,EAAMlJ,qBAAqB,CAAC,EAAG,EAAG,EAAG,IAChDknD,SAAUh+C,EAAMlJ,qBAAqB,CAAC,IACtCmnD,QAASj+C,EAAMlJ,qBAAqB,CAAC,IACrConD,aAAcl+C,EAAMlJ,qBAAqB,CAAC,OAItCqnD,EAAsC,oBAAXxiB,OAC3ByiB,EAAWD,EAAoBxiB,OAAO,IAAM,KAC5C0iB,EAAUF,EAAoBxiB,OAAO,GAAK,KAC1C2iB,EAAUH,EAAoBxiB,OAAO,GAAK,KAC1C4iB,EAAeJ,EAAoBxiB,QAAQ,GAAK,KAChD6iB,EAAiBL,EAAoBxiB,OAAO,YAAc,KAC1D8iB,EAAgBN,EAAoBxiB,OAAO,KAAQ,KAEnD+iB,EAAmBxqD,OAAO0B,OAAO,CACrCwM,KAAY,2CACZC,IAAY,0CACZ7E,IAAY,0CACZ8E,IAAY,2CACZC,MAAY,4CACZo8C,OAAY,6CACZC,SAAY,+CACZC,UAAY,gDACZhlC,MAAY,4CACZilC,WAAY,2DAERC,EAAW7qD,OAAO0B,OAAO,CAC7B+oD,OAAQ,SACRv8C,KAAM,OACN,IAAO,MACP5E,IAAK,MACL+E,MAAO,QACPsX,MAAO,QACPmlC,SAAU,aAENC,EAAkB/qD,OAAO0B,OAAO,CACpC,2CAAsDmL,EAAUa,QAChE,4CAAsDb,EAAUE,MAChE,2CAAsDF,EAAUY,KAChE,+CAAsDZ,EAAUe,SAChE,4CAAsDf,EAAUU,IAChE,4CAAsDV,EAAUI,KAChE,4CAAsDJ,EAAUS,MAChE,6CAAsDT,EAAUQ,OAChE,8CAAsDR,EAAUK,QAChE,kDAAsDL,EAAUgB,KAChE,iDAAsDhB,EAAUiB,KAChE,2CAAsDjB,EAAUkB,KAChE,4CAAsDlB,EAAUmB,SAChE,2CAAsDnB,EAAUoB,QAChE,2CAAsDpB,EAAUW,UAChE,gDAAsDX,EAAUW,UAChE,2CAAsDX,EAAUG,OAChE,8CAAsDH,EAAUO,QAChE,8CAAsDP,EAAUc,OAChE,oDAAsDd,EAAUM,UAE5D69C,EAA0BhrD,OAAO6E,KAAKkmD,GAAiB7qC,OAAO,SAAU+qC,EAAUvU,GACtF,OAAOA,EAAQtzC,OAAS6nD,EAAWvU,EAAQtzC,OAAS6nD,GACnD,GACGC,EAAmB,+CACnBC,EAAkBr/C,EAAMlJ,qBAAqB,CAAC,IAAK,IAAK,IAAK,MAC7DwoD,EAAmBt/C,EAAMlJ,qBAAqB,CAAC,IAAK,IAAK,IAAK,MAO9DyoD,EAA2B,IAAIC,IAAI,CACvCz+C,EAAUrK,KACVqK,EAAUE,MACVF,EAAUa,QACVb,EAAUC,OACVD,EAAUI,OASZ,SAASs2C,EAAQ13C,EAAiBzC,GAChCrF,KAAKqjC,gBAAkBh+B,EAAQ3G,UAAYqJ,EAAMrK,YAgBnD,WAOEsC,KAAKy9C,mBAAqB,SAAUjhD,GAClCwD,KAAK8H,gBAAkBtL,EAEvBwD,KAAKwnD,uBAAyBC,EAC9BznD,KAAK0nD,gBAAkBC,EACvB3nD,KAAK4nD,qBAAuB,EACvB1oC,EAAMpX,gBAAgB+/C,2BAA2B7nD,KAAK8H,mBACzD9H,KAAKwnD,uBAAyBM,EAC9B9nD,KAAK0nD,gBAAkBK,EACvB/nD,KAAK4nD,qBAAuB,IAGhC,MAAMI,EAAiB,GACjBC,EAAiB,GAEvBjoD,KAAKkoD,WAAa,SAAUzoB,GAC1B,OAAOz/B,KAAKmoD,aAAa1oB,IAE3Bz/B,KAAKooD,aAAe,SAAU3oB,EAAOhxB,GACnC,MAAMhP,EAAUuoD,EAAev5C,GAC/B,OAAIhP,EACKA,EAAQ/D,KAAKsE,KAAMy/B,GAErBz/B,KAAKmoD,aAAa1oB,IAE3Bz/B,KAAKqoD,eAAiB,SAAU5oB,GAC9B,OAAOvgB,EAAMxN,SAASvF,WAAWszB,IAEnCz/B,KAAKsoD,iBAAmB,SAAU7oB,GAChC,OAAOA,EAAMxyB,SAAS,SAExBjN,KAAKuoD,kBAAoB,SAAU9oB,GACjC,OAAOA,EAAMxyB,SAAS,UAExBjN,KAAKwoD,cAAgB,SAAU/oB,GAC7B,QAASA,EAAMpzB,UAAU,IAE3BrM,KAAKyoD,aAAe,SAAUhpB,GAC5B,OAAOA,EAAMipB,aAAa,IAE5B1oD,KAAK2oD,YAAc,SAAUlpB,GAC3B,OAAOA,EAAMmpB,YAAY,IAE3B5oD,KAAK6oD,UAAY,SAAUppB,GACzB,OAAOA,EAAM3yB,YAAY,IAE3B9M,KAAK8oD,eAAiB,SAAUrpB,GAC9B,OAAOA,EAAMnzB,YAAY,IAE3BtM,KAAK+oD,cAAgB,SAAUtpB,GAC7B,OAAOA,EAAMlzB,SAAS,IAGxBvM,KAAKgpD,qBAAuB,SAAUvpB,GACpC,OAAOz3B,EAAKmE,WAAWszB,IAGzBz/B,KAAKipD,uBAAyB,SAAUxpB,GACtC,OAAOiE,OAAOwlB,OAAO,GAAKxlB,OAAOjE,EAAMjzB,aAAa,KAAO25C,EAAYziB,OAAOjE,EAAMjzB,aAAa,MAGnGxM,KAAKmpD,WAAanpD,KAAKqjC,gBAAgBG,gBACnCxjC,KAAKipD,uBACLjpD,KAAKgpD,qBAEThpD,KAAKopD,uBAAyB,SAAU3pB,GACtC,OAAO7tB,EAAQzF,WAAWszB,IAG5Bz/B,KAAKqpD,sBAAwB,SAA8B5pB,GACzD,IAAI3/B,EAASumD,EACb,GAAI5mB,EAAM,IAAM,IACd,IAAK,IAAIlkC,EAAI,EAAGA,EAAIkkC,EAAMpgC,OAAQ9D,IAAK,CAErCuE,GADU4jC,OAAOjE,EAAMA,EAAMpgC,OAAS,EAAI9D,KAClBmoC,OAAW,EAAJnoC,OAE5B,CACL,IAAK,IAAIA,EAAI,EAAGA,EAAIkkC,EAAMpgC,OAAQ9D,IAAK,CAErCuE,KADU4jC,OAAOjE,EAAMA,EAAMpgC,OAAS,EAAI9D,IACjBirD,IAAkB9iB,OAAW,EAAJnoC,GAEpDuE,GAAUA,EAGZ,OAAOA,GAGTE,KAAKspD,aAAetpD,KAAKqjC,gBAAgBI,kBACrCzjC,KAAKqpD,sBACLrpD,KAAKopD,uBAETppD,KAAKupD,cAAgB,SAAS9pB,GAC5B,OAAOhuB,EAAWtF,WAAWszB,IAE/Bz/B,KAAKwpD,gBAAkB,SAAS/pB,GAC9B,OAAO,IAAItuB,KAAKnR,KAAKgpD,qBAAqBvpB,GAAOnU,aAEnDtrB,KAAKypD,WAAa,SAAUhqB,GAC1B,OAAOvgB,EAAMrN,UAAU1F,WAAWszB,IAEpCz/B,KAAK0pD,WAAa,SAAUjqB,GAC1B,OAAOvgB,EAAMpN,UAAU3F,WAAWszB,IAKpCz/B,KAAK2pD,WAAa,SAAUlqB,EAAOmqB,GACjC,MAAMC,EAAa7pD,KAAKwnD,uBAAuB/nB,EAAO,GACtD,IAAIrzB,EAASpM,KAAK4nD,qBAClB,MAAMz9C,EAAO,IAAIpL,MAAM8qD,GACvB,IAAK,IAAItuD,EAAI,EAAGA,EAAIsuD,EAAYtuD,IAAK,CAEnC,MAAM8D,EAASW,KAAKwnD,uBAAuB/nB,EAAOrzB,GAClDA,GAAUpM,KAAK4nD,qBAEfz9C,EAAK5O,GAAKyE,KAAKg2B,OAAOyJ,EAAM/8B,MAAM0J,EAAQA,EAAO/M,GAASuqD,GAC1Dx9C,GAAU/M,EAEZ,OAAO8K,GAKTnK,KAAK8pD,UAAY,SAAUrqB,EAAOmqB,GAChC,MAAM9qD,EAAMkB,KAAK2pD,WAAWlqB,EAAOmqB,GACnC,GAAI5pD,KAAKqjC,gBAAgBj5B,IAAK,CAE5B,OAAO,IAAIm5B,EADYvjC,KAAKqjC,gBAAgBj5B,KAClBtL,GAE5B,OAAOA,GAKTkB,KAAK+pD,UAAY,SAAUtqB,EAAOuqB,GAChC,IAAIzkD,EACJ,MAAMskD,EAAa7pD,KAAKwnD,uBAAuB/nB,EAAO,GACtD,IAAIrzB,EAASpM,KAAK4nD,qBAClB,MAAM5hD,EAAOhG,KACb,SAASiqD,EAAW5pD,EAAU4lC,GAC5B,IAAK,IAAI1qC,EAAI,EAAGA,EAAIsuD,EAAYtuD,IAAK,CACnC,MAAM2uD,EAAYlkD,EAAKwhD,uBAAuB/nB,EAAOrzB,GACrDA,GAAUpG,EAAK4hD,qBACf,MAAM9qD,EAAMkJ,EAAKgwB,OAAOyJ,EAAM/8B,MAAM0J,EAAQA,EAAS89C,GAAYF,EAAS,IAC1E59C,GAAU89C,EACV,MAAMC,EAAcnkD,EAAKwhD,uBAAuB/nB,EAAOrzB,GAEvD,GADAA,GAAUpG,EAAK4hD,qBACXuC,EAAc,EAAG,CACnB9pD,EAAS3E,KAAKuqC,EAASnpC,EAAK,MAC5B,SAEF,MAAMN,EAAQwJ,EAAKgwB,OAAOyJ,EAAM/8B,MAAM0J,EAAQA,EAAS+9C,GAAcH,EAAS,IAC9E59C,GAAU+9C,EACV9pD,EAAS3E,KAAKuqC,EAASnpC,EAAKN,IAGhC,GAAIwD,KAAKqjC,gBAAgB99B,IAAK,CAC5B,MAAM+9B,EAAiBtjC,KAAKqjC,gBAAgB99B,IAE5C0kD,GADA1kD,EAAM,IAAI+9B,GACKl5B,IAAK7E,QAGpBA,EAAM,GACN0kD,EAAW,SAAUntD,EAAKN,GACxB+I,EAAIzI,GAAON,IAGf,OAAO+I,GAETvF,KAAKoqD,WAAa,SAAU3qB,GAC1B,OAAO,IAAIvgB,EAAMrX,KAAK7H,KAAKmoD,aAAa1oB,KAE1Cz/B,KAAKqqD,eAAiB,SAAU5qB,GAC9B,OAAO,IAAIvgB,EAAMtX,SAAS5H,KAAKmoD,aAAa1oB,KAE9Cz/B,KAAKsqD,WAAa,SAAU7qB,GAC1B,OAAO,IAAIvgB,EAAMvN,YAAY3R,KAAKmoD,aAAa1oB,KAQjDz/B,KAAKuqD,UAAY,SAAU9qB,EAAO+qB,GAChC,MAAM1qD,EAAS,GACf,IAAIsM,EAAS,EACb,IAAK,IAAI7Q,EAAI,EAAGA,EAAIivD,EAAQC,OAAOprD,QAAU+M,EAASqzB,EAAMpgC,OAAQ9D,IAAK,CAEvE,MAAM8D,EAASogC,EAAM3yB,YAAYV,GACjCA,GAAU,EAEV,MAAMs+C,EAAQF,EAAQC,OAAOlvD,GACzB8D,EAAS,EACXS,EAAO4qD,EAAM5uD,MAAQ,MAGvBgE,EAAO4qD,EAAM5uD,MAAQkE,KAAKg2B,OAAOyJ,EAAM/8B,MAAM0J,EAAQA,EAAO/M,GAASqrD,EAAMzlD,MAC3EmH,GAAU/M,GAEZ,OAAOS,GAETE,KAAK2qD,YAAc,SAAUlrB,EAAOmrB,GAClC,MAAMC,EAAW,IAAI9rD,MAAM6rD,EAAUvrD,QACrC,IAAI+M,EAAS,EACb,IAAK,IAAI7Q,EAAI,EAAGA,EAAIqvD,EAAUvrD,OAAQ9D,IAAK,CACzC,MAAM8D,EAASogC,EAAM3yB,YAAYV,GACjCA,GAAU,EACN/M,EAAS,EACXwrD,EAAStvD,GAAK,MAGhBsvD,EAAStvD,GAAKyE,KAAKg2B,OAAOyJ,EAAM/8B,MAAM0J,EAAQA,EAAO/M,GAASurD,EAAUrvD,IACxE6Q,GAAU/M,GAEZ,OAAO,IAAI6f,EAAMhN,MAAM24C,IAGzB7qD,KAAK8qD,YAAc,SAAUtuD,GAC3B,GAAqB,iBAAVA,EACT,MAAM,IAAImC,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,MAAM6F,EAAM0F,EAAM3J,kBAAkB,GAEpC,OADAiE,EAAI0oD,aAAavuD,EAAO,GACjB6F,GAETrC,KAAKgrD,aAAe,SAAUxuD,GAC5B,GAAqB,iBAAVA,EACT,MAAM,IAAImC,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,MAAM6F,EAAM0F,EAAM3J,kBAAkB,GAEpC,OADAiE,EAAI4oD,cAAczuD,EAAO,GAClB6F,GAMTrC,KAAKkrD,gBAAkB,SAAU1uD,GAC/B,MAAM2iD,EAAgB3iD,EAItB,GAHqB,iBAAVA,IACTA,EAAQ,IAAI2U,KAAK3U,IAEfA,aAAiB2U,OAEnB3U,EAAQA,EAAMgW,UACVxL,MAAMxK,IACR,MAAM,IAAImC,UAAU,iBAAmBwgD,GAG3C,OAAOn/C,KAAKmrD,WAAW3uD,IAQzBwD,KAAKorD,WAAa,SAAU5uD,GAC1B,MAAM2iD,EAAgB3iD,EACtB,IACuB,iBAAVA,IACTA,EAAQ0iB,EAAMrN,UAAU6Y,WAAWluB,IAEjCA,aAAiB2U,OACnB3U,EAAQ0iB,EAAMrN,UAAUw5C,SAAS7uD,IAGrC,MAAOqD,GAEL,MAAM,IAAIlB,UAAU,iCAAmCkB,GAEzD,KAAMrD,aAAiB0iB,EAAMrN,WAC3B,MAAM,IAAIlT,UAAU,4CAA8CnB,EAAKoB,QAAQugD,IAEjF,OAAO3iD,EAAMiQ,YAQfzM,KAAKsrD,WAAa,SAAU9uD,GAC1B,MAAM2iD,EAAgB3iD,EACtB,IACuB,iBAAVA,IACTA,EAAQ0iB,EAAMpN,UAAU4Y,WAAWluB,IAGvC,MAAOqD,GAEL,MAAM,IAAIlB,UAAU,iCAAmCkB,GAEzD,KAAMrD,aAAiB0iB,EAAMpN,WAC3B,MAAM,IAAInT,UAAU,uCAAyCnB,EAAKoB,QAAQugD,IAE5E,OAAO3iD,EAAMiQ,YAMfzM,KAAKurD,WAAa,SAAU/uD,GAC1B,GAAqB,iBAAVA,EACT,IACEA,EAAQ0iB,EAAMrX,KAAK6iB,WAAWluB,GAAOgV,YAEvC,MAAO3R,GACL,MAAM,IAAIlB,UAAUkB,EAAIiM,aAErB,MAAItP,aAAiB0iB,EAAMrX,MAGhC,MAAM,IAAIlJ,UAAU,2DAA6DnB,EAAKoB,QAAQpC,IAF9FA,EAAQA,EAAMgV,YAKhB,OAAOhV,GAOTwD,KAAKwrD,WAAa,SAAUhvD,GAO1B,GANqB,iBAAVA,IACTA,EAAQ0iB,EAAMvN,YAAY+Y,WAAWluB,IAEnCA,aAAiB0iB,EAAMvN,cACzBnV,EAAQA,EAAMgV,eAEVhV,aAAiBsB,QACrB,MAAM,IAAIa,UAAU,2DAA6DnB,EAAKoB,QAAQpC,IAEhG,OAAOA,GAOTwD,KAAKyrD,sBAAwB,SAAUjvD,GAChB,iBAAVA,EACTA,EAAQwL,EAAKuK,WAAW/V,GACE,iBAAVA,IAChBA,EAAQwL,EAAK0iB,WAAWluB,IAG1B,IAAI6F,EAAM,KAQV,GANI7F,aAAiBwL,EACnB3F,EAAM2F,EAAKyE,SAASjQ,GACXA,aAAiBmpD,IAC1BtjD,EAAM2F,EAAKyE,SAASjQ,EAAMkvD,gBAGhB,OAARrpD,EACF,MAAM,IAAI1D,UAAU,oEAAsEnB,EAAKoB,QAAQpC,IAGzG,OAAO6F,GAGTrC,KAAK2rD,wBAA0B,SAAUnvD,GAEvC,GAAqB,iBAAVA,EAET,MAAM,IAAImC,UAAU,sCAAwCnB,EAAKoB,QAAQpC,IAG3E,MAAM0P,EAASnE,EAAM3J,kBAAkB,GAGvC,OAFA8N,EAAOW,cAAcqI,OAAO1Y,GAAS2pD,KAAc,EAAG,GACtDj6C,EAAOW,cAAcqI,OAAO1Y,EAAQ+pD,GAAiB,GAC9Cr6C,GAGTlM,KAAKmrD,WAAanrD,KAAKqjC,gBAAgBG,gBACnCxjC,KAAK2rD,wBACL3rD,KAAKyrD,sBAOTzrD,KAAK4rD,yBAA2B,SAAUpvD,GACnB,iBAAVA,IACTA,EAAQoV,EAAQW,WAAW/V,IAER,iBAAVA,IACTA,EAAQoV,EAAQ8Y,WAAWluB,IAE7B,IAAI6F,EAAM,KAOV,GANI7F,aAAiBsB,SACnBuE,EAAM7F,GAEJA,aAAiBoV,IACnBvP,EAAMuP,EAAQnF,SAASjQ,IAEb,OAAR6F,EACF,MAAM,IAAI1D,UAAU,uEAAyEnB,EAAKoB,QAAQpC,IAE5G,OAAO6F,GAGTrC,KAAK6rD,wBAA0B,SAAUrvD,GAEvC,GAAqB,iBAAVA,EACT,MAAM,IAAImC,UAAU,iDAAmDnB,EAAKoB,QAAQpC,IAGtF,GAAIA,IAAU6pD,EACZ,OAAOhM,EAAQ0L,SAGZ,GAAIvpD,IAAU8pD,EACjB,OAAOjM,EAAQ4L,aAGjB,MAAMxnC,EAAQ,GAEd,GAAIjiB,EAAQ6pD,EAAQ,CAClB,KAAO7pD,IAAU6pD,GACf5nC,EAAMkoB,QAAQzxB,OAAO1Y,EAAQgqD,IAC7BhqD,IAAiB4pD,EAGf3nC,EAAM,GAAK,KAEbA,EAAMkoB,QAAQ,OAEX,CACL,KAAOnqC,IAAU8pD,GACf7nC,EAAMkoB,QAAQzxB,OAAO1Y,EAAQgqD,IAC7BhqD,IAAiB4pD,EAGf3nC,EAAM,IAAM,KAEdA,EAAMkoB,QAAQ,KAIlB,OAAO5+B,EAAMlJ,qBAAqB4f,IAGpCze,KAAK8rD,aAAe9rD,KAAKqjC,gBAAgBI,kBACrCzjC,KAAK6rD,wBACL7rD,KAAK4rD,yBAOT5rD,KAAK+rD,cAAgB,SAAUvvD,GACR,iBAAVA,EACTA,EAAQiV,EAAWc,WAAW/V,GACJ,iBAAVA,IAChBA,EAAQiV,EAAWiZ,WAAWluB,IAGhC,IAAI6F,EAAM,KAEV,KAAI7F,aAAiBiV,GAGnB,MAAM,IAAI9S,UAAU,0EAA4EnB,EAAKoB,QAAQpC,IAG/G,OALE6F,EAAMoP,EAAWhF,SAASjQ,IAO9BwD,KAAKgsD,aAAe,SAAUxvD,EAAOkC,GACnC,GAAqB,iBAAVlC,EACT,MAAM,IAAImC,UAAU,oDAAsDnB,EAAKoB,QAAQpC,IAEzF,OAAOuL,EAAMzJ,sBAAsB9B,EAAOkC,IAE5CsB,KAAKisD,iBAAmB,SAAUzvD,GAChC,OAAOwD,KAAKgsD,aAAaxvD,EAAO,SAElCwD,KAAKksD,kBAAoB,SAAU1vD,GACjC,OAAOwD,KAAKgsD,aAAaxvD,EAAO,UAElCwD,KAAKmsD,WAAa,SAAU3vD,GAC1B,KAAMA,aAAiBsB,QACrB,MAAM,IAAIa,UAAU,8CAAgDnB,EAAKoB,QAAQpC,IAEnF,OAAOA,GAETwD,KAAKosD,aAAe,SAAU5vD,EAAOV,GACnC,MAAM2D,EAAUwoD,EAAensD,GAC/B,GAAI2D,EACF,OAAOA,EAAQ/D,KAAKsE,KAAMxD,GAE5B,MAAM,IAAImC,UAAU,sCAAwC7C,IAE9DkE,KAAKqsD,eAAiB,SAAU7vD,GAC9B,KAAMA,aAAiB0iB,EAAMxN,UAC3B,MAAM,IAAI/S,UAAU,2DAA6DnB,EAAKoB,QAAQpC,IAEhG,OAAOA,EAAMiQ,YAOfzM,KAAKssD,cAAgB,SAAU9vD,GAC7B,OAAOA,EAAQ69C,EAAQ2L,QAAU3L,EAAQ0L,UAM3C/lD,KAAKusD,UAAY,SAAU/vD,GACzB,GAAIwK,MAAMxK,GACR,MAAM,IAAImC,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,MAAM6F,EAAM0F,EAAM3J,kBAAkB,GAEpC,OADAiE,EAAIg0C,aAAa75C,EAAO,GACjB6F,GAMTrC,KAAKwsD,eAAiB,SAAUhwD,GAC9B,GAAIwK,MAAMxK,GACR,MAAM,IAAImC,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,MAAM6F,EAAM0F,EAAM3J,kBAAkB,GAEpC,OADAiE,EAAIsK,aAAanQ,EAAO,GACjB6F,GAMTrC,KAAKysD,cAAgB,SAAUjwD,GAC7B,GAAIwK,MAAMxK,GACR,MAAM,IAAImC,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,MAAM6F,EAAM0F,EAAM3J,kBAAkB,GAEpC,OADAiE,EAAIuK,UAAUpQ,EAAO,GACd6F,GAETrC,KAAK0sD,WAAa,SAAUlwD,EAAOotD,GACjC,IAAKpsD,EAAKwB,QAAQxC,GAChB,MAAM,IAAImC,UAAU,mDAAqDnB,EAAKoB,QAAQpC,IAExF,GAAqB,IAAjBA,EAAM6C,OACR,OAAO,KAET,MAAMof,EAAQ,GACdA,EAAM/Z,KAAK1E,KAAK0nD,gBAAgBlrD,IAChC,IAAK,IAAIjB,EAAI,EAAEA,EAAIiB,EAAM6C,OAAO9D,IAAK,CACnC,MAAM8K,EAAM7J,EAAMjB,GAClB,GAAI8K,SAA8CA,IAAQ6Y,EAAM/T,MAC9D,MAAM,IAAIxM,UAAU,mDAEtB,MAAM8gC,EAAQz/B,KAAKijB,OAAO5c,EAAKujD,GAE/BnrC,EAAM/Z,KAAK1E,KAAK0nD,gBAAgBjoB,IAEhChhB,EAAM/Z,KAAK+6B,GAEb,OAAO3hC,OAAOwe,OAAOmC,IAEvBze,KAAK2sD,UAAY,SAAUnwD,EAAOotD,GAChC,GAAI5pD,KAAKqjC,gBAAgBj5B,KAAO5N,aAAiBwD,KAAKqjC,gBAAgBj5B,IAAK,CACzE,MAAMtL,EAAM,GAIZ,OAHAtC,EAAMoG,QAAQ,SAAUmI,GACtBjM,EAAI4F,KAAKqG,KAEJ/K,KAAK0sD,WAAW5tD,EAAK8qD,GAE9B,OAAO5pD,KAAK0sD,WAAWlwD,EAAOotD,IAShC5pD,KAAK4sD,UAAY,SAAUpwD,EAAOwtD,GAChC,MAAMvrC,EAAQ,GACd,IAAIouC,EAAc,EACdC,EAAa,KACbC,EAAe,KACnB,MAAM/mD,EAAOhG,KAKb,SAASgtD,EAAQ3mD,EAAKvJ,GACpB,GAAIA,SAA8CA,IAAQoiB,EAAM/T,MAC9D,MAAM,IAAIxM,UAAU,0CAEtB,GAAI0H,SAA8CA,IAAQ6Y,EAAM/T,MAC9D,MAAM,IAAIxM,UAAU,4CAEtB,MAAMsuD,EAAYjnD,EAAKid,OAAOnmB,EAAKgwD,GAEnCruC,EAAM/Z,KAAKsB,EAAK0hD,gBAAgBuF,IAEhCxuC,EAAM/Z,KAAKuoD,GAEX,MAAMC,EAAclnD,EAAKid,OAAO5c,EAAK0mD,GAErCtuC,EAAM/Z,KAAKsB,EAAK0hD,gBAAgBwF,IAEZ,OAAhBA,GACFzuC,EAAM/Z,KAAKwoD,GAEbL,IAEF,GA1BI7C,IACF8C,EAAa9C,EAAS,GACtB+C,EAAe/C,EAAS,IAwBtBhqD,KAAKqjC,gBAAgB99B,KAAO/I,aAAiBwD,KAAKqjC,gBAAgB99B,IAEpE/I,EAAMoG,QAAQoqD,QAId,IAAK,MAAMlwD,KAAON,EAAO,CACvB,IAAKA,EAAMY,eAAeN,GACxB,SAGFkwD,EADYxwD,EAAMM,GACLA,GAKjB,OADA2hB,EAAMkoB,QAAQ3mC,KAAK0nD,gBAAgBmF,IAC5B/uD,OAAOwe,OAAOmC,IAEvBze,KAAKmtD,UAAY,SAAU3wD,EAAOguD,GAChC,MAAM/rC,EAAQ,GACd,IAAIlX,EAAc,EAClB,IAAK,IAAIhM,EAAI,EAAGA,EAAIivD,EAAQC,OAAOprD,OAAQ9D,IAAK,CAC9C,MAAMmvD,EAAQF,EAAQC,OAAOlvD,GACvBkJ,EAAOzE,KAAKijB,OAAOzmB,EAAMkuD,EAAM5uD,MAAO4uD,EAAMzlD,MAClD,IAAKR,EAAM,CACTga,EAAM/Z,KAAK0iD,GACX7/C,GAAe,EACf,SAEF,GAAI9C,IAASya,EAAM/T,MAAO,CACxBsT,EAAM/Z,KAAK2iD,GACX9/C,GAAe,EACf,SAEF,MAAM6lD,EAAerlD,EAAM3J,kBAAkB,GAC7CgvD,EAAa/W,aAAa5xC,EAAKpF,OAAQ,GACvCof,EAAM/Z,KAAK0oD,GACX3uC,EAAM/Z,KAAKD,GACX8C,GAAe9C,EAAKpF,OAAS,EAE/B,OAAOvB,OAAOwe,OAAOmC,EAAOlX,IAE9BvH,KAAKqtD,YAAc,SAAU7wD,EAAOouD,GAClC,MAAMnsC,EAAQ,GACd,IAAIlX,EAAc,EAClB,IAAK,IAAIhM,EAAI,EAAGA,EAAIqvD,EAAUvrD,OAAQ9D,IAAK,CACzC,MAAM0J,EAAO2lD,EAAUrvD,GACjBkJ,EAAOzE,KAAKijB,OAAOzmB,EAAMJ,IAAIb,GAAI0J,GACvC,IAAKR,EAAM,CACTga,EAAM/Z,KAAK0iD,GACX7/C,GAAe,EACf,SAEF,GAAI9C,IAASya,EAAM/T,MAAO,CACxBsT,EAAM/Z,KAAK2iD,GACX9/C,GAAe,EACf,SAEF,MAAM6lD,EAAerlD,EAAM3J,kBAAkB,GAC7CgvD,EAAa/W,aAAa5xC,EAAKpF,OAAQ,GACvCof,EAAM/Z,KAAK0oD,GACX3uC,EAAM/Z,KAAKD,GACX8C,GAAe9C,EAAKpF,OAAS,EAE/B,OAAOvB,OAAOwe,OAAOmC,EAAOlX,IAY9BvH,KAAKstD,sBAAwB,SAAUtsD,EAAQU,EAAaZ,GAC1D,IAAIyG,EAAc,EAClB,MAAMgmD,EAAiB7rD,EAAY8rD,gBACnC,GAAIhwD,EAAKwB,QAAQuuD,GAAiB,CAChC,GAA8B,IAA1BA,EAAeluD,OAEjB,YADAqC,EAAY+rD,cAAcF,EAAe,IAK3ChmD,EAAc,EACd,IAAK,IAAIhM,EAAI,EAAGA,EAAIgyD,EAAeluD,OAAQ9D,IAAK,CAC9C,MAAMkJ,EAAO8oD,EAAehyD,GAC5B,IAAKkJ,EAGH,YADA/C,EAAY+rD,cAAc,MAG5BlmD,GAAe9C,EAAKpF,OAAS,EAI/B,YADAqC,EAAY+rD,cAAcC,EAAiBH,EAAgBhmD,IAI7D,GAAIgmD,EAAgB,CAClB,GAAIA,aAA0BzvD,QAAUyvD,aAA0B1pC,EAAM2U,OACnE+0B,aAA0B1pC,EAAM6U,WACnC,OAGF,MAAM,IAAI/5B,oCAAoCnB,EAAKoB,QAAQ2uD,iBACzD,yDAIJ,IAAKvsD,GAA4B,IAAlBA,EAAO3B,OACpB,OAGF,IAAI4wB,EAAiBvuB,EAAYisD,oBAIjC,GAHIjsD,EAAYksD,oBACd39B,EAAiBvuB,EAAYksD,kBAAkBroD,IAAInE,GAAKN,EAAKM,MAE1D6uB,EACH,OAGF,MAAMxR,EAAQ,GACR5c,EAAQH,EAAYK,YAAcgG,EAAMtE,WAExCoqD,EAAe/sD,EAElBvF,GAAKyE,KAAKijB,OAAOjiB,EAAOzF,GAAGiB,MAAOqF,EAAMtG,IADxCA,GAAKyE,KAAKijB,OAAOjiB,EAAOzF,GAAIsG,EAAMtG,IAGrC,IACEgM,EAAcvH,KAAK8tD,uBAAuBrvC,EAAOwR,EAAgB49B,GACjE,MAAOxgD,IAKW,IAAhB9F,GAIJ7F,EAAY+rD,cAAcC,EAAiBjvC,EAAOlX,KAYpDvH,KAAK+tD,sBAAwB,SAAUrsC,EAAM1gB,EAAQU,GACnD,MAAMuuB,EAAiBvuB,EAAYisD,oBACnC,IAAK19B,EACH,OAEF,MAAMxR,EAAQ,IAAI1f,MAAMkxB,EAAe5wB,QACjCwuD,EAActyD,IAClB,MAAMwmB,EAAaL,EAAKzgB,QAAQ1F,GAChC,OAAOyE,KAAKijB,OAAOjiB,EAAOzF,GAAIwmB,EAAaA,EAAW9c,KAAO,OAG/D,IAAIsC,EAAc,EAElB,IACEA,EAAcvH,KAAK8tD,uBAAuBrvC,EAAOwR,EAAgB49B,GACjE,MAAOxgD,IAKW,IAAhB9F,GAIJ7F,EAAY+rD,cAAcC,EAAiBjvC,EAAOlX,KAUpDvH,KAAK8tD,uBAAyB,SAAUrvC,EAAOwR,EAAgB49B,GAC7D,IAAItmD,EAAc,EAClB,IAAK,IAAIhM,EAAI,EAAGA,EAAI00B,EAAe5wB,OAAQ9D,IAAK,CAC9C,MAAM8yC,EAAape,EAAe10B,GAClC,QAAmB+H,IAAf+qC,EAEF,OAAO,EAGT,MAAM5pC,EAAOopD,EAAYxf,GACzB,GAAI5pC,SAAuCA,IAASya,EAAM/T,MAGxD,OAAO,EAIT5D,GAAe9C,EAAKpF,OAAS,EAC7Bof,EAAMljB,GAAKkJ,EAEb,OAAO8C,GAcTvH,KAAKguD,cAAgB,SAAUh+B,EAAUvhB,EAAUw/C,EAAY5uD,EAAQ6uD,EAAa7tD,GAClF4tD,EAAaA,GAAc,EACtB5uD,IACHA,EAASoP,EAASpP,QAEpB,MAAM8uD,EAAW,CACfzjD,KAAM,EACNxF,KAAM,KACNG,QAAS,CACPqhD,QAAQ,IAGZ,IAAI0H,EACJ,GAAI3/C,EAASzK,QAAQ,IAAKiqD,KAAgBA,EAGxC,OADAE,EAASjpD,KAAOuJ,EAAS1K,OAAOkqD,EAAW,EAAG5uD,EAAO,GAC9CgB,EAAS,KAAM8tD,GAWxB,GATK9uD,IACHA,EAASoP,EAASpP,QAEhBoP,EAASzK,QAAQ8iD,EAASJ,OAAQuH,KAAgBA,IAEpDA,GAAcnH,EAASJ,OAAOrnD,OAAS,EACvCA,GAAUynD,EAASJ,OAAOrnD,OAAS,EACnC8uD,EAAS9oD,QAAQqhD,QAAS,GAExBj4C,EAASzK,QAAQ8iD,EAAS38C,KAAM8jD,KAAgBA,EAKlD,OAHAA,GAAcnH,EAAS38C,KAAK9K,OAAS,EACrCA,GAAUynD,EAAS38C,KAAK9K,OAAS,EAEP,KAD1B+uD,EAAaC,EAAY5/C,EAAUw/C,EAAY5uD,EAAQ,IAAK,MAC7CA,OACNgB,EAAS,IAAI1B,UAAU,oBAAsB8P,KAEtD0/C,EAASzjD,KAAO5B,EAAUqB,KACnBnK,KAAKguD,cAAch+B,EAAUo+B,EAAW,GAAI,EAAG,KAAMF,EAAa,SAAUruD,EAAKyuD,GACtF,GAAIzuD,EACF,OAAOQ,EAASR,GAElBsuD,EAASjpD,KAAOopD,EAChBjuD,EAAS,KAAM8tD,MAGnB,GAAI1/C,EAASzK,QAAQ8iD,EAAS18C,IAAK6jD,KAAgBA,EAKjD,OAHAA,GAAcnH,EAAS18C,IAAI/K,OAAS,EACpCA,GAAUynD,EAAS18C,IAAI/K,OAAS,EAEN,KAD1B+uD,EAAaC,EAAY5/C,EAAUw/C,EAAY5uD,EAAQ,IAAK,MAC7CA,OACNgB,EAAS,IAAI1B,UAAU,oBAAsB8P,KAEtD0/C,EAASzjD,KAAO5B,EAAUsB,IACnBpK,KAAKguD,cAAch+B,EAAUo+B,EAAW,GAAI,EAAG,KAAMF,EAAa,SAAUruD,EAAKyuD,GACtF,GAAIzuD,EACF,OAAOQ,EAASR,GAElBsuD,EAASjpD,KAAOopD,EAChBjuD,EAAS,KAAM8tD,MAGnB,GAAI1/C,EAASzK,QAAQ8iD,EAASvhD,IAAK0oD,KAAgBA,EAMjD,OAJAA,GAAcnH,EAASvhD,IAAIlG,OAAS,EACpCA,GAAUynD,EAASvhD,IAAIlG,OAAS,EAGN,KAF1B+uD,EAAaC,EAAY5/C,EAAUw/C,EAAY5uD,EAAQ,IAAK,MAE7CA,OACNgB,EAAS,IAAI1B,UAAU,oBAAsB8P,KAEtD0/C,EAASzjD,KAAO5B,EAAUvD,IACnBvF,KAAKuuD,iBAAiBv+B,EAAUm+B,EAAUC,EAAYF,EAAa7tD,IAE5E,GAAIoO,EAASzK,QAAQ8iD,EAASx8C,MAAO2jD,KAAgBA,EAAY,CAK/D,GAHAA,GAAcnH,EAASx8C,MAAMjL,OAAS,EACtCA,GAAUynD,EAASx8C,MAAMjL,OAAS,GAClC+uD,EAAaC,EAAY5/C,EAAUw/C,EAAY5uD,EAAQ,IAAK,MAC7CA,OAAS,EACtB,MAAM,IAAIV,UAAU,oBAAsB8P,GAG5C,OADA0/C,EAASzjD,KAAO5B,EAAUwB,MACnBtK,KAAKuuD,iBAAiBv+B,EAAUm+B,EAAUC,EAAYF,EAAa7tD,GAE5E,MAAMmuD,EAAS//C,EAASzK,QAAQ,IAAKiqD,KAAgBA,EACjDO,IAEFP,IACA5uD,GAAU,GAGR4uD,EAAa,IACfx/C,EAAWA,EAAS1K,OAAOkqD,EAAY5uD,IAGrCmvD,IACF//C,EAAWA,EAASuM,QAAQ,KAAM,MAEpC,MAAMyzC,EAAW3lD,EAAU2F,GAC3B,MAAwB,iBAAbggD,GACTN,EAASzjD,KAAO+jD,EACTpuD,EAAS,KAAM8tD,IAEpB1/C,IAAaq4C,EAASC,UACxBoH,EAASjpD,KAAOiiD,EACT9mD,EAAS,KAAM8tD,IAEpB1/C,IAAaq4C,EAASllC,OAExBusC,EAASjpD,KAAO,QACT7E,EAAS,KAAM8tD,SAExBD,EAAYl+B,EAAUvhB,EAAU,SAAU5O,EAAK2qD,GAC7C,OAAI3qD,EACKQ,EAASR,GAEd2qD,GACF2D,EAASzjD,KAAO5B,EAAUuB,IAC1B8jD,EAASjpD,KAAOslD,EACTnqD,EAAS,KAAM8tD,SAExB9tD,EAAS,IAAI1B,UAAU,qBAAuB8P,EAAW,SAW7DzO,KAAKuuD,iBAAmB,SAAUv+B,EAAUm+B,EAAUO,EAAWR,EAAa7tD,GAC5E,MAAM2F,EAAOhG,KACb+H,EAAMvC,UAAUkpD,EAAW,SAAU5yD,EAAM2E,GACzCuF,EAAKgoD,cAAch+B,EAAUl0B,EAAKkP,OAAQ,EAAG,KAAMkjD,EAAaztD,IAC/D,SAAUZ,EAAK8uD,GAChB,GAAI9uD,EACF,OAAOQ,EAASR,GAElBsuD,EAASjpD,KAAOypD,EAChBtuD,EAAS,KAAM8tD,MAcnBnuD,KAAK4uD,gBAAkB,SAAUngD,EAAUw/C,EAAY5uD,GACrD,MAAM8uD,EAAW,CACfzjD,KAAM,EACNxF,KAAM,KACNG,QAAS,CACPshD,UAAU,EACVD,QAAQ,IAIZ,IAAI0H,EAiBJ,GAlBAH,EAAaA,GAAc,EAEtB5uD,IACHA,EAASoP,EAASpP,QAEhBA,EAASonD,EAAiBE,SAAStnD,QAAUoP,EAASzK,QAAQyiD,EAAiBE,YAAcsH,IAE/FA,GAAcxH,EAAiBE,SAAStnD,OAAS,EACjDA,GAAUonD,EAAiBE,SAAStnD,OAAS,EAC7C8uD,EAAS9oD,QAAQshD,UAAW,GAE1BtnD,EAASonD,EAAiBC,OAAOrnD,QACjCoP,EAASzK,QAAQyiD,EAAiBC,OAAQuH,KAAgBA,IAE5DA,GAAcxH,EAAiBC,OAAOrnD,OAAS,EAC/CA,GAAUonD,EAAiBC,OAAOrnD,OAAS,EAC3C8uD,EAAS9oD,QAAQqhD,QAAS,GAExBj4C,IAAag4C,EAAiB7kC,MAGhC,OADAusC,EAASjpD,KAAO,QACTipD,EAGT,GAAI9uD,GAAU4nD,EAAyB,CACjCgH,EAAa,IACfx/C,EAAWA,EAAS1K,OAAOkqD,EAAY5uD,IAEzC,MAAMovD,EAAWzH,EAAgBv4C,GACjC,GAAwB,iBAAbggD,EAET,OADAN,EAASzjD,KAAO+jD,EACTN,EAET,MAAM,IAAIxvD,UAAU,qBAAuB8P,EAAW,KAExD,GAAIA,EAASzK,QAAQyiD,EAAiBt8C,KAAM8jD,KAAgBA,EAAY,CAOtE,GAA0B,KAD1BG,EAAaC,EAAY5/C,EAFzBw/C,GAAcxH,EAAiBt8C,KAAK9K,OAAS,EAC7CA,GAAUonD,EAAiBt8C,KAAK9K,OAAS,IAE1BA,OACb,MAAM,IAAIV,UAAU,oBAAsB8P,GAI5C,OAFA0/C,EAASzjD,KAAO5B,EAAUqB,KAC1BgkD,EAASjpD,KAAOlF,KAAK4uD,gBAAgBR,EAAW,IACzCD,EAET,GAAI1/C,EAASzK,QAAQyiD,EAAiBr8C,IAAK6jD,KAAgBA,EAAY,CAOrE,GAA0B,KAD1BG,EAAaC,EAAY5/C,EAFzBw/C,GAAcxH,EAAiBr8C,IAAI/K,OAAS,EAC5CA,GAAUonD,EAAiBr8C,IAAI/K,OAAS,IAEzBA,OAEb,MAAM,IAAIV,UAAU,oBAAsB8P,GAI5C,OAFA0/C,EAASzjD,KAAO5B,EAAUsB,IAC1B+jD,EAASjpD,KAAOlF,KAAK4uD,gBAAgBR,EAAW,IACzCD,EAET,GAAI1/C,EAASzK,QAAQyiD,EAAiBlhD,IAAK0oD,KAAgBA,EAAY,CAOrE,GAA0B,KAF1BG,EAAaC,EAAY5/C,EAFzBw/C,GAAcxH,EAAiBlhD,IAAIlG,OAAS,EAC5CA,GAAUonD,EAAiBlhD,IAAIlG,OAAS,IAGzBA,OACb,MAAM,IAAIV,UAAU,oBAAsB8P,GAI5C,OAFA0/C,EAASzjD,KAAO5B,EAAUvD,IAC1B4oD,EAASjpD,KAAO,CAAClF,KAAK4uD,gBAAgBR,EAAW,IAAKpuD,KAAK4uD,gBAAgBR,EAAW,KAC/ED,EAET,GAAI1/C,EAASzK,QAAQyiD,EAAiBp8C,IAAK4jD,KAAgBA,EAIzD,OAFAA,GAAcxH,EAAiBp8C,IAAIhL,OAAS,EAC5CA,GAAUonD,EAAiBp8C,IAAIhL,OAAS,EACjCW,KAAK6uD,cAAcpgD,EAAUw/C,EAAY5uD,GAElD,GAAIoP,EAASzK,QAAQyiD,EAAiBn8C,MAAO2jD,KAAgBA,EAAY,CAKvE,IADAG,EAAaC,EAAY5/C,EAFzBw/C,GAAcxH,EAAiBn8C,MAAMjL,OAAS,EAC9CA,GAAUonD,EAAiBn8C,MAAMjL,OAAS,IAE3BA,OAAS,EACtB,MAAM,IAAIV,UAAU,oBAAsB8P,GAI5C,OAFA0/C,EAASzjD,KAAO5B,EAAUwB,MAC1B6jD,EAASjpD,KAAOkpD,EAAW7oD,IAAIwF,GAAK/K,KAAK4uD,gBAAgB7jD,IAClDojD,EAKT,OADAA,EAASjpD,KAAOuJ,EAAS1K,OAAOkqD,EAAY5uD,GACrC8uD,GASTnuD,KAAK8uD,cAAgB,SAAUC,GAC7B,IAAIxzD,EAAI,EACJ8D,EAAS0vD,EAAY1vD,OACzB,MAAM2vD,EAAkE,IAApDD,EAAY/qD,QAAQyiD,EAAiBG,WACrDoI,IACFzzD,EAAIkrD,EAAiBG,UAAUvnD,OAAS,EACxCA,KAEF,MAAM6f,EAAQ,GACd,IAAI+uC,EAAa1yD,EACb0zD,EAAS,EACTC,GAAmB,EACnBC,GAAiB,EAErB,OAAS5zD,EAAI8D,GACX,OAAQ0vD,EAAYxzD,IAClB,IAAK,IACH,GAAI0zD,EAAS,EACX,MAEEC,IAEFjB,EAAac,EAAY/qD,QAAQ,IAAKiqD,GAAc,GAEtD/uC,EAAMxa,KAAKqqD,EAAYlzC,UAAUoyC,EAAY1yD,IAC7C0yD,EAAa1yD,EAAI,EACjB,MACF,IAAK,IACH,GAAe,IAAX0zD,GAAgBF,EAAY/qD,QAAQyiD,EAAiBI,WAAYoH,KAAgBA,EAAY,CAC/FiB,GAAmB,EACnBC,GAAiB,EAGjBlB,IADA1yD,EAEA,MAEF0zD,IACA,MACF,IAAK,IACH,GAAIC,GAA+B,IAAXD,EAAa,CACnC/vC,EAAMxa,KAAKqqD,EAAYlzC,UAAUkzC,EAAY/qD,QAAQ,IAAKiqD,GAAc,EAAG1yD,IAC3E0yD,EAAa1yD,EAAI,EACjB,MAEF0zD,IAON,OAHIhB,EAAa5uD,GACf6f,EAAMxa,KAAKqqD,EAAYlzC,UAAUoyC,EAAY5uD,IAExC,CACL6f,MAAOA,EAAM3Z,IAAIzJ,GAAQkE,KAAK4uD,gBAAgB9yD,IAC9CqzD,eAAgBA,EAChBH,YAAaA,IAGjBhvD,KAAK6uD,cAAgB,SAAUpgD,EAAUw/C,EAAY5uD,GACnD,MAAM+vD,EAAYf,EAAY5/C,EAAUw/C,EAAY5uD,GACpD,GAAI+vD,EAAU/vD,OAAS,EAErB,MAAM,IAAIV,UAAU,oBAAsB8P,GAE5C,MAAM0/C,EAAW,CACfzjD,KAAM5B,EAAUuB,IAChBnF,KAAM,MAEFslD,EAAU,CACdx6B,SAAUo/B,EAAU,GACpBtzD,KAAMiM,EAAMzJ,sBAAsB8wD,EAAU,GAAI,OAAOniD,WACvDw9C,OAAQ,IAEV,IAAK,IAAIlvD,EAAI,EAAGA,EAAI6zD,EAAU/vD,OAAQ9D,IAAK,CACzC,MAAM8B,EAAI+xD,EAAU7zD,GACd8zD,EAAiBhyD,EAAE2G,QAAQ,KAC3BsrD,EAAYtvD,KAAK4uD,gBAAgBvxD,EAAGgyD,EAAiB,EAAGhyD,EAAEgC,QAAUgwD,EAAiB,IAC3F7E,EAAQC,OAAO/lD,KAAK,CAClB5I,KAAMiM,EAAMzJ,sBAAsBjB,EAAE0G,OAAO,EAAGsrD,GAAiB,OAAOpiD,WACtEhI,KAAMqqD,IAIV,OADAnB,EAASjpD,KAAOslD,EACT2D,GAGTnG,EAAeb,GAAoBnnD,KAAKqoD,eACxCJ,EAAed,GAAoBnnD,KAAKqsD,gBApsClB3wD,KAAKsE,MAC3BA,KAAKy9C,mBAAmB31C,GA0sC1B,WACE9H,KAAKuvD,SAAW,CACd,CAACzmD,EAAUC,QAAS/I,KAAKooD,aACzB,CAACt/C,EAAUE,OAAQhJ,KAAKuoD,kBACxB,CAACz/C,EAAUG,QAASjJ,KAAKmpD,WACzB,CAACrgD,EAAUI,MAAOlJ,KAAKkoD,WACvB,CAACp/C,EAAUK,SAAUnJ,KAAKwoD,cAC1B,CAAC1/C,EAAUM,SAAUpJ,KAAKmpD,WAC1B,CAACrgD,EAAUO,SAAUrJ,KAAKupD,cAC1B,CAACzgD,EAAUQ,QAAStJ,KAAKyoD,aACzB,CAAC3/C,EAAUS,OAAQvJ,KAAK2oD,YACxB,CAAC7/C,EAAUU,KAAMxJ,KAAK6oD,UACtB,CAAC//C,EAAUrK,MAAOuB,KAAKsoD,iBACvB,CAACx/C,EAAUW,WAAYzJ,KAAKwpD,gBAC5B,CAAC1gD,EAAUY,MAAO1J,KAAKoqD,WACvB,CAACthD,EAAUa,SAAU3J,KAAKsoD,iBAC1B,CAACx/C,EAAUc,QAAS5J,KAAKspD,aACzB,CAACxgD,EAAUe,UAAW7J,KAAKqqD,eAC3B,CAACvhD,EAAUgB,MAAO9J,KAAKsqD,WACvB,CAACxhD,EAAUiB,MAAO/J,KAAKypD,WACvB,CAAC3gD,EAAUkB,MAAOhK,KAAK0pD,WACvB,CAAC5gD,EAAUmB,UAAWjK,KAAK8oD,eAC3B,CAAChgD,EAAUoB,SAAUlK,KAAK+oD,cAC1B,CAACjgD,EAAUqB,MAAOnK,KAAK2pD,WACvB,CAAC7gD,EAAUvD,KAAMvF,KAAK+pD,UACtB,CAACjhD,EAAUsB,KAAMpK,KAAK8pD,UACtB,CAAChhD,EAAUuB,KAAMrK,KAAKuqD,UACtB,CAACzhD,EAAUwB,OAAQtK,KAAK2qD,aAG1B3qD,KAAKwvD,SAAW,CACd,CAAC1mD,EAAUC,QAAS/I,KAAKosD,aACzB,CAACtjD,EAAUE,OAAQhJ,KAAKksD,kBACxB,CAACpjD,EAAUG,QAASjJ,KAAKmrD,WACzB,CAACriD,EAAUI,MAAOlJ,KAAKmsD,WACvB,CAACrjD,EAAUK,SAAUnJ,KAAKssD,cAC1B,CAACxjD,EAAUM,SAAUpJ,KAAKmrD,WAC1B,CAACriD,EAAUO,SAAUrJ,KAAK+rD,cAC1B,CAACjjD,EAAUQ,QAAStJ,KAAKgrD,aACzB,CAACliD,EAAUS,OAAQvJ,KAAK8qD,YACxB,CAAChiD,EAAUU,KAAMxJ,KAAKusD,UACtB,CAACzjD,EAAUrK,MAAOuB,KAAKisD,iBACvB,CAACnjD,EAAUW,WAAYzJ,KAAKkrD,gBAC5B,CAACpiD,EAAUY,MAAO1J,KAAKurD,WACvB,CAACziD,EAAUa,SAAU3J,KAAKisD,iBAC1B,CAACnjD,EAAUc,QAAS5J,KAAK8rD,aACzB,CAAChjD,EAAUe,UAAW7J,KAAKurD,WAC3B,CAACziD,EAAUgB,MAAO9J,KAAKwrD,WACvB,CAAC1iD,EAAUiB,MAAO/J,KAAKorD,WACvB,CAACtiD,EAAUkB,MAAOhK,KAAKsrD,WACvB,CAACxiD,EAAUmB,UAAWjK,KAAKwsD,eAC3B,CAAC1jD,EAAUoB,SAAUlK,KAAKysD,cAC1B,CAAC3jD,EAAUqB,MAAOnK,KAAK0sD,WACvB,CAAC5jD,EAAUvD,KAAMvF,KAAK4sD,UACtB,CAAC9jD,EAAUsB,KAAMpK,KAAK2sD,UACtB,CAAC7jD,EAAUuB,KAAMrK,KAAKmtD,UACtB,CAACrkD,EAAUwB,OAAQtK,KAAKqtD,cAjwCd3xD,KAAKsE,MACbA,KAAKqjC,gBAAgBjhC,WACvBpC,KAAKmoD,aAAesH,EAGpBzvD,KAAKmoD,aAAeuH,EA06CxB,SAAS3H,EAAkBvrD,GACzB,IAAKA,EACH,OAAO69C,EAAQwL,UAEjB,MAAMuH,EAAerlD,EAAM3J,kBAAkB,GAO7C,MANqB,iBAAV5B,EACT4wD,EAAa97C,cAAc9U,EAAO,GAGlC4wD,EAAa97C,cAAc9U,EAAM6C,OAAQ,GAEpC+tD,EAST,SAASzF,EAAkBnrD,GACzB,IAAKA,EACH,OAAO69C,EAAQyL,UAEjB,MAAMsH,EAAerlD,EAAM3J,kBAAkB,GAO7C,MANqB,iBAAV5B,EACT4wD,EAAa/W,aAAa75C,EAAO,GAGjC4wD,EAAa/W,aAAa75C,EAAM6C,OAAQ,GAEnC+tD,EAOT,SAASqC,EAAiBvjD,GACxB,OAAe,OAAXA,EACK,KAEFnE,EAAM3F,WAAW8J,GAO1B,SAASwjD,EAAgBxjD,GACvB,OAAOA,EAST,SAASu7C,EAAyBhoB,EAAOrzB,GACvC,OAAOqzB,EAAM3yB,YAAYV,GAS3B,SAAS07C,EAAyBroB,EAAOrzB,GACvC,OAAOqzB,EAAMkwB,aAAavjD,GAY5B,SAASiiD,EAAY7xD,EAAOyxD,EAAY5uD,EAAQwiD,EAAMb,GACpDa,EAAOA,GAAQ,IACfb,EAAQA,GAAS,IACjB,MAAM9hC,EAAQ,GACd,IAAI0wC,EAAa3B,EACb4B,EAAQ,EACZ,IAAK,IAAIt0D,EAAI0yD,EAAY1yD,EAAI0yD,EAAa5uD,EAAQ9D,IAAK,CACrD,MAAMK,EAAIY,EAAMjB,GACZK,IAAMimD,GACRgO,IAEEj0D,IAAMolD,GACR6O,IAEY,IAAVA,GAAqB,MAANj0D,IACjBsjB,EAAMxa,KAAKlI,EAAMuH,OAAO6rD,EAAYr0D,EAAIq0D,IACxCA,EAAar0D,EAAI,GAKrB,OADA2jB,EAAMxa,KAAKlI,EAAMuH,OAAO6rD,EAAYvwD,GAAUuwD,EAAa3B,KACpD/uC,EAST,SAASwuC,EAAiBjvC,EAAOlX,GAC/B,GAAoB,IAAhBA,EACF,OAAO,KAET,GAAqB,IAAjBkX,EAAMpf,OACR,OAAOof,EAAM,GAEf,MAAMgS,EAAa1oB,EAAM3J,kBAAkBmJ,GAC3C,IAAI6E,EAAS,EACb,IAAK,IAAI7Q,EAAI,EAAGA,EAAIkjB,EAAMpf,OAAQ9D,IAAK,CACrC,MAAMkJ,EAAOga,EAAMljB,GACnBk1B,EAAWnf,cAAc7M,EAAKpF,OAAQ+M,GACtCA,GAAU,EACV3H,EAAKlC,KAAKkuB,EAAYrkB,GAEtBqkB,EADArkB,GAAU3H,EAAKpF,QACM,EACrB+M,IAEF,OAAOqkB,EAlST+uB,EAAQriD,UAAU64B,OAAS,SAAU9pB,EAAQjH,GAC3C,GAAe,OAAXiH,GAAsC,IAAlBA,EAAO7M,SAAiBioD,EAAyBlqC,IAAInY,EAAKyF,MAChF,OAAO,KAGT,MAAMw9B,EAAUloC,KAAKuvD,SAAStqD,EAAKyF,MAEnC,IAAKw9B,EACH,MAAM,IAAI5iC,MAAM,sBAAwBL,EAAKyF,MAG/C,OAAOw9B,EAAQxsC,KAAKsE,KAAMkM,EAAQjH,EAAKC,OAqBzCs6C,EAAQriD,UAAU8lB,OAAS,SAAUzmB,EAAOyO,GAK1C,QAJc3H,IAAV9G,IACFA,EAAQwD,KAAKqjC,gBAAgBjB,qBAAuBpiC,KAAK8H,iBAAmB,EAAIoX,EAAM/T,MAAQ,MAG5F3O,IAAU0iB,EAAM/T,MAAO,CACzB,IAAK+T,EAAMpX,gBAAgBgoD,cAAc9vD,KAAK8H,iBAC5C,MAAM,IAAInJ,UAAU,gFAClBqB,KAAK8H,iBAGT,OAAOtL,EAGT,GAAc,OAAVA,GAAkBA,aAAiBsB,OACrC,OAAOtB,EAIT,IAAIyI,EAAO,CACTyF,KAAM,KACNxF,KAAM,MAGR,GAAI+F,GAWF,GAVwB,iBAAbA,EACThG,EAAKyF,KAAOO,EAEe,iBAAbA,IACdhG,EAAO6D,EAAUyB,UAAUU,IAEA,iBAAlBA,EAASP,OAClBzF,EAAKyF,KAAOO,EAASP,KACrBzF,EAAKC,KAAO+F,EAAS/F,MAEE,iBAAdD,EAAKyF,KACd,MAAM,IAAI/L,UAAU,kFAMtB,KADAsG,EAAOu6C,EAAQuQ,cAAcvzD,IAE3B,MAAM,IAAImC,UAAU,+GAAiHnB,EAAKoB,QAAQpC,IAItJ,MAAM6kB,EAAUrhB,KAAKwvD,SAASvqD,EAAKyF,MAEnC,IAAK2W,EACH,MAAM,IAAI/b,MAAM,sBAAwBL,EAAKyF,MAG/C,OAAO2W,EAAQ3lB,KAAKsE,KAAMxD,EAAOyI,EAAKC,OAUxCs6C,EAAQuQ,cAAgB,SAAUvzD,GAChC,IAAIkO,EAAO,KACPxF,EAAO,KACX,MAAM8qD,SAAqBxzD,EAkD3B,MAjDmB,WAAfwzD,EACFtlD,EAAO5B,EAAUQ,OAEK,WAAf0mD,GACPtlD,EAAO5B,EAAUrK,KACI,KAAjBjC,EAAM6C,QAAiBumD,EAAUnzB,KAAKj2B,KACxCkO,EAAO5B,EAAUY,OAGG,YAAfsmD,EACPtlD,EAAO5B,EAAUK,QAEV3M,aAAiBsB,OACxB4M,EAAO5B,EAAUI,KAEV1M,aAAiB2U,KACxBzG,EAAO5B,EAAUW,UAEVjN,aAAiBwL,EACxB0C,EAAO5B,EAAUG,OAEVzM,aAAiBoV,EACxBlH,EAAO5B,EAAUc,OAEVpN,aAAiBiV,EACxB/G,EAAO5B,EAAUO,QAEV7M,aAAiB0iB,EAAMrX,KAC9B6C,EAAO5B,EAAUY,KAEVlN,aAAiB0iB,EAAMvN,YAC9BjH,EAAO5B,EAAUgB,KAEVtN,aAAiB0iB,EAAMhN,MAC9BxH,EAAO5B,EAAUwB,MAEV9N,aAAiB0iB,EAAMrN,UAC9BnH,EAAO5B,EAAUiB,KAEVvN,aAAiB0iB,EAAMpN,UAC9BpH,EAAO5B,EAAUkB,KAEVxN,aAAiB0iB,EAAMxN,UAC9BhH,EAAO5B,EAAUC,OACjB7D,EAAOiiD,GAEA3pD,EAAKwB,QAAQxC,KACpBkO,EAAO5B,EAAUqB,MAEN,OAATO,EACK,KAEF,CAAEA,KAAMA,EAAMxF,KAAMA,IA8I7B5J,EAAOD,QAAUmkD,G,6BC1pDjB,MAAMx3C,EAAO,EAAQ,IAIfG,EAAM,IAAIw9C,EAAY,EAAG,EAAG,EAAG,GAOrC,SAASA,EAAYn3B,EAAKR,EAAKD,EAAKD,GAElC9tB,KAAKiwD,KAAO,CAAQ,MAANzhC,EAAoB,MAANR,EAAoB,MAAND,EAAoB,MAAND,GAG1D63B,EAAYpzC,WAAa,SAAoB/V,GAC3C,GAAIwK,MAAMxK,KAAW2Y,SAAS3Y,GAC5B,OAAO,IAAImpD,EAEb,GAAInpD,EAAQ,EACV,OAAOmpD,EAAYpzC,YAAY/V,GAAO6tB,SAExC,MAAM6lC,EAAY1zD,EApBGuuB,WAqBfolC,EAAa3zD,EArBEuuB,WAsBrB,OAAO46B,EAAYp7B,SAAS2lC,EAAWC,IAGzCxK,EAAYp7B,SAAW,SAAkB2lC,EAAWC,GAClD,OAAO,IAAIxK,EAAYuK,EAAWA,IAAc,GAAIC,EAAYA,IAAe,KASjFxK,EAAYj7B,WAAa,SAAoBrU,EAAKsU,GAChD,GAAmB,iBAARtU,EACT,MAAM,IAAI/Q,MAAM,+BAAiC+Q,GAEnD,GAAmB,IAAfA,EAAIhX,OACN,MAAMiG,MAAM,qCAEd,GAAY,QAAR+Q,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAChE,OAAO,IAAIsvC,EAGb,IADAh7B,EAAQA,GAAS,IACL,GAAKA,EAAQ,GACvB,MAAMrlB,MAAM,uBAAyBqlB,GAGvC,IAAIttB,EACJ,IAAKA,EAAIgZ,EAAIrS,QAAQ,MAAQ,EAC3B,MAAMsB,MAAM,gDAAkD+Q,GAEhE,GAAU,IAANhZ,EACF,OAAOsoD,EAAYj7B,WAAWrU,EAAIwF,UAAU,GAAI8O,GAAON,SAIzD,MAAMO,EAAe+6B,EAAYpzC,WAAW7L,KAAK2e,IAAIsF,EAAO,IAEtD7qB,EAAS,IAAI6lD,EACnB,IAAK,IAAIpqD,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,GAAK,EAAG,CACtC,MAAMyC,EAAO0I,KAAKS,IAAI,EAAGkP,EAAIhX,OAAS9D,GAChCiB,EAAQ2pB,SAAS9P,EAAIwF,UAAUtgB,EAAGA,EAAIyC,GAAO2sB,GACnD,GAAI3sB,EAAO,EAAG,CACZ,MAAM6sB,EAAQ86B,EAAYpzC,WAAW7L,KAAK2e,IAAIsF,EAAO3sB,IACrD8B,EAAO2S,SAASoY,GAAOlqB,IAAIglD,EAAYpzC,WAAW/V,IAClD,MAEFsD,EAAO2S,SAASmY,GAChB9qB,EAAOa,IAAIglD,EAAYpzC,WAAW/V,IAEpC,OAAOsD,GAGT6lD,EAAYxoD,UAAU8P,SAAW,WAC/B,OAAOjN,KAAK0rD,cAAcz+C,YAQ5B04C,EAAYxoD,UAAU0vB,QAAU,SAAUL,GACxC,MAAMa,EAAUrtB,KAAKyrB,aACf6B,EAAWd,EAAMf,aACvB,OAAI4B,IAAYC,GACN,GAELD,GAAWC,EACP,EAGFttB,KAAKowD,aAAa5jC,IAG3Bm5B,EAAYxoD,UAAUizD,aAAe,SAAS5jC,GAC5C,IAAK,IAAIjxB,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,GAAIyE,KAAKiwD,KAAK10D,GAAKixB,EAAMyjC,KAAK10D,GAC5B,OAAO,EAET,GAAIyE,KAAKiwD,KAAK10D,GAAKixB,EAAMyjC,KAAK10D,GAC5B,OAAQ,EAGZ,OAAO,GAGToqD,EAAYxoD,UAAUkzD,UAAY,SAAUnuD,GAC1C,OAAOlC,KAAKiwD,KAAK/tD,IAGnByjD,EAAYxoD,UAAU6P,mBAAqB,WACzC,OAAQhN,KAAKiwD,KAAK,IAAsB,MAAfjwD,KAAKiwD,KAAK,KAAgB,MAAS,GAG9DtK,EAAYxoD,UAAU4P,oBAAsB,WAC1C,OAAQ/M,KAAKiwD,KAAK,GAAMjwD,KAAKiwD,KAAK,IAAM,MAAS,GAGnDtK,EAAYxoD,UAAUmuB,SAAW,WAC/B,OA3HqBP,YA2Hb/qB,KAAKiwD,KAAK,IAAM,GAAKjwD,KAAKiwD,KAAK,MAAyBjwD,KAAKiwD,KAAK,IAAM,GAAKjwD,KAAKiwD,KAAK,MAAQ,IAOzGtK,EAAYxoD,UAAUowB,IAAM,WAK1B,OAJAvtB,KAAKiwD,KAAK,GAAqB,OAAfjwD,KAAKiwD,KAAK,GAC1BjwD,KAAKiwD,KAAK,GAAqB,OAAfjwD,KAAKiwD,KAAK,GAC1BjwD,KAAKiwD,KAAK,GAAqB,OAAfjwD,KAAKiwD,KAAK,GAC1BjwD,KAAKiwD,KAAK,GAAqB,OAAfjwD,KAAKiwD,KAAK,GACnBjwD,MAGT2lD,EAAYxoD,UAAUwD,IAAM,SAAU8sB,GACpC,IAAIQ,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAerC,OAdAA,GAAOpuB,KAAKiwD,KAAK,GAAKxiC,EAAOwiC,KAAK,GAClCjwD,KAAKiwD,KAAK,GAAW,MAAN7hC,EAEfD,GAAOC,IAAQ,GACfD,GAAOnuB,KAAKiwD,KAAK,GAAKxiC,EAAOwiC,KAAK,GAClCjwD,KAAKiwD,KAAK,GAAW,MAAN9hC,EAEfD,GAAOC,IAAQ,GACfD,GAAOluB,KAAKiwD,KAAK,GAAKxiC,EAAOwiC,KAAK,GAClCjwD,KAAKiwD,KAAK,GAAW,MAAN/hC,EAEfD,GAAOC,IAAQ,GACfD,GAAOjuB,KAAKiwD,KAAK,GAAKxiC,EAAOwiC,KAAK,GAClCjwD,KAAKiwD,KAAK,GAAW,MAANhiC,EACRjuB,MAGT2lD,EAAYxoD,UAAU2xB,UAAY,SAAUW,GAC1C,GAAgB,IAAZA,EACF,OAAOzvB,KAET,GAAIyvB,GAAW,GACb,OAAOzvB,KAAKswD,SAEd,MAAMC,EAAgB9gC,EAAU,GAC1BqlB,EAAMpuC,KAAKC,MAAM8oB,EAAU,IAcjC,OAbIqlB,EAAM,IACR90C,KAAKiwD,KAAK,GAAKjwD,KAAKiwD,KAAK,EAAInb,GAC7B90C,KAAKiwD,KAAK,GAAKnb,EAAM,EAAI,EAAI90C,KAAKiwD,KAAK,EAAInb,GAC3C90C,KAAKiwD,KAAK,GAAKnb,EAAM,EAAI,EAAI90C,KAAKiwD,KAAK,GACvCjwD,KAAKiwD,KAAK,GAAK,GAEbM,EAAgB,IAElBvwD,KAAKiwD,KAAK,GAAmF,OAA5EjwD,KAAKiwD,KAAK,IAAMM,EAAkBvwD,KAAKiwD,KAAK,KAAQ,GAAKM,GAC1EvwD,KAAKiwD,KAAK,GAAmF,OAA5EjwD,KAAKiwD,KAAK,IAAMM,EAAkBvwD,KAAKiwD,KAAK,KAAQ,GAAKM,GAC1EvwD,KAAKiwD,KAAK,GAAmF,OAA5EjwD,KAAKiwD,KAAK,IAAMM,EAAkBvwD,KAAKiwD,KAAK,KAAQ,GAAKM,GAC1EvwD,KAAKiwD,KAAK,GAAMjwD,KAAKiwD,KAAK,IAAMM,EAAiB,OAE5CvwD,MAGT2lD,EAAYxoD,UAAUyyB,mBAAqB,SAAUH,GACnD,GAAgB,IAAZA,EACF,OAAOzvB,KAET,GAAIyvB,GAAW,GACb,OAAOzvB,KAAKswD,SAEd,MAAMC,EAAgB9gC,EAAU,GAC1BqlB,EAAMpuC,KAAKC,MAAM8oB,EAAU,IAajC,OAZIqlB,EAAM,IACR90C,KAAKiwD,KAAK,GAAKjwD,KAAKiwD,KAAKnb,GACzB90C,KAAKiwD,KAAK,GAAKnb,EAAM,EAAI,EAAI90C,KAAKiwD,KAAK,EAAInb,GAC3C90C,KAAKiwD,KAAK,GAAKnb,EAAM,EAAI,EAAI90C,KAAKiwD,KAAK,GACvCjwD,KAAKiwD,KAAK,GAAK,GAEbM,EAAgB,IAClBvwD,KAAKiwD,KAAK,GAAMjwD,KAAKiwD,KAAK,KAAOM,EAAmBvwD,KAAKiwD,KAAK,IAAO,GAAKM,EAAkB,MAC5FvwD,KAAKiwD,KAAK,GAAMjwD,KAAKiwD,KAAK,KAAOM,EAAmBvwD,KAAKiwD,KAAK,IAAO,GAAKM,EAAkB,MAC5FvwD,KAAKiwD,KAAK,GAAMjwD,KAAKiwD,KAAK,KAAOM,EAAmBvwD,KAAKiwD,KAAK,IAAO,GAAKM,EAAkB,MAC5FvwD,KAAKiwD,KAAK,GAAKjwD,KAAKiwD,KAAK,KAAOM,GAE3BvwD,MAGT2lD,EAAYxoD,UAAUoyB,GAAK,SAAU/C,GAKnC,OAJAxsB,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GAC3BjwD,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GAC3BjwD,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GAC3BjwD,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GACpBjwD,MAQT2lD,EAAYxoD,UAAUqyB,IAAM,SAAUhD,GAKpC,OAJAxsB,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GAC3BjwD,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GAC3BjwD,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GAC3BjwD,KAAKiwD,KAAK,IAAMzjC,EAAMyjC,KAAK,GACpBjwD,MAGT2lD,EAAYxoD,UAAUqzD,MAAQ,WAC5B,OAAO,IAAI7K,EAAY3lD,KAAKiwD,KAAK,GAAIjwD,KAAKiwD,KAAK,GAAIjwD,KAAKiwD,KAAK,GAAIjwD,KAAKiwD,KAAK,KAQ7EtK,EAAYxoD,UAAUsV,SAAW,SAAkB8b,GACjD,GAAIvuB,KAAKurB,UAAYgD,EAAWhD,SAC9B,OAAOvrB,KAAKswD,SAEd,GAAItwD,KAAKyrB,aACP,OAAI8C,EAAW9C,aACNzrB,KAAKqqB,SAAS5X,SAAS8b,EAAWiiC,QAAQnmC,UAE5CrqB,KAAKqqB,SAAS5X,SAAS8b,GAAYlE,SAEvC,GAAIkE,EAAW9C,aAClB,OAAOzrB,KAAKyS,SAAS8b,EAAWiiC,QAAQnmC,UAAUA,SAGpD,IAAI4D,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAyBrC,OAvBAD,IADAC,GAAOpuB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,MACvB,GAGf/hC,IADAC,GAAOnuB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,MACvB,GACf9hC,GAAO,MAEPD,IADAC,GAAOnuB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,MACvB,GAGfhiC,IADAC,GAAOluB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,MACvB,GACf/hC,GAAO,MAEPD,IADAC,GAAOluB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,MACvB,GACf/hC,GAAO,MAEPD,IADAC,GAAOluB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,MACvB,GACfhiC,GAAOjuB,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,GAAKjwD,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,GACxEjwD,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,GAAKjwD,KAAKiwD,KAAK,GAAK1hC,EAAW0hC,KAAK,GAErEjwD,KAAKiwD,KAAK,GAAW,MAAN7hC,EACfpuB,KAAKiwD,KAAK,GAAW,MAAN9hC,EACfnuB,KAAKiwD,KAAK,GAAW,MAAN/hC,EACfluB,KAAKiwD,KAAK,GAAW,MAANhiC,EACRjuB,MAGT2lD,EAAYxoD,UAAUmzD,OAAS,WAE7B,OADAtwD,KAAKiwD,KAAK,GAAKjwD,KAAKiwD,KAAK,GAAKjwD,KAAKiwD,KAAK,GAAIjwD,KAAKiwD,KAAK,GAAK,EACpDjwD,MAGT2lD,EAAYxoD,UAAUouB,OAAS,WAC7B,OAAyB,IAAjBvrB,KAAKiwD,KAAK,IAA6B,IAAjBjwD,KAAKiwD,KAAK,IAA6B,IAAjBjwD,KAAKiwD,KAAK,IAA6B,IAAjBjwD,KAAKiwD,KAAK,IAGtFtK,EAAYxoD,UAAUsuB,WAAa,WAEjC,OAAuB,MAAfzrB,KAAKiwD,KAAK,IAAe,GAQnCtK,EAAYxoD,UAAUktB,OAAS,WAC7B,OAAOrqB,KAAKutB,MAAM5sB,IAAIwH,IAGxBw9C,EAAYxoD,UAAUuuB,OAAS,SAAUc,GACvC,OAAMA,aAAiBm5B,IAIrB3lD,KAAKiwD,KAAK,KAAOzjC,EAAMyjC,KAAK,IAAMjwD,KAAKiwD,KAAK,KAAOzjC,EAAMyjC,KAAK,IAC9DjwD,KAAKiwD,KAAK,KAAOzjC,EAAMyjC,KAAK,IAAMjwD,KAAKiwD,KAAK,KAAOzjC,EAAMyjC,KAAK,KAGlEtK,EAAYxoD,UAAUuuD,YAAc,WAClC,OAAO1jD,EAAKuiB,SAASvqB,KAAKgN,qBAAsBhN,KAAK+M,uBAAuB,IAG9EzR,EAAOD,QAAUsqD,G,6BC7TjB,MAAMnoD,EAAO,EAAQ,GACfC,EAAS,EAAQ,GACjBsK,EAAQ,EAAQ,GAChB0oD,EAAiB,EAAQ,IAM/B,MAAMvV,EAMJ,YAAY9qB,EAAQuB,GAClB3xB,KAAK+wB,QAAUX,EACfpwB,KAAK0wD,eAAiB/+B,EACtB3xB,KAAKoF,WAAagrB,EAAO/qB,QAAQD,WACjCpF,KAAKgF,IAAM+C,EAAM/C,IAWnB,mBAAmBorB,EAAQuB,EAAe7jB,EAAOkiB,EAAU3vB,GACzD,MAAM6E,EAAOkrB,EAAOgrB,SAASuV,gBAAgB3gC,EAAUliB,GACvD,GAAI5I,EAAKuc,QACP,OAAOphB,EAAS,KAAM6E,EAAKuc,QAASvc,EAAKwc,MAE3Cxc,EAAKk9C,KAAK,WAAY/hD,GAClB6E,EAAK0rD,WAIQ,IAAI1V,EAAe9qB,EAAQuB,GACnCk/B,SAAS3rD,EAAM4I,EAAOkiB,GAWjC,2BAA2BI,EAAQuB,EAAerO,EAAS0M,EAAU3vB,GACnE,MAAMP,EAAS,IAAIf,MAAMukB,EAAQjkB,QACjC0I,EAAM9D,UAAUqf,EAAS,SAAmB7e,EAAMvC,EAAOzB,GACvD,IAAIqN,EAIJ,GAHIrJ,IACFqJ,EAAwB,iBAATrJ,EAAoBA,EAAOA,EAAKqJ,OAE5B,iBAAVA,EACT,OAAOrN,EAAK,IAAIhD,EAAO8D,cAAc,kCAGvC25C,EAAe4V,YAAY1gC,EAAQuB,EAAe7jB,EAAOkiB,EAAU,SAAsBnwB,EAAKkxD,EAAIrvC,GAChG,GAAI7hB,EACF,OAAOY,EAAKZ,GAEdC,EAAOoC,GAAS,CACd4L,MAAOA,EACP9M,OAAQ+G,EAAMhH,yBAAyB0D,EAAKzD,OAAQ0gB,EAAKzgB,SACzDwgB,QAASsvC,EACTrvC,KAAMA,GAERjhB,OAED,SAAmBZ,GACpB,GAAIA,EACF,OAAOQ,EAASR,GAElBQ,EAAS,KAAMP,KAWnB,SAASoF,EAAM4I,EAAOkiB,GACpB9qB,EAAK0rD,WAAY,EACjB,MAAM5qD,EAAOhG,KACbA,KAAK0wD,eAAeM,aAAahhC,EAAU,KAAM,SAAUnwB,EAAKiF,GAC9D,GAAIjF,EAEF,OADAqF,EAAK0rD,WAAY,EACV1rD,EAAK2T,KAAK,WAAYhZ,GAE/BmG,EAAKirD,sBAAsB/rD,EAAMJ,EAAU,KAAMgJ,EAAOkiB,KAY5D,sBAAsB9qB,EAAMJ,EAAUosD,EAAYpjD,EAAOkiB,GACvDkhC,EAAaA,GAAc,GAC3B,MAAMlrD,EAAOhG,KACbywD,EAAeU,qBAAqBrsD,EAAUosD,EAAYlxD,KAAK+wB,QAAQG,eAAgBlB,EACrF,SAAwBnwB,EAAKs+C,EAAYrrC,GACvC,GAAIjT,EACF,OAAOmG,EAAKorD,gBAAgBvxD,EAAKiT,EAAMo+C,EAAYhsD,EAAMJ,EAAUgJ,EAAOkiB,GAE5EmuB,EAAWoG,YAAYz2C,EAAO,SAA6BjO,EAAK+iD,GAC9D,OAAI/iD,EACKmG,EAAKorD,gBAAgBvxD,EAAKiT,EAAMo+C,EAAYhsD,EAAMJ,EAAUgJ,EAAOkiB,GAExEhqB,EAAK+qB,QAAQ1rB,QAAQ68B,kBAChBl8B,EAAKqrD,mBAAmBnsD,EAAM09C,EAAU9vC,EAAMhO,EAAUgJ,EAAOkiB,QAExEhqB,EAAKsrD,kBAAkBpsD,EAAM09C,OAKrC,kBAAkB19C,EAAM09C,GACtB19C,EAAK0rD,WAAY,EACjB1rD,EAAKuc,QAAUmhC,EAASmO,GACxB7rD,EAAKwc,KAAOkhC,EAASlhC,KACrB1hB,KAAK+wB,QAAQqqB,SAASmW,gBAAgBrsD,GACtCA,EAAK2T,KAAK,WAAY,KAAM3T,EAAKuc,QAASvc,EAAKwc,MAGjD,gBAAgB7hB,EAAKiT,EAAMo+C,EAAYhsD,EAAMJ,EAAUgJ,EAAOkiB,GAC5D,GAAInwB,EAAI86C,eAAiB96C,aAAepC,EAAOyV,uBAAwB,CACrE,MAAMlN,EAAOhG,KAEb,OADAkxD,EAAWp+C,EAAKO,SAAWxT,EACpBmG,EAAKirD,sBAAsB/rD,EAAMJ,EAAUosD,EAAYpjD,EAAOkiB,GAIvE,OAFA9qB,EAAK0rD,WAAY,EACjB/wD,EAAIiO,MAAQA,EACL5I,EAAK2T,KAAK,WAAYhZ,GAS/B,yBAAyBiT,EAAM6rC,EAAat+C,GAC1C,MAAMmxD,EAAqB,GACrBC,EAAoB,GAC1B9S,EAAY/7C,QAAQ,SAAUsC,GAC5B,IAAIpG,EAAM0yD,EACNtsD,EAAK8qB,WACPlxB,EAAM2yD,EAAkBvsD,EAAK8qB,UAAayhC,EAAkBvsD,EAAK8qB,WAAa,IAEhFlxB,EAAI4F,KAAKQ,EAAK4I,SAEhB/F,EAAM3E,WAAWnH,OAAO6E,KAAK2wD,GAAoB,SAAsBzhC,EAAUvvB,GAC/Ey6C,EAAewW,kBAAkB5+C,EAAMkd,EAAUyhC,EAAkBzhC,GAAWvvB,IAC7E,SAAUZ,GACX,GAAIA,EACF,OAAOQ,EAASR,GAElBq7C,EAAewW,kBAAkB5+C,EAAM,KAAM0+C,EAAoBnxD,KAYrE,yBAAyByS,EAAMkd,EAAU1M,EAASjjB,GAChD,GAAuB,IAAnBijB,EAAQjkB,OACV,OAAOgB,IAGTyS,EAAK4qC,iBAAiB1tB,EAAU,KAAM,SAAwBnwB,EAAKs+C,GACjE,GAAIt+C,EACF,OAAOQ,EAASR,GAElBkI,EAAM5E,KAAKmgB,EAAS,SAAqBxV,EAAOrN,GAC9C09C,EAAWoG,YAAYz2C,EAAOrN,IAC7BJ,KAcP,mBAAmB6E,EAAM09C,EAAU+O,EAAa7sD,EAAUgJ,EAAOkiB,GAC/D,MAAMhqB,EAAOhG,KACb+H,EAAM5E,KAAK4E,EAAMlD,gBAAgBC,GAAW,SAAUgO,EAAMrS,GAC1D,GAAIqS,EAAKO,UAAYs+C,EAAYt+C,QAC/B,OAAO5S,IAGTqS,EAAK4qC,iBAAiB1tB,EAAU,KAAM,SAAwBnwB,EAAKs+C,GACjE,GAAIt+C,EAEF,OAAOY,IAET09C,EAAWoG,YAAYz2C,EAAO,SAAUjO,GAKtC,OAJIA,GAEFmG,EAAKhB,IAAI,UAAWxH,EAAKgE,OAAO,oDAAqDsM,EAAOgF,EAAKO,UAE5F5S,SAGV,WACDuF,EAAKsrD,kBAAkBpsD,EAAM09C,MAKnCtnD,EAAOD,QAAU6/C,G,6BC3OjB,MAAM19C,EAAO,EAAQ,GAEfC,EAAS,EAAQ,GACjByhB,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChB6pD,EAAmB,EAAQ,KAKjC,MAAMnB,EAOJ,YAAYhW,EAAS/4C,EAAa0uB,GAChCpwB,KAAKowB,OAASA,EACdpwB,KAAK6xD,0BAA4BzhC,EAAO/qB,QAAQysB,SAAS8O,qBAAqBkxB,QAC5E1hC,EAAOJ,SAAUyqB,EAAQ3sC,OAAS2sC,EAAQn3B,SAC5CtjB,KAAKoF,WAAagrB,EAAO/qB,QAAQD,WACjCpF,KAAKgF,IAAM+C,EAAM/C,IACjBhF,KAAKy6C,QAAUA,EACfz6C,KAAK84C,iBAAmBp3C,EACxB1B,KAAK+xD,eAAiB,KACtB/xD,KAAKkxD,WAAa,GAElBlxD,KAAKgyD,uBAAyB,EAC9BhyD,KAAKiyD,cAAgB,KACrBjyD,KAAKkyD,UAAY,KACjBlyD,KAAKmyD,qBAAuB,KAC5BnyD,KAAKoyD,YAAc,GAcrB,4BAA4BttD,EAAUosD,EAAYhgC,EAAgBlB,EAAU3vB,GAC1E6wD,EAAaA,GAAc,GAC3B,MAAMp+C,EAAO29C,EAAe4B,aAAavtD,EAAUosB,EAAgBggC,GACnE,GAAa,OAATp+C,EACF,OAAOzS,EAAS,IAAI5C,EAAOkV,qBAAqBu+C,IAGlDp+C,EAAK4qC,iBAAiB1tB,EAAU,KAAM,SAAgCnwB,EAAKs+C,GACzE,GAAIt+C,EAMF,OALAqxD,EAAWp+C,EAAKO,SAAWxT,EACvBs+C,GACFrrC,EAAKurC,eAAeF,GAGf56C,QAAQC,SAAS,IACtBitD,EAAeU,qBAAqBrsD,EAAUosD,EAAYhgC,EAAgBlB,EAAU3vB,IAExF6wD,EAAWp+C,EAAKO,SAAW,KAC3BhT,EAAS,KAAM89C,EAAYrrC,KAY/B,oBAAoBhO,EAAUosB,EAAgBggC,GAC5C,IAAIp+C,EAEJ,OAAa,CACX,MAAMrO,EAAOK,EAASrE,OACtB,GAAIgE,EAAKtC,KACP,OAAO,KAKT,GAHA2Q,EAAOrO,EAAKjI,MAEK00B,EAAeyoB,YAAY7mC,KAC3BoM,EAAMxQ,SAASG,QAAhC,CAIA,GAAIiE,EAAKgqC,OACP,MAEFoU,EAAWp+C,EAAKO,SAAW,2BAE7B,OAAOP,EAUT,YAAY2nC,EAAS/4C,EAAa0uB,EAAQ/vB,GACvB,IAAIowD,EAAehW,EAAS/4C,EAAa0uB,GACjDgP,KAAK/+B,GAOhB,kBAAkBA,GAChBowD,EAAeU,qBACbnxD,KAAKiyD,cAAejyD,KAAKkxD,WAAYlxD,KAAKowB,OAAOc,eAAgBlxB,KAAKowB,OAAOJ,SAAU3vB,GAO3F,KAAKA,GACCL,KAAK84C,iBAAiBwZ,wBACxBhtD,MAAMoN,kBAAkB1S,KAAK+xD,eAAiB,IAGhD,MAAMQ,EAAMvyD,KAAK84C,iBAAiB0Z,yBAC5BC,EAAYzyD,KAAK84C,iBAAiB4Z,eAClC1sD,EAAOhG,KACbA,KAAKkyD,UAAY7xD,EAEboyD,GAGFzsD,EAAKisD,cAAgBlqD,EAAM9F,cAAc,CAACwwD,IAC1CzsD,EAAK2sD,sBAELJ,EAAIvB,aAAahxD,KAAKowB,OAAOJ,SAAUhwB,KAAK84C,iBAAkB,SAAmBj5C,EAAKiF,GACpF,GAAIjF,EACF,OAAOmG,EAAKksD,UAAUryD,GAExBmG,EAAKisD,cAAgBntD,EACrBkB,EAAK2sD,uBAKX,mBAAmBC,GACbA,GACF5yD,KAAKowB,OAAOtU,QAAQ+2C,yBAGtB,MAAMC,EAAY,IAAIlB,EAAiB5xD,MACvCA,KAAKoyD,YAAY1tD,KAAKouD,GACtB,MAAM9sD,EAAOhG,KACb8yD,EAAUt+C,MAAM,SAAsB1B,GAGpC,IAAK9M,EAAK8yC,iBAAiBrnB,eACzB,OAEF,MAAMshC,EAAQ/sD,EAAK6rD,0BAA0BmB,cAAclgD,GAC3D,MAAqB,iBAAVigD,GAAsBA,EAAQ,OAAzC,EAGc,IAAVA,EAEKxvD,QAAQC,SAAS,WAGlBsvD,EAAUG,gBAIdjtD,EAAK2sD,oBAAmB,UAI5B3sD,EAAKmsD,qBAAuB7P,WAAW,IAAMt8C,EAAK2sD,oBAAmB,GAAOI,MAShF,mBAAmB3iC,EAAQ/vB,GACzB,IAAI89C,EACJ,MAAM1E,EAAQrpB,EAAOqpB,MAAM10C,SAC3B,IAAK,IAAIxJ,EAAI,EAAGA,EAAIk+C,EAAMp6C,OAAQ9D,IAAK,CAGrC,GADA4iD,EADa1E,EAAMl+C,GACDuiD,sBAEhB,MAGJ,IAAKK,EACH,OAAO99C,EAAS,IAAI5C,EAAOuV,oBAAoB,+BAEjDmrC,EAAWkG,eAAej0B,EAAOJ,SAAU3vB,GAO7C,aAAaR,EAAKC,GACkB,OAA9BE,KAAKmyD,sBACP1O,aAAazjD,KAAKmyD,sBAIpB,IAAK,IAAI52D,EAAI,EAAGA,EAAIyE,KAAKoyD,YAAY/yD,OAAQ9D,IAC3CyE,KAAKoyD,YAAY72D,GAAGq7B,SAGtB,GAAI/2B,EAOF,OANIG,KAAK84C,iBAAiBwZ,wBACxBvqD,EAAMpE,SAAS3D,KAAK+xD,eAAejuD,MAAOjE,GAKrC0D,QAAQC,SAAS,IAAMxD,KAAKkyD,UAAUryD,IAG3CC,EAAOoF,KAAKguD,UAEdpzD,EAAOoF,KAAKguD,SAAStwD,QAAQ,SAAUkJ,EAASvQ,EAAG23D,GACjDlzD,KAAKgF,IAAI,UAAWxH,EAAKgE,OACvB,4CACAjG,EAAI,EACJ23D,EAAS7zD,OACTyM,EACA9L,KAAKy6C,QAAQ3sC,OAAS,WACvB9N,MAULuD,QAAQC,SAAS,IAAMxD,KAAKkyD,UAAU,KAAMpyD,IAO9C,sBAAsBD,EAAKszD,GAEzB,MAAMjxD,EAAQlC,KAAKoyD,YAAYpuD,QAAQmvD,GACvCnzD,KAAKoyD,YAAYxtD,OAAO1C,EAAO,GACC,IAA5BlC,KAAKoyD,YAAY/yD,QAGnBW,KAAKozD,aAAavzD,IAKxBvE,EAAOD,QAAUo1D,G,6BC5QjB,MAAMpsC,EAAS,EAAQ,GACjB7mB,EAAO,EAAQ,GAKff,EAAI,EAAQ,KACZsL,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GACjByhB,EAAQ,EAAQ,GAChBugC,EAAW,EAAQ,IACnB4T,EAAsB,EAAQ,KAC9B36B,EAAa,EAAQ,IAAYA,WACjCnY,EAAmB,EAAQ,IAAwBA,iBAwCzD,SAAS+yC,EAAUjuD,EAAS2sB,GAC1B,IAAK3sB,EACH,MAAM,IAAI5H,EAAO8D,cAAc,2BAEjCtF,OAAOC,eAAe8D,KAAM,UAAW,CAAExD,MAAO6I,EAASlJ,YAAY,EAAOya,UAAU,IACtF3a,OAAOC,eAAe8D,KAAM,oBAAqB,CAAExD,MAAOw1B,EAAmB71B,YAAY,EAAOya,UAAU,IAC1G5W,KAAKuzD,UAAY,GACjBvzD,KAAKwzD,aAAc,EACnBxzD,KAAKyzD,cAAgBJ,EAAoBK,aAAaruD,EAAS2sB,EAAmBhyB,KAAK2zD,OAAO52D,KAAKiD,OACnG,MAAMgG,EAAOhG,KACbA,KAAK4zD,iBAAmB,IAAIC,EAAgBxuD,EAAQ08B,YAAa,WAC/D/7B,EAAKhB,IAAIV,MAAM0B,EAAMrD,aAy5BzB,SAASkxD,EAAgB9xB,EAAa+xB,GACpC9zD,KAAKX,OAAS,EACdW,KAAK+zD,aAAehyB,EACpB/hC,KAAKg0D,UAAY,GACjBh0D,KAAKi0D,SAAW,GAChBj0D,KAAKk0D,QAAUJ,EAp5BjBR,EAASn2D,UAAUg3D,oBAAsB,SAAU3oD,GACjDxL,KAAKyzD,cAAgBJ,EAAoBK,aACvC1zD,KAAKqF,QAASrF,KAAKgyB,kBAAmBhyB,KAAK2zD,OAAO52D,KAAKiD,MAAOwL,EAASxL,KAAKyzD,gBAOhFH,EAASn2D,UAAUi3D,eAAiB,SAAUC,GAC5C,MAAI,qBAAqB5hC,KAAK4hC,GACrBr0D,KAAK44B,UAAY,IAAIn8B,EAAE63D,gBAE5B,0BAA0B7hC,KAAK4hC,GAC1Br0D,KAAK44B,UAAY,IAAIn8B,EAAE83D,qBAEzBv0D,KAAK44B,UAAY,IAAIn8B,EAAE+3D,kBAQhClB,EAASn2D,UAAUs3D,YAAc,SAAUhb,GACzC,IAAKz5C,KAAK44B,UACR,OAAO54B,KAAKgF,IAAI,QAAS,qCAG3B,MAAM0vD,EAAY,GAEZC,EAAkB,GAElBC,EAAYnb,EAAM10C,SAClBm1B,EAAYl6B,KAAK44B,UAAUsB,UAC3B26B,EAAc,GACpBD,EAAUhyD,QAASo8C,IACjB,IAAKA,EAAEnD,OACL,OAEFmD,EAAEnD,OAAOj5C,QAASkyD,IAChB,MAAMjxC,EAAQ7jB,KAAK44B,UAAU3a,MAAM62C,GACnC/sD,EAAMvD,aAAakwD,EAAW7wC,EAAO,CAACkxC,EAAIC,IAAOD,EAAGloC,QAAQmoC,IAC5DL,EAAgBz6B,EAAUrW,IAAUm7B,IAEtC,IAAIiW,EAAKJ,EAAY7V,EAAErD,YAClBsZ,IACHA,EAAKJ,EAAY7V,EAAErD,YAAc,CAC/BuZ,WAAY,EACZC,MAAO,IAAIptD,EAAMhI,UAGrBk1D,EAAGC,aACHD,EAAGE,MAAMx0D,IAAIq+C,EAAEpD,QAGjB57C,KAAK20D,gBAAkBA,EAEvB30D,KAAKo1D,KAAOV,EAGZ,MAAM37B,EAAc,IAAIwuB,IACxB,GAAwB,IAArBvnD,KAAKo1D,KAAK/1D,OAAc,CAEzB,MAAM8H,EAAMnH,KAAK44B,UAAUS,WAC3BN,EAAYp4B,IAAI,IAAI+3B,EAAWvxB,EAAKA,EAAKnH,KAAK44B,iBAE9C,IAAK,IAAIr9B,EAAI,EAAGA,EAAIyE,KAAKo1D,KAAK/1D,OAAQ9D,IAAK,CACzC,MAAMiZ,EAAQxU,KAAKo1D,KAAK75D,GAClBo9B,EAAM34B,KAAKo1D,MAAM75D,EAAI,GAAKyE,KAAKo1D,KAAK/1D,QAC1C05B,EAAYp4B,IAAI,IAAI+3B,EAAWlkB,EAAOmkB,EAAK34B,KAAK44B,YAGpD54B,KAAK+4B,YAAcA,EAGnB/4B,KAAKq1D,oBAAsB,IAAIt2D,MAAM21D,EAAUr1D,QAC/C,IAAK,IAAI9D,EAAI,EAAGA,EAAIm5D,EAAUr1D,OAAQ9D,IACpCyE,KAAKq1D,oBAAoB95D,GAAK2+B,EAAUw6B,EAAUn5D,IAGpDyE,KAAK60D,YAAcA,GAYrBvB,EAASn2D,UAAUm4D,gBAAkB,SAAUx5D,EAAMuE,GACnD,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKu1D,mBAAmBz5D,EAAM4E,MASlC4yD,EAASn2D,UAAUo4D,mBAAqB,SAAUz5D,EAAMuE,GACtD,IAAKL,KAAKwzD,YACR,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9Cx1D,KAAKgF,IAAI,OAAQxH,EAAKgE,OAAO,kCAAmC1F,IAChE,MAAMkK,EAAOhG,KACbA,KAAKyzD,cAAcgC,YAAY35D,EAAM,SAAU+D,EAAK61D,GAClD,OAAI71D,GACFmG,EAAKhB,IAAI,QAAS,mEAAoEnF,GAC/EQ,EAASR,IAEb61D,GAML1vD,EAAKutD,UAAUmC,EAAO55D,MAAQ45D,OAC9Br1D,EAAS,KAAMq1D,YALN1vD,EAAKutD,UAAUz3D,GACfuE,QAkBbizD,EAASn2D,UAAUw4D,iBAAmB,SAAUC,EAAev1D,GAM7D,MAL6B,mBAAlBu1D,QAAyD,IAAlBA,IAChDv1D,EAAWu1D,EACXA,GAAgB,GAGX51D,KAAK61D,kBAAkBD,GAAe,EAAOv1D,IAStDizD,EAASn2D,UAAU04D,kBAAoB,SAAUD,EAAeE,EAAUz1D,GACxE,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAK+1D,oBAAoBH,EAAeE,EAAUp1D,MAUtD4yD,EAASn2D,UAAU44D,oBAAsB,SAAUH,EAAeE,EAAUz1D,GAC1E,IAAKy1D,IAAa91D,KAAKwzD,YACrB,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9Cx1D,KAAKgF,IAAI,OAAQ,iCACjB,MAAMgB,EAAOhG,KACbA,KAAKyzD,cAAcuC,aAAaJ,EAAe,SAA8B/1D,EAAK0zD,GAChF,GAAI1zD,EAEF,OADAmG,EAAKhB,IAAI,QAAS,oEAAqEnF,GAChFQ,EAASR,GAElBmG,EAAKutD,UAAYA,EACjBlzD,EAAS,KAAMkzD,MAInBD,EAASn2D,UAAU84D,qBAAuB,SAAUjmC,GAMlD,OALKA,EAASkmC,WAEZlmC,EAASkmC,SACPlmC,EAASmmC,eAAen2D,KAAK44B,UAAW54B,KAAKq1D,oBAAqBr1D,KAAK20D,gBAAiB30D,KAAK60D,cAE1F7kC,EAASkmC,UAalB5C,EAASn2D,UAAUi5D,YAAc,SAAUC,EAAcxyC,GACvD,IAAK7jB,KAAKo1D,KACR,OAAO,KAST,IAAIplC,EACJ,GARIlyB,OAAOigB,SAAS8F,KAClBA,EAAQ7jB,KAAK44B,UAAU/iB,KAAKgO,IAE1BA,aAAiB6U,IACnB7U,EAAQA,EAAM8U,KAIZ09B,KACFrmC,EAAWhwB,KAAKuzD,UAAU8C,IAGxB,OAAO,KAGX,IAAI96D,EAAIwM,EAAM9I,aAAae,KAAKo1D,KAAMvxC,EAAO,CAACkxC,EAAIC,IAAOD,EAAGloC,QAAQmoC,IAChEz5D,EAAI,IACNA,GAAKA,GAEHA,GAAKyE,KAAKo1D,KAAK/1D,SAEjB9D,GAAQyE,KAAKo1D,KAAK/1D,QAEpB,MAAMi3D,EAAet2D,KAAKq1D,oBAAoB95D,GAE9C,OAAK86D,EAIYr2D,KAAKi2D,qBAAqBjmC,GAC3BsmC,GAJP,CAACt2D,KAAK20D,gBAAgB2B,KAYjChD,EAASn2D,UAAUo5D,eAAiB,WAClC,OAAOv2D,KAAK+4B,aAWdu6B,EAASn2D,UAAUq5D,sBAAwB,SAAUH,EAAcvjD,GACjE,IAAK9S,KAAKo1D,KACR,OAAO,KAET,IAAIplC,EACJ,GAAIqmC,KACFrmC,EAAWhwB,KAAKuzD,UAAU8C,IAGxB,OAAO,KAKX,GAAyB,IAArBr2D,KAAKo1D,KAAK/1D,OACZ,OAAOW,KAAKu2D,iBAGd,MAAML,EAAWl2D,KAAKi2D,qBAAqBjmC,GACrCsP,EAAS,IAAIioB,IASnB,OANAvnD,KAAK+4B,YAAYn2B,QAAS6zD,KAEgB,IADfP,EAASl2D,KAAK44B,UAAUsB,UAAUu8B,EAAW99B,MACjD30B,QAAQ8O,IAC3BwsB,EAAO3+B,IAAI81D,KAGRn3B,GASTg0B,EAASn2D,UAAUu5D,SAAW,SAAUC,GACtC,IAAK32D,KAAK44B,UACR,MAAM,IAAItzB,MAAM,iHAElB,OAAI9H,EAAKwB,QAAQ23D,GACR32D,KAAK44B,UAAU/iB,KAAK/X,OAAOwe,OAAOq6C,IAChCn5D,EAAKo5D,SAASD,GAChB32D,KAAK44B,UAAU3a,MAAM04C,GAEvB32D,KAAK44B,UAAU/iB,KAAK8gD,IAS7BrD,EAASn2D,UAAU05D,cAAgB,SAASriD,EAAOmkB,GACjD,IAAK34B,KAAK44B,UACR,MAAM,IAAItzB,MAAM,iHAElB,OAAO,IAAIozB,EAAWlkB,EAAOmkB,EAAK34B,KAAK44B,YAGzC06B,EAASn2D,UAAU6H,IAAM+C,EAAM/C,IAS/BsuD,EAASn2D,UAAUwzD,gBAAkB,SAAU0F,EAAcvoD,GAE3D,OAAO9N,KAAK4zD,iBAAiBkD,SAAST,EAAcvoD,IAOtDwlD,EAASn2D,UAAU45D,cAAgB,WACjC/2D,KAAK4zD,iBAAiBvU,SAIxBiU,EAASn2D,UAAU65D,gBAAkB,SAAUjG,GAC7C,OAAO/wD,KAAK4zD,iBAAiBqD,QAAQlG,IAIvCuC,EAASn2D,UAAUo0D,gBAAkB,SAAUrsD,GAC7C,OAAOlF,KAAK4zD,iBAAiBsD,QAAQhyD,IAIvCouD,EAASn2D,UAAU0hD,eAAiB,WAClC,OAAO7+C,KAAK4zD,iBAAiBuD,UAI/B7D,EAASn2D,UAAUq4D,oBAAsB,WACvC,OAAO,IAAIlwD,MAAM,8FAiBnBguD,EAASn2D,UAAUw2D,OAAS,SAAU0C,EAAcv6D,EAAMuE,GACxD,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKo3D,UAAUf,EAAcv6D,EAAM4E,MAUvC4yD,EAASn2D,UAAUi6D,UAAY,SAAUf,EAAcv6D,EAAMuE,GAC3D,IAAKL,KAAKwzD,YACR,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9C,IAAI6B,EACJ,GAAIr3D,KAAKqF,QAAQ48B,sBAAuB,CACtC,MAAMjS,EAAWhwB,KAAKuzD,UAAU8C,GAChC,IAAKrmC,EACH,OAAO3vB,EAAS,KAAM,MAExBg3D,EAAQrnC,EAASsnC,KAEnBt3D,KAAKyzD,cAAcE,OAAO0C,EAAcv6D,EAAMu7D,EAAOh3D,IAkBvDizD,EAASn2D,UAAUo6D,SAAW,SAAUlB,EAAcv6D,EAAMuE,GAC1D,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKw3D,YAAYnB,EAAcv6D,EAAM4E,MAUzC4yD,EAASn2D,UAAUq6D,YAAc,SAAUnB,EAAcv6D,EAAMuE,GAC7D,IAAKL,KAAKwzD,YACR,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9C,IAAI6B,EACAI,EACJ,GAAIz3D,KAAKqF,QAAQ48B,sBAAuB,CACtC,MAAMjS,EAAWhwB,KAAKuzD,UAAU8C,GAChC,IAAKrmC,EACH,OAAO3vB,EAAS,KAAM,MAExBg3D,EAAQrnC,EAAS0nC,OACjBD,EAAUznC,EAASynC,QAErBz3D,KAAKyzD,cAAc8D,SAASlB,EAAcv6D,EAAMu7D,EAAOI,EAASp3D,IAkBlEizD,EAASn2D,UAAUw6D,aAAe,SAAUtB,EAAcv6D,EAAMuE,GAC9D,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAK43D,gBAAgBvB,EAAcv6D,EAAM4E,MAU7C4yD,EAASn2D,UAAUy6D,gBAAkB,SAAUvB,EAAcv6D,EAAMuE,GACjE,GAAwB,mBAAbA,EACT,MAAM,IAAI5C,EAAO8D,cAAc,8BAEjC,IAAK80D,IAAiBv6D,EACpB,OAAOuE,EACL,IAAI5C,EAAO8D,cAAc,sFAE7BvB,KAAK63D,cAAcxB,EAAcv6D,GAAM,EAAO,SAAU+D,EAAKi4D,GAC3D,GAAIj4D,EACF,OAAOQ,EAASR,EAAK,MAEvBQ,EAAS,KAAM0H,EAAMrC,aAAaoyD,OAoBtCxE,EAASn2D,UAAU46D,YAAc,SAAU1B,EAAcv6D,EAAMk8D,EAAW33D,GACxE,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKi4D,qBAAqB5B,EAAcv6D,EAAMk8D,GAAW,EAAOt3D,MAmBpE4yD,EAASn2D,UAAU+6D,cAAgB,SAAU7B,EAAcv6D,EAAMuE,GAC/D,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKm4D,iBAAiB9B,EAAcv6D,EAAM4E,MAU9C4yD,EAASn2D,UAAUg7D,iBAAmB,SAAU9B,EAAcv6D,EAAMuE,GAClE,GAAwB,mBAAbA,EACT,MAAM,IAAI5C,EAAO8D,cAAc,8BAEjC,IAAK80D,IAAiBv6D,EACpB,OAAOuE,EAAS,IAAI5C,EAAO8D,cAAc,uFAE3CvB,KAAK63D,cAAcxB,EAAcv6D,GAAM,EAAM,SAAU+D,EAAKi4D,GAC1D,GAAIj4D,EACF,OAAOQ,EAASR,EAAK,MAEvBQ,EAAS,KAAM0H,EAAMrC,aAAaoyD,OAmBtCxE,EAASn2D,UAAUi7D,aAAe,SAAU/B,EAAcv6D,EAAMk8D,EAAW33D,GACzE,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKi4D,qBAAqB5B,EAAcv6D,EAAMk8D,GAAW,EAAMt3D,MAoBnE4yD,EAASn2D,UAAUk7D,oBAAsB,SAAUhC,EAAcv6D,EAAMuE,GACrE,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKs4D,uBAAuBjC,EAAcv6D,EAAM4E,MAUpD4yD,EAASn2D,UAAUm7D,uBAAyB,SAAUjC,EAAcv6D,EAAMuE,GACxE,IAAKL,KAAKwzD,YACR,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9C,IAAI6B,EACJ,GAAIr3D,KAAKqF,QAAQ48B,sBAAuB,CACtC,MAAMjS,EAAWhwB,KAAKuzD,UAAU8C,GAChC,IAAKrmC,EACH,OAAO3vB,EAAS,KAAM,MAExBg3D,EAAQrnC,EAASuoC,MAEnBv4D,KAAKyzD,cAAc4E,oBAAoBhC,EAAcv6D,EAAMu7D,EAAOh3D,IAWpEizD,EAASn2D,UAAU06D,cAAgB,SAAUxB,EAAcv6D,EAAM08D,EAAWn4D,GAC1E,IAAKL,KAAKwzD,YACR,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9C,IAAI6B,EACJ,GAAIr3D,KAAKqF,QAAQ48B,sBAAuB,CACtC,MAAMjS,EAAWhwB,KAAKuzD,UAAU8C,GAChC,IAAKrmC,EACH,OAAO3vB,EAAS,KAAM,MAExBg3D,EAAQmB,EAAYxoC,EAASyoC,WAAazoC,EAAS0oC,UAErD14D,KAAKyzD,cAAckE,aAAatB,EAAcv6D,EAAM08D,EAAWnB,EAAOh3D,IAYxEizD,EAASn2D,UAAU86D,qBAAuB,SAAU5B,EAAcv6D,EAAMk8D,EAAWQ,EAAWn4D,GAC5F,GAAwB,mBAAbA,EACT,MAAM,IAAI5C,EAAO8D,cAAc,8BAEjC,IAAK80D,IAAiBv6D,EACpB,OAAOuE,EACL,IAAI5C,EAAO8D,cAAc,sFAE7B,IAAK/D,EAAKwB,QAAQg5D,GAChB,OAAO33D,EAAS,IAAI5C,EAAO8D,cAAc,wCAE3C,IACEy2D,EAAYA,EAAUzyD,IAAI,SAAUd,GAClC,MAAoB,iBAATA,EACFA,EAEFya,EAAM1Q,sBAAsB/J,KAGvC,MAAO5E,GACL,OAAOQ,EAASR,GAElBG,KAAK63D,cAAcxB,EAAcv6D,EAAM08D,EAAW,SAAU34D,EAAKi4D,GAC/D,GAAIj4D,EACF,OAAOQ,EAASR,EAAK,MAEvB,IAAI84D,EACAb,IACFa,EAAIb,EAAa,IAAME,EAAUzxD,KAAK,KAAO,MAE/ClG,EAAS,KAAMs4D,GAAK,SAiBxBrF,EAASn2D,UAAUy7D,SAAW,SAAUC,EAASh3C,EAAaxhB,GAO5D,OANKA,GAAmC,mBAAhBwhB,IAGtBxhB,EAAWwhB,EACXA,EAAc,MAET9Z,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAK84D,YAAYD,EAASh3C,EAAanhB,MAU3C4yD,EAASn2D,UAAU27D,YAAc,SAAUD,EAASh3C,EAAaxhB,GAC/D,IAAKL,KAAKwzD,YACR,OAAOnzD,EAASL,KAAKw1D,sBAAuB,MAE9C,IAAIuD,EACAC,EAAW,EACf,MAAM9zD,EAAOqb,EAAiBqB,QAC9B1c,EAAK4c,eAAiB,IAAMD,EAC5B,MAAMo3C,EAAiB,IAAIxZ,EAASt7B,aAAa3mB,EAAKgE,OApwB5B,2DAowBwDq3D,GAAU,KAAM3zD,GAC5Fg0D,EAAgB,IAAIzZ,EAASt7B,aAAa3mB,EAAKgE,OAhwB5B,yDAgwBuDq3D,GAAU,KAAM3zD,GAC1Fc,EAAOhG,KAEb+H,EAAML,OAAO,WACX,OAAQqxD,GAAUC,IArvBG,GAsvBpB,SAAkBv4D,GACnBuF,EAAKgsB,kBAAkBlkB,MAAMmrD,EAAgB,SAAUp5D,EAAKC,GAC1D,GAAID,EACF,OAAOY,EAAKZ,GAEd,MAAMs5D,EAAar5D,EAAO8Q,KAAK,GAC/B,IAAKuoD,IAAeA,EAAqB,SACvC,OAAO7W,WAAW7hD,EAxvBC,KA0vBrBs4D,EAAQ,CACNK,YAAaD,EAAoB,QACjCE,YAAaF,EAAwB,YACrCz5C,WAAYy5C,EAAuB,WACnCG,UAAWH,EAAuB,WAClCpS,SAAUoS,EAAqB,SAC/BI,cAAeJ,EAAmB,OAClC90C,OAAQ,IAEVre,EAAKgsB,kBAAkBlkB,MAAMorD,EAAe,SAAUr5D,EAAKC,GACzD,GAAID,EACF,OAAOY,EAAKZ,GAEdC,EAAO8Q,KAAKhO,QAAQ,SAAUojC,GAC5B+yB,EAAM10C,OAAO3f,KAAK,CAChBqsD,GAAI/qB,EAAc,SAClBwzB,SAAUxzB,EAAc,SACxBnjC,OAAQmjC,EAAY,OACpByzB,QAASzzB,EAAoB,eAC7B0zB,OAAQ1zB,EAAY,WAGxBvlC,SAGH,SAAuBZ,GACnBA,GAAQk5D,IACXl5D,EAAM,IAAIyF,MAAM9H,EAAKgE,OAAO,uDAAwDq3D,EA1xBjE,KA4xBrBx4D,EAASR,EAAKk5D,MAiBlBzF,EAASn2D,UAAUw8D,qBAAuB,SAAUt5D,GAClD,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9E,MAAMy9C,EAAan+C,KAAKgyB,kBAAkBmsB,WAC1C,IAAKA,EACH,OAAOz9C,EAAG,MAAM,GAGlBV,KAAK45D,sBAAsBzb,EAAY,CAACt+C,EAAKg6D,KAE3Cn5D,EAAG,MAAOb,GAAOg6D,QAavBvG,EAASn2D,UAAU28D,eAAiB,SAAU9pC,EAAUnuB,EAAOxB,GAC7D,IAAK7C,EAAKwB,QAAQ6C,GAChB,OAAOxB,IAET,MAAMi3D,EAAO,GAEb,SAASyC,EAAc90D,GACrB,GAAIA,EAAKyF,OAASwU,EAAMpW,UAAUuB,KAiBlC,GAAKpF,EAAKC,KAGV,OAAID,EAAKyF,OAASwU,EAAMpW,UAAUqB,MAAQlF,EAAKyF,OAASwU,EAAMpW,UAAUsB,IAC/D2vD,EAAc90D,EAAKC,WAExBD,EAAKyF,OAASwU,EAAMpW,UAAUvD,MAChCw0D,EAAc90D,EAAKC,KAAK,IACxB60D,EAAc90D,EAAKC,KAAK,UAzB1B,CACE,MAAM80D,EAAU/0D,EAAKC,KAAK4F,MAAM,KAKhC,GAJA7F,EAAKC,KAAO,CACV8qB,SAAUgqC,EAAQ,GAClBl+D,KAAMk+D,EAAQ,KAEX/0D,EAAKC,KAAKpJ,KAAM,CACnB,IAAKk0B,EACH,MAAM,IAAIrxB,UAAU,kCAAoCq7D,EAAQzzD,KAAK,MAGvEtB,EAAKC,KAAKpJ,KAAOmJ,EAAKC,KAAK8qB,SAC3B/qB,EAAKC,KAAK8qB,SAAWA,EAEvBsnC,EAAK5yD,KAAKO,IAcd,IAAK,IAAI1J,EAAI,EAAGA,EAAIsG,EAAMxC,OAAQ9D,IAAK,CACrC,MAAM0+D,EAAOp4D,EAAMtG,GACnB,GAAoB,iBAAT0+D,EAGX,IACE,MAAMh1D,EAAOia,EAAMpW,UAAUyB,UAAU0vD,GACvCF,EAAc90D,GACdpD,EAAMtG,GAAK0J,EAEb,MAAOpF,GACL,OAAOQ,EAASR,IAGpB,MAAMmG,EAAOhG,KACb+H,EAAM5E,KAAKm0D,EAAM,SAAUryD,EAAMxE,GAC/BuF,EAAK2tD,OAAO1uD,EAAKC,KAAK8qB,SAAU/qB,EAAKC,KAAKpJ,KAAM,SAAU+D,EAAK2qD,GAC7D,OAAI3qD,EACKY,EAAKZ,GAET2qD,GAGLvlD,EAAKC,KAAOslD,OACZ/pD,KAHSA,EAAK,IAAI9B,UAAU,gCAAkCsG,EAAKC,KAAK8qB,SAAW,IAAM/qB,EAAKC,KAAKpJ,UAKpGuE,IAULizD,EAASn2D,UAAUy8D,sBAAwB,SAAUzb,EAAY99C,GAC/D,MAAM+oC,EAAW,IAAIme,IAErBx/C,EAAM5B,OAAO,CACX1F,IACE,MAAMg6C,EAAU,IAAIgF,EAASt7B,aAp5BD,0CAo5ByC,KAAM,MAC3Eg6B,EAAWwE,WAAWlI,EAAS,KAAM,SAAU56C,EAAKC,IAC7CD,GAAOC,GAAUA,EAAO8Q,MAA+B,IAAvB9Q,EAAO8Q,KAAKvR,QAC/C+pC,EAASzoC,IAAIb,EAAO8Q,KAAK,GAAmB,eAAE3D,YAEhDxM,EAAKZ,MAGTY,IACE,MAAMg6C,EAAU,IAAIgF,EAASt7B,aAl6BD,0CAk6ByC,KAAM,MAC3Eg6B,EAAWwE,WAAWlI,EAAS,KAAM,SAAU56C,EAAKC,GAClD,IAAKD,GAAOC,GAAUA,EAAO8Q,KAC3B,IAAK,MAAMo1B,KAAOlmC,EAAO8Q,KAAM,CAC7B,MAAMpU,EAAQwpC,EAAoB,eAC7BxpC,GAGL4sC,EAASzoC,IAAInE,EAAMyQ,YAGvBxM,EAAKZ,OAGPA,IACFQ,EAASR,EAAuB,IAAlBupC,EAASprC,SAmB3B61D,EAAgB12D,UAAU+8D,QAAU,SAAUlqC,EAAUliB,GACtD,OAASkiB,GAAY,IAAOliB,GAG9B+lD,EAAgB12D,UAAU25D,SAAW,SAAU9mC,EAAUliB,GACvD,MAAMhR,EAAMkD,KAAKk6D,QAAQlqC,EAAUliB,GACnC,IAAI5I,EAAOlF,KAAKg0D,UAAUl3D,GAC1B,OAAIoI,IAGJlF,KAAKm6D,qBACLj1D,EAAO,IAAImf,EAAO6hB,cACb8Z,gBAAgB,GACrB96C,EAAK4I,MAAQA,EAEb5I,EAAK8qB,SAAWA,EAChBhwB,KAAKg0D,UAAUl3D,GAAOoI,EACtBlF,KAAKX,SACE6F,IAGT2uD,EAAgB12D,UAAUg9D,kBAAoB,WAC5C,GAAIn6D,KAAKX,OAASW,KAAK+zD,aACrB,OAEF,MAAMqG,EAAW,GACjBp6D,KAAKk0D,QAAQ,UACX,2GACF,MAAMmG,EAAep+D,OAAO6E,KAAKd,KAAKg0D,WACtC,IAAK,IAAIz4D,EAAI,EAAGA,EAAI8+D,EAAah7D,QAAUW,KAAKX,OAAS+6D,EAAS/6D,OAASW,KAAK+zD,aAAcx4D,IAAK,CACjG,MAAM2J,EAAOlF,KAAKg0D,UAAUqG,EAAa9+D,IACpC2J,EAAKuc,SAIV24C,EAAS11D,KAAKQ,GAEhBk1D,EAASx3D,QAAQ,SAAU6B,UAClBzE,KAAKg0D,UAAUvvD,EAAKqJ,cACpB9N,KAAKi0D,SAASxvD,EAAKgd,SAC1BzhB,KAAKX,UACJW,OAGL6zD,EAAgB12D,UAAU+5D,QAAU,SAAUhyD,GAC5ClF,KAAKi0D,SAAS/uD,EAAKuc,QAAQxU,SAAS,QAAU/H,GAGhD2uD,EAAgB12D,UAAU85D,QAAU,SAAUlG,GAC5C,OAAO/wD,KAAKi0D,SAASlD,EAAG9jD,SAAS,SAGnC4mD,EAAgB12D,UAAUkiD,MAAQ,WAChCr/C,KAAKg0D,UAAY,GACjBh0D,KAAKi0D,SAAW,GAChBj0D,KAAKX,OAAS,GAGhBw0D,EAAgB12D,UAAUg6D,OAAS,WACjC,OAAOpvD,EAAMrC,aAAa1F,KAAKg0D,WAAWja,OAAO,SAAU70C,GACzD,QAASA,EAAKuc,WAIlBnmB,EAAOD,QAAUi4D,G,6BCjiCjB,MAAM91D,EAAO,EAAQ,GACf6mB,EAAS,EAAQ,GASvB,SAASi2C,EAAex+D,GACtBuoB,EAAO6hB,aAAaxqC,KAAKsE,MACzBA,KAAKggD,gBAAgB,GAErB/jD,OAAOC,eAAe8D,KAAM,UAAW,CAAExD,OAAO,EAAOL,YAAY,EAAOya,UAAU,IACpF3a,OAAOC,eAAe8D,KAAM,SAAU,CAAExD,OAAO,EAAOL,YAAY,EAAOya,UAAU,IAKnF5W,KAAKlE,KAAOA,EAKZkE,KAAKu6D,+BAAiC,EAKtCv6D,KAAKw6D,QAAU,KAKfx6D,KAAKy6D,QAAU,KAKfz6D,KAAK06D,eAAiB,EAKtB16D,KAAK26D,gBAAkB,KAKvB36D,KAAK46D,kBAAoB,KAKzB56D,KAAK+O,YAAc,KAKnB/O,KAAK66D,sBAAwB,EAM7B76D,KAAK86D,iBAAmB,EAQxB96D,KAAK87B,WAAa,KAUlB97B,KAAK+6D,eAAiB,KAKtB/6D,KAAKg7D,sBAAuB,EAK5Bh7D,KAAKi7D,WAAa,EAKlBj7D,KAAKk7D,iBAAmB,OASxBl7D,KAAKm7D,iBAAmB,IASxBn7D,KAAKo7D,iBAAmB,KAKxBp7D,KAAKiB,QAAU,KAKfjB,KAAKq7D,cAAgB,KAKrBr7D,KAAKs7D,cAAgB,GAKrBt7D,KAAKu7D,eAAiB,GAKtBv7D,KAAKw7D,gBAAkB,GAGzBh+D,EAAK2P,SAASmtD,EAAgBj2C,EAAO6hB,cAErC5qC,EAAOD,QAAUi/D,G,6BC7IjB,SAASmB,KAwBT,SAASC,KAbTD,EAAat+D,UAAU2mD,iBAAmB,SAAU/D,EAAUjkD,GAC5D,MAAM,IAAIwJ,MAAM,qIAoBlBo2D,EAAcv+D,UAAU4mD,gBAAkB,SAAU1jD,GAClDA,EAAS,IAAIiF,MAAM,qBASrBo2D,EAAcv+D,UAAUinD,kBAAoB,SAAUuX,EAAWt7D,GAC/DA,EAAS,IAAIiF,MAAM,qBAQrBo2D,EAAcv+D,UAAUgnD,wBAA0B,SAAUtgC,KAI5DxoB,EAAQogE,aAAeA,EACvBpgE,EAAQqgE,cAAgBA,G,6BC7DxB,MAAME,EAAmB,EAAQ,IA+RjCtgE,EAAOD,QAzRP,MACE,YAAYS,EAAM2D,GAKhBO,KAAKlE,KAAOA,EACZkE,KAAK67D,SAAWp8D,EAMhBO,KAAK87D,SAAW,IAAIF,EAAiB57D,KAAK67D,UAqB5C,IAAIt+B,EAAKuH,EAASgU,GAMhB,YALyBx1C,IAArBw1C,GAAqD,iBAAZhU,IAC3CgU,EAAmBhU,EACnBA,EAAU,MAGL9kC,KAAK67D,SAASE,kBAAkBx+B,EAAKuH,GAAS,GAClDO,KAAK22B,GAAYA,EAASz+B,EAAKuH,EAASgU,IACxCzT,KAAKvlC,GAAUA,EAAOk3B,SA8B3B,KAAKuG,EAAKuH,EAASgU,GAMjB,YALyBx1C,IAArBw1C,GAAqD,iBAAZhU,IAC3CgU,EAAmBhU,EACnBA,EAAU,MAGL9kC,KAAK67D,SAASE,kBAAkBx+B,EAAKuH,GAAS,GAClDO,KAAK22B,GAAYA,EAASz+B,EAAKuH,EAASgU,IAwB7C,QAAQhU,EAASgU,GAOf,YANyBx1C,IAArBw1C,GAAqD,iBAAZhU,IAC3CgU,EAAmBhU,EACnBA,EAAU,MAGK9kC,KAAK67D,SAASI,qBAAqBn3B,EAC7Ck3B,CAASl3B,EAASgU,GAkC3B,OAAOvb,EAAKuH,EAASgU,GAMnB,YALyBx1C,IAArBw1C,GAAqD,iBAAZhU,IAC3CgU,EAAmBhU,EACnBA,EAAU,MAGL9kC,KAAK67D,SAASK,kBAAkB3+B,EAAKuH,GACzCO,KAAK22B,GAAYA,EAASz+B,EAAKuH,EAASgU,IA8C7C,OAAOvb,EAAKuH,EAASgU,GAMnB,YALyBx1C,IAArBw1C,GAAqD,iBAAZhU,IAC3CgU,EAAmBhU,EACnBA,EAAU,MAGL9kC,KAAK67D,SAASM,kBAAkB5+B,EAAKuH,GACzCO,KAAK22B,GAAYA,EAASz+B,EAAKuH,EAASgU,IA2C7C,OAAOvb,EAAKuH,EAASgU,GAMnB,YALyBx1C,IAArBw1C,GAAqD,iBAAZhU,IAC3CgU,EAAmBhU,EACnBA,EAAU,MAGL9kC,KAAK67D,SAASO,kBAAkB7+B,EAAKuH,GACzCO,KAAK22B,GAAYA,EAASz+B,EAAKuH,EAASgU,IAsB7C,aAAahrC,EAAOuuD,EAAevjB,GACjC,OAAO94C,KAAK67D,SAASS,qBAAqBxuD,EAAOuuD,EAAevjB,M,6BC3RpE,MAAMyjB,EAAQ,EAAQ,IAChBC,EAAO,EAAQ,IACfC,EAAiB,EAAQ,IA8H/BnhE,EAAOD,QAxHP,MAWE,YAAYoE,GACVO,KAAK67D,SAAWp8D,EAChBO,KAAK08D,OAAS,CACZC,OAAQ,IAAIH,EACZ5qB,OAAQ,IAAI4qB,EACZ33B,OAAQ,IAAI23B,GAkBhB,OAAOj/B,EAAKuH,GACV,MAAM83B,EAAU3gE,OAAO6E,KAAKy8B,GACtBs/B,EAAWN,EAAMO,aAAaF,EAAS93B,GACvCi4B,EAAY/8D,KAAK08D,OAAOC,OAAOK,YAAYH,EAAU,KAAM,CAAGv5C,QAAS,QAM7E,OAJ0B,OAAtBy5C,EAAUz5C,UACZy5C,EAAUz5C,QAAUtjB,KAAK67D,SAASoB,oBAAoBL,EAASr/B,EAAKuH,IAG/D,IAAI23B,EAAeM,EAAUz5C,QAASia,EAAKuH,EAAS9kC,KAAK67D,SAAS32D,MAyB3E,OAAOq4B,EAAKuH,GACV,MAAM83B,EAAU3gE,OAAO6E,KAAKy8B,GACtBs/B,EAAWN,EAAMW,aAAaN,EAASr/B,EAAKuH,GAC5Ci4B,EAAY/8D,KAAK08D,OAAO9qB,OAAOorB,YAAYH,EAAU,KAAM,CAAGv5C,QAAS,QAM7E,OAJ0B,OAAtBy5C,EAAUz5C,UACZy5C,EAAUz5C,QAAUtjB,KAAK67D,SAASsB,oBAAoBP,EAASr/B,EAAKuH,IAG/D,IAAI23B,EAAeM,EAAUz5C,QAASia,EAAKuH,EAAS9kC,KAAK67D,SAAS32D,MA8B3E,OAAOq4B,EAAKuH,GACV,MAAM83B,EAAU3gE,OAAO6E,KAAKy8B,GACtBs/B,EAAWN,EAAMa,aAAaR,EAASr/B,EAAKuH,GAC5Ci4B,EAAY/8D,KAAK08D,OAAO73B,OAAOm4B,YAAYH,EAAU,KAAM,CAAGv5C,QAAS,QAM7E,OAJ0B,OAAtBy5C,EAAUz5C,UACZy5C,EAAUz5C,QAAUtjB,KAAK67D,SAASwB,oBAAoBT,EAASr/B,EAAKuH,IAG/D,IAAI23B,EAAeM,EAAUz5C,QAASia,EAAKuH,EAAS9kC,KAAK67D,SAAS32D,S,6BC5H7E,MAAMo4D,EAAU,EAAQ,IAClBv5B,EAAgBu5B,EAAQv5B,cACxBE,EAAkBq5B,EAAQr5B,gBAMhC,MAAMs4B,EAQJ,oBAAqBK,EAASr/B,EAAKuH,SAC1By3B,EAAMgB,sBAAsBX,EAASr/B,SAErCg/B,EAAMiB,kBAAkB14B,GAOjC,uBAAwBA,QAChB,aAECy3B,EAAMiB,kBAAkB14B,GAQjC,yBAA0BA,GACpBA,IACEA,EAAQ2lB,QAAU3lB,EAAQ2lB,OAAOprD,OAAS,SAEtC,YACCylC,EAAQ2lB,QAGY,iBAAlB3lB,EAAQ59B,aACX,OAGJ49B,EAAQ24B,SAAW34B,EAAQ24B,QAAQp+D,OAAS,SACxC,YACCylC,EAAQ24B,UAUrB,oBAAqBb,EAAS93B,SAErB83B,EAEH93B,IACEA,EAAQ2lB,QAAU3lB,EAAQ2lB,OAAOprD,OAAS,SAEtC,YACCylC,EAAQ2lB,QAGU,iBAAhB3lB,EAAQ44B,WACX,OAGJ54B,EAAQ64B,mBACJ,QAWZ,oBAAqBf,EAASr/B,EAAKuH,SAC1By3B,EAAMqB,kBAAkBhB,EAASr/B,GAEpCuH,IACEA,EAAQ2lB,QAAU3lB,EAAQ2lB,OAAOprD,OAAS,SAEtC,YACCylC,EAAQ2lB,QAGU,iBAAhB3lB,EAAQ44B,WACX,OAGJ54B,EAAQ+4B,gBACJ,OAGJ/4B,EAAQg5B,aACHvB,EAAMgB,sBAAsBthE,OAAO6E,KAAKgkC,EAAQg5B,MAAOh5B,EAAQg5B,QAW5E,oBAAqBlB,EAASr/B,EAAKuH,SAC1By3B,EAAMgB,sBAAsBX,EAASr/B,GAExCuH,IACEA,EAAQ2lB,QAAU3lB,EAAQ2lB,OAAOprD,OAAS,SAEtC,YACCylC,EAAQ2lB,QAGb3lB,EAAQ+4B,gBACJ,OAGJ/4B,EAAQi5B,yBACJ,QAGJj5B,EAAQg5B,aACHvB,EAAMgB,sBAAsBthE,OAAO6E,KAAKgkC,EAAQg5B,MAAOh5B,EAAQg5B,QAK5E,6BAA8Bh9D,EAAMK,GAClC,IAAK,IAAI5F,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAMuB,EAAMgE,EAAKvF,SACXuB,QACCy/D,EAAMyB,gBAAgB78D,EAAIrE,KAIrC,uBAAwBN,GAClBA,SAAyCA,aAAiBunC,UACtDvnC,EAAMM,IACRN,EAAMwnC,uBACDu4B,EAAMyB,gBAAgBxhE,EAAMA,MAAM,SACnC,YACC+/D,EAAMyB,gBAAgBxhE,EAAMA,MAAM,MAK/C,yBAA0BsE,EAAMK,GAC9B,IAAK,IAAI5F,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAMuB,EAAMgE,EAAKvF,SACXuB,EACN,MAAMN,EAAQ2E,EAAIrE,GACdN,UACEA,aAAiBunC,QACZw4B,EAAMyB,gBAAgBxhE,GAEtBA,aAAiBynC,UAClBznC,EAAM0nC,WACN1nC,EAAM2nC,aAOtB7oC,EAAOD,QAAUkhE,G,6BCnLjB,MAAMr2B,EAAe,EAAQ,GAM7B,MAAM+3B,UAAa/3B,EAOjB,YAAYppC,EAAKN,EAAO0hE,GACtBv8C,QACA3hB,KAAKlD,IAAMA,EACXkD,KAAKxD,MAAQA,EACbwD,KAAKk+D,MAAQA,GAAS,IAgH1B5iE,EAAOD,QAxGP,cAAmB4iE,EACjB,cACEt8C,MAAM,GAAI,MACV3hB,KAAKX,OAAS,EAShB,YAAY8+D,EAAaC,GACS,mBAArBD,EAAY19D,OACrB09D,EAAcA,EAAY7hE,OAAOwI,aAEnC,IAAIsM,EAAOpR,KACPq+D,GAAU,EACV55D,EAAO05D,EAAY19D,OACvB,OAAa,CACX,IAAI69D,EAEJ,IAAK,IAAI/iE,EAAI,EAAGA,EAAI6V,EAAKtU,IAAIuC,OAAQ9D,IAAK,CACxC,GAAIkJ,EAAKtC,MAAQiP,EAAKtU,IAAIvB,KAAOkJ,EAAKjI,MAAO,CAE3C8hE,EAAYt+D,KAAKu+D,cAAcntD,EAAM7V,EAAGkJ,EAAKtC,KAAMi8D,GACnD,MAEF35D,EAAO05D,EAAY19D,OAGrB,GAAIgE,EAAKtC,KAAM,CACbk8D,GAAU,EACV,MAGF,QAAkB/6D,IAAdg7D,EACF,MAGF,MAAMJ,EAAQ9sD,EAAK8sD,MACnB,IAAIM,EACJ,IAAK,IAAIjjE,EAAI,EAAGA,EAAI2iE,EAAM7+D,OAAQ9D,IAAK,CACrC,MAAM8R,EAAI6wD,EAAM3iE,GAChB,GAAI8R,EAAEvQ,IAAI,KAAO2H,EAAKjI,MAAO,CAE3BgiE,EAAWnxD,EACX5I,EAAO05D,EAAY19D,OACnB,OAIJ,QAAiB6C,IAAbk7D,EAEF,MAGAptD,EAAOotD,EAIX,IAAKH,EAAS,CAEZ,MAAM7hE,EAAQ4hE,IAGd,OAFAhtD,EAAK8sD,MAAMx5D,KAAK,IAAIu5D,EA8B1B,SAAyBzhE,EAAOsI,GAC9B,MAAMC,EAAS,CAAEvI,GACjB,IAAIiI,EAAOK,EAASrE,OACpB,MAAQgE,EAAKtC,MACX4C,EAAOL,KAAKD,EAAKjI,OACjBiI,EAAOK,EAASrE,OAElB,OAAOsE,EArCsBF,CAAgBJ,EAAKjI,MAAO2hE,GAAc3hE,IACnEwD,KAAKy+D,eACEjiE,EAET,OAAO4U,EAAK5U,MAGd,cAAc4U,EAAMlP,EAAOw8D,EAAaN,GACtC,MAAME,EAAY,IAAIL,EAAK7sD,EAAKtU,IAAI4F,MAAMR,GAAQkP,EAAK5U,MAAO4U,EAAK8sD,OAanE,OAZA9sD,EAAKtU,IAAMsU,EAAKtU,IAAI4F,MAAM,EAAGR,GAC7BkP,EAAK8sD,MAAQ,CAAEI,GACXI,GAGFttD,EAAK5U,MAAQ4hE,IACbp+D,KAAKy+D,gBAILrtD,EAAK5U,MAAQ,KAER8hE,EAGT,eACEt+D,KAAKX,SACLW,KAAK6Y,KAAK,MAAO7Y,KAAKX,W,cCrH1B/D,EAAOD,QAAUkC,QAAQ,O,6BCEzB,MAAMohE,EAAK,EAAQ,IACb52D,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAKtB,MAAM0/C,EAOJ,wBAAwB15D,EAAMsgC,GAC5B,MAAMvkC,EAAUukC,EAAGvkC,QACnB,IAAKA,EACH,MAAM,IAAIqE,MAAM,sCAGlB,IAAIu5D,EAAa,0EAQjB,OALAA,GAAc59D,EAAQsE,IAAI3J,cAAgBsJ,EAAK45D,gBAAgBljE,EAAEE,kBAAkBF,EAAEE,WAAWyK,KAAK,MAErGs4D,GAAc,uBAEC,IAAIF,EAAGI,OAAOF,GACfG,iBAAiB,CAAErvB,SAAU,yBAQ7C,0BAA0BnK,GACxB,OAAmB,OAAfA,EAAGvkC,QAEE8G,EAAMnK,KAIS,IAAtB4nC,EAAGvkC,QAAQ5B,QAAuC,cAAvBmmC,EAAGvkC,QAAQ,GAAGnF,MACzC0pC,EAAGvkC,QAAQ,GAAGgE,KAAKyF,OAASwU,EAAMpW,UAAUK,QACrCpB,EAAMnK,KAGRghE,EAAaK,0BAA0Bz5B,GAGhD,iCAAiCA,GAC/B,OAAO,SAAgCQ,EAAK9gC,GAC1C,MAAMT,EAAOS,EAAKg6D,cAGlB,IAAK,IAAI3jE,EAAI,EAAGA,EAAIiqC,EAAGvkC,QAAQ5B,OAAQ9D,IAAK,CAC1C,MAAMK,EAAI4pC,EAAGvkC,QAAQ1F,GACrBkJ,EAAKS,EAAK45D,gBAAgBljE,EAAEE,OAASkqC,EAAIpqC,EAAEE,MAG7C,OAAO2I,GASX,6BAA6BS,EAAMsgC,GACjC,OAAmB,OAAfA,EAAGvkC,SAA0C,IAAtBukC,EAAGvkC,QAAQ5B,OAE7B,CAAE8/D,UAAU,EAAMh/D,GAAI4H,EAAMnK,MAGV,cAAvB4nC,EAAGvkC,QAAQ,GAAGnF,MAAwB0pC,EAAGvkC,QAAQ,GAAGgE,KAAKyF,OAASwU,EAAMpW,UAAUK,QAE7E,CAAEg2D,UAAU,EAAOh/D,GAAIy+D,EAAaK,0BAA0Bz5B,IAGhE,CAAE25B,UAAU,EAAMh/D,GAAIy+D,EAAaQ,iBAAiBl6D,EAAMsgC,KAIrElqC,EAAOD,QAAUujE,G,6BCrFjB,MAAMnhE,EAAS,EAAQ,GACjBsK,EAAQ,EAAQ,GA2ItBzM,EAAOD,QArIP,MAWE,yBAAyBuhE,EAAS93B,EAASvH,EAAKwH,GAC9C,IAAIs6B,EAAezC,EAKnB,OAJI93B,GAAWA,EAAQ2lB,QAAU3lB,EAAQ2lB,OAAOprD,OAAS,IACvDggE,EAAev6B,EAAQ2lB,QAGlB4U,EAAa95D,IAAI+5D,IAAgB,CACtCA,eAAcC,WAAYx6B,EAAYy6B,cAAcF,GAAe9iE,MAAO+gC,EAAI+hC,MASlF,oBAAoBx6B,EAASC,GAC3B,OAAKD,GAAYA,EAAQ24B,QAGlBxhE,OAAO6E,KAAKgkC,EAAQ24B,SAASl4D,IAAIzI,IACtC,MAAMN,EAAQsoC,EAAQ24B,QAAQ3gE,GACxB2iE,EAA4B,iBAAVjjE,EAAqBA,EAAMq5B,cAAgBr5B,EACnE,GAAiB,QAAbijE,GAAmC,SAAbA,EACxB,MAAM,IAAIhiE,EAAO8D,cAAc,mDAAqD/E,GAEtF,MAAO,CAAEuoC,EAAYy6B,cAAc1iE,GAAM2iE,KARlC13D,EAAMtE,WAiBjB,oBAAoBq1C,EAAkBrnB,GACpC,MAAMpsB,EAAU,CACd0I,SAAS,EACTqjB,sBAAkB9tB,EAClBmG,eAAWnG,EACXmuB,aAAcA,GAchB,MAXgC,iBAArBqnB,EACTzzC,EAAQ+rB,iBAAmB0nB,EAEpBA,UACPzzC,EAAQ+rB,iBAAmB0nB,EAAiB1nB,iBAC5C/rB,EAAQoE,UAAYqvC,EAAiBrvC,eAECnG,IAAlCw1C,EAAiBrnB,eACnBpsB,EAAQosB,aAAeqnB,EAAiBrnB,eAGrCpsB,EAQT,uBAAuByzC,EAAkB4mB,GACvC,MAAMr6D,EAAU,CACd0I,SAAS,EACTqjB,sBAAkB9tB,EAClBiuB,eAAWjuB,EACXwtB,eAAWxtB,EACXmG,eAAWnG,EACXmuB,kBAAcnuB,GAkBhB,MAfgC,iBAArBw1C,EACTzzC,EAAQ+rB,iBAAmB0nB,EAEpBA,UACPzzC,EAAQ+rB,iBAAmB0nB,EAAiB1nB,iBAC5C/rB,EAAQksB,UAAYunB,EAAiBvnB,UACrClsB,EAAQyrB,UAAYgoB,EAAiBhoB,UACrCzrB,EAAQoE,UAAYqvC,EAAiBrvC,UACrCpE,EAAQosB,aAAeqnB,EAAiBrnB,cAGtCiuC,IACFr6D,EAAQosB,cAAe,GAGlBpsB,EAST,yBAAyByzC,EAAkBrnB,EAAc2T,GACvD,MAAM//B,EAAU,CACd0I,SAAS,EACTqjB,sBAAkB9tB,EAClBmG,eAAWnG,EACX4d,YAAQ5d,EACRmuB,aAAcA,EACdroB,QAASg8B,GAeX,MAZgC,iBAArB0T,EACTzzC,EAAQ+rB,iBAAmB0nB,EAEpBA,UACPzzC,EAAQ+rB,iBAAmB0nB,EAAiB1nB,iBAC5C/rB,EAAQoE,UAAYqvC,EAAiBrvC,UACrCpE,EAAQ6b,QAAqC,IAA5B43B,EAAiB53B,YAEI5d,IAAlCw1C,EAAiBrnB,eACnBpsB,EAAQosB,aAAeqnB,EAAiBrnB,eAGrCpsB,K,6BCnIX,MAAMs6D,EAKJ,oBACE,MAAO,GAQT,cAAcz5D,GACZ,OAAOA,EAQT,gBAAgBq5D,GACd,OAAOA,GAwEXlkE,EAAQskE,cAAgBA,EACxBtkE,EAAQukE,iCA3DR,cAA+CD,EAI7C,cACEh+C,QAQF,cAAczb,GACZ,OAAOA,EAAS8U,QAAQ,cAAe,CAAC0N,EAAOtc,IAAWsc,EAAMkL,OAAO,GAAK,IAAMlL,EAAMkL,OAAO,IAAIvyB,cAQrG,gBAAgBk+D,GACd,OAAOA,EAAWvkD,QAAQ,UAAW,CAAC0N,EAAOtc,IAAwB,IAAXA,EAAgBsc,EAAQA,EAAM3kB,OAAO,GAAG8xB,iBAqCtGx6B,EAAQwkE,qBA5BR,cAAmCF,EAIjC,cACEh+C,QAIF,cAAczb,GACZ,OAAOyb,MAAM69C,cAAct5D,GAI7B,gBAAgBq5D,GACd,OAAO59C,MAAMm9C,gBAAgBS,GAM/B,oBACE,OAAO59C,MAAMm+C,uB,6BC9FjB,MAAMtiE,EAAO,EAAQ,IACf,eAAEgW,GAAmB,EAAQ,GAC7BvO,EAAO,WACP,OACLhC,EAAM,qBACNyQ,EAAoB,WACpBE,EAAU,SACVC,EAAQ,kCACRC,EAAiC,UACjCH,EAAS,aACTI,GACG,EAAQ,KAEN,cACLE,EAAa,mBACbD,EAAkB,kBAClBE,GACG,EAAQ,IA8GZ,MAAMuB,EAAQ,WACbzV,KAAKqV,QAAU,GAEgB,IAA3BrV,KAAKoV,WAAW/V,SACnBW,KAAKqV,QAAU5B,EAAS,GAAI,KAIxBwB,EAAM,SAASb,EAAQyB,GAC5B,MAAO,CAACrZ,EAAOiN,KACd,GAAIjN,IAAU0Y,OAAOC,SAAS3Y,GAC7B,MAAM,IAAImC,0CAA0CnB,EAAKgE,OAAOhF,MAEjE,GAAIiN,IAAcxG,EAAOwG,KAAeyL,OAAOC,SAAS1L,GACvD,MAAM,IAAI9K,sDACmCnB,EAAKgE,OAAOiI,MAG1D,GAAIjN,EAAQ,EACX,MAAM,IAAI8I,MAAM,4CAGjB8O,EAASA,GAAU,GACnBH,EAAcjU,KAAKoV,WAAYhB,GAE/B,MAAM2rD,EAAWvjE,QAAwC,EAAIA,EAE7DwD,KAAKqV,QAAU5B,EAASzT,KAAKqV,QAAS0qD,EAAUt2D,EAAW2K,EAAQyB,KAIrE,SAASpC,EAAS4B,EAAS7Y,EAAOiN,EAAW2K,EAAQyB,GAapD,OAZAA,EAAOA,GAAQ,GACfpM,EAAYxG,EAAOwG,GAChBA,EAAUgT,UACVvH,OAAOC,SAAS1L,GAChBA,OACAnG,EACC+R,EAAQQ,IACXR,EAAQQ,GAAMrZ,OAASA,EACvB6Y,EAAQQ,GAAMpM,UAAYA,GAE1B4L,EAAQQ,GAAQ,CAAErZ,QAAO4X,OAAQA,GAAU,GAAI3K,aAEzC4L,EAGR/Z,EAAOD,QA3JP,MAOC,YAAYS,EAAMwZ,EAAMlB,GACvB,IAAImB,EAuBJ,GAtBI1B,EAAS/X,IACZyZ,EAAStZ,OAAO2Y,OACf,CACCQ,WAAY,IAEbtZ,IAGW0Z,YACXD,EAAOC,UAAY,CAAChC,KAGrBM,IAEAyB,EAAS,CACRzZ,OACAwZ,OACAF,WAAYhB,EACZoB,UAAW,CAAChC,MAIT+B,EAAOD,KACX,MAAM,IAAIhQ,MAAM,oCAEjB,IAAKiQ,EAAOzZ,KACX,MAAM,IAAIwJ,MAAM,oCAEjB,IAAK0O,EAAmBuB,EAAOzZ,MAC9B,MAAM,IAAIwJ,MAAM,uBAGjB,IAAK4O,EAAkBqB,EAAOH,YAC7B,MAAM,IAAI9P,MAAM,sBAGjBtF,KAAKlE,KAAOyZ,EAAOzZ,KAEnBkE,KAAKoV,WAAaG,EAAOH,YAAc,GAEvCpV,KAAKyV,QAELzV,KAAKsV,KAAOC,EAAOD,KACnBtV,KAAK0V,WAAaH,EAAOG,YAAc,MAEvCH,EAAOC,UAAU5S,QAAQ+S,GACxBA,EAAiBC,eAAe5V,OAWlC,IAAIoU,EAAQ5X,EAAOiN,GAClB,IAAKoK,EAASO,GACb,OAAOa,EAAIvZ,KAAKsE,KAAM,KAAfiV,CAAqBb,EAAQ5X,GAGrC,MAAMqZ,EAAOjC,EAAWQ,GACxB,OAAOa,EAAIvZ,KAAKsE,KAAMoU,EAAQyB,EAAvBZ,CAA6BzY,EAAOiN,GAO5C,QACC,OAAOgM,EAAM/Z,KAAKsE,MAGnB,MACC,MAAO,CACNsV,KAAMtV,KAAKsV,KACXxZ,KAAMkE,KAAKlE,KACXmJ,OACAF,OAAQ2O,EAAqB1T,KAAKqV,SAClCK,WAAY1V,KAAK0V,YAInB,SACC,MAAMtB,EAAST,EAAU3T,KAAKoV,WAAYzS,YAAc,GAClDkT,EAAOjC,EAAWQ,GAExB,OADAH,EAAcjU,KAAKoV,WAAYhB,GACxB,CACNa,IAAKA,EAAIvZ,KAAKsE,KAAMoU,EAAQyB,IAI9B,SACC,MAAMzB,EAAST,EAAU3T,KAAKoV,WAAYzS,YAAc,GACxD,OAAOoR,EAAarY,KAAKsE,KAAMA,KAAKqV,QAASjB,M,cC/H/C,SAAS4rD,KAyIT,SAASC,EAASC,GACdlgE,KAAKmgE,MAAQD,EACblgE,KAAKogE,WAAa,GAClBpgE,KAAKqgE,QAAU,KAzInBL,EAAS7iE,UAAUkiD,MAAQ,WACvBr/C,KAAKw8B,MAAQ,KACbx8B,KAAKhC,KAAO,GAIhBgiE,EAAS7iE,UAAUmjE,KAAO,SAASxrD,GAG/B,IAFA,IAAI8Z,EAAM5uB,KAAKw8B,MAED,OAAR5N,GAAc,CAChB,IAAIhzB,EAAIoE,KAAKugE,YAAYzrD,EAAM8Z,EAAI9Z,MACnC,GAAS,IAANlZ,EACC,OAAOgzB,EAAI9Z,KAGX8Z,EAAMA,EAAI4xC,UAAU5kE,EAAI,GAIhC,OAAO,MAIXokE,EAAS7iE,UAAUsjE,SAAW,SAAS3rD,GAInC,IAHA,IAAI8Z,EAAM5uB,KAAKw8B,MACXkkC,EAAO1gE,KAAK8E,WAEF,OAAR8pB,GAAc,CAChB,IAAIhzB,EAAIoE,KAAKugE,YAAYzrD,EAAM8Z,EAAI9Z,MACnC,GAAS,IAANlZ,EAEC,OADA8kE,EAAKL,QAAUzxC,EACR8xC,EAGPA,EAAKN,WAAW17D,KAAKkqB,GACrBA,EAAMA,EAAI4xC,UAAU5kE,EAAI,GAIhC,OAAO,MAIXokE,EAAS7iE,UAAUwjE,WAAa,SAASl8D,GAKrC,IAJA,IAAIm8D,EAAM5gE,KAAKw8B,MACXkkC,EAAO1gE,KAAK8E,WACZvF,EAAMS,KAAKugE,YAED,OAARK,GAAc,CAChB,IAAIhlE,EAAI2D,EAAIkF,EAAMm8D,EAAI9rD,MACtB,GAAS,IAANlZ,EAEC,OADA8kE,EAAKL,QAAUO,EACRF,EAEXA,EAAKN,WAAW17D,KAAKk8D,GACrBA,EAAMA,EAAIJ,UAAU5kE,EAAI,GAG5B,IAAI,IAAIL,EAAEmlE,EAAKN,WAAW/gE,OAAS,EAAG9D,GAAK,IAAKA,EAE5C,GAAGgE,EAAIkF,GADPm8D,EAAMF,EAAKN,WAAW7kE,IACLuZ,MAAQ,EAGrB,OAFA4rD,EAAKL,QAAUO,EACfF,EAAKN,WAAW/gE,OAAS9D,EAClBmlE,EAKf,OADAA,EAAKN,WAAW/gE,OAAS,EAClBqhE,GAIXV,EAAS7iE,UAAU0jE,WAAa,SAASp8D,GAIrC,IAHA,IAAIi8D,EAAO1gE,KAAK2gE,WAAWl8D,GACvBlF,EAAMS,KAAKugE,YAEO,OAAhBG,EAAK5rD,QAA8C,IAA3BvV,EAAImhE,EAAK5rD,OAAQrQ,IAC3Ci8D,EAAKjgE,OAGT,OAAOigE,GAIXV,EAAS7iE,UAAUgK,IAAM,WACrB,IAAIynB,EAAM5uB,KAAKw8B,MACf,GAAW,OAAR5N,EACC,OAAO,KAGX,KAAmB,OAAbA,EAAIkyC,MACNlyC,EAAMA,EAAIkyC,KAGd,OAAOlyC,EAAI9Z,MAIfkrD,EAAS7iE,UAAUqd,IAAM,WACrB,IAAIoU,EAAM5uB,KAAKw8B,MACf,GAAW,OAAR5N,EACC,OAAO,KAGX,KAAoB,OAAdA,EAAImyC,OACNnyC,EAAMA,EAAImyC,MAGd,OAAOnyC,EAAI9Z,MAKfkrD,EAAS7iE,UAAU2H,SAAW,WAC1B,OAAO,IAAIm7D,EAASjgE,OAIxBggE,EAAS7iE,UAAUgG,KAAO,SAASzC,GAE/B,IADA,IAAwBoU,EAApBksD,EAAGhhE,KAAK8E,WACiB,QAAtBgQ,EAAOksD,EAAGvgE,SACbC,EAAGoU,IAKXkrD,EAAS7iE,UAAU8jE,MAAQ,SAASvgE,GAEhC,IADA,IAAwBoU,EAApBksD,EAAGhhE,KAAK8E,WACiB,QAAtBgQ,EAAOksD,EAAGv6B,SACb/lC,EAAGoU,IAWXmrD,EAAS9iE,UAAU2X,KAAO,WACtB,OAAwB,OAAjB9U,KAAKqgE,QAAmBrgE,KAAKqgE,QAAQvrD,KAAO,MAKvDmrD,EAAS9iE,UAAUsD,KAAO,WACtB,GAAoB,OAAjBT,KAAKqgE,QAAkB,CACtB,IAAI5jC,EAAOz8B,KAAKmgE,MAAM3jC,MACV,OAATC,GACCz8B,KAAKkhE,SAASzkC,OAGjB,CAIG,IAAI8K,EAHR,GAA0B,OAAvBvnC,KAAKqgE,QAAQU,MAIZ,EAAG,CAEC,GADAx5B,EAAOvnC,KAAKqgE,SACTrgE,KAAKogE,WAAW/gE,OAGd,CACDW,KAAKqgE,QAAU,KACf,MAJArgE,KAAKqgE,QAAUrgE,KAAKogE,WAAWh2B,YAM/BpqC,KAAKqgE,QAAQU,QAAUx5B,QAI/BvnC,KAAKogE,WAAW17D,KAAK1E,KAAKqgE,SAC1BrgE,KAAKkhE,SAASlhE,KAAKqgE,QAAQU,OAGnC,OAAwB,OAAjB/gE,KAAKqgE,QAAmBrgE,KAAKqgE,QAAQvrD,KAAO,MAKvDmrD,EAAS9iE,UAAUspC,KAAO,WACtB,GAAoB,OAAjBzmC,KAAKqgE,QAAkB,CACtB,IAAI5jC,EAAOz8B,KAAKmgE,MAAM3jC,MACV,OAATC,GACCz8B,KAAKmhE,SAAS1kC,OAGjB,CAEG,IAAI8K,EADR,GAAyB,OAAtBvnC,KAAKqgE,QAAQS,KAEZ,EAAG,CAEC,GADAv5B,EAAOvnC,KAAKqgE,SACTrgE,KAAKogE,WAAW/gE,OAGd,CACDW,KAAKqgE,QAAU,KACf,MAJArgE,KAAKqgE,QAAUrgE,KAAKogE,WAAWh2B,YAM/BpqC,KAAKqgE,QAAQS,OAASv5B,QAG9BvnC,KAAKogE,WAAW17D,KAAK1E,KAAKqgE,SAC1BrgE,KAAKmhE,SAASnhE,KAAKqgE,QAAQS,MAGnC,OAAwB,OAAjB9gE,KAAKqgE,QAAmBrgE,KAAKqgE,QAAQvrD,KAAO,MAGvDmrD,EAAS9iE,UAAU+jE,SAAW,SAAS1sD,GACnC,KAAqB,OAAfA,EAAMssD,MACR9gE,KAAKogE,WAAW17D,KAAK8P,GACrBA,EAAQA,EAAMssD,KAElB9gE,KAAKqgE,QAAU7rD,GAGnByrD,EAAS9iE,UAAUgkE,SAAW,SAAS3sD,GACnC,KAAsB,OAAhBA,EAAMusD,OACR/gE,KAAKogE,WAAW17D,KAAK8P,GACrBA,EAAQA,EAAMusD,MAElB/gE,KAAKqgE,QAAU7rD,GAGnBlZ,EAAOD,QAAU2kE,G,6BCnOjB3kE,EAAQ+lE,cAAgB,CAAC5sD,EAAO6sD,EAAOv6D,KACtC,GAAIA,EAAQ,EACX,MAAM,IAAIxB,MAAM,yCAGjB,MAAMg8D,EAAU,IAAIviE,MAAM+H,GAC1B,IAAK,IAAIvL,EAAI,EAAGA,EAAIuL,EAAOvL,IAC1B+lE,EAAQ/lE,GAAKiZ,EACbA,GAAS6sD,EAEV,OAAOC,GAGRjmE,EAAQkmE,mBAAqB,CAAC/sD,EAAOgtD,EAAQ16D,KAC5C,GAAI0N,GAAS,EACZ,MAAM,IAAIlP,MAAM,8CAEjB,GAAIwB,EAAQ,EACX,MAAM,IAAIxB,MAAM,8CAEjB,GAAIk8D,GAAU,EACb,MAAM,IAAIl8D,MAAM,qDAEjB,MAAMg8D,EAAU,IAAIviE,MAAM+H,GAC1B,IAAK,IAAIvL,EAAI,EAAGA,EAAIuL,EAAOvL,IAC1B+lE,EAAQ/lE,GAAKiZ,EACbA,GAASgtD,EAEV,OAAOF,I,6BCjBRhmE,EAAOD,QAXP,WACC,IAAIomE,EACJ,IACCA,EAAcl+D,QAAQk+D,cACrB,MAAOC,IAIT,OAAOD,I,6BCRR,MAAM,QAAEvkD,EAAO,WAAEtJ,GAAe,EAAQ,IAOxC,SAAS+tD,EAAkBC,GAC1B,OAAO9lD,IACN,GAAuB,IAAnBA,EAAQzc,OAAc,OAC1B,MAAMS,EAAS,CACdwV,KAAMwG,EAAQ,GAAGxG,KACjBxZ,KAAMggB,EAAQ,GAAGhgB,KACjBmJ,KAAM6W,EAAQ,GAAG7W,KACjBF,OAAQ,GACR2Q,WAAYoG,EAAQ,GAAGpG,YAGlBmsD,EAAW,IAAI3kD,EAoBrB,OAnBApB,EAAQlZ,QAAQ2Y,IACfA,EAAOxW,OAAOnC,QAAQpG,IACrB,MAAMM,EAAM8W,EAAWpX,EAAM4X,QAC7BytD,EAASlhE,OAAOnE,EAAMof,cAAc9e,IAAON,OAI7CqlE,EAASj/D,QAAQmC,IAChB,GAAsB,IAAlBA,EAAO1F,OAAc,OACzB,MAAMyiE,EAAS,CACdtlE,MAAOolE,EAAa78D,GACpBqP,OAAQrP,EAAO,GAAGqP,QAEfrP,EAAO,GAAG6W,aACbkmD,EAAOlmD,WAAa7W,EAAO,GAAG6W,YAG/B9b,EAAOiF,OAAOL,KAAKo9D,KAEbhiE,GAITzE,EAAQsmE,kBAAoBA,EAK5BtmE,EAAQ0mE,YAAc,CAIrBC,IAAKL,EAAkBM,GAAKA,EAAE9lD,OAAO,CAAC9e,EAAGzB,IAAMyB,EAAIzB,EAAEY,MAAO,IAI5Dw6B,MAAO2qC,EAAkBM,GAAKA,EAAE,GAAGzlE,OAInC0lE,KAAM,OAINC,QAASR,EACRM,GAAKA,EAAE9lD,OAAO,CAAC9e,EAAGzB,IAAMyB,EAAIzB,EAAEY,MAAO,GAAKylE,EAAE5iE,QAK7C8H,IAAKw6D,EAAkBM,GACtBA,EAAE9lD,OAAO,CAAC9e,EAAGzB,IAAM8K,KAAKS,IAAI9J,EAAGzB,EAAEY,OAAQ4lE,MAK1C5nD,IAAKmnD,EAAkBM,GACtBA,EAAE9lD,OAAO,CAAC9e,EAAGzB,IAAM8K,KAAK8T,IAAInd,EAAGzB,EAAEY,QAAS4lE,Q;;;;;;;GCpE5C9mE,EAAOD,QAAU,EAAQ,M,6BCRzB,MAAMgnE,EAAgB,EAAQ,IAC9BhnE,EAAQinE,OAAS,EAAQ,KACzBjnE,EAAQ69C,iBAAmB,EAAQ,IAA2BA,iBAC9D79C,EAAQklB,iBAAmB,EAAQ,IAA2BA,iBAC9DllB,EAAQ6jB,MAAQ,EAAQ,GACxB7jB,EAAQoC,OAAS,EAAQ,GACzBpC,EAAQy2B,SAAW,EAAQ,IAC3Bz2B,EAAQknE,KAAO,EAAQ,KACvBlnE,EAAQmnE,QAAU,EAAQ,KAC1BnnE,EAAQ2kC,QAAU,EAAQ,IAC1B3kC,EAAQygB,QAAU,EAAQ,IAC1BzgB,EAAQonE,WAAa,EAAQ,KAE7B,MAAM5+C,EAAQ,EAAQ,IACtBxoB,EAAQwoB,MAAQ,CACd2U,MAAO3U,EAAM2U,MACbE,WAAY7U,EAAM6U,YAEpB,MAAM46B,EAAW,EAAQ,IACzBj4D,EAAQ+/C,SAAW,CACjBkY,SAAUA,GAEZj4D,EAAQmkD,QAAU,EAAQ,IAI1BnkD,EAAQglC,eAAiB,WACvB,OAAOgiC,EAAchiC,kBAEvBhlC,EAAQmQ,QAAU,EAAQ,IAAkBA,S;;;;;;;GCjB5C,IAAIk3D,EAAa,EAAQ,KACrBx8B,EAAe,EAAQ,GAAUA,aACjCoF,EAAQ,EAAQ,KAChBhlB,EAAQ,EAAQ,KAChB6kB,EAAQ,EAAQ,IAChBw3B,EAAS,EAAQ,IACjBz6C,EAAM,EAAQ,KACd0G,EAAM,EAAQ,MAMlBvzB,EAAUC,EAAOD,QASjB,WACE,IAAIunE,EAAM,SAAS16C,EAAK0G,EAAKnuB,GAC3BmiE,EAAIl3B,OAAOxjB,EAAK0G,EAAKnuB,IAiBvB,OAdA6qC,EAAMs3B,EAAK18B,EAAa/oC,WAAW,GACnCmuC,EAAMs3B,EAAKt8C,GAAO,GAGlBs8C,EAAInoB,QAAUx+C,OAAOY,OAAOqrB,EAAK,CAC/B06C,IAAK,CAAEhoD,cAAc,EAAMze,YAAY,EAAMya,UAAU,EAAMpa,MAAOomE,KAItEA,EAAIhgB,SAAW3mD,OAAOY,OAAO+xB,EAAK,CAChCg0C,IAAK,CAAEhoD,cAAc,EAAMze,YAAY,EAAMya,UAAU,EAAMpa,MAAOomE,KAGtEA,EAAIz7B,OACGy7B,IAODC,YAAcv8C,EACtBjrB,EAAQo/C,QAAUvyB,EAClB7sB,EAAQunD,SAAWh0B,EAMnBvzB,EAAQ8vC,MAAQA,EAChB9vC,EAAQsnE,OAASA,EAMjBtnE,EAAQynE,KAAOJ,EAAWI,KAC1BznE,EAAQyS,MAAQ,EAAQ,IACxBzS,EAAQ0nE,IAAML,EAAWK,IACzB1nE,EAAQ2nE,OAAS,EAAQ,KACzB3nE,EAAQoD,KAAOikE,EAAWjkE,KAC1BpD,EAAQ4nE,WAAaP,EAAWO,WAMP,CACvB,aACA,WACA,gBACA,UACA,SACA,eACA,UACA,eACA,eACA,UACA,iBACA,QACA,OACA,YACA,QACA,YACA,eAGiBrgE,QAAQ,SAAU9G,GACnCG,OAAOC,eAAeb,EAASS,EAAM,CACnCM,IAAK,WACH,MAAM,IAAIkJ,MAAM,yBAA2BxJ,EAAO,uIAEpD8e,cAAc,O;;;;;GCpGlB,IAAIzD,EAAY,EAAQ,EAAR,CAAgB,eAO5B+rD,EAAUjnE,OAAOY,OAAO,MAoG5B,SAASsmE,EAAoBrnE,GAC3B,OAAO,WACL,OASJ,SAAqBsnE,GACnB,IAAIhiB,EAAS8hB,EAAQE,GAErB,QAAe9/D,IAAX89C,EACF,OAAOA,EAIT,OAAQgiB,GACN,IAAK,OACHhiB,EAAS,EAAQ,KACjB,MACF,IAAK,MACHA,EAAS,EAAQ,KACjB,MACF,IAAK,OACHA,EAAS,EAAQ,KACjB,MACF,IAAK,aACHA,EAAS,EAAQ,KAKrB,OAAQ8hB,EAAQE,GAAchiB,EAjCrBiiB,CAAWvnE,IAtFtBT,EAAUC,EAAOD,QAAU8b,EAAUQ,SAwDrC,SAAqBtS,GACnB,IAAIoW,EAAO,GAGX,GAAIpW,EACF,IAAK,IAAIvC,KAAQuC,EACF,SAATvC,IACF2Y,EAAK3Y,GAAQuC,EAAQvC,IAK3B,IAAIwgE,EAAcjoE,EAAQ4nE,WAAWxnD,GACjC8nD,EAAQloE,EAAQynE,KAAKrnD,GAEzB,OAAO,SAAqByM,EAAK0G,EAAKnuB,GACpC8iE,EAAMr7C,EAAK0G,EAAK,SAAU/uB,GACxB,GAAIA,EAAK,OAAOY,EAAKZ,GACrByjE,EAAYp7C,EAAK0G,EAAKnuB,OAzE1B,0DAOFxE,OAAOC,eAAeb,EAAS,OAAQ,CACrCuf,cAAc,EACdze,YAAY,EACZC,IAAK+mE,EAAmB,UAQ1BlnE,OAAOC,eAAeb,EAAS,MAAO,CACpCuf,cAAc,EACdze,YAAY,EACZC,IAAK+mE,EAAmB,SAQ1BlnE,OAAOC,eAAeb,EAAS,OAAQ,CACrCuf,cAAc,EACdze,YAAY,EACZC,IAAK+mE,EAAmB,UAQ1BlnE,OAAOC,eAAeb,EAAS,aAAc,CAC3Cuf,cAAc,EACdze,YAAY,EACZC,IAAK+mE,EAAmB,iB;;;;;GCpE1B7nE,EAAOD,QA0CP,SAA2Bkd,GACzB,IAAIirD,GAAY,EACZC,EAtCN,SAA+BlrD,GAC7B,IAAImrD,EACAD,EAAe,GAEflrD,EAASorD,WACXF,EAAe,SACNlrD,EAASkB,UAClBiqD,EAAWnrD,EAASqrD,8BAElBH,EAAelrD,EAASmB,iBAG1BgqD,EAAWnrD,EAASa,cAGtB,GAAIsqD,EAAU,CACZD,GAAgBC,EAEhB,IAAIG,EAAatrD,EAASe,gBAC1B,GAAkB,MAAduqD,EAAoB,CACtBJ,GAAgB,IAAMI,EAEtB,IAAIC,EAAevrD,EAASiB,kBACxBsqD,IACFL,GAAgB,IAAMK,IAK5B,OAAOL,GAAgB,iBASJM,CAAqBxrD,GACpCyrD,EAAezrD,EAASoB,kBACxBsqD,EAAgB1rD,EAAS0rD,gBACzBC,IAAiB3rD,EAAS4rD,cAAgBF,GAC1C5qD,EAAO,GAEX,GAAI6qD,EAAc,CAChB,IAAIE,EAAa7rD,EAAS0B,gBACtBxL,GAoCF41D,EApCgC9rD,EAoCjB8rD,UACFnhE,aAAemhE,EAASnhE,YAAYpH,MAAS,KAnCxDkoE,GACEv1D,GAA+C,IAAnCu1D,EAAahgE,QAAQyK,KACnC4K,GAAQ5K,EAAW,KAGrB4K,GAAQ2qD,EAEJI,GAAcJ,EAAajvB,YAAY,IAAMqvB,KAAgBJ,EAAa3kE,OAAS+kE,EAAW/kE,OAAS,IACzGga,GAAQ,QAAU+qD,EAAa,MAGjC/qD,GAAQ5K,EAAW,KAAO21D,GAAc,oBAEjCH,EACT5qD,GAAQ,QAAU2qD,GAAgB,eACzBA,EACT3qD,GAAQ2qD,GAERR,GAAY,EACZnqD,GAAQoqD,GAcZ,IACMY,EAZAb,IACFnqD,GAAQ,KAAOoqD,EAAe,KAGhC,OAAOpqD,I;;;;;GC/ET/d,EAAOD,QAMP,SAA6B4hC,EAASh4B,GACpC,OAAOg4B,EAAQE,UAAUl4B,GAAM5F,S;;;;;;GCNjC,IAAIogC,EAAQ,EAAQ,IAChBniB,EAAc,EAAQ,IACtB0W,EAAc,EAAQ,IACtBmB,EAAQ,EAAQ,EAAR,CAAiB,oBACzBmvC,EAAO,EAAQ,IACf18C,EAAS,EAAQ,IAMrBtsB,EAAOD,QAwBP,SAAegK,GACb,IAAIoW,EAAOpW,GAAW,GAElB6B,EAA8B,iBAAfuU,EAAKvU,MACpBu4B,EAAMxhB,MAAMxC,EAAKvU,OAAS,SAC1BuU,EAAKvU,MACLquB,GAA2B,IAAjB9Z,EAAK8Z,QACfgvC,EAAU9oD,EAAK8oD,QACfz4B,GAAyB,IAAhBrwB,EAAKqwB,OACd7mC,EAAOwW,EAAKxW,MAAQ,mBACpBqwB,EAAS7Z,EAAK6Z,SAAU,EAE5B,IAAe,IAAXA,GAAsC,mBAAXA,EAC7B,MAAM,IAAI32B,UAAU,kCAItB,IAAI6lE,EAA8B,mBAATv/D,EA+J3B,SAAsBA,GACpB,OAAO,SAAoBijB,GACzB,OAAOpC,QAAQ8B,EAAOM,EAAKjjB,KAhKzBw/D,CAAYx/D,GACZA,EAEJ,SAASgZ,EAAOH,GACd,GAAoB,IAAhBA,EAAKze,OAGP,MAAO,GAGT,GAAIysC,EAAQ,CACV,IAAI9U,GAgGU3gB,EAhGQyH,EAiGnB4mD,EAAkBj6D,KAAK4L,GAAK,IA/F/B,GAAc,MAAV2gB,GAA2B,MAAVA,EAEnB,MADA7B,EAAM,oBAuEd,SAAkC9e,EAAK46B,GACrC,IAAI/uC,EAAQmU,EAAIrS,QAAQitC,GACpB0zB,EAAUtuD,EAAIwF,UAAU,EAAG3Z,GAAS,IAExC,IACkD,MAAhDkqC,KAAKnuB,MAAM0mD,GAA2C,IAAIC,YAAY,oBACtE,MAAOv3D,GACP,OAAOw3D,EAAyBx3D,EAAG,CACjCvB,QAASuB,EAAEvB,QAAQkP,QAAQ,IAAKi2B,GAChCntC,MAAOuJ,EAAEvJ,SA/EDghE,CAAwBhnD,EAAMkZ,GA4F5C,IAAoB3gB,EAxFhB,IAEE,OADA8e,EAAM,cACCiX,KAAKnuB,MAAMH,EAAMymD,GACxB,MAAOl3D,GACP,MAAMw3D,EAAyBx3D,EAAG,CAChCvB,QAASuB,EAAEvB,QACXhI,MAAOuJ,EAAEvJ,SAKf,OAAO,SAAqBokB,EAAK0G,EAAKnuB,GACpC,GAAIynB,EAAImN,MAGN,OAFAF,EAAM,4BACN10B,IAOF,GAHAynB,EAAIpK,KAAOoK,EAAIpK,MAAQ,IAGlB8J,EAAOa,QAAQP,GAGlB,OAFAiN,EAAM,wBACN10B,IAOF,GAHA00B,EAAM,kBAAmBjN,EAAIC,QAAQ,kBAGhCq8C,EAAYt8C,GAGf,OAFAiN,EAAM,qBACN10B,IAKF,IAAI+e,EA8DR,SAAqB0I,GACnB,IACE,OAAQ5K,EAAYW,MAAMiK,GAAKxI,WAAWF,SAAW,IAAIne,cACzD,MAAOgM,GACP,QAlEc03D,CAAW78C,IAAQ,QACjC,GAA6B,SAAzB1I,EAAQzb,OAAO,EAAG,GAMpB,OALAoxB,EAAM,wBACN10B,EAAKuzB,EAAY,IAAK,wBAA0BxU,EAAQqW,cAAgB,IAAK,CAC3ErW,QAASA,EACTva,KAAM,yBAMVq/D,EAAKp8C,EAAK0G,EAAKnuB,EAAMwd,EAAOkX,EAAO,CACjCz2B,SAAU8gB,EACV+V,QAASA,EACTruB,MAAOA,EACPouB,OAAQA,MAnGd,IAAIovC,EAAoB,0BAkKxB,SAASG,EAA0BhhE,EAAO1C,GAGxC,IAFA,IAAIL,EAAO7E,OAAO+oE,oBAAoBnhE,GAE7BtI,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,IAAIuB,EAAMgE,EAAKvF,GACH,UAARuB,GAA2B,YAARA,UACd+G,EAAM/G,GAQjB,OAHA+G,EAAMC,MAAQ3C,EAAI2C,MAAMkX,QAAQnX,EAAMiI,QAAS3K,EAAI2K,SACnDjI,EAAMiI,QAAU3K,EAAI2K,QAEbjI,I,klDCvNT,IACE,IAAIrG,EAAO,EAAQ,GACnB,GAA6B,mBAAlBA,EAAK2P,SAAyB,KAAM,GAC/C7R,EAAOD,QAAUmC,EAAK2P,SACtB,MAAOE,GACP/R,EAAOD,QAAU,EAAQ,O,cCLE,mBAAlBY,OAAOY,OAEhBvB,EAAOD,QAAU,SAAkB4pE,EAAMC,GACvCD,EAAKl5D,OAASm5D,EACdD,EAAK9nE,UAAYlB,OAAOY,OAAOqoE,EAAU/nE,UAAW,CAClD+F,YAAa,CACX1G,MAAOyoE,EACP9oE,YAAY,EACZya,UAAU,EACVgE,cAAc,MAMpBtf,EAAOD,QAAU,SAAkB4pE,EAAMC,GACvCD,EAAKl5D,OAASm5D,EACd,IAAIC,EAAW,aACfA,EAAShoE,UAAY+nE,EAAU/nE,UAC/B8nE,EAAK9nE,UAAY,IAAIgoE,EACrBF,EAAK9nE,UAAU+F,YAAc+hE,I,gBCiIjC,SAASG,IACP,IAAI/oE,EACJ,IACEA,EAAIhB,EAAQgqE,QAAQlwC,MACpB,MAAM9nB,IAOR,OAJKhR,GAAwB,oBAAZkH,SAA2B,QAASA,UACnDlH,EAAIkH,QAAQwU,IAAIutD,OAGXjpE,GA1JThB,EAAUC,EAAOD,QAAU,EAAQ,KAC3B2J,IA8GR,WAGE,MAAO,iBAAoB4X,SACtBA,QAAQ5X,KACRugE,SAASpoE,UAAUmH,MAAM5I,KAAKkhB,QAAQ5X,IAAK4X,QAASja,YAlH3DtH,EAAQyrC,WAqER,SAAoBrsB,GAClB,IAAIssB,EAAY/mC,KAAK+mC,UASrB,GAPAtsB,EAAK,IAAMssB,EAAY,KAAO,IAC1B/mC,KAAKsW,WACJywB,EAAY,MAAQ,KACrBtsB,EAAK,IACJssB,EAAY,MAAQ,KACrB,IAAM1rC,EAAQqsC,SAAS1nC,KAAKwmC,OAE3BO,EAAW,OAEhB,IAAInrC,EAAI,UAAYoE,KAAKgnC,MACzBvsB,EAAK7V,OAAO,EAAG,EAAGhJ,EAAG,kBAKrB,IAAIsG,EAAQ,EACRsjE,EAAQ,EACZ/qD,EAAK,GAAGO,QAAQ,cAAe,SAAS0N,GAClC,OAASA,IACbxmB,IACI,OAASwmB,IAGX88C,EAAQtjE,MAIZuY,EAAK7V,OAAO4gE,EAAO,EAAG5pE,IAlGxBP,EAAQksC,KA2HR,SAAcD,GACZ,IACM,MAAQA,EACVjsC,EAAQgqE,QAAQI,WAAW,SAE3BpqE,EAAQgqE,QAAQlwC,MAAQmS,EAE1B,MAAMj6B,MAjIVhS,EAAQ+pE,KAAOA,EACf/pE,EAAQ0rC,UA2BR,WAIE,GAAsB,oBAAX2+B,QAA0BA,OAAOniE,SAAmC,aAAxBmiE,OAAOniE,QAAQ0B,KACpE,OAAO,EAKT,MAA4B,oBAAb0gE,UAA4BA,SAASC,iBAAmBD,SAASC,gBAAgBC,OAASF,SAASC,gBAAgBC,MAAMC,kBAEnH,oBAAXJ,QAA0BA,OAAO9oD,UAAY8oD,OAAO9oD,QAAQmpD,SAAYL,OAAO9oD,QAAQopD,WAAaN,OAAO9oD,QAAQqpD,QAGrG,oBAAdC,WAA6BA,UAAUC,WAAaD,UAAUC,UAAU9kE,cAAcqnB,MAAM,mBAAqBvC,SAASshB,OAAO2+B,GAAI,KAAO,IAE9H,oBAAdF,WAA6BA,UAAUC,WAAaD,UAAUC,UAAU9kE,cAAcqnB,MAAM,uBA3CxGrtB,EAAQgqE,QAAU,oBAAsBgB,aACtB,IAAsBA,OAAOhB,QAC3BgB,OAAOhB,QAAQ12D,MAsKnC,WACE,IACE,OAAO+2D,OAAOY,aACd,MAAOj5D,KAxKSk5D,GAMpBlrE,EAAQ4rC,OAAS,CACf,gBACA,cACA,YACA,aACA,aACA,WAmCF5rC,EAAQwrC,WAAWpgC,EAAI,SAASw7D,GAC9B,IACE,OAAO71B,KAAKlS,UAAU+nC,GACtB,MAAOpiE,GACP,MAAO,+BAAiCA,EAAIiM,UAqGhDzQ,EAAQgsC,OAAO+9B,M,cCnKf,IAAI9nE,EAAI,IACJ3B,EAAQ,GAAJ2B,EACJ0hD,EAAQ,GAAJrjD,EACJE,EAAQ,GAAJmjD,EACJwnB,EAAQ,OAAJ3qE,EAuIR,SAAS4qE,EAAO9rC,EAAI39B,EAAGlB,GACrB,KAAI6+B,EAAK39B,GAGT,OAAI29B,EAAS,IAAJ39B,EACA0J,KAAKC,MAAMg0B,EAAK39B,GAAK,IAAMlB,EAE7B4K,KAAKsoB,KAAK2L,EAAK39B,GAAK,IAAMlB,EAAO,IA9H1CR,EAAOD,QAAU,SAASgL,EAAKhB,GAC7BA,EAAUA,GAAW,GACrB,IAyGes1B,EAzGX11B,SAAcoB,EAClB,GAAa,WAATpB,GAAqBoB,EAAIhH,OAAS,EACpC,OAkBJ,SAAegX,GAEb,IADAA,EAAMG,OAAOH,IACLhX,OAAS,IACf,OAEF,IAAIqpB,EAAQ,wHAAwHje,KAClI4L,GAEF,IAAKqS,EACH,OAEF,IAAI1rB,EAAI8hB,WAAW4J,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMrnB,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOrE,EAAIwpE,EACb,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOxpE,EAAInB,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOmB,EAAIgiD,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOhiD,EAAIrB,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOqB,EAAIM,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAON,EACT,QACE,QAnEKihB,CAAM5X,GACR,GAAa,WAATpB,IAAoC,IAAf+B,MAAMX,GACpC,OAAOhB,EAAQqhE,KAsGVD,EADQ9rC,EArGiBt0B,EAsGdxK,EAAG,QACnB4qE,EAAO9rC,EAAIqkB,EAAG,SACdynB,EAAO9rC,EAAIh/B,EAAG,WACd8qE,EAAO9rC,EAAIr9B,EAAG,WACdq9B,EAAK,MA7BT,SAAkBA,GAChB,GAAIA,GAAM9+B,EACR,OAAO6K,KAAKigE,MAAMhsC,EAAK9+B,GAAK,IAE9B,GAAI8+B,GAAMqkB,EACR,OAAOt4C,KAAKigE,MAAMhsC,EAAKqkB,GAAK,IAE9B,GAAIrkB,GAAMh/B,EACR,OAAO+K,KAAKigE,MAAMhsC,EAAKh/B,GAAK,IAE9B,GAAIg/B,GAAMr9B,EACR,OAAOoJ,KAAKigE,MAAMhsC,EAAKr9B,GAAK,IAE9B,OAAOq9B,EAAK,KA1F2BisC,CAASvgE,GAEhD,MAAM,IAAIf,MACR,wDACE8mC,KAAKlS,UAAU7zB,M,gBC9BrB,IAAIwgE,EAAM,EAAQ,KACdrpE,EAAO,EAAQ,IAQnBnC,EAAUC,EAAOD,QAAU,EAAQ,KAC3B8rC,KA4NR,SAAehS,GACbA,EAAM2xC,YAAc,GAGpB,IADA,IAAIhmE,EAAO7E,OAAO6E,KAAKzF,EAAQyrE,aACtBvrE,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAC/B45B,EAAM2xC,YAAYhmE,EAAKvF,IAAMF,EAAQyrE,YAAYhmE,EAAKvF,KAhO1DF,EAAQ2J,IAgHR,WACE,OAAOowB,EAAOjc,MAAM3b,EAAKgE,OAAO8C,MAAM9G,EAAMmF,WAAa,OAhH3DtH,EAAQyrC,WA2FR,SAAoBrsB,GAClB,IAAI3e,EAAOkE,KAAKsW,UAGhB,GAFgBtW,KAAK+mC,UAEN,CACb,IAAInrC,EAAIoE,KAAKgnC,MACT+/B,EAAS,QAAenrE,EAAI,MAAQE,EAAO,QAE/C2e,EAAK,GAAKssD,EAAStsD,EAAK,GAAG3P,MAAM,MAAMvE,KAAK,KAAOwgE,GACnDtsD,EAAK/V,KAAK,MAAa9I,EAAI,KAAOP,EAAQqsC,SAAS1nC,KAAKwmC,MAAQ,aAEhE/rB,EAAK,IAAK,IAAItJ,MAAOgJ,cACjB,IAAMre,EAAO,IAAM2e,EAAK,IAtGhCpf,EAAQksC,KAyHR,SAAcD,GACR,MAAQA,SAGH/jC,QAAQwU,IAAIutD,MAEnB/hE,QAAQwU,IAAIutD,MAAQh+B,GA9HxBjsC,EAAQ+pE,KAAOA,EACf/pE,EAAQ0rC,UAuDR,WACE,MAAO,WAAY1rC,EAAQyrE,YACvBhhD,QAAQzqB,EAAQyrE,YAAY7/B,QAC5B4/B,EAAIG,OAAOC,IApDjB5rE,EAAQ4rC,OAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAQjC5rC,EAAQyrE,YAAc7qE,OAAO6E,KAAKyC,QAAQwU,KAAKgiC,OAAO,SAAUj9C,GAC9D,MAAO,WAAW21B,KAAK31B,KACtBqf,OAAO,SAAUhb,EAAKrE,GAEvB,IAAIgG,EAAOhG,EACR+e,UAAU,GACVxa,cACA2Z,QAAQ,YAAa,SAAUksD,EAAG9lE,GAAK,OAAOA,EAAEy0B,gBAG/CxvB,EAAM9C,QAAQwU,IAAIjb,GAOtB,OAN0CuJ,IAAtC,2BAA2BosB,KAAKpsB,KAC3B,6BAA6BosB,KAAKpsB,KAC1B,SAARA,EAAsB,KACpB6O,OAAO7O,IAElBlF,EAAI2B,GAAQuD,EACLlF,GACN,IASH,IAAI8lE,EAAK9gD,SAAS5iB,QAAQwU,IAAIovD,SAAU,KAAO,EAE3C,IAAMF,GAAM,IAAMA,GACpBzpE,EAAK2Z,UAAU,aAAc,0KAA7B3Z,GAGF,IAAI43B,EAAS,IAAM6xC,EAAK1jE,QAAQ6jE,OACnB,IAAMH,EAAK1jE,QAAQwV,OAmGhC,SAAoCkuD,GAClC,IAAI7xC,EAKJ,OAJe7xB,QAAQ0c,QAAQ,YAIdonD,gBAAgBJ,IAC/B,IAAK,OACH7xC,EAAS,IAAIyxC,EAAIS,YAAYL,IACtBM,MAAQ,MAIXnyC,EAAOoyC,SAAWpyC,EAAOoyC,QAAQC,OACnCryC,EAAOoyC,QAAQC,QAEjB,MAEF,IAAK,OACH,IAAI/sC,EAAK,EAAQ,KACjBtF,EAAS,IAAIsF,EAAGgtC,gBAAgBT,EAAI,CAAEU,WAAW,KAC1CJ,MAAQ,KACf,MAEF,IAAK,OACL,IAAK,MACH,IAAI1nB,EAAM,EAAQ,KAClBzqB,EAAS,IAAIyqB,EAAIqC,OAAO,CACtB+kB,GAAIA,EACJxvC,UAAU,EACV7gB,UAAU,KAOL6gB,UAAW,EAClBrC,EAAOkvC,KAAO,KACdlvC,EAAOmyC,MAAQ,OAIXnyC,EAAOoyC,SAAWpyC,EAAOoyC,QAAQC,OACnCryC,EAAOoyC,QAAQC,QAEjB,MAEF,QAEE,MAAM,IAAIniE,MAAM,2CAQpB,OAJA8vB,EAAO6xC,GAAKA,EAEZ7xC,EAAOwyC,UAAW,EAEXxyC,EA5JIyyC,CAA0BZ,GAuFvC,SAAS7B,IACP,OAAO7hE,QAAQwU,IAAIutD,MAxErBjqE,EAAQwrC,WAAW7qC,EAAI,SAASimE,GAE9B,OADAjiE,KAAK8mE,YAAY7/B,OAASjnC,KAAK+mC,UACxBvpC,EAAKoB,QAAQqjE,EAAGjiE,KAAK8mE,aACzBh8D,MAAM,MAAMvF,IAAI,SAAS8Q,GACxB,OAAOA,EAAIrL,SACVzE,KAAK,MAOZlL,EAAQwrC,WAAWihC,EAAI,SAAS7F,GAE9B,OADAjiE,KAAK8mE,YAAY7/B,OAASjnC,KAAK+mC,UACxBvpC,EAAKoB,QAAQqjE,EAAGjiE,KAAK8mE,cAqJ9BzrE,EAAQgsC,OAAO+9B,M,cCvPf9pE,EAAOD,QAAUkC,QAAQ,Q;;;;;;GCczB,IAAIkiC,EAAQ,EAAQ,IAChBzL,EAAc,EAAQ,IACtBgB,EAAQ,EAAQ,IAChBsU,EAAS,EAAQ,IAOrBhuC,EAAOD,QA0CP,SAAqB+5B,EAAQ/vB,EAAShF,GACpC,IAAI8B,EAAO9B,EACPob,EAAOpW,GAAW,IAEN,IAAZA,GAAuC,iBAAZA,IAE7BoW,EAAO,CACL/c,SAAU2G,IAIS,mBAAZA,IACTlD,EAAOkD,EACPoW,EAAO,IAIT,QAAanY,IAATnB,GAAsC,mBAATA,EAC/B,MAAM,IAAIxD,UAAU,wCAItB,IAAKwD,IAAS4lE,OAAOroE,QACnB,MAAM,IAAIf,UAAU,iCAItB,IAAID,GAA6B,IAAlB+c,EAAK/c,SAChB+c,EAAK/c,SACL,QAGAwI,EAAQu4B,EAAMxhB,MAAMxC,EAAKvU,OAGzB7H,EAAwB,MAAfoc,EAAKpc,QAAmB2H,MAAMyU,EAAKpc,QAE5C,KADA8mB,SAAS1K,EAAKpc,OAAQ,IAG1B,GAAI8C,EAEF,OAAO6lE,EAAW5yC,EAAQ12B,EAAUW,EAAQ6H,EAAO/E,GAGrD,OAAO,IAAIzC,QAAQ,SAAmBC,EAASC,GAC7CooE,EAAW5yC,EAAQ12B,EAAUW,EAAQ6H,EAAO,SAAiBrH,EAAKwC,GAChE,GAAIxC,EAAK,OAAOD,EAAOC,GACvBF,EAAQ0C,QAlFd,IAAI4lE,EAAgC,6BAmHpC,SAASD,EAAY5yC,EAAQ12B,EAAUW,EAAQ6H,EAAO7G,GACpD,IAAIk3B,GAAW,EACXl0B,GAAO,EAKX,GAAc,OAAV6D,GAA6B,OAAX7H,GAAmBA,EAAS6H,EAChD,OAAO/E,EAAK6xB,EAAY,IAAK,2BAA4B,CACvD5L,SAAU/oB,EACVA,OAAQA,EACR6H,MAAOA,EACPjC,KAAM,sBASV,IAAIijE,EAAQ9yC,EAAO+yC,eACnB,GAAI/yC,EAAOgzC,UAAaF,IAAUA,EAAMxpE,UAAYwpE,EAAMhgC,SAExD,OAAO/lC,EAAK6xB,EAAY,IAAK,oCAAqC,CAChE/uB,KAAM,yBAIV,IACIijC,EADAgQ,EAAW,EAGf,IACEhQ,EA3IJ,SAAqBxpC,GACnB,IAAKA,EAAU,OAAO,KAEtB,IACE,OAAOs2B,EAAMmT,WAAWzpC,GACxB,MAAO2O,GAEP,IAAK46D,EAA8Bx1C,KAAKplB,EAAEvB,SAAU,MAAMuB,EAG1D,MAAM2mB,EAAY,IAAK,iCAAkC,CACvDt1B,SAAUA,EACVuG,KAAM,0BA+HEkjC,CAAWzpC,GACrB,MAAOmB,GACP,OAAOsC,EAAKtC,GAGd,IAAIqM,EAASg8B,EACT,GACA,GAYJ,SAAS/lC,IAIP,IAHA,IAAIsY,EAAO,IAAI1b,MAAM4D,UAAUtD,QAGtB9D,EAAI,EAAGA,EAAIkf,EAAKpb,OAAQ9D,IAC/Bkf,EAAKlf,GAAKoH,UAAUpH,GAYtB,SAAS8sE,IACPC,IAEI7tD,EAAK,IA7Ff,SAAe2a,GAEbkU,EAAOlU,GAGqB,mBAAjBA,EAAOmzC,OAChBnzC,EAAOmzC,QAyFHC,CAAKpzC,GAGP/0B,EAASiE,MAAM,KAAMmW,GAhBvB8c,GAAW,EAEPl0B,EACFE,QAAQC,SAAS6kE,GAEjBA,IAeJ,SAASI,IACHlxC,GAEJp1B,EAAK6xB,EAAY,IAAK,kBAAmB,CACvCtpB,KAAM,eACN0d,SAAU/oB,EACVA,OAAQA,EACR64C,SAAUA,EACVjzC,KAAM,qBAIV,SAASyjE,EAAQC,GACXpxC,IAEJ2gB,GAAYywB,EAAMtpE,OAEJ,OAAV6H,GAAkBgxC,EAAWhxC,EAC/B/E,EAAK6xB,EAAY,IAAK,2BAA4B,CAChD9sB,MAAOA,EACPgxC,SAAUA,EACVjzC,KAAM,sBAECijC,EACTh8B,GAAUg8B,EAAQ/uB,MAAMwvD,GAExBz8D,EAAOxH,KAAKikE,IAIhB,SAASC,EAAO/oE,GACd,IAAI03B,EAAJ,CACA,GAAI13B,EAAK,OAAOsC,EAAKtC,GAErB,GAAe,OAAXR,GAAmB64C,IAAa74C,EAClC8C,EAAK6xB,EAAY,IAAK,4CAA6C,CACjE5L,SAAU/oB,EACVA,OAAQA,EACR64C,SAAUA,EACVjzC,KAAM,+BAMR9C,EAAK,KAHQ+lC,EACTh8B,GAAUg8B,EAAQvP,OAAS,IAC3B76B,OAAOwe,OAAOpQ,KAKtB,SAASo8D,IACPp8D,EAAS,KAETkpB,EAAO2B,eAAe,UAAW0xC,GACjCrzC,EAAO2B,eAAe,OAAQ2xC,GAC9BtzC,EAAO2B,eAAe,MAAO6xC,GAC7BxzC,EAAO2B,eAAe,QAAS6xC,GAC/BxzC,EAAO2B,eAAe,QAASuxC,GA9FjClzC,EAAO6B,GAAG,UAAWwxC,GACrBrzC,EAAO6B,GAAG,QAASqxC,GACnBlzC,EAAO6B,GAAG,OAAQyxC,GAClBtzC,EAAO6B,GAAG,MAAO2xC,GACjBxzC,EAAO6B,GAAG,QAAS2xC,GAGnBvlE,GAAO,I,6BC/LT,SAASwlE,EAAkBxnD,EAAShc,GAChCrF,KAAKqhB,QAAUA,EACfrhB,KAAK+oC,QAAS,EAoBlB,SAAS+/B,EAAgB5gC,EAAS7iC,GAC9BrF,KAAKkoC,QAAUA,EACfloC,KAAK+oE,MAAO,EACZ/oE,KAAKqF,QAAUA,GAAW,GA1B9BhK,EAAQ2tC,WAAa6/B,EAMrBA,EAAkB1rE,UAAUgc,MAAQ,SAAS9C,GAMzC,OALIrW,KAAK+oC,SACL1yB,EAVM,SAUUA,EAChBrW,KAAK+oC,QAAS,GAGX/oC,KAAKqhB,QAAQlI,MAAM9C,IAG9BwyD,EAAkB1rE,UAAUw7B,IAAM,WAC9B,OAAO34B,KAAKqhB,QAAQsX,OAMxBt9B,EAAQ6tC,SAAW4/B,EAOnBA,EAAgB3rE,UAAUgc,MAAQ,SAAS9W,GACvC,IAAIusB,EAAM5uB,KAAKkoC,QAAQ/uB,MAAM9W,GAC7B,OAAIrC,KAAK+oE,OAASn6C,EACPA,GAlCD,WAoCNA,EAAI,KACJA,EAAMA,EAAIlsB,MAAM,GACqB,mBAA1B1C,KAAKqF,QAAQ4jC,UACpBjpC,KAAKqF,QAAQ4jC,YAGrBjpC,KAAK+oE,MAAO,EACLn6C,IAGXk6C,EAAgB3rE,UAAUw7B,IAAM,WAC5B,OAAO34B,KAAKkoC,QAAQvP,Q,6BCjCxB,IAZA,IAAIl9B,EAAU,CACV,EAAQ,KACR,EAAQ,KACR,EAAQ,KACR,EAAQ,KACR,EAAQ,KACR,EAAQ,KACR,EAAQ,KACR,EAAQ,MAIHF,EAAI,EAAGA,EAAIE,EAAQ4D,OAAQ9D,IAAK,CACjCD,EAASG,EAAQF,GACrB,IAAK,IAAI6sC,KAAO9sC,EACRW,OAAOkB,UAAUC,eAAe1B,KAAKJ,EAAQ8sC,KAC7C/sC,EAAQ+sC,GAAO9sC,EAAO8sC,M,6BCnBlC,IAAItqC,EAAS,EAAQ,IAAgBA,OAuBrC,SAASkrE,EAActgC,EAAc1T,GACjCh1B,KAAKooC,IAAMM,EAAaG,aACxB7oC,KAAK8oC,SAAWJ,EAAaI,SAEZ,WAAb9oC,KAAKooC,IACLpoC,KAAKqhB,QAAU4nD,EACG,UAAbjpE,KAAKooC,MACVpoC,KAAKooC,IAAM,OACXpoC,KAAKqhB,QAAU6nD,EAGuC,OAAlDprE,EAAOU,KAAK,eAAgB,OAAOyO,aACnCjN,KAAKkoC,QAAUihC,EACfnpE,KAAK6nC,mBAAqB7S,EAAM6S,qBAhC5CvsC,EAAOD,QAAU,CAEb+tE,KAAQ,CAAEnkE,KAAM,YAAa6jC,UAAU,GACvCugC,MAAQ,CAAEpkE,KAAM,YAAa6jC,UAAU,GACvCwgC,cAAe,OAEfC,KAAQ,CAAEtkE,KAAM,YAAa6jC,UAAU,GACvC0gC,QAAS,OAET54B,OAAQ,CAAE3rC,KAAM,aAChBwkE,OAAQ,CAAExkE,KAAM,aAChB6rC,IAAQ,CAAE7rC,KAAM,aAGhBykE,UAAWV,GAuBfA,EAAc7rE,UAAUkkB,QAAUsoD,EAClCX,EAAc7rE,UAAU+qC,QAAU0hC,EAKlC,IAAIC,EAAgB,EAAQ,KAAkBA,cAM9C,SAASD,EAAgBvkE,EAASsjC,GAC9BkhC,EAAcnuE,KAAKsE,KAAM2oC,EAAMP,KASnC,SAASuhC,EAAgBtkE,EAASsjC,GAC9B3oC,KAAKooC,IAAMO,EAAMP,IAcrB,SAAS6gC,EAAsB5jE,EAASsjC,GACpC3oC,KAAK8pE,QAAU,GAoBnB,SAASZ,EAAqB7jE,EAASsjC,IA8BvC,SAASwgC,EAAqB9jE,EAASsjC,GACnC3oC,KAAKoc,IAAM,EACXpc,KAAK+pE,UAAY,EACjB/pE,KAAKgqE,SAAW,EAChBhqE,KAAK6nC,mBAAqBc,EAAMd,mBApF/BgiC,EAAc1sE,UAAUw7B,MACzBkxC,EAAc1sE,UAAUw7B,IAAM,cAOlCixC,EAAgBzsE,UAAY0sE,EAAc1sE,UAU1CwsE,EAAgBxsE,UAAUgc,MAAQ,SAAS9C,GACvC,OAAOvY,EAAOU,KAAK6X,EAAKrW,KAAKooC,MAGjCuhC,EAAgBxsE,UAAUw7B,IAAM,aAWhCswC,EAAsB9rE,UAAUgc,MAAQ,SAAS9C,GAE7C,IAAI4zD,GADJ5zD,EAAMrW,KAAK8pE,QAAUzzD,GACGhX,OAAUgX,EAAIhX,OAAS,EAI/C,OAHAW,KAAK8pE,QAAUzzD,EAAI3T,MAAMunE,GACzB5zD,EAAMA,EAAI3T,MAAM,EAAGunE,GAEZnsE,EAAOU,KAAK6X,EAAK,WAG5B4yD,EAAsB9rE,UAAUw7B,IAAM,WAClC,OAAO76B,EAAOU,KAAKwB,KAAK8pE,QAAS,WAUrCZ,EAAqB/rE,UAAUgc,MAAQ,SAAS9C,GAE5C,IADA,IAAIhU,EAAMvE,EAAOC,MAAmB,EAAbsY,EAAIhX,QAAa6qE,EAAS,EACxC3uE,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,IAAK,CACjC,IAAI4uE,EAAW9zD,EAAI6S,WAAW3tB,GAG1B4uE,EAAW,IACX9nE,EAAI6nE,KAAYC,EACXA,EAAW,MAChB9nE,EAAI6nE,KAAY,KAAQC,IAAa,GACrC9nE,EAAI6nE,KAAY,KAAmB,GAAXC,KAGxB9nE,EAAI6nE,KAAY,KAAQC,IAAa,IACrC9nE,EAAI6nE,KAAY,KAASC,IAAa,EAAK,IAC3C9nE,EAAI6nE,KAAY,KAAmB,GAAXC,IAGhC,OAAO9nE,EAAIK,MAAM,EAAGwnE,IAGxBhB,EAAqB/rE,UAAUw7B,IAAM,aAarCwwC,EAAqBhsE,UAAUgc,MAAQ,SAAS9W,GAG5C,IAFA,IAAI+Z,EAAMpc,KAAKoc,IAAK2tD,EAAY/pE,KAAK+pE,UAAWC,EAAWhqE,KAAKgqE,SAC5Dp7C,EAAM,GACDrzB,EAAI,EAAGA,EAAI8G,EAAIhD,OAAQ9D,IAAK,CACjC,IAAI6uE,EAAU/nE,EAAI9G,GACO,MAAV,IAAV6uE,IACGL,EAAY,IACZn7C,GAAO5uB,KAAK6nC,mBACZkiC,EAAY,GAGZK,EAAU,IACVx7C,GAAOpY,OAAOu6B,aAAaq5B,GACpBA,EAAU,KACjBhuD,EAAgB,GAAVguD,EACNL,EAAY,EAAGC,EAAW,GACnBI,EAAU,KACjBhuD,EAAgB,GAAVguD,EACNL,EAAY,EAAGC,EAAW,GAE1Bp7C,GAAO5uB,KAAK6nC,oBAGZkiC,EAAY,GACZ3tD,EAAOA,GAAO,EAAgB,GAAVguD,EACPJ,IACK,MADlBD,IAIQn7C,GADa,IAAbo7C,GAAkB5tD,EAAM,KAAQA,EAAM,EAC/Bpc,KAAK6nC,mBACM,IAAbmiC,GAAkB5tD,EAAM,KACtBpc,KAAK6nC,mBAGLrxB,OAAOu6B,aAAa30B,KAGnCwS,GAAO5uB,KAAK6nC,mBAKxB,OADA7nC,KAAKoc,IAAMA,EAAKpc,KAAK+pE,UAAYA,EAAW/pE,KAAKgqE,SAAWA,EACrDp7C,GAGXu6C,EAAqBhsE,UAAUw7B,IAAM,WACjC,IAAI/J,EAAM,EAGV,OAFI5uB,KAAK+pE,UAAY,IACjBn7C,GAAO5uB,KAAK6nC,oBACTjZ,I,cC1LXtzB,EAAOD,QAAUkC,QAAQ,mB,6BCCzB,IAAIO,EAAS,EAAQ,IAAgBA,OAOrC,SAASusE,KAUT,SAASC,KAiBT,SAASC,IACLvqE,KAAKwqE,cAAgB,EAuCzB,SAASC,EAAW/hC,EAAc1T,GAC9Bh1B,KAAKg1B,MAAQA,EASjB,SAAS01C,EAAarlE,EAASsjC,QAEJrlC,KADvB+B,EAAUA,GAAW,IACT0jC,SACR1jC,EAAQ0jC,QAAS,GACrB/oC,KAAKqhB,QAAUsnB,EAAM3T,MAAM+S,WAAW,WAAY1iC,GActD,SAASslE,EAAatlE,EAASsjC,GAC3B3oC,KAAKkoC,QAAU,KACfloC,KAAK4qE,aAAe,GACpB5qE,KAAK6qE,gBAAkB,EAEvB7qE,KAAKqF,QAAUA,GAAW,GAC1BrF,KAAKg1B,MAAQ2T,EAAM3T,MAoCvB,SAAS81C,EAAezoE,EAAK0oE,GACzB,IAAI3iC,EAAM2iC,GAAmB,WAE7B,GAAI1oE,EAAIhD,QAAU,EAEd,GAAc,KAAVgD,EAAI,IAAwB,KAAVA,EAAI,GACtB+lC,EAAM,gBACL,GAAc,KAAV/lC,EAAI,IAAwB,KAAVA,EAAI,GAC3B+lC,EAAM,eACL,CAOD,IAHA,IAAI4iC,EAAe,EAAGC,EAAe,EACjCC,EAAOxkE,KAAKS,IAAI9E,EAAIhD,OAAUgD,EAAIhD,OAAS,EAAI,IAE1C9D,EAAI,EAAGA,EAAI2vE,EAAM3vE,GAAK,EACZ,IAAX8G,EAAI9G,IAAyB,IAAb8G,EAAI9G,EAAE,IAAU0vE,IACrB,IAAX5oE,EAAI9G,IAAyB,IAAb8G,EAAI9G,EAAE,IAAUyvE,IAGpCC,EAAeD,EACf5iC,EAAM,WACD6iC,EAAeD,IACpB5iC,EAAM,YAIlB,OAAOA,EAtKX/sC,EAAQ8vE,QAAUd,EAIlBA,EAAaltE,UAAUkkB,QAAUipD,EACjCD,EAAaltE,UAAU+qC,QAAUqiC,EACjCF,EAAaltE,UAAU2rC,UAAW,EAQlCwhC,EAAentE,UAAUgc,MAAQ,SAAS9C,GAEtC,IADA,IAAIhU,EAAMvE,EAAOU,KAAK6X,EAAK,QAClB9a,EAAI,EAAGA,EAAI8G,EAAIhD,OAAQ9D,GAAK,EAAG,CACpC,IAAI6vE,EAAM/oE,EAAI9G,GAAI8G,EAAI9G,GAAK8G,EAAI9G,EAAE,GAAI8G,EAAI9G,EAAE,GAAK6vE,EAEpD,OAAO/oE,GAGXioE,EAAentE,UAAUw7B,IAAM,aAU/B4xC,EAAeptE,UAAUgc,MAAQ,SAAS9W,GACtC,GAAkB,GAAdA,EAAIhD,OACJ,MAAO,GAEX,IAAIgsE,EAAOvtE,EAAOC,MAAMsE,EAAIhD,OAAS,GACjC9D,EAAI,EAAGkL,EAAI,EAQf,KAN2B,IAAvBzG,KAAKwqE,eACLa,EAAK,GAAKhpE,EAAI,GACdgpE,EAAK,GAAKrrE,KAAKwqE,aACfjvE,EAAI,EAAGkL,EAAI,GAGRlL,EAAI8G,EAAIhD,OAAO,EAAG9D,GAAK,EAAGkL,GAAI,EACjC4kE,EAAK5kE,GAAKpE,EAAI9G,EAAE,GAChB8vE,EAAK5kE,EAAE,GAAKpE,EAAI9G,GAKpB,OAFAyE,KAAKwqE,aAAgBjvE,GAAK8G,EAAIhD,OAAO,EAAKgD,EAAIA,EAAIhD,OAAO,IAAM,EAExDgsE,EAAK3oE,MAAM,EAAG+D,GAAGwG,SAAS,SAGrCs9D,EAAeptE,UAAUw7B,IAAM,aAY/Bt9B,EAAQiwE,MAAQb,EAKhBA,EAAWttE,UAAUkkB,QAAUqpD,EAC/BD,EAAWttE,UAAU+qC,QAAUyiC,EAY/BD,EAAavtE,UAAUgc,MAAQ,SAAS9C,GACpC,OAAOrW,KAAKqhB,QAAQlI,MAAM9C,IAG9Bq0D,EAAavtE,UAAUw7B,IAAM,WACzB,OAAO34B,KAAKqhB,QAAQsX,OAexBgyC,EAAaxtE,UAAUgc,MAAQ,SAAS9W,GACpC,IAAKrC,KAAKkoC,QAAS,CAKf,GAHAloC,KAAK4qE,aAAalmE,KAAKrC,GACvBrC,KAAK6qE,iBAAmBxoE,EAAIhD,OAExBW,KAAK6qE,gBAAkB,GACvB,MAAO,GAGX,IACInsE,EAAWosE,EADXzoE,EAAMvE,EAAOwe,OAAOtc,KAAK4qE,cACM5qE,KAAKqF,QAAQ0lE,iBAChD/qE,KAAKkoC,QAAUloC,KAAKg1B,MAAMmT,WAAWzpC,EAAUsB,KAAKqF,SACpDrF,KAAK4qE,aAAavrE,OAASW,KAAK6qE,gBAAkB,EAGtD,OAAO7qE,KAAKkoC,QAAQ/uB,MAAM9W,IAG9BsoE,EAAaxtE,UAAUw7B,IAAM,WACzB,IAAK34B,KAAKkoC,QAAS,CACf,IAAI7lC,EAAMvE,EAAOwe,OAAOtc,KAAK4qE,cACzBlsE,EAAWosE,EAAezoE,EAAKrC,KAAKqF,QAAQ0lE,iBAChD/qE,KAAKkoC,QAAUloC,KAAKg1B,MAAMmT,WAAWzpC,EAAUsB,KAAKqF,SAEpD,IAAIupB,EAAM5uB,KAAKkoC,QAAQ/uB,MAAM9W,GACzB2lC,EAAQhoC,KAAKkoC,QAAQvP,MAEzB,OAAOqP,EAASpZ,EAAMoZ,EAASpZ,EAEnC,OAAO5uB,KAAKkoC,QAAQvP,Q,6BC7IxB,IAAI76B,EAAS,EAAQ,IAAgBA,OAOrC,SAASytE,EAAU7iC,EAAc1T,GAC7Bh1B,KAAKg1B,MAAQA,EAHjB35B,EAAQmwE,KAAOD,EACflwE,EAAQowE,cAAgB,OAKxBF,EAAUpuE,UAAUkkB,QAAUqqD,EAC9BH,EAAUpuE,UAAU+qC,QAAUyjC,EAC9BJ,EAAUpuE,UAAU2rC,UAAW,EAK/B,IAAI8iC,EAAiB,sCAErB,SAASF,EAAYrmE,EAASsjC,GAC1B3oC,KAAKg1B,MAAQ2T,EAAM3T,MAmBvB,SAAS22C,EAAYtmE,EAASsjC,GAC1B3oC,KAAKg1B,MAAQ2T,EAAM3T,MACnBh1B,KAAK6rE,UAAW,EAChB7rE,KAAK8rE,YAAc,GAnBvBJ,EAAYvuE,UAAUgc,MAAQ,SAAS9C,GAGnC,OAAOvY,EAAOU,KAAK6X,EAAI2E,QAAQ4wD,EAAgB,SAASjD,GACpD,MAAO,KAAiB,MAAVA,EAAgB,GAC1B3oE,KAAKg1B,MAAM/R,OAAO0lD,EAAO,YAAY17D,SAAS,UAAU+N,QAAQ,MAAO,KACrE,KACRje,KAAKiD,SAGX0rE,EAAYvuE,UAAUw7B,IAAM,aAc5B,IAFA,IAAIozC,EAAc,iBACdC,EAAc,GACTzwE,EAAI,EAAGA,EAAI,IAAKA,IACrBywE,EAAYzwE,GAAKwwE,EAAYt5C,KAAKjc,OAAOu6B,aAAax1C,IAE1D,IAAI0wE,EAAW,IAAI/iD,WAAW,GAC1BgjD,EAAY,IAAIhjD,WAAW,GAC3BijD,EAAU,IAAIjjD,WAAW,GA8E7B,SAASkjD,EAAc1jC,EAAc1T,GACjCh1B,KAAKg1B,MAAQA,EAUjB,SAASq3C,EAAgBhnE,EAASsjC,GAC9B3oC,KAAKg1B,MAAQ2T,EAAM3T,MACnBh1B,KAAK6rE,UAAW,EAChB7rE,KAAK8rE,YAAchuE,EAAOC,MAAM,GAChCiC,KAAKssE,eAAiB,EAsE1B,SAASC,EAAgBlnE,EAASsjC,GAC9B3oC,KAAKg1B,MAAQ2T,EAAM3T,MACnBh1B,KAAK6rE,UAAW,EAChB7rE,KAAK8rE,YAAc,GApKvBH,EAAYxuE,UAAUgc,MAAQ,SAAS9W,GAOnC,IANA,IAAIusB,EAAM,GAAI49C,EAAQ,EAClBX,EAAW7rE,KAAK6rE,SAChBC,EAAc9rE,KAAK8rE,YAIdvwE,EAAI,EAAGA,EAAI8G,EAAIhD,OAAQ9D,IAC5B,GAAKswE,GAQD,IAAKG,EAAY3pE,EAAI9G,IAAK,CACtB,GAAIA,GAAKixE,GAASnqE,EAAI9G,IAAM2wE,EACxBt9C,GAAO,QACJ,CACH,IAAI69C,EAASX,EAAczpE,EAAIK,MAAM8pE,EAAOjxE,GAAG0R,WAC/C2hB,GAAO5uB,KAAKg1B,MAAMgB,OAAOl4B,EAAOU,KAAKiuE,EAAQ,UAAW,YAGxDpqE,EAAI9G,IAAM2wE,GACV3wE,IAEJixE,EAAQjxE,EAAE,EACVswE,GAAW,EACXC,EAAc,SAnBdzpE,EAAI9G,IAAM0wE,IACVr9C,GAAO5uB,KAAKg1B,MAAMgB,OAAO3zB,EAAIK,MAAM8pE,EAAOjxE,GAAI,SAC9CixE,EAAQjxE,EAAE,EACVswE,GAAW,GAqBvB,GAAKA,EAEE,CACH,IAEIa,GAFAD,EAASX,EAAczpE,EAAIK,MAAM8pE,GAAOv/D,YAElB5N,OAAUotE,EAAOptE,OAAS,EACpDysE,EAAcW,EAAO/pE,MAAMgqE,GAC3BD,EAASA,EAAO/pE,MAAM,EAAGgqE,GAEzB99C,GAAO5uB,KAAKg1B,MAAMgB,OAAOl4B,EAAOU,KAAKiuE,EAAQ,UAAW,iBARxD79C,GAAO5uB,KAAKg1B,MAAMgB,OAAO3zB,EAAIK,MAAM8pE,GAAQ,SAc/C,OAHAxsE,KAAK6rE,SAAWA,EAChB7rE,KAAK8rE,YAAcA,EAEZl9C,GAGX+8C,EAAYxuE,UAAUw7B,IAAM,WACxB,IAAI/J,EAAM,GAMV,OALI5uB,KAAK6rE,UAAY7rE,KAAK8rE,YAAYzsE,OAAS,IAC3CuvB,EAAM5uB,KAAKg1B,MAAMgB,OAAOl4B,EAAOU,KAAKwB,KAAK8rE,YAAa,UAAW,aAErE9rE,KAAK6rE,UAAW,EAChB7rE,KAAK8rE,YAAc,GACZl9C,GAgBXvzB,EAAQsxE,SAAWP,EAKnBA,EAAcjvE,UAAUkkB,QAAUgrD,EAClCD,EAAcjvE,UAAU+qC,QAAUqkC,EAClCH,EAAcjvE,UAAU2rC,UAAW,EAYnCujC,EAAgBlvE,UAAUgc,MAAQ,SAAS9C,GAMvC,IALA,IAAIw1D,EAAW7rE,KAAK6rE,SAChBC,EAAc9rE,KAAK8rE,YACnBQ,EAAiBtsE,KAAKssE,eACtBjqE,EAAMvE,EAAOC,MAAiB,EAAXsY,EAAIhX,OAAW,IAAK6qE,EAAS,EAE3C3uE,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,IAAK,CACjC,IAAIqxE,EAAQv2D,EAAI6S,WAAW3tB,GACvB,IAAQqxE,GAASA,GAAS,KACtBf,IACIS,EAAiB,IACjBpC,GAAU7nE,EAAI8W,MAAM2yD,EAAYppE,MAAM,EAAG4pE,GAAgBr/D,SAAS,UAAU+N,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAAKkvD,GACpHoC,EAAiB,GAGrBjqE,EAAI6nE,KAAYgC,EAChBL,GAAW,GAGVA,IACDxpE,EAAI6nE,KAAY0C,EAEZA,IAAUT,IACV9pE,EAAI6nE,KAAYgC,MAInBL,IACDxpE,EAAI6nE,KAAYiC,EAChBN,GAAW,GAEXA,IACAC,EAAYQ,KAAoBM,GAAS,EACzCd,EAAYQ,KAA4B,IAARM,EAE5BN,GAAkBR,EAAYzsE,SAC9B6qE,GAAU7nE,EAAI8W,MAAM2yD,EAAY7+D,SAAS,UAAU+N,QAAQ,MAAO,KAAMkvD,GACxEoC,EAAiB,KASjC,OAHAtsE,KAAK6rE,SAAWA,EAChB7rE,KAAKssE,eAAiBA,EAEfjqE,EAAIK,MAAM,EAAGwnE,IAGxBmC,EAAgBlvE,UAAUw7B,IAAM,WAC5B,IAAIt2B,EAAMvE,EAAOC,MAAM,IAAKmsE,EAAS,EAWrC,OAVIlqE,KAAK6rE,WACD7rE,KAAKssE,eAAiB,IACtBpC,GAAU7nE,EAAI8W,MAAMnZ,KAAK8rE,YAAYppE,MAAM,EAAG1C,KAAKssE,gBAAgBr/D,SAAS,UAAU+N,QAAQ,MAAO,KAAKA,QAAQ,MAAO,IAAKkvD,GAC9HlqE,KAAKssE,eAAiB,GAG1BjqE,EAAI6nE,KAAYgC,EAChBlsE,KAAK6rE,UAAW,GAGbxpE,EAAIK,MAAM,EAAGwnE,IAYxB,IAAI2C,EAAkBb,EAAYtpE,QAClCmqE,EAAgB,IAAI3jD,WAAW,KAAM,EAErCqjD,EAAgBpvE,UAAUgc,MAAQ,SAAS9W,GAQvC,IAPA,IAAIusB,EAAM,GAAI49C,EAAQ,EAClBX,EAAW7rE,KAAK6rE,SAChBC,EAAc9rE,KAAK8rE,YAKdvwE,EAAI,EAAGA,EAAI8G,EAAIhD,OAAQ9D,IAC5B,GAAKswE,GAQD,IAAKgB,EAAgBxqE,EAAI9G,IAAK,CAC1B,GAAIA,GAAKixE,GAASnqE,EAAI9G,IAAM2wE,EACxBt9C,GAAO,QACJ,CACH,IAAI69C,EAASX,EAAczpE,EAAIK,MAAM8pE,EAAOjxE,GAAG0R,WAAW+N,QAAQ,KAAM,KACxE4T,GAAO5uB,KAAKg1B,MAAMgB,OAAOl4B,EAAOU,KAAKiuE,EAAQ,UAAW,YAGxDpqE,EAAI9G,IAAM2wE,GACV3wE,IAEJixE,EAAQjxE,EAAE,EACVswE,GAAW,EACXC,EAAc,SAnBdzpE,EAAI9G,IAAM4wE,IACVv9C,GAAO5uB,KAAKg1B,MAAMgB,OAAO3zB,EAAIK,MAAM8pE,EAAOjxE,GAAI,SAC9CixE,EAAQjxE,EAAE,EACVswE,GAAW,GAqBvB,GAAKA,EAEE,CACH,IAEIa,GAFAD,EAASX,EAAczpE,EAAIK,MAAM8pE,GAAOv/D,WAAW+N,QAAQ,KAAM,MAE3C3b,OAAUotE,EAAOptE,OAAS,EACpDysE,EAAcW,EAAO/pE,MAAMgqE,GAC3BD,EAASA,EAAO/pE,MAAM,EAAGgqE,GAEzB99C,GAAO5uB,KAAKg1B,MAAMgB,OAAOl4B,EAAOU,KAAKiuE,EAAQ,UAAW,iBARxD79C,GAAO5uB,KAAKg1B,MAAMgB,OAAO3zB,EAAIK,MAAM8pE,GAAQ,SAc/C,OAHAxsE,KAAK6rE,SAAWA,EAChB7rE,KAAK8rE,YAAcA,EAEZl9C,GAGX29C,EAAgBpvE,UAAUw7B,IAAM,WAC5B,IAAI/J,EAAM,GAMV,OALI5uB,KAAK6rE,UAAY7rE,KAAK8rE,YAAYzsE,OAAS,IAC3CuvB,EAAM5uB,KAAKg1B,MAAMgB,OAAOl4B,EAAOU,KAAKwB,KAAK8rE,YAAa,UAAW,aAErE9rE,KAAK6rE,UAAW,EAChB7rE,KAAK8rE,YAAc,GACZl9C,I,6BC7RX,IAAI9wB,EAAS,EAAQ,IAAgBA,OAMrC,SAASgvE,EAAUpkC,EAAc1T,GAC7B,IAAK0T,EACD,MAAM,IAAIpjC,MAAM,0CAGpB,IAAKojC,EAAaqkC,OAAwC,MAA9BrkC,EAAaqkC,MAAM1tE,QAAgD,MAA9BqpC,EAAaqkC,MAAM1tE,OAChF,MAAM,IAAIiG,MAAM,aAAaojC,EAAazjC,KAAK,uDAEnD,GAAkC,MAA9ByjC,EAAaqkC,MAAM1tE,OAAgB,CAEnC,IADA,IAAI2tE,EAAc,GACTzxE,EAAI,EAAGA,EAAI,IAAKA,IACrByxE,GAAex2D,OAAOu6B,aAAax1C,GACvCmtC,EAAaqkC,MAAQC,EAActkC,EAAaqkC,MAGpD/sE,KAAKitE,UAAYnvE,EAAOU,KAAKkqC,EAAaqkC,MAAO,QAGjD,IAAIG,EAAYpvE,EAAOC,MAAM,MAAOi3B,EAAM8S,sBAAsB5e,WAAW,IAE3E,IAAS3tB,EAAI,EAAGA,EAAImtC,EAAaqkC,MAAM1tE,OAAQ9D,IAC3C2xE,EAAUxkC,EAAaqkC,MAAM7jD,WAAW3tB,IAAMA,EAElDyE,KAAKktE,UAAYA,EAOrB,SAASC,EAAY9nE,EAASsjC,GAC1B3oC,KAAKktE,UAAYvkC,EAAMukC,UAe3B,SAASE,EAAY/nE,EAASsjC,GAC1B3oC,KAAKitE,UAAYtkC,EAAMskC,UAhD3B5xE,EAAQgyE,MAAQP,EA2BhBA,EAAU3vE,UAAUkkB,QAAU8rD,EAC9BL,EAAU3vE,UAAU+qC,QAAUklC,EAO9BD,EAAYhwE,UAAUgc,MAAQ,SAAS9C,GAEnC,IADA,IAAIhU,EAAMvE,EAAOC,MAAMsY,EAAIhX,QAClB9D,EAAI,EAAGA,EAAI8a,EAAIhX,OAAQ9D,IAC5B8G,EAAI9G,GAAKyE,KAAKktE,UAAU72D,EAAI6S,WAAW3tB,IAE3C,OAAO8G,GAGX8qE,EAAYhwE,UAAUw7B,IAAM,aAQ5By0C,EAAYjwE,UAAUgc,MAAQ,SAAS9W,GAKnC,IAHA,IAAI4qE,EAAYjtE,KAAKitE,UACjBK,EAASxvE,EAAOC,MAAiB,EAAXsE,EAAIhD,QAC1BkuE,EAAO,EAAGC,EAAO,EACZjyE,EAAI,EAAGA,EAAI8G,EAAIhD,OAAQ9D,IAC5BgyE,EAAc,EAAPlrE,EAAI9G,GACX+xE,EADiBE,EAAS,EAAFjyE,GACT0xE,EAAUM,GACzBD,EAAOE,EAAK,GAAKP,EAAUM,EAAK,GAEpC,OAAOD,EAAOrgE,SAAS,SAG3BmgE,EAAYjwE,UAAUw7B,IAAM,c,6BClE5Br9B,EAAOD,QAAU,CAEb,MAAS,cACT,YAAe,CACX,KAAQ,QACR,MAAS,oIAGb,IAAO,QACP,OAAU,QACV,MAAS,CACL,KAAQ,QACR,MAAS,oIAGb,IAAO,CACH,KAAQ,QACR,MAAS,oIAIb,UAAa,QACb,QAAW,QACX,QAAW,QACX,YAAe,QACf,YAAe,QACf,QAAW,QACX,MAAS,QACT,OAAU,QACV,OAAU,QACV,SAAY,QACZ,UAAa,QACb,GAAM,QAEN,OAAU,WACV,OAAU,WACV,OAAU,WACV,OAAU,WACV,OAAU,WACV,OAAU,YACV,OAAU,YACV,OAAU,YACV,OAAU,YACV,QAAW,YAEX,YAAe,WACf,YAAe,WACf,YAAe,WACf,YAAe,WACf,mBAAsB,WACtB,iBAAoB,WACpB,gBAAoB,WACpB,iBAAoB,WACpB,YAAe,WACf,YAAe,YAEf,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,YACN,GAAM,YACN,GAAM,YACN,GAAM,YACN,IAAO,YAEP,QAAW,WACX,QAAW,WACX,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,WACZ,SAAY,YACZ,SAAY,SACZ,SAAY,YACZ,SAAY,YACZ,SAAY,YACZ,SAAY,YAEZ,MAAS,WACT,OAAU,WAEV,SAAY,WAEZ,OAAU,WACV,QAAW,WACX,QAAW,WACX,QAAW,WAEX,MAAU,WACV,OAAW,WACX,QAAY,WACZ,QAAY,WAEZ,OAAU,WACV,QAAW,WAEX,QAAW,WACX,SAAY,WAEZ,KAAQ,YACR,MAAS,YAET,OAAU,YACV,QAAW,YACX,UAAa,YAEb,QAAW,SACX,YAAe,SACf,YAAe,SAEf,IAAS,WACT,MAAS,WACT,MAAS,cACT,MAAS,aACT,MAAS,aAET,iBAAoB,QACpB,cAAiB,QACjB,oBAAuB,QACvB,SAAY,QACZ,mBAAsB,QACtB,KAAQ,QAER,KAAQ,SACR,OAAU,SACV,OAAU,SACV,QAAW,SACX,OAAU,SACV,OAAU,SACV,OAAU,SACV,WAAc,SAEd,QAAW,QACX,MAAS,QACT,OAAU,QACV,QAAW,QAEX,QAAW,QACX,MAAS,QACT,QAAW,QAEX,aAAgB,SAEhB,SAAY,OACZ,UAAa,OAEb,SAAY,WACZ,GAAM,WAEN,kBAAqB,WACrB,eAAkB,WAClB,GAAM,WAEN,WAAc,WACd,GAAM,WACN,OAAU,WACV,QAAW,WACX,QAAW,WAEX,IAAO,YACP,YAAe,c,6BCxKnBC,EAAOD,QAAU,CACf,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,QACP,IAAO,aACP,IAAO,QACP,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,KAAQ,SACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,KAAQ,cACR,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,WACT,MAAS,YACT,MAAS,YACT,MAAS,YACT,MAAS,YACT,MAAS,YACT,MAAS,YACT,WAAc,CACZ,KAAQ,QACR,MAAS,oIAEX,OAAU,aACV,MAAS,aACT,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,QAAW,cACX,OAAU,cACV,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,QAAW,WACX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,QAAW,YACX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,QAAW,YACX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,QAAW,YACX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,QAAW,YACX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,QAAW,YACX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,QAAW,YACX,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,6QAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,QACV,SAAY,QACZ,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,QAAW,SACX,UAAa,SACb,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,YAAe,CACb,KAAQ,QACR,MAAS,oIAEX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,WAAc,CACZ,KAAQ,QACR,MAAS,oIAEX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,WAAc,CACZ,KAAQ,QACR,MAAS,oIAEX,QAAW,CACT,KAAQ,QACR,MAAS,yIAEX,WAAc,CACZ,KAAQ,QACR,MAAS,oIAEX,WAAc,CACZ,KAAQ,QACR,MAAS,oIAEX,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,OAAU,CACR,KAAQ,QACR,MAAS,oIAEX,KAAQ,CACN,KAAQ,QACR,MAAS,6QAEX,gBAAmB,CACjB,KAAQ,QACR,MAAS,oIAEX,WAAc,CACZ,KAAQ,QACR,MAAS,oIAEX,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,CACR,KAAQ,QACR,MAAS,6QAEX,SAAY,CACV,KAAQ,QACR,MAAS,6QAEX,SAAY,CACV,KAAQ,QACR,MAAS,4QAEX,SAAY,CACV,KAAQ,QACR,MAAS,oIAEX,UAAa,CACX,KAAQ,QACR,MAAS,oIAEX,MAAS,CACP,KAAQ,QACR,MAAS,oIAEX,OAAU,CACR,KAAQ,QACR,MAAS,sI,6BC/bb,IAAIyC,EAAS,EAAQ,IAAgBA,OAMrCzC,EAAQoyE,MAAQC,EAShB,IAPA,IAAIC,GAAc,EACdC,GAAgB,EAEhBC,GAAc,IACdC,EAAkB,IAAI/uE,MAAM,KAGvBxD,EAAI,EAAGA,EAAI,IAAOA,IACvBuyE,EAAgBvyE,GAAKoyE,EAIzB,SAASD,EAAUhlC,EAAc1T,GAE7B,GADAh1B,KAAK6oC,aAAeH,EAAaG,cAC5BH,EACD,MAAM,IAAIpjC,MAAM,0CACpB,IAAKojC,EAAau9B,MACd,MAAM,IAAI3gE,MAAM,aAAetF,KAAK6oC,aAAe,kBAGvD,IAAIklC,EAAerlC,EAAau9B,QAYhCjmE,KAAKguE,aAAe,GACpBhuE,KAAKguE,aAAa,GAAKF,EAAgBprE,MAAM,GAG7C1C,KAAKiuE,eAAiB,GAGtB,IAAK,IAAI1yE,EAAI,EAAGA,EAAIwyE,EAAa1uE,OAAQ9D,IACrCyE,KAAKkuE,gBAAgBH,EAAaxyE,IAEtCyE,KAAK6nC,mBAAqB7S,EAAM6S,mBAUhC7nC,KAAKmuE,YAAc,GAMnBnuE,KAAKouE,eAAiB,GAGtB,IAAIC,EAAkB,GACtB,GAAI3lC,EAAa4lC,eACb,IAAS/yE,EAAI,EAAGA,EAAImtC,EAAa4lC,eAAejvE,OAAQ9D,IAAK,CACzD,IAAI8K,EAAMqiC,EAAa4lC,eAAe/yE,GACtC,GAAmB,iBAAR8K,EACPgoE,EAAgBhoE,IAAO,OAEvB,IAAK,IAAII,EAAIJ,EAAI7H,KAAMiI,GAAKJ,EAAIyjC,GAAIrjC,IAChC4nE,EAAgB5nE,IAAK,EAOrC,GAHAzG,KAAKuuE,iBAAiB,EAAG,EAAGF,GAGxB3lC,EAAa8lC,UACb,IAAK,IAAI5B,KAASlkC,EAAa8lC,UACvBvyE,OAAOkB,UAAUC,eAAe1B,KAAKgtC,EAAa8lC,UAAW5B,IAC7D5sE,KAAKyuE,eAAe7B,EAAM1jD,WAAW,GAAIwf,EAAa8lC,UAAU5B,IAS5E,GANA5sE,KAAK0uE,UAAa1uE,KAAKmuE,YAAY,GAAGn5C,EAAM8S,sBAAsB5e,WAAW,IACzElpB,KAAK0uE,YAAcf,IAAY3tE,KAAK0uE,UAAY1uE,KAAKmuE,YAAY,GAAG,MACpEnuE,KAAK0uE,YAAcf,IAAY3tE,KAAK0uE,UAAY,IAAIxlD,WAAW,IAI/B,mBAAzBwf,EAAaimC,QAAwB,CAC5C3uE,KAAK2uE,QAAUjmC,EAAaimC,UAG5B,IAAIC,EAAmB5uE,KAAKguE,aAAa3uE,OACrCwvE,EAAgB7uE,KAAKguE,aAAaY,GAAoBd,EAAgBprE,MAAM,GAE5EosE,EAAoB9uE,KAAKguE,aAAa3uE,OACtC0vE,EAAiB/uE,KAAKguE,aAAac,GAAqBhB,EAAgBprE,MAAM,GAElF,IAASnH,EAAI,IAAMA,GAAK,IAAMA,IAC1B,KAAIyzE,EAAoBnB,EAAa7tE,KAAKguE,aAAa,GAAGzyE,GACtD0zE,EAAiBjvE,KAAKguE,aAAagB,GACvC,IAASvoE,EAAI,GAAMA,GAAK,GAAMA,IAC1BwoE,EAAexoE,GAAKonE,EAAae,EAEzC,IAASrzE,EAAI,IAAMA,GAAK,IAAMA,IAC1BszE,EAActzE,GAAKsyE,EAAaiB,EACpC,IAASvzE,EAAI,GAAMA,GAAK,GAAMA,IAC1BwzE,EAAexzE,GAAKqyE,GA0JhC,SAASsB,EAAY7pE,EAASsjC,GAE1B3oC,KAAKmvE,eAAiB,EACtBnvE,KAAKovE,YAAS9rE,EAGdtD,KAAKmuE,YAAcxlC,EAAMwlC,YACzBnuE,KAAKouE,eAAiBzlC,EAAMylC,eAC5BpuE,KAAK8nC,sBAAwBa,EAAM+lC,UACnC1uE,KAAK2uE,QAAUhmC,EAAMgmC,QAgKzB,SAASU,EAAYhqE,EAASsjC,GAE1B3oC,KAAKsvE,QAAU,EACftvE,KAAKuvE,QAAUzxE,EAAOC,MAAM,GAG5BiC,KAAKguE,aAAerlC,EAAMqlC,aAC1BhuE,KAAKiuE,eAAiBtlC,EAAMslC,eAC5BjuE,KAAK6nC,mBAAqBc,EAAMd,mBAChC7nC,KAAK2uE,QAAUhmC,EAAMgmC,QA4FzB,SAASa,EAAQvJ,EAAO5/D,GACpB,GAAI4/D,EAAM,GAAK5/D,EACX,OAAQ,EAGZ,IADA,IAAI7K,EAAI,EAAGa,EAAI4pE,EAAM5mE,OACd7D,EAAIa,EAAE,GAAG,CACZ,IAAIiD,EAAM9D,EAAIkL,KAAKC,OAAOtK,EAAEb,EAAE,GAAG,GAC7ByqE,EAAM3mE,IAAQ+G,EACd7K,EAAI8D,EAEJjD,EAAIiD,EAEZ,OAAO9D,EAhbXkyE,EAAUvwE,UAAUkkB,QAAU6tD,EAC9BxB,EAAUvwE,UAAU+qC,QAAUmnC,EAG9B3B,EAAUvwE,UAAUsyE,mBAAqB,SAASt7B,GAE9C,IADA,IAAI1U,EAAQ,GACL0U,EAAO,EAAGA,IAAS,EACtB1U,EAAM/6B,KAAY,IAAPyvC,GACK,GAAhB1U,EAAMpgC,QACNogC,EAAM/6B,KAAK,GAGf,IADA,IAAI0M,EAAOpR,KAAKguE,aAAa,GACpBzyE,EAAIkkC,EAAMpgC,OAAO,EAAG9D,EAAI,EAAGA,IAAK,CACrC,IAAI8K,EAAM+K,EAAKquB,EAAMlkC,IAErB,GAAI8K,GAAOsnE,EACPv8D,EAAKquB,EAAMlkC,IAAMsyE,EAAa7tE,KAAKguE,aAAa3uE,OAChDW,KAAKguE,aAAatpE,KAAK0M,EAAO08D,EAAgBprE,MAAM,QAEnD,MAAI2D,GAAOwnE,GAIZ,MAAM,IAAIvoE,MAAM,qBAAuBtF,KAAK6oC,aAAe,WAAasL,EAAKlnC,SAAS,KAHtFmE,EAAOpR,KAAKguE,aAAaH,EAAaxnE,IAK9C,OAAO+K,GAIXs8D,EAAUvwE,UAAU+wE,gBAAkB,SAASvF,GAE3C,IAAI+G,EAAUvpD,SAASwiD,EAAM,GAAI,IAG7BgH,EAAa3vE,KAAKyvE,mBAAmBC,GACzCA,GAAoB,IAGpB,IAAK,IAAItuE,EAAI,EAAGA,EAAIunE,EAAMtpE,OAAQ+B,IAAK,CACnC,IAAI29B,EAAO4pC,EAAMvnE,GACjB,GAAoB,iBAAT29B,EACP,IAAK,IAAIvjC,EAAI,EAAGA,EAAIujC,EAAK1/B,QAAS,CAC9B,IAAIqL,EAAOq0B,EAAK7V,WAAW1tB,KAC3B,GAAI,OAAUkP,GAAQA,EAAO,MAAQ,CACjC,IAAIklE,EAAY7wC,EAAK7V,WAAW1tB,KAChC,KAAI,OAAUo0E,GAAaA,EAAY,OAGnC,MAAM,IAAItqE,MAAM,+BAAkCtF,KAAK6oC,aAAe,aAAe8/B,EAAM,IAF3FgH,EAAWD,KAAa,MAA4B,MAAjBhlE,EAAO,QAAmBklE,EAAY,YAI5E,GAAI,KAASllE,GAAQA,GAAQ,KAAQ,CAGtC,IAFA,IAAIszB,EAAM,KAAQtzB,EAAO,EACrBmlE,EAAM,GACDl0E,EAAI,EAAGA,EAAIqiC,EAAKriC,IACrBk0E,EAAInrE,KAAKq6B,EAAK7V,WAAW1tB,MAE7Bm0E,EAAWD,MArKd,GAqKuC1vE,KAAKiuE,eAAe5uE,OACxDW,KAAKiuE,eAAevpE,KAAKmrE,QAGzBF,EAAWD,KAAahlE,MAG/B,IAAoB,iBAATq0B,EAMZ,MAAM,IAAIz5B,MAAM,0BAA4By5B,EAAO,cAAiB/+B,KAAK6oC,aAAe,aAAe8/B,EAAM,IAL7G,IAAIwB,EAAWwF,EAAWD,EAAU,GAAK,EACzC,IAASl0E,EAAI,EAAGA,EAAIujC,EAAMvjC,IACtBm0E,EAAWD,KAAavF,KAKpC,GAAIuF,EAAU,IACV,MAAM,IAAIpqE,MAAM,sBAAyBtF,KAAK6oC,aAAe,YAAc8/B,EAAM,GAAK,aAAe+G,IAI7GhC,EAAUvwE,UAAU2yE,iBAAmB,SAASC,GAC5C,IAAI3wE,EAAO2wE,GAAS,EAGpB,YAF+BzsE,IAA3BtD,KAAKmuE,YAAY/uE,KACjBY,KAAKmuE,YAAY/uE,GAAQ0uE,EAAgBprE,MAAM,IAC5C1C,KAAKmuE,YAAY/uE,IAG5BsuE,EAAUvwE,UAAUsxE,eAAiB,SAASsB,EAAOC,GACjD,IAAIC,EAASjwE,KAAK8vE,iBAAiBC,GAC/B5wE,EAAc,IAAR4wE,EACNE,EAAO9wE,KAnME,GAoMTa,KAAKouE,gBApMI,GAoMqB6B,EAAO9wE,KAjM9B,GAiMgD6wE,EAClDC,EAAO9wE,IAAQwuE,IACpBsC,EAAO9wE,GAAO6wE,IAGtBtC,EAAUvwE,UAAU+yE,mBAAqB,SAASL,EAAKG,GAGnD,IAII5+D,EAJA2+D,EAAQF,EAAI,GACZI,EAASjwE,KAAK8vE,iBAAiBC,GAC/B5wE,EAAc,IAAR4wE,EAGNE,EAAO9wE,KAjNE,GAmNTiS,EAAOpR,KAAKouE,gBAnNH,GAmN4B6B,EAAO9wE,KAI5CiS,EAAO,GACH6+D,EAAO9wE,KAASwuE,IAAYv8D,GArNzB,GAqN0C6+D,EAAO9wE,IACxD8wE,EAAO9wE,IAzNE,GAyNiBa,KAAKouE,eAAe/uE,OAC9CW,KAAKouE,eAAe1pE,KAAK0M,IAI7B,IAAK,IAAI3K,EAAI,EAAGA,EAAIopE,EAAIxwE,OAAO,EAAGoH,IAAK,CACnC,IAAI0pE,EAAS/+D,EAAK2+D,GACI,iBAAXI,EACP/+D,EAAO++D,GAEP/+D,EAAOA,EAAK2+D,GAAS,QACNzsE,IAAX6sE,IACA/+D,GAlOD,GAkOkB++D,IAM7B/+D,EADA2+D,EAAQF,EAAIA,EAAIxwE,OAAO,IACT2wE,GAGlBtC,EAAUvwE,UAAUoxE,iBAAmB,SAASe,EAASvI,EAAQsH,GAE7D,IADA,IAAIj9D,EAAOpR,KAAKguE,aAAasB,GACpB/zE,EAAI,EAAGA,EAAI,IAAOA,IAAK,CAC5B,IAAIw0E,EAAQ3+D,EAAK7V,GACb60E,EAASrJ,EAASxrE,EAClB8yE,EAAgB+B,KAGhBL,GAAS,EACT/vE,KAAKyuE,eAAesB,EAAOK,GACtBL,GAASlC,EACd7tE,KAAKuuE,iBAAiBV,EAAakC,EAAOK,GAAU,EAAG/B,GAClD0B,IA1PA,IA2PL/vE,KAAKkwE,mBAAmBlwE,KAAKiuE,gBA3PxB,GA2PmD8B,GAAQK,MAoB5ElB,EAAY/xE,UAAUgc,MAAQ,SAAS9C,GAMnC,IALA,IAAIi3D,EAASxvE,EAAOC,MAAMsY,EAAIhX,QAAUW,KAAK2uE,QAAU,EAAI,IACvDQ,EAAgBnvE,KAAKmvE,cACrBC,EAASpvE,KAAKovE,OAAQiB,GAAY,EAClC90E,EAAI,EAAGkL,EAAI,IAEF,CAET,IAAkB,IAAd4pE,EAAiB,CACjB,GAAI90E,GAAK8a,EAAIhX,OAAQ,MACrB,IAAI0wE,EAAQ15D,EAAI6S,WAAW3tB,SAE1B,CACGw0E,EAAQM,EACZA,GAAY,EAIhB,GAAI,OAAUN,GAASA,EAAQ,MAC3B,GAAIA,EAAQ,MAAQ,CAChB,IAAuB,IAAnBZ,EAAsB,CACtBA,EAAgBY,EAChB,SAEAZ,EAAgBY,EAEhBA,EAAQpC,OAGW,IAAnBwB,GACAY,EAAQ,MAAqC,MAA1BZ,EAAgB,QAAmBY,EAAQ,OAC9DZ,GAAiB,GAGjBY,EAAQpC,OAKQ,IAAnBwB,IAELkB,EAAWN,EAAOA,EAAQpC,EAC1BwB,GAAiB,GAIrB,IAAIa,EAAWrC,EACf,QAAerqE,IAAX8rE,GAAwBW,GAASpC,EAAY,CAC7C,IAAI2C,EAAUlB,EAAOW,GACrB,GAAuB,iBAAZO,EAAsB,CAC7BlB,EAASkB,EACT,SAEyB,iBAAXA,EACdN,EAAWM,EAEOhtE,MAAXgtE,QAIShtE,KADhBgtE,EAAUlB,GAvUX,MAyUKY,EAAWM,EACXD,EAAWN,GASnBX,OAAS9rE,OAER,GAAIysE,GAAS,EAAG,CACjB,IAAIQ,EAAWvwE,KAAKmuE,YAAY4B,GAAS,GAIzC,QAHiBzsE,IAAbitE,IACAP,EAAWO,EAAiB,IAARR,IAEpBC,IA7VC,GA6VsB,CACvBZ,EAASpvE,KAAKouE,gBA9Vb,GA8VsC4B,GACvC,SAGJ,GAAIA,GAAYrC,GAAc3tE,KAAK2uE,QAAS,CAExC,IAAItiC,EAAMmjC,EAAQxvE,KAAK2uE,QAAQ6B,OAAQT,GACvC,IAAY,GAAR1jC,EAAW,CACP2jC,EAAWhwE,KAAK2uE,QAAQ8B,QAAQpkC,IAAQ0jC,EAAQ/vE,KAAK2uE,QAAQ6B,OAAOnkC,IACxEihC,EAAO7mE,KAAO,IAAOC,KAAKC,MAAMqpE,EAAW,OAAQA,GAAsB,MACzE1C,EAAO7mE,KAAO,GAAOC,KAAKC,MAAMqpE,EAAW,MAAOA,GAAsB,KACxE1C,EAAO7mE,KAAO,IAAOC,KAAKC,MAAMqpE,EAAW,IAAKA,GAAsB,GACtE1C,EAAO7mE,KAAO,GAAOupE,EACrB,WAMRA,IAAarC,IACbqC,EAAWhwE,KAAK8nC,uBAEhBkoC,EAAW,IACX1C,EAAO7mE,KAAOupE,EAETA,EAAW,OAChB1C,EAAO7mE,KAAOupE,GAAY,EAC1B1C,EAAO7mE,KAAkB,IAAXupE,IAGd1C,EAAO7mE,KAAOupE,GAAY,GAC1B1C,EAAO7mE,KAAQupE,GAAY,EAAK,IAChC1C,EAAO7mE,KAAkB,IAAXupE,GAMtB,OAFAhwE,KAAKovE,OAASA,EACdpvE,KAAKmvE,cAAgBA,EACd7B,EAAO5qE,MAAM,EAAG+D,IAG3ByoE,EAAY/xE,UAAUw7B,IAAM,WACxB,IAA4B,IAAxB34B,KAAKmvE,oBAAwC7rE,IAAhBtD,KAAKovE,OAAtC,CAGA,IAAI9B,EAASxvE,EAAOC,MAAM,IAAK0I,EAAI,EAEnC,GAAIzG,KAAKovE,OAAQ,CACb,IAAIY,EAAWhwE,KAAKovE,QA3Yb,QA4YU9rE,IAAb0sE,IACIA,EAAW,IACX1C,EAAO7mE,KAAOupE,GAGd1C,EAAO7mE,KAAOupE,GAAY,EAC1B1C,EAAO7mE,KAAkB,IAAXupE,IAKtBhwE,KAAKovE,YAAS9rE,EASlB,OAN4B,IAAxBtD,KAAKmvE,gBAEL7B,EAAO7mE,KAAOzG,KAAK8nC,sBACnB9nC,KAAKmvE,eAAiB,GAGnB7B,EAAO5qE,MAAM,EAAG+D,KAI3ByoE,EAAY/xE,UAAUqyE,QAAUA,EAiBhCH,EAAYlyE,UAAUgc,MAAQ,SAAS9W,GACnC,IAAIirE,EAASxvE,EAAOC,MAAiB,EAAXsE,EAAIhD,QAC1BiwE,EAAUtvE,KAAKsvE,QACfC,EAAUvvE,KAAKuvE,QAASmB,EAAgB1wE,KAAKuvE,QAAQlwE,OACrDsxE,GAAY3wE,KAAKuvE,QAAQlwE,OAGzBqxE,EAAgB,IAChBnB,EAAUzxE,EAAOwe,OAAO,CAACizD,EAASltE,EAAIK,MAAM,EAAG,OAEnD,IAAK,IAAInH,EAAI,EAAGkL,EAAI,EAAGlL,EAAI8G,EAAIhD,OAAQ9D,IAAK,CACxC,IAGIw0E,EAHA3F,EAAW7uE,GAAK,EAAK8G,EAAI9G,GAAKg0E,EAAQh0E,EAAIm1E,GAK9C,IAFIX,EAAQ/vE,KAAKguE,aAAasB,GAASlF,KAE1B,QAGR,GAAI2F,IAAUpC,EAGfpyE,EAAIo1E,EACJZ,EAAQ/vE,KAAK6nC,mBAAmB3e,WAAW,QAE1C,GAAI6mD,IAAUnC,EAAc,CAC7B,IAAIgD,EAAUD,GAAY,EAAKtuE,EAAIK,MAAMiuE,EAAUp1E,EAAE,GAAKg0E,EAAQ7sE,MAAMiuE,EAAWD,EAAen1E,EAAE,EAAIm1E,GACpGG,EAAuB,OAAhBD,EAAO,GAAG,KAA+B,MAAhBA,EAAO,GAAG,IAA8B,IAAhBA,EAAO,GAAG,MAAYA,EAAO,GAAG,IACxFvkC,EAAMmjC,EAAQxvE,KAAK2uE,QAAQ8B,QAASI,GACxCd,EAAQ/vE,KAAK2uE,QAAQ6B,OAAOnkC,GAAOwkC,EAAM7wE,KAAK2uE,QAAQ8B,QAAQpkC,OAE7D,IAAI0jC,GAASlC,EAAY,CAC1ByB,EAAUzB,EAAakC,EACvB,SAEC,KAAIA,IA3dA,IAqeL,MAAM,IAAIzqE,MAAM,2DAA6DyqE,EAAQ,OAAST,EAAU,IAAMlF,GAR9G,IADA,IAAIyF,EAAM7vE,KAAKiuE,gBA5dV,GA4dqC8B,GACjC3uE,EAAI,EAAGA,EAAIyuE,EAAIxwE,OAAS,EAAG+B,IAChC2uE,EAAQF,EAAIzuE,GACZksE,EAAO7mE,KAAe,IAARspE,EACdzC,EAAO7mE,KAAOspE,GAAS,EAE3BA,EAAQF,EAAIA,EAAIxwE,OAAO,GAM3B,GAAI0wE,EAAQ,MAAQ,CAChBA,GAAS,MACT,IAAIe,EAAY,MAASpqE,KAAKC,MAAMopE,EAAQ,MAC5CzC,EAAO7mE,KAAmB,IAAZqqE,EACdxD,EAAO7mE,KAAOqqE,GAAa,EAE3Bf,EAAQ,MAASA,EAAQ,KAE7BzC,EAAO7mE,KAAe,IAARspE,EACdzC,EAAO7mE,KAAOspE,GAAS,EAGvBT,EAAU,EAAGqB,EAAWp1E,EAAE,EAK9B,OAFAyE,KAAKsvE,QAAUA,EACftvE,KAAKuvE,QAAWoB,GAAY,EAAKtuE,EAAIK,MAAMiuE,GAAYpB,EAAQ7sE,MAAMiuE,EAAWD,GACzEpD,EAAO5qE,MAAM,EAAG+D,GAAGwG,SAAS,SAGvCoiE,EAAYlyE,UAAUw7B,IAAM,WAIxB,IAHA,IAAIja,EAAM,GAGH1e,KAAKuvE,QAAQlwE,OAAS,GAAG,CAE5Bqf,GAAO1e,KAAK6nC,mBACZ,IAAIxlC,EAAMrC,KAAKuvE,QAAQ7sE,MAAM,GAG7B1C,KAAKuvE,QAAUzxE,EAAOC,MAAM,GAC5BiC,KAAKsvE,QAAU,EACXjtE,EAAIhD,OAAS,IACbqf,GAAO1e,KAAKmZ,MAAM9W,IAI1B,OADArC,KAAKsvE,QAAU,EACR5wD,I,6BClhBXpjB,EAAOD,QAAU,CAkCb,SAAY,CACR4J,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,MACnCuI,UAAW,CAAC,IAAU,GAAM,IAAU,KACtCF,eAAgB,CAAC,CAAC9vE,KAAM,MAAQsrC,GAAI,SAExC,WAAc,WACd,QAAW,WACX,KAAQ,WACR,WAAc,WACd,MAAS,WACT,MAAS,WACT,WAAc,WACd,MAAS,WACT,IAAO,WACP,MAAS,WAET,MAAS,CACL7kC,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,MACnCuI,UAAW,CAAC,IAAU,GAAM,IAAU,MAa1C,OAAU,QACV,SAAY,QACZ,WAAc,QACd,SAAY,QACZ,gBAAmB,QACnB,MAAS,QAGT,WAAc,QACd,MAAS,QACT,IAAO,QACP,MAAS,CACLvpE,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,MAIvC,IAAO,CACHhhE,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,IAAuB3pD,OAAO,EAAQ,OAE7E,KAAQ,MACR,QAAW,MAOX,QAAW,CACPrX,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,IAAuB3pD,OAAO,EAAQ,MACzEqyD,QAAS,WAAa,OAAO,EAAQ,MACrCL,eAAgB,CAAC,KACjBE,UAAW,CAAC,IAAK,QAGrB,QAAW,UAKX,WAAc,QACd,MAAS,QACT,IAAO,QACP,MAAS,CACLvpE,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,OAGvC,QAAW,QACX,cAAiB,QACjB,MAAS,QACT,SAAY,QACZ,OAAU,QACV,YAAe,QACf,YAAe,QACf,QAAW,QA0BX,WAAc,QACd,MAAS,QACT,IAAO,QACP,MAAS,CACLhhE,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,MAIvC,KAAQ,YACR,UAAa,CACThhE,KAAM,QACNghE,MAAO,WAAa,OAAO,EAAQ,IAAuB3pD,OAAO,EAAQ,OACzEgyD,eAAgB,CAAC,QAGrB,OAAU,YACV,OAAU,YACV,OAAU,c,iulDC5Kd,IAAIxwE,EAAS,EAAQ,IAAUA,OAC3BizE,EAAY,EAAQ,IAAUA,UA0BlC,SAASC,EAAuBC,EAAM5rE,GAClCrF,KAAKixE,KAAOA,GACZ5rE,EAAUA,GAAW,IACb6rE,eAAgB,EACxBH,EAAUr1E,KAAKsE,KAAMqF,GA2CzB,SAAS8rE,EAAuBF,EAAM5rE,GAClCrF,KAAKixE,KAAOA,GACZ5rE,EAAUA,GAAW,IACb3G,SAAWsB,KAAKtB,SAAW,OACnCqyE,EAAUr1E,KAAKsE,KAAMqF,GAzEzB/J,EAAOD,QAAU,SAAS25B,GAGtBA,EAAMo8C,aAAe,SAAsB1yE,EAAU2G,GACjD,OAAO,IAAI2rE,EAAuBh8C,EAAM+S,WAAWrpC,EAAU2G,GAAUA,IAG3E2vB,EAAMq8C,aAAe,SAAsB3yE,EAAU2G,GACjD,OAAO,IAAI8rE,EAAuBn8C,EAAMmT,WAAWzpC,EAAU2G,GAAUA,IAG3E2vB,EAAMs8C,iBAAkB,EAIxBt8C,EAAMg8C,uBAAyBA,EAC/Bh8C,EAAMm8C,uBAAyBA,EAC/Bn8C,EAAMu8C,SAAWJ,EAAuBh0E,UAAUq0E,SAYtDR,EAAuB7zE,UAAYlB,OAAOY,OAAOk0E,EAAU5zE,UAAW,CAClE+F,YAAa,CAAE1G,MAAOw0E,KAG1BA,EAAuB7zE,UAAUs0E,WAAa,SAAS9I,EAAOjqE,EAAUyD,GACpE,GAAoB,iBAATwmE,EACP,OAAOxmE,EAAK,IAAImD,MAAM,sDAC1B,IACI,IAAIspB,EAAM5uB,KAAKixE,KAAK93D,MAAMwvD,GACtB/5C,GAAOA,EAAIvvB,QAAQW,KAAK0E,KAAKkqB,GACjCzsB,IAEJ,MAAOkL,GACHlL,EAAKkL,KAIb2jE,EAAuB7zE,UAAUu0E,OAAS,SAASvvE,GAC/C,IACI,IAAIysB,EAAM5uB,KAAKixE,KAAKt4C,MAChB/J,GAAOA,EAAIvvB,QAAQW,KAAK0E,KAAKkqB,GACjCzsB,IAEJ,MAAOkL,GACHlL,EAAKkL,KAIb2jE,EAAuB7zE,UAAUq0E,QAAU,SAAS9wE,GAChD,IAAIixE,EAAS,GAMb,OALA3xE,KAAKi3B,GAAG,QAASv2B,GACjBV,KAAKi3B,GAAG,OAAQ,SAAS0xC,GAASgJ,EAAOjtE,KAAKikE,KAC9C3oE,KAAKi3B,GAAG,MAAO,WACXv2B,EAAG,KAAM5C,EAAOwe,OAAOq1D,MAEpB3xE,MAYXmxE,EAAuBh0E,UAAYlB,OAAOY,OAAOk0E,EAAU5zE,UAAW,CAClE+F,YAAa,CAAE1G,MAAO20E,KAG1BA,EAAuBh0E,UAAUs0E,WAAa,SAAS9I,EAAOjqE,EAAUyD,GACpE,IAAKrE,EAAOigB,SAAS4qD,GACjB,OAAOxmE,EAAK,IAAImD,MAAM,sDAC1B,IACI,IAAIspB,EAAM5uB,KAAKixE,KAAK93D,MAAMwvD,GACtB/5C,GAAOA,EAAIvvB,QAAQW,KAAK0E,KAAKkqB,EAAK5uB,KAAKtB,UAC3CyD,IAEJ,MAAOkL,GACHlL,EAAKkL,KAIb8jE,EAAuBh0E,UAAUu0E,OAAS,SAASvvE,GAC/C,IACI,IAAIysB,EAAM5uB,KAAKixE,KAAKt4C,MAChB/J,GAAOA,EAAIvvB,QAAQW,KAAK0E,KAAKkqB,EAAK5uB,KAAKtB,UAC3CyD,IAEJ,MAAOkL,GACHlL,EAAKkL,KAIb8jE,EAAuBh0E,UAAUq0E,QAAU,SAAS9wE,GAChD,IAAIkuB,EAAM,GAMV,OALA5uB,KAAKi3B,GAAG,QAASv2B,GACjBV,KAAKi3B,GAAG,OAAQ,SAAS0xC,GAAS/5C,GAAO+5C,IACzC3oE,KAAKi3B,GAAG,MAAO,WACXv2B,EAAG,KAAMkuB,KAEN5uB,O,6BCrHX,IAAIlC,EAAS,EAAQ,IAAUA,OAK/BxC,EAAOD,QAAU,SAAU25B,GACvB,IAAIzL,OAAWjmB,EAKf0xB,EAAM48C,iCAAmC9zE,EAAOU,MAAQ,IAAIV,EAAO,aAAc+hB,YAEjFmV,EAAM68C,oBAAsB,WACxB,IAAItoD,EAAJ,CAGA,GAFAA,EAAW,IAENyL,EAAM48C,+BAGP,OAFAh1D,QAAQ/Y,MAAM,4GACd+Y,QAAQ/Y,MAAM,wFAIlB,IAAIiuE,EAAsB,CACtB,KAAO,EAAM,MAAQ,EAAM,SAAS,EAAM,OAAS,EAAM,QAAU,EACnE,QAAU,EAAM,MAAQ,EAAM,SAAS,EAAM,SAAW,EAAM,YAAY,GAG9Eh0E,EAAOi0E,iBAAmB,SAAS3pC,GAC/B,OAAOA,GAAO0pC,EAAoB1pC,EAAI/mC,gBAI1C,IAAIquC,EAAa,EAAQ,IAAUA,WA2InC,GAzIAnmB,EAASyoD,mBAAqBtiC,EAAWvyC,UAAU8P,SACnDyiC,EAAWvyC,UAAU8P,SAAW,SAASvO,EAAU8V,EAAOmkB,GAItD,OAHAj6B,EAAW8X,OAAO9X,GAAY,QAAQ2C,cAGlCvD,EAAOi0E,iBAAiBrzE,GACjB6qB,EAASyoD,mBAAmBt2E,KAAKsE,KAAMtB,EAAU8V,EAAOmkB,SAG/C,IAATnkB,IAAsBA,EAAQ,QACvB,IAAPmkB,IAAoBA,EAAM34B,KAAKX,QACnC21B,EAAMgB,OAAOh2B,KAAK0C,MAAM8R,EAAOmkB,GAAMj6B,KAGhD6qB,EAAS0oD,gBAAkBviC,EAAWvyC,UAAUgc,MAChDu2B,EAAWvyC,UAAUgc,MAAQ,SAASka,EAAQjnB,EAAQ/M,EAAQX,GAG1D,GAAIyW,SAAS/I,GACJ+I,SAAS9V,KACVX,EAAWW,EACXA,OAASiE,OAEV,CACH,IAAI4uE,EAAOxzE,EACXA,EAAW0N,EACXA,EAAS/M,EACTA,EAAS6yE,EAGb9lE,GAAUA,GAAU,EACpB,IAAI+lE,EAAYnyE,KAAKX,OAAS+M,EAY9B,GAXK/M,GAGDA,GAAUA,GACG8yE,IACT9yE,EAAS8yE,GAJb9yE,EAAS8yE,EAObzzE,EAAW8X,OAAO9X,GAAY,QAAQ2C,cAGlCvD,EAAOi0E,iBAAiBrzE,GACxB,OAAO6qB,EAAS0oD,gBAAgBv2E,KAAKsE,KAAMqzB,EAAQjnB,EAAQ/M,EAAQX,GAEvE,GAAI20B,EAAOh0B,OAAS,IAAMA,EAAS,GAAK+M,EAAS,GAC7C,MAAM,IAAI2T,WAAW,yCAGzB,IAAI1d,EAAM2yB,EAAM/R,OAAOoQ,EAAQ30B,GAG/B,OAFI2D,EAAIhD,OAASA,IAAQA,EAASgD,EAAIhD,QACtCgD,EAAIE,KAAKvC,KAAMoM,EAAQ,EAAG/M,GACnBA,GAKXkqB,EAAS6oD,iBAAmBt0E,EAAOu0E,WACnCv0E,EAAOu0E,WAAa,SAAS3zE,GACzB,OAAOZ,EAAOi0E,iBAAiBrzE,IAAas2B,EAAMY,eAAel3B,IAGrE6qB,EAAS+oD,iBAAmBx0E,EAAO8/B,WACnC9/B,EAAO8/B,WAAa8R,EAAW9R,WAAa,SAASvnB,EAAK3X,GAItD,OAHAA,EAAW8X,OAAO9X,GAAY,QAAQ2C,cAGlCvD,EAAOi0E,iBAAiBrzE,GACjB6qB,EAAS+oD,iBAAiB52E,KAAKsE,KAAMqW,EAAK3X,GAG9Cs2B,EAAM/R,OAAO5M,EAAK3X,GAAUW,QAGvCkqB,EAASgpD,eAAiBz0E,EAAOX,UAAU8P,SAC3CnP,EAAOX,UAAU8P,SAAW,SAASvO,EAAU8V,EAAOmkB,GAIlD,OAHAj6B,EAAW8X,OAAO9X,GAAY,QAAQ2C,cAGlCvD,EAAOi0E,iBAAiBrzE,GACjB6qB,EAASgpD,eAAe72E,KAAKsE,KAAMtB,EAAU8V,EAAOmkB,SAG3C,IAATnkB,IAAsBA,EAAQ,QACvB,IAAPmkB,IAAoBA,EAAM34B,KAAKX,QACnC21B,EAAMgB,OAAOh2B,KAAK0C,MAAM8R,EAAOmkB,GAAMj6B,KAGhD6qB,EAASipD,YAAc10E,EAAOX,UAAUgc,MACxCrb,EAAOX,UAAUgc,MAAQ,SAASka,EAAQjnB,EAAQ/M,EAAQX,GACtD,IAAI+zE,EAAUrmE,EAAQsmE,EAAUrzE,EAAQszE,EAAYj0E,EAGpD,GAAIyW,SAAS/I,GACJ+I,SAAS9V,KACVX,EAAWW,EACXA,OAASiE,OAEV,CACH,IAAI4uE,EAAOxzE,EACXA,EAAW0N,EACXA,EAAS/M,EACTA,EAAS6yE,EAMb,GAHAxzE,EAAW8X,OAAO9X,GAAY,QAAQ2C,cAGlCvD,EAAOi0E,iBAAiBrzE,GACxB,OAAO6qB,EAASipD,YAAY92E,KAAKsE,KAAMqzB,EAAQo/C,EAASC,EAASC,GAErEvmE,GAAUA,GAAU,EACpB,IAAI+lE,EAAYnyE,KAAKX,OAAS+M,EAU9B,GATK/M,GAGDA,GAAUA,GACG8yE,IACT9yE,EAAS8yE,GAJb9yE,EAAS8yE,EAQT9+C,EAAOh0B,OAAS,IAAMA,EAAS,GAAK+M,EAAS,GAC7C,MAAM,IAAI2T,WAAW,yCAGzB,IAAI1d,EAAM2yB,EAAM/R,OAAOoQ,EAAQ30B,GAG/B,OAFI2D,EAAIhD,OAASA,IAAQA,EAASgD,EAAIhD,QACtCgD,EAAIE,KAAKvC,KAAMoM,EAAQ,EAAG/M,GACnBA,GAOP21B,EAAMs8C,gBAAiB,CACvB,IAAIsB,EAAW,EAAQ,IAAUA,SAEjCrpD,EAASspD,oBAAsBD,EAASz1E,UAAU21E,YAClDF,EAASz1E,UAAU21E,YAAc,SAAqB1qC,EAAK/iC,GAGvDrF,KAAKmoE,eAAejgC,QAAUlT,EAAMmT,WAAWC,EAAK/iC,GACpDrF,KAAKmoE,eAAezpE,SAAW0pC,GAGnCwqC,EAASz1E,UAAUq0E,QAAUx8C,EAAMu8C,YAK3Cv8C,EAAM+9C,wBAA0B,WAC5B,GAAK/9C,EAAM48C,+BAAX,CAEA,IAAKroD,EACD,MAAM,IAAIjkB,MAAM,iHAEbxH,EAAOi0E,iBAEd,IAAIriC,EAAa,EAAQ,IAAUA,WAUnC,GARAA,EAAWvyC,UAAU8P,SAAWsc,EAASyoD,mBACzCtiC,EAAWvyC,UAAUgc,MAAQoQ,EAAS0oD,gBAEtCn0E,EAAOu0E,WAAa9oD,EAAS6oD,iBAC7Bt0E,EAAO8/B,WAAarU,EAAS+oD,iBAC7Bx0E,EAAOX,UAAU8P,SAAWsc,EAASgpD,eACrCz0E,EAAOX,UAAUgc,MAAQoQ,EAASipD,YAE9Bx9C,EAAMs8C,gBAAiB,CACvB,IAAIsB,EAAW,EAAQ,IAAUA,SAEjCA,EAASz1E,UAAU21E,YAAcvpD,EAASspD,2BACnCD,EAASz1E,UAAUq0E,QAG9BjoD,OAAWjmB,M;;;;;GCvInB,SAAS2yB,EAAS/nB,EAAO/L,GACvB,OAAO,SAAiB6wE,GAQtB,IAPA,IAAIv4D,EAAO,IAAI1b,MAAM4D,UAAUtD,QAC3B4zE,EAAKjzE,KACLH,EAAgB,UAAVqO,EACN8kE,EACA,KAGKz3E,EAAI,EAAGA,EAAIkf,EAAKpb,OAAQ9D,IAC/Bkf,EAAKlf,GAAKoH,UAAUpH,GAGtB4G,EAAKtC,EAAKozE,EAAI/kE,EAAOuM,IA/EzBnf,EAAOD,QAUP,SAAe63E,EAAO/wE,GACpB,IAAKpD,MAAMC,QAAQk0E,GACjB,MAAM,IAAIv0E,UAAU,kDAItB,IAFA,IAAIw0E,EAAW,GAEN53E,EAAI,EAAGA,EAAI23E,EAAM7zE,OAAQ9D,IAAK,CACrC,IAAIuD,EAAMo0E,EAAM33E,GAEhB,IAAKwD,MAAMC,QAAQF,IAAQA,EAAIO,OAAS,EACtC,MAAM,IAAIV,UAAU,6CAItB,IAFA,IAAIs0E,EAAKn0E,EAAI,GAEJ2H,EAAI,EAAGA,EAAI3H,EAAIO,OAAQoH,IAAK,CACnC,IAAIyH,EAAQpP,EAAI2H,GACZtG,EAAK81B,EAAS/nB,EAAO7N,GAGzB4yE,EAAGh8C,GAAG/oB,EAAO/N,GAEbgzE,EAASzuE,KAAK,CACZuuE,GAAIA,EACJ/kE,MAAOA,EACP/N,GAAIA,KAKV,SAASE,IACPioE,IACAnmE,EAAKmC,MAAM,KAAM3B,WAGnB,SAAS2lE,IAEP,IADA,IAAIv9D,EACKxP,EAAI,EAAGA,EAAI43E,EAAS9zE,OAAQ9D,KACnCwP,EAAIooE,EAAS53E,IACX03E,GAAGl8C,eAAehsB,EAAEmD,MAAOnD,EAAE5K,IAInC,SAASizE,EAAMjzE,GACbgC,EAAOhC,EAKT,OAFAizE,EAAMx8C,OAAS0xC,EAER8K,I,cCvET93E,EAAOD,QAAUkC,QAAQ,S;;;;;;AC6BzB,IAAI81E,EAAc,yJACdC,EAAa,kCACbC,EAAc,sCAQdC,EAAa,uBAKbC,EAAc,WAkBdC,EAAoB,0CACpBC,EAAiB,yCACjBC,EAAa,yFA6JjB,SAASzgD,EAAQ9sB,GACf,IAAIgQ,EAAMG,OAAOnQ,GAGjB,GAAIktE,EAAY9gD,KAAKpc,GACnB,OAAOA,EAGT,GAAIA,EAAIhX,OAAS,IAAMi0E,EAAW7gD,KAAKpc,GACrC,MAAM,IAAI1X,UAAU,2BAGtB,MAAO,IAAM0X,EAAI2E,QAAQy4D,EAAa,QAAU,IAnKlDp4E,EAAQmG,OAWR,SAAgBL,GACd,IAAKA,GAAsB,iBAARA,EACjB,MAAM,IAAIxC,UAAU,4BAGtB,IAAI+gB,EAAave,EAAIue,WACjBkqC,EAAUzoD,EAAIyoD,QACdiqB,EAAS1yE,EAAI0yE,OACb5uE,EAAO9D,EAAI8D,KAEf,IAAKA,IAAS0uE,EAAelhD,KAAKxtB,GAChC,MAAM,IAAItG,UAAU,gBAGtB,IAAKirD,IAAY8pB,EAAkBjhD,KAAKm3B,GACtC,MAAM,IAAIjrD,UAAU,mBAItB,IAAI00B,EAASpuB,EAAO,IAAM2kD,EAG1B,GAAIiqB,EAAQ,CACV,IAAKF,EAAelhD,KAAKohD,GACvB,MAAM,IAAIl1E,UAAU,kBAGtB00B,GAAU,IAAMwgD,EAIlB,GAAIn0D,GAAoC,iBAAfA,EAIvB,IAHA,IAAIgE,EACA1iB,EAAS/E,OAAO6E,KAAK4e,GAAYlD,OAE5BjhB,EAAI,EAAGA,EAAIyF,EAAO3B,OAAQ9D,IAAK,CAGtC,GAFAmoB,EAAQ1iB,EAAOzF,IAEVg4E,EAAY9gD,KAAK/O,GACpB,MAAM,IAAI/kB,UAAU,0BAGtB00B,GAAU,KAAO3P,EAAQ,IAAMyP,EAAQzT,EAAWgE,IAItD,OAAO2P,GAxDTh4B,EAAQ4iB,MAmER,SAAeoV,GACb,IAAKA,EACH,MAAM,IAAI10B,UAAU,+BAIA,iBAAX00B,IACTA,EAwDJ,SAAwBlyB,GACtB,GAA6B,mBAAlBA,EAAIoyB,UAEb,OAAOpyB,EAAIoyB,UAAU,gBAGvB,GAA2B,iBAAhBpyB,EAAIgnB,QAEb,OAAOhnB,EAAIgnB,SAAWhnB,EAAIgnB,QAAQ,gBAhEzBqL,CAAeH,IAG1B,GAAsB,iBAAXA,EACT,MAAM,IAAI10B,UAAU,8CAGtB,IAKI7B,EACA4rB,EAGAlsB,EATA0F,EAAQmxB,EAAOrvB,QAAQ,KAOvB7C,EAqFN,SAAmBkyB,GACjB,IAAI3K,EAAQkrD,EAAWnpE,KAAK4oB,EAAOhyB,eAEnC,IAAKqnB,EACH,MAAM,IAAI/pB,UAAU,sBAGtB,IAEIk1E,EAFA5uE,EAAOyjB,EAAM,GACbkhC,EAAUlhC,EAAM,GAIhBxmB,EAAQ0nD,EAAQ7U,YAAY,MACjB,IAAX7yC,IACF2xE,EAASjqB,EAAQ7lD,OAAO7B,EAAQ,GAChC0nD,EAAUA,EAAQ7lD,OAAO,EAAG7B,IAS9B,MANU,CACR+C,KAAMA,EACN2kD,QAASA,EACTiqB,OAAQA,GA1GAC,EANY,IAAX5xE,EACPmxB,EAAOtvB,OAAO,EAAG7B,GACjBmxB,GAKAryB,EAAS,GAGbqyE,EAAY5/C,UAAYvxB,EAExB,KAAOwmB,EAAQ2qD,EAAY5oE,KAAK4oB,IAAS,CACvC,GAAI3K,EAAMxmB,QAAUA,EAClB,MAAM,IAAIvD,UAAU,4BAGtBuD,GAASwmB,EAAM,GAAGrpB,OAClBvC,EAAM4rB,EAAM,GAAGrnB,cAGE,OAFjB7E,EAAQksB,EAAM,IAEJ,KAERlsB,EAAQA,EACLuH,OAAO,EAAGvH,EAAM6C,OAAS,GACzB2b,QAAQw4D,EAAY,OAGzBxyE,EAAOlE,GAAON,EAGhB,IAAe,IAAX0F,GAAgBA,IAAUmxB,EAAOh0B,OACnC,MAAM,IAAIV,UAAU,4BAKtB,OAFAwC,EAAIue,WAAa1e,EAEVG,I;;;;;;ACpLT7F,EAAOD,QAAU,EAAQ,M;;;;;GCEzB,IAAIokC,EAAQ,EAAQ,IAChBtK,EAAQ,EAAQ,EAAR,CAAiB,mBACzBmvC,EAAO,EAAQ,IACf18C,EAAS,EAAQ,IAMrBtsB,EAAOD,QAUP,SAAcgK,GACZ,IAAIoW,EAAOpW,GAAW,GAElBkwB,GAA2B,IAAjB9Z,EAAK8Z,QACfruB,EAA8B,iBAAfuU,EAAKvU,MACpBu4B,EAAMxhB,MAAMxC,EAAKvU,OAAS,SAC1BuU,EAAKvU,MACLjC,EAAOwW,EAAKxW,MAAQ,2BACpBqwB,EAAS7Z,EAAK6Z,SAAU,EAE5B,IAAe,IAAXA,GAAsC,mBAAXA,EAC7B,MAAM,IAAI32B,UAAU,kCAItB,IAAI6lE,EAA8B,mBAATv/D,EAkD3B,SAAsBA,GACpB,OAAO,SAAoBijB,GACzB,OAAOpC,QAAQ8B,EAAOM,EAAKjjB,KAnDzBw/D,CAAYx/D,GACZA,EAEJ,SAASgZ,EAAO5b,GACd,OAAOA,EAGT,OAAO,SAAoB6lB,EAAK0G,EAAKnuB,GACnC,OAAIynB,EAAImN,OACNF,EAAM,4BACN10B,MAIFynB,EAAIpK,KAAOoK,EAAIpK,MAAQ,GAGlB8J,EAAOa,QAAQP,IAMpBiN,EAAM,kBAAmBjN,EAAIC,QAAQ,iBAGhCq8C,EAAYt8C,QAOjBo8C,EAAKp8C,EAAK0G,EAAKnuB,EAAMwd,EAAOkX,EAAO,CACjCz2B,SAAU,KACV62B,QAASA,EACTruB,MAAOA,EACPouB,OAAQA,KAVRH,EAAM,qBACN10B,OAVA00B,EAAM,wBACN10B,S;;;;;GCtDN,IAAIg/B,EAAQ,EAAQ,IAChBniB,EAAc,EAAQ,IACtB6X,EAAQ,EAAQ,EAAR,CAAiB,oBACzBmvC,EAAO,EAAQ,IACf18C,EAAS,EAAQ,IAMrBtsB,EAAOD,QAUP,SAAegK,GACb,IAAIoW,EAAOpW,GAAW,GAElB0uE,EAAiBt4D,EAAKs4D,gBAAkB,QACxCx+C,GAA2B,IAAjB9Z,EAAK8Z,QACfruB,EAA8B,iBAAfuU,EAAKvU,MACpBu4B,EAAMxhB,MAAMxC,EAAKvU,OAAS,SAC1BuU,EAAKvU,MACLjC,EAAOwW,EAAKxW,MAAQ,aACpBqwB,EAAS7Z,EAAK6Z,SAAU,EAE5B,IAAe,IAAXA,GAAsC,mBAAXA,EAC7B,MAAM,IAAI32B,UAAU,kCAItB,IAAI6lE,EAA8B,mBAATv/D,EAoE3B,SAAsBA,GACpB,OAAO,SAAoBijB,GACzB,OAAOpC,QAAQ8B,EAAOM,EAAKjjB,KArEzBw/D,CAAYx/D,GACZA,EAEJ,SAASgZ,EAAO5b,GACd,OAAOA,EAGT,OAAO,SAAqB6lB,EAAK0G,EAAKnuB,GACpC,GAAIynB,EAAImN,MAGN,OAFAF,EAAM,4BACN10B,IAOF,GAHAynB,EAAIpK,KAAOoK,EAAIpK,MAAQ,IAGlB8J,EAAOa,QAAQP,GAGlB,OAFAiN,EAAM,wBACN10B,IAOF,GAHA00B,EAAM,kBAAmBjN,EAAIC,QAAQ,kBAGhCq8C,EAAYt8C,GAGf,OAFAiN,EAAM,qBACN10B,IAKF,IAAI+e,EAmBR,SAAqB0I,GACnB,IACE,OAAQ5K,EAAYW,MAAMiK,GAAKxI,WAAWF,SAAW,IAAIne,cACzD,MAAOgM,GACP,QAvBc03D,CAAW78C,IAAQ6rD,EAGjCzP,EAAKp8C,EAAK0G,EAAKnuB,EAAMwd,EAAOkX,EAAO,CACjCz2B,SAAU8gB,EACV+V,QAASA,EACTruB,MAAOA,EACPouB,OAAQA,O;;;;;;GC3Ed,IAAImK,EAAQ,EAAQ,IAChBniB,EAAc,EAAQ,IACtB0W,EAAc,EAAQ,IACtBmB,EAAQ,EAAQ,EAAR,CAAiB,0BACzBhe,EAAY,EAAQ,EAAR,CAAgB,eAC5BmtD,EAAO,EAAQ,IACf18C,EAAS,EAAQ,IAMrBtsB,EAAOD,QAgBP,SAAqBgK,GACnB,IAAIoW,EAAOpW,GAAW,QAGA/B,IAAlBmY,EAAKu4D,UACP78D,EAAU,+CAGZ,IAAI68D,GAA6B,IAAlBv4D,EAAKu4D,SAChBz+C,GAA2B,IAAjB9Z,EAAK8Z,QACfruB,EAA8B,iBAAfuU,EAAKvU,MACpBu4B,EAAMxhB,MAAMxC,EAAKvU,OAAS,SAC1BuU,EAAKvU,MACLjC,EAAOwW,EAAKxW,MAAQ,oCACpBqwB,EAAS7Z,EAAK6Z,SAAU,EAE5B,IAAe,IAAXA,GAAsC,mBAAXA,EAC7B,MAAM,IAAI32B,UAAU,kCAItB,IAAIywC,EAAa4kC,EAoEnB,SAAyB3uE,GACvB,IAAI4uE,OAA4C3wE,IAA3B+B,EAAQ4uE,eACzB5uE,EAAQ4uE,eACR,IACAh2D,EAAQmjC,EAAO,MAEnB,GAAIp6C,MAAMitE,IAAmBA,EAAiB,EAC5C,MAAM,IAAIt1E,UAAU,mDAGlBwW,SAAS8+D,KACXA,GAAkC,GAGpC,OAAO,SAAqBn2D,GAC1B,IAAIo2D,EAAaC,EAAer2D,EAAMm2D,GAEtC,QAAmB3wE,IAAf4wE,EAEF,MADA/+C,EAAM,uBACAnB,EAAY,IAAK,sBAAuB,CAC5C/uB,KAAM,wBAIV,IAAImvE,EAAa1tE,KAAK8T,IAAI,IAAK05D,GAG/B,OADA/+C,EAAM,8BACClX,EAAMH,EAAM,CACjBI,iBAAiB,EACjBk2D,WAAYA,EACZl8C,MAAOkqC,IACP6R,eAAgBA,KAlGhBI,CAAe54D,GAmLrB,SAAuBpW,GACrB,IAAI4uE,OAA4C3wE,IAA3B+B,EAAQ4uE,eACzB5uE,EAAQ4uE,eACR,IACAh2D,EAAQmjC,EAAO,eAEnB,GAAIp6C,MAAMitE,IAAmBA,EAAiB,EAC5C,MAAM,IAAIt1E,UAAU,mDAGlBwW,SAAS8+D,KACXA,GAAkC,GAGpC,OAAO,SAAqBn2D,GAG1B,QAAmBxa,IAFF6wE,EAAer2D,EAAMm2D,GAIpC,MADA9+C,EAAM,uBACAnB,EAAY,IAAK,sBAAuB,CAC5C/uB,KAAM,wBAKV,OADAkwB,EAAM,qBACClX,EAAMH,OAAMxa,OAAWA,EAAW,CAAEgxE,QAASL,KA3MlDM,CAAa94D,GAGb+oD,EAA8B,mBAATv/D,EAmN3B,SAAsBA,GACpB,OAAO,SAAoBijB,GACzB,OAAOpC,QAAQ8B,EAAOM,EAAKjjB,KApNzBw/D,CAAYx/D,GACZA,EAEJ,SAASgZ,EAAOH,GACd,OAAOA,EAAKze,OACR+vC,EAAWtxB,GACX,GAGN,OAAO,SAA2BoK,EAAK0G,EAAKnuB,GAC1C,GAAIynB,EAAImN,MAGN,OAFAF,EAAM,4BACN10B,IAOF,GAHAynB,EAAIpK,KAAOoK,EAAIpK,MAAQ,IAGlB8J,EAAOa,QAAQP,GAGlB,OAFAiN,EAAM,wBACN10B,IAOF,GAHA00B,EAAM,kBAAmBjN,EAAIC,QAAQ,kBAGhCq8C,EAAYt8C,GAGf,OAFAiN,EAAM,qBACN10B,IAKF,IAAI+e,EAsER,SAAqB0I,GACnB,IACE,OAAQ5K,EAAYW,MAAMiK,GAAKxI,WAAWF,SAAW,IAAIne,cACzD,MAAOgM,GACP,QA1Ec03D,CAAW78C,IAAQ,QACjC,GAAgB,UAAZ1I,EAMF,OALA2V,EAAM,wBACN10B,EAAKuzB,EAAY,IAAK,wBAA0BxU,EAAQqW,cAAgB,IAAK,CAC3ErW,QAASA,EACTva,KAAM,yBAMVq/D,EAAKp8C,EAAK0G,EAAKnuB,EAAMwd,EAAOkX,EAAO,CACjCA,MAAOA,EACPz2B,SAAU8gB,EACV+V,QAASA,EACTruB,MAAOA,EACPouB,OAAQA,MAxFd,IAAI4tC,EAAUjnE,OAAOY,OAAO,MA8J5B,SAASs3E,EAAgBr2D,EAAM5W,GAI7B,IAHA,IAAIJ,EAAQ,EACR5E,EAAQ,GAEmC,KAAvCA,EAAQ4b,EAAK9Z,QAAQ,IAAK9B,KAIhC,GAFAA,MADA4E,IAGcI,EACZ,OAIJ,OAAOJ,EAWT,SAASs6C,EAAQtlD,GACf,IAAIuzB,EAAM6zC,EAAQpnE,GAElB,QAAYwH,IAAR+rB,EACF,OAAOA,EAAIpR,MAIb,OAAQniB,GACN,IAAK,KACHuzB,EAAM,EAAQ,IACd,MACF,IAAK,cACHA,EAAM,EAAQ,IAOlB,OAFA6zC,EAAQpnE,GAAQuzB,EAETA,EAAIpR,Q,6BCxOb,IAAIlW,EAAQ,EAAQ,IAChBoyB,EAAU,EAAQ,IAClB/c,EAAMnhB,OAAOkB,UAAUC,eAEvBo3E,EAAwB,CACxBC,SAAU,SAAkB1N,GACxB,OAAOA,EAAS,MAEpB2N,MAAO,QACPC,QAAS,SAAiB5N,EAAQjqE,GAC9B,OAAOiqE,EAAS,IAAMjqE,EAAM,KAEhC83E,OAAQ,SAAgB7N,GACpB,OAAOA,IAIX/nE,EAAUD,MAAMC,QAChB0F,EAAO3F,MAAM5B,UAAUuH,KACvBmwE,EAAc,SAAU/1E,EAAKg2E,GAC7BpwE,EAAKJ,MAAMxF,EAAKE,EAAQ81E,GAAgBA,EAAe,CAACA,KAGxDC,EAAQ5jE,KAAKhU,UAAU63E,YAEvBC,EAAW,CACXC,gBAAgB,EAChBC,WAAW,EACX31D,QAAS,QACT41D,iBAAiB,EACjBC,UAAW,IACXpyD,QAAQ,EACR5B,QAAStZ,EAAMkb,OACfqyD,kBAAkB,EAClB1uC,UAAWzM,EAAQ0M,WAAW1M,EAAiB,SAE/Cw6C,SAAS,EACTY,cAAe,SAAuBxrE,GAClC,OAAOgrE,EAAMr5E,KAAKqO,IAEtByrE,WAAW,EACXC,oBAAoB,GAGpBv7C,EAAY,SAASA,EACrBj9B,EACA8pE,EACA2O,EACAD,EACAD,EACAn0D,EACA04B,EACAv9B,EACA24D,EACAI,EACA3uC,EACA0uC,EACA91D,GAEA,IAAIre,EAAMlE,EASV,GARsB,mBAAX88C,EACP54C,EAAM44C,EAAOgtB,EAAQ5lE,GACdA,aAAegQ,KACtBhQ,EAAMo0E,EAAcp0E,GACW,UAAxBu0E,GAAmC12E,EAAQmC,KAClDA,EAAMA,EAAIoF,KAAK,MAGP,OAARpF,EAAc,CACd,GAAIs0E,EACA,OAAOp0D,IAAYi0D,EAAmBj0D,EAAQ0lD,EAAQkO,EAAS5zD,QAAS7B,GAAWunD,EAGvF5lE,EAAM,GAGV,GAAmB,iBAARA,GAAmC,iBAARA,GAAmC,kBAARA,GAAqB4G,EAAMgW,SAAS5c,GACjG,OAAIkgB,EAEO,CAACulB,EADO0uC,EAAmBvO,EAAS1lD,EAAQ0lD,EAAQkO,EAAS5zD,QAAS7B,IAC/C,IAAMonB,EAAUvlB,EAAQlgB,EAAK8zE,EAAS5zD,QAAS7B,KAE1E,CAAConB,EAAUmgC,GAAU,IAAMngC,EAAUpwB,OAAOrV,KAGvD,IAMIw0E,EANA5wE,EAAS,GAEb,QAAmB,IAAR5D,EACP,OAAO4D,EAIX,GAAI/F,EAAQ+6C,GACR47B,EAAU57B,MACP,CACH,IAAIj5C,EAAO7E,OAAO6E,KAAKK,GACvBw0E,EAAUn5D,EAAO1b,EAAK0b,KAAKA,GAAQ1b,EAGvC,IAAK,IAAIvF,EAAI,EAAGA,EAAIo6E,EAAQt2E,SAAU9D,EAAG,CACrC,IAAIuB,EAAM64E,EAAQp6E,GAEdi6E,GAA0B,OAAbr0E,EAAIrE,KAIjBkC,EAAQmC,GACR0zE,EAAY9vE,EAAQm1B,EAChB/4B,EAAIrE,GAC2B,mBAAxB44E,EAAqCA,EAAoB3O,EAAQjqE,GAAOiqE,EAC/E2O,EACAD,EACAD,EACAn0D,EACA04B,EACAv9B,EACA24D,EACAI,EACA3uC,EACA0uC,EACA91D,IAGJq1D,EAAY9vE,EAAQm1B,EAChB/4B,EAAIrE,GACJiqE,GAAUoO,EAAY,IAAMr4E,EAAM,IAAMA,EAAM,KAC9C44E,EACAD,EACAD,EACAn0D,EACA04B,EACAv9B,EACA24D,EACAI,EACA3uC,EACA0uC,EACA91D,KAKZ,OAAOza,GAiDXzJ,EAAOD,QAAU,SAAU4B,EAAQwe,GAC/B,IAGIk6D,EAHAx0E,EAAMlE,EACNoI,EAhDwB,SAAmCoW,GAC/D,IAAKA,EACD,OAAOw5D,EAGX,GAAqB,OAAjBx5D,EAAK4F,cAAqC/d,IAAjBmY,EAAK4F,SAAiD,mBAAjB5F,EAAK4F,QACnE,MAAM,IAAI1iB,UAAU,iCAGxB,IAAI6gB,EAAU/D,EAAK+D,SAAWy1D,EAASz1D,QACvC,QAA4B,IAAjB/D,EAAK+D,SAA4C,UAAjB/D,EAAK+D,SAAwC,eAAjB/D,EAAK+D,QACxE,MAAM,IAAI7gB,UAAU,qEAGxB,IAAI6C,EAAS24B,EAAiB,QAC9B,QAA2B,IAAhB1e,EAAKja,OAAwB,CACpC,IAAK4b,EAAI1hB,KAAKy+B,EAAQ0M,WAAYprB,EAAKja,QACnC,MAAM,IAAI7C,UAAU,mCAExB6C,EAASia,EAAKja,OAElB,IAAIolC,EAAYzM,EAAQ0M,WAAWrlC,GAE/Bu4C,EAASk7B,EAASl7B,OAKtB,OAJ2B,mBAAhBt+B,EAAKs+B,QAAyB/6C,EAAQyc,EAAKs+B,WAClDA,EAASt+B,EAAKs+B,QAGX,CACHm7B,eAA+C,kBAAxBz5D,EAAKy5D,eAA+Bz5D,EAAKy5D,eAAiBD,EAASC,eAC1FC,eAAqC,IAAnB15D,EAAK05D,UAA4BF,EAASE,YAAc15D,EAAK05D,UAC/E31D,QAASA,EACT41D,gBAAiD,kBAAzB35D,EAAK25D,gBAAgC35D,EAAK25D,gBAAkBH,EAASG,gBAC7FC,eAAqC,IAAnB55D,EAAK45D,UAA4BJ,EAASI,UAAY55D,EAAK45D,UAC7EpyD,OAA+B,kBAAhBxH,EAAKwH,OAAuBxH,EAAKwH,OAASgyD,EAAShyD,OAClE5B,QAAiC,mBAAjB5F,EAAK4F,QAAyB5F,EAAK4F,QAAU4zD,EAAS5zD,QACtEi0D,iBAAmD,kBAA1B75D,EAAK65D,iBAAiC75D,EAAK65D,iBAAmBL,EAASK,iBAChGv7B,OAAQA,EACRnT,UAAWA,EACX2uC,cAA6C,mBAAvB95D,EAAK85D,cAA+B95D,EAAK85D,cAAgBN,EAASM,cACxFC,UAAqC,kBAAnB/5D,EAAK+5D,UAA0B/5D,EAAK+5D,UAAYP,EAASO,UAC3Eh5D,KAA2B,mBAAdf,EAAKe,KAAsBf,EAAKe,KAAO,KACpDi5D,mBAAuD,kBAA5Bh6D,EAAKg6D,mBAAmCh6D,EAAKg6D,mBAAqBR,EAASQ,oBAM5FG,CAA0Bn6D,GAKV,mBAAnBpW,EAAQ00C,OAEf54C,GADA44C,EAAS10C,EAAQ00C,QACJ,GAAI54C,GACVnC,EAAQqG,EAAQ00C,UAEvB47B,EADStwE,EAAQ00C,QAIrB,IAMI87B,EANA/0E,EAAO,GAEX,GAAmB,iBAARK,GAA4B,OAARA,EAC3B,MAAO,GAKP00E,EADAp6D,GAAQA,EAAKo6D,eAAerB,EACd/4D,EAAKo6D,YACZp6D,GAAQ,YAAaA,EACdA,EAAKk5D,QAAU,UAAY,SAE3B,UAGlB,IAAIe,EAAsBlB,EAAsBqB,GAE3CF,IACDA,EAAU15E,OAAO6E,KAAKK,IAGtBkE,EAAQmX,MACRm5D,EAAQn5D,KAAKnX,EAAQmX,MAGzB,IAAK,IAAIjhB,EAAI,EAAGA,EAAIo6E,EAAQt2E,SAAU9D,EAAG,CACrC,IAAIuB,EAAM64E,EAAQp6E,GAEd8J,EAAQmwE,WAA0B,OAAbr0E,EAAIrE,IAG7B+3E,EAAY/zE,EAAMo5B,EACd/4B,EAAIrE,GACJA,EACA44E,EACArwE,EAAQowE,mBACRpwE,EAAQmwE,UACRnwE,EAAQ4d,OAAS5d,EAAQgc,QAAU,KACnChc,EAAQ00C,OACR10C,EAAQmX,KACRnX,EAAQ8vE,UACR9vE,EAAQkwE,cACRlwE,EAAQuhC,UACRvhC,EAAQiwE,iBACRjwE,EAAQma,UAIhB,IAAIs2D,EAASh1E,EAAKyF,KAAKlB,EAAQgwE,WAC3BtO,GAAoC,IAA3B1hE,EAAQ6vE,eAA0B,IAAM,GAYrD,OAVI7vE,EAAQ+vE,kBACgB,eAApB/vE,EAAQma,QAERunD,GAAU,uBAGVA,GAAU,mBAIX+O,EAAOz2E,OAAS,EAAI0nE,EAAS+O,EAAS,K,6BCzQjD,IAAI/tE,EAAQ,EAAQ,IAEhBqV,EAAMnhB,OAAOkB,UAAUC,eAEvB63E,EAAW,CACXE,WAAW,EACXj3D,iBAAiB,EACjBk2D,WAAY,GACZ50D,QAAS,QACT41D,iBAAiB,EACjBV,OAAO,EACPxsC,QAASngC,EAAMiuB,OACfq/C,UAAW,IACXn9C,MAAO,EACP69C,mBAAmB,EACnBC,0BAA0B,EAC1B/B,eAAgB,IAChBgC,aAAa,EACbhsC,cAAc,EACdwrC,oBAAoB,GAGpBO,EAA2B,SAAU3/D,GACrC,OAAOA,EAAI2E,QAAQ,YAAa,SAAU0vB,EAAIwrC,GAC1C,OAAO1/D,OAAOu6B,aAAa5qB,SAAS+vD,EAAW,QA4GnDC,EAAY,SAA8BC,EAAU/vE,EAAKhB,GACzD,GAAK+wE,EAAL,CAKA,IAAIt5E,EAAMuI,EAAQ8vE,UAAYiB,EAASp7D,QAAQ,cAAe,QAAUo7D,EAKpEC,EAAQ,gBAIRC,EALW,eAKQ7rE,KAAK3N,GACxB0wC,EAAS8oC,EAAUx5E,EAAI4F,MAAM,EAAG4zE,EAAQp0E,OAASpF,EAIjDgE,EAAO,GACX,GAAI0sC,EAAQ,CAER,IAAKnoC,EAAQ4kC,cAAgB7sB,EAAI1hB,KAAKO,OAAOkB,UAAWqwC,KAC/CnoC,EAAQ6Y,gBACT,OAIRpd,EAAK4D,KAAK8oC,GAMd,IADA,IAAIjyC,EAAI,EAC+B,QAA/B+6E,EAAUD,EAAM5rE,KAAK3N,KAAkBvB,EAAI8J,EAAQ6yB,OAAO,CAE9D,GADA38B,GAAK,GACA8J,EAAQ4kC,cAAgB7sB,EAAI1hB,KAAKO,OAAOkB,UAAWm5E,EAAQ,GAAG5zE,MAAM,GAAI,MACpE2C,EAAQ6Y,gBACT,OAGRpd,EAAK4D,KAAK4xE,EAAQ,IAStB,OAJIA,GACAx1E,EAAK4D,KAAK,IAAM5H,EAAI4F,MAAM4zE,EAAQp0E,OAAS,KAnFjC,SAAUq0E,EAAOlwE,EAAKhB,GAGpC,IAFA,IAAImxE,EAAOnwE,EAEF9K,EAAIg7E,EAAMl3E,OAAS,EAAG9D,GAAK,IAAKA,EAAG,CACxC,IAAI4F,EACAs7B,EAAO85C,EAAMh7E,GAEjB,GAAa,OAATkhC,GAAiBp3B,EAAQ4wE,YACzB90E,EAAM,GAAGmb,OAAOk6D,OACb,CACHr1E,EAAMkE,EAAQ4kC,aAAehuC,OAAOY,OAAO,MAAQ,GACnD,IAAI45E,EAA+B,MAAnBh6C,EAAK7I,OAAO,IAA+C,MAAjC6I,EAAK7I,OAAO6I,EAAKp9B,OAAS,GAAao9B,EAAK/5B,MAAM,GAAI,GAAK+5B,EACjGv6B,EAAQikB,SAASswD,EAAW,IAC3BpxE,EAAQ4wE,aAA6B,KAAdQ,GAGvBzvE,MAAM9E,IACJu6B,IAASg6C,GACTjgE,OAAOtU,KAAWu0E,GAClBv0E,GAAS,GACRmD,EAAQ4wE,aAAe/zE,GAASmD,EAAQ+uE,YAE5CjzE,EAAM,IACFe,GAASs0E,EAEbr1E,EAAIs1E,GAAaD,EAXjBr1E,EAAM,CAAEu1E,EAAGF,GAenBA,EAAOr1E,EAGX,OAAOq1E,EAsDAG,CAAY71E,EAAMuF,EAAKhB,KAoClC/J,EAAOD,QAAU,SAAUgb,EAAKoF,GAC5B,IAAIpW,EAlCoB,SAA+BoW,GACvD,IAAKA,EACD,OAAOw5D,EAGX,GAAqB,OAAjBx5D,EAAKysB,cAAqC5kC,IAAjBmY,EAAKysB,SAAiD,mBAAjBzsB,EAAKysB,QACnE,MAAM,IAAIvpC,UAAU,iCAGxB,QAA4B,IAAjB8c,EAAK+D,SAA4C,UAAjB/D,EAAK+D,SAAwC,eAAjB/D,EAAK+D,QACxE,MAAM,IAAIla,MAAM,qEAEpB,IAAIka,OAAkC,IAAjB/D,EAAK+D,QAA0By1D,EAASz1D,QAAU/D,EAAK+D,QAE5E,MAAO,CACH21D,eAAqC,IAAnB15D,EAAK05D,UAA4BF,EAASE,YAAc15D,EAAK05D,UAC/Ej3D,gBAAiD,kBAAzBzC,EAAKyC,gBAAgCzC,EAAKyC,gBAAkB+2D,EAAS/2D,gBAC7Fk2D,WAAuC,iBAApB34D,EAAK24D,WAA0B34D,EAAK24D,WAAaa,EAASb,WAC7E50D,QAASA,EACT41D,gBAAiD,kBAAzB35D,EAAK25D,gBAAgC35D,EAAK25D,gBAAkBH,EAASG,gBAC7FV,MAA6B,kBAAfj5D,EAAKi5D,MAAsBj5D,EAAKi5D,MAAQO,EAASP,MAC/DxsC,QAAiC,mBAAjBzsB,EAAKysB,QAAyBzsB,EAAKysB,QAAU+sC,EAAS/sC,QACtEmtC,UAAqC,iBAAnB55D,EAAK45D,WAA0BttE,EAAM6iC,SAASnvB,EAAK45D,WAAa55D,EAAK45D,UAAYJ,EAASI,UAC5Gn9C,MAA6B,iBAAfzc,EAAKyc,MAAqBzc,EAAKyc,MAAQ+8C,EAAS/8C,MAC9D69C,mBAA8C,IAA3Bt6D,EAAKs6D,kBACxBC,yBAAmE,kBAAlCv6D,EAAKu6D,yBAAyCv6D,EAAKu6D,yBAA2Bf,EAASe,yBACxH/B,eAA+C,iBAAxBx4D,EAAKw4D,eAA8Bx4D,EAAKw4D,eAAiBgB,EAAShB,eACzFgC,aAAkC,IAArBx6D,EAAKw6D,YAClBhsC,aAA2C,kBAAtBxuB,EAAKwuB,aAA6BxuB,EAAKwuB,aAAegrC,EAAShrC,aACpFwrC,mBAAuD,kBAA5Bh6D,EAAKg6D,mBAAmCh6D,EAAKg6D,mBAAqBR,EAASQ,oBAK5FmB,CAAsBn7D,GAEpC,GAAY,KAARpF,SAAcA,EACd,OAAOhR,EAAQ4kC,aAAehuC,OAAOY,OAAO,MAAQ,GASxD,IANA,IAAIg6E,EAAyB,iBAARxgE,EA5LP,SAAgCA,EAAKhR,GACnD,IAKI9J,EALA4F,EAAM,GACN21E,EAAWzxE,EAAQ0wE,kBAAoB1/D,EAAI2E,QAAQ,MAAO,IAAM3E,EAChEnP,EAAQ7B,EAAQ4uE,iBAAmB7R,SAAW9+D,EAAY+B,EAAQ4uE,eAClEx1D,EAAQq4D,EAAShsE,MAAMzF,EAAQgwE,UAAWnuE,GAC1C6vE,GAAa,EAGbv3D,EAAUna,EAAQma,QACtB,GAAIna,EAAQ+vE,gBACR,IAAK75E,EAAI,EAAGA,EAAIkjB,EAAMpf,SAAU9D,EACM,IAA9BkjB,EAAMljB,GAAGyI,QAAQ,WAbX,mBAcFya,EAAMljB,GACNikB,EAAU,QAlBZ,wBAmBSf,EAAMljB,KACbikB,EAAU,cAEdu3D,EAAYx7E,EACZA,EAAIkjB,EAAMpf,QAKtB,IAAK9D,EAAI,EAAGA,EAAIkjB,EAAMpf,SAAU9D,EAC5B,GAAIA,IAAMw7E,EAAV,CAGA,IAKIj6E,EAAKuJ,EALL04B,EAAOtgB,EAAMljB,GAEby7E,EAAmBj4C,EAAK/6B,QAAQ,MAChC8wC,GAA4B,IAAtBkiC,EAA0Bj4C,EAAK/6B,QAAQ,KAAOgzE,EAAmB,GAG9D,IAATliC,GACAh4C,EAAMuI,EAAQ6iC,QAAQnJ,EAAMk2C,EAAS/sC,QAAS1oB,GAC9CnZ,EAAMhB,EAAQowE,mBAAqB,KAAO,KAE1C34E,EAAMuI,EAAQ6iC,QAAQnJ,EAAKr8B,MAAM,EAAGoyC,GAAMmgC,EAAS/sC,QAAS1oB,GAC5DnZ,EAAMhB,EAAQ6iC,QAAQnJ,EAAKr8B,MAAMoyC,EAAM,GAAImgC,EAAS/sC,QAAS1oB,IAG7DnZ,GAAOhB,EAAQ2wE,0BAAwC,eAAZx2D,IAC3CnZ,EAAM2vE,EAAyB3vE,IAG/BA,GAAOhB,EAAQqvE,OAASruE,EAAIrC,QAAQ,MAAQ,IAC5CqC,EAAMA,EAAIyE,MAAM,MAGhBsS,EAAI1hB,KAAKyF,EAAKrE,GACdqE,EAAIrE,GAAOiL,EAAM23B,QAAQv+B,EAAIrE,GAAMuJ,GAEnClF,EAAIrE,GAAOuJ,EAInB,OAAOlF,EAoIiC81E,CAAY5gE,EAAKhR,GAAWgR,EAChElV,EAAMkE,EAAQ4kC,aAAehuC,OAAOY,OAAO,MAAQ,GAInDiE,EAAO7E,OAAO6E,KAAK+1E,GACdt7E,EAAI,EAAGA,EAAIuF,EAAKzB,SAAU9D,EAAG,CAClC,IAAIuB,EAAMgE,EAAKvF,GACX27E,EAASf,EAAUr5E,EAAK+5E,EAAQ/5E,GAAMuI,GAC1ClE,EAAM4G,EAAM8iC,MAAM1pC,EAAK+1E,EAAQ7xE,GAGnC,OAAO0C,EAAMmiC,QAAQ/oC,K;;;;;;GClOzB7F,EAAOD,QAmBP,SAAe87E,EAAM7nC,EAAK8nC,GACxB,IAAKD,EACH,MAAM,IAAIx4E,UAAU,6BAGtB,IAAK2wC,EACH,MAAM,IAAI3wC,UAAU,iCAGL2E,IAAb8zE,IAEFA,GAAW,GAcb,OAXAn7E,OAAO+oE,oBAAoB11B,GAAK1sC,QAAQ,SAAgC9G,GACtE,GAAKs7E,IAAYh6E,EAAe1B,KAAKy7E,EAAMr7E,GAA3C,CAMA,IAAI4a,EAAaza,OAAO0a,yBAAyB24B,EAAKxzC,GACtDG,OAAOC,eAAei7E,EAAMr7E,EAAM4a,MAG7BygE,GArCT,IAAI/5E,EAAiBnB,OAAOkB,UAAUC,gB;;;;;;;GCNtC,IAAIi6E,EAAe,EAAQ,KACvB1U,EAAS,EAAQ,IACjBt3B,EAAU,EAAQ,IAClBisC,EAAa,EAAQ,KACrBxpE,EAAQ,EAAQ,IAChBqnB,EAAQ,EAAQ,EAAR,CAAiB,uBACzBoiD,EAAO,EAAQ,KACfn9C,EAAO,EAAQ,IACfjb,EAAc,EAAQ,IAAWA,YACjCC,EAAqB,EAAQ,IAAWA,mBACxCC,EAAe,EAAQ,IAAWA,aAClClI,EAAY,EAAQ,EAAR,CAAgB,WAC5BoG,EAAU,EAAQ,IAClBstB,EAAQ,EAAQ,IAChBlrC,EAAU,EAAQ,GAAQA,QAC1BymB,EAAiB,EAAQ,IACzB1jB,EAAQ3D,MAAM5B,UAAUuF,MAMxBkgE,EAAgBtnE,EAAOD,QAAU,GA8kBrC,SAASm8E,EAAS33E,GAEQ,SAApBG,KAAK5D,IAAI,QAAmBwgB,QAAQ/Y,MAAMhE,EAAIiE,OAASjE,EAAIoN,YA7jBjE21D,EAAIz7B,KAAO,WACTnnC,KAAKq3D,MAAQ,GACbr3D,KAAKy3E,QAAU,GACfz3E,KAAK03E,SAAW,GAEhB13E,KAAK23E,wBAQP/U,EAAI+U,qBAAuB,WACzB,IAAI5/D,EAAM,aAGV/X,KAAKqnC,OAAO,gBACZrnC,KAAKoK,IAAI,OAAQ,QACjBpK,KAAKoK,IAAI,MAAO2N,GAChB/X,KAAKoK,IAAI,eAAgB,YACzBpK,KAAKoK,IAAI,mBAAoB,GAC7BpK,KAAKoK,IAAI,eAAe,GAGxBnO,OAAOC,eAAe8D,KAAK03E,SArCC,+BAqCkC,CAC5D98D,cAAc,EACdpe,OAAO,IAGT24B,EAAM,qBAAsBpd,GAE5B/X,KAAKi3B,GAAG,QAAS,SAAiBuW,IAEe,IAA3CxtC,KAAK03E,SA9CiB,iCA+CwB,mBAAtClqC,EAAOkqC,SAAS,2BACnB13E,KAAK03E,SAAS,sBACd13E,KAAK03E,SAAS,mBAIvBtxD,EAAepmB,KAAKy6C,QAASjN,EAAOiN,SACpCr0B,EAAepmB,KAAK4iD,SAAUpV,EAAOoV,UACrCx8B,EAAepmB,KAAKy3E,QAASjqC,EAAOiqC,SACpCrxD,EAAepmB,KAAK03E,SAAUlqC,EAAOkqC,YAIvC13E,KAAK43E,OAAS37E,OAAOY,OAAO,MAG5BmD,KAAK63E,UAAY,IAGjB73E,KAAK43E,OAAOF,SAAW13E,KAAK03E,SAG5B13E,KAAKoK,IAAI,OAAQmtE,GACjBv3E,KAAKoK,IAAI,QAASzK,EAAQ,UAC1BK,KAAKoK,IAAI,sBAAuB,YAG9BpK,KAAKqnC,OAAO,cAGdprC,OAAOC,eAAe8D,KAAM,SAAU,CACpC5D,IAAK,WACH,MAAM,IAAIkJ,MAAM,qHAatBs9D,EAAIkV,WAAa,WACV93E,KAAK+3E,UACR/3E,KAAK+3E,QAAU,IAAIpV,EAAO,CACxB/2B,cAAe5rC,KAAKsmC,QAAQ,0BAC5BwF,OAAQ9rC,KAAKsmC,QAAQ,oBAGvBtmC,KAAK+3E,QAAQxpC,IAAIzgC,EAAM9N,KAAK5D,IAAI,qBAChC4D,KAAK+3E,QAAQxpC,IAAI+oC,EAAWnwC,KAAKnnC,SAarC4iE,EAAIl3B,OAAS,SAAgBxjB,EAAK0G,EAAKvuB,GACrC,IAAIorC,EAASzrC,KAAK+3E,QAGd51E,EAAO9B,GAAYg3E,EAAanvD,EAAK0G,EAAK,CAC5C7W,IAAK/X,KAAK5D,IAAI,OACd47E,QAASR,EAASz6E,KAAKiD,QAIzB,IAAKyrC,EAGH,OAFAtW,EAAM,iCACNhzB,IAIFspC,EAAOC,OAAOxjB,EAAK0G,EAAKzsB,IAa1BygE,EAAIr0B,IAAM,SAAapuC,GACrB,IAAIiM,EAAS,EACTmS,EAAO,IAIX,GAAkB,mBAAPpe,EAAmB,CAG5B,IAFA,IAAI+zB,EAAM/zB,EAEHpB,MAAMC,QAAQk1B,IAAuB,IAAfA,EAAI70B,QAC/B60B,EAAMA,EAAI,GAIO,mBAARA,IACT9nB,EAAS,EACTmS,EAAOpe,GAIX,IAAI83E,EAAM16D,EAAQ7a,EAAMhH,KAAKiH,UAAWyJ,IAExC,GAAmB,IAAf6rE,EAAI54E,OACN,MAAM,IAAIV,UAAU,4CAItBqB,KAAK83E,aACL,IAAIrsC,EAASzrC,KAAK+3E,QA0BlB,OAxBAE,EAAIr1E,QAAQ,SAAUzC,GAEpB,IAAKA,IAAOA,EAAGurC,SAAWvrC,EAAGiK,IAC3B,OAAOqhC,EAAO8C,IAAIhwB,EAAMpe,GAG1Bg1B,EAAM,oBAAqB5W,GAC3Bpe,EAAG03E,UAAYt5D,EACfpe,EAAGqtC,OAASxtC,KAGZyrC,EAAO8C,IAAIhwB,EAAM,SAAqB2J,EAAK0G,EAAKnuB,GAC9C,IAAIy3E,EAAOhwD,EAAI06C,IACfziE,EAAGurC,OAAOxjB,EAAK0G,EAAK,SAAU/uB,GAC5BumB,EAAe8B,EAAKgwD,EAAKz9B,SACzBr0B,EAAewI,EAAKspD,EAAKt1B,UACzBniD,EAAKZ,OAKTM,EAAG0Y,KAAK,QAAS7Y,OAChBA,MAEIA,MAaT4iE,EAAIz1B,MAAQ,SAAe5uB,GAEzB,OADAve,KAAK83E,aACE93E,KAAK+3E,QAAQ5qC,MAAM5uB,IAqC5BqkD,EAAIuV,OAAS,SAAgBC,EAAKj4E,GAChC,GAAkB,mBAAPA,EACT,MAAM,IAAImF,MAAM,8BAIlB,IAAIskC,EAAuB,MAAXwuC,EAAI,GAChB,IAAMA,EACNA,EAKJ,OAFAp4E,KAAKy3E,QAAQ7tC,GAAazpC,EAEnBH,MAeT4iE,EAAIl/C,MAAQ,SAAe5nB,EAAMqE,GAG/B,GAFAH,KAAK83E,aAED/4E,MAAMC,QAAQlD,GAAO,CACvB,IAAK,IAAIP,EAAI,EAAGA,EAAIO,EAAKuD,OAAQ9D,IAC/ByE,KAAK0jB,MAAM5nB,EAAKP,GAAI4E,GAGtB,OAAOH,KAKT,OAFAA,KAAK+3E,QAAQr0D,MAAM5nB,EAAMqE,GAElBH,MAkBT4iE,EAAIx4D,IAAM,SAAaiuE,EAAShyE,GAC9B,GAAyB,IAArB1D,UAAUtD,OAEZ,OAAOW,KAAK03E,SAASW,GASvB,OANAljD,EAAM,iBAAkBkjD,EAAShyE,GAGjCrG,KAAK03E,SAASW,GAAWhyE,EAGjBgyE,GACN,IAAK,OACHr4E,KAAKoK,IAAI,UAAW+U,EAAY9Y,IAChC,MACF,IAAK,eACHrG,KAAKoK,IAAI,kBAAmBgV,EAAmB/Y,IAC/C,MACF,IAAK,cACHrG,KAAKoK,IAAI,iBAAkBiV,EAAahZ,IAGxCpK,OAAOC,eAAe8D,KAAK03E,SA1UH,+BA0UsC,CAC5D98D,cAAc,EACdpe,OAAO,IAMb,OAAOwD,MAiBT4iE,EAAIrkD,KAAO,WACT,OAAOve,KAAKwtC,OACRxtC,KAAKwtC,OAAOjvB,OAASve,KAAK63E,UAC1B,IAkBNjV,EAAIt8B,QAAU,SAAiB+xC,GAC7B,OAAOvyD,QAAQ9lB,KAAKoK,IAAIiuE,KAkB1BzV,EAAI0V,SAAW,SAAkBD,GAC/B,OAAQr4E,KAAKoK,IAAIiuE,IAWnBzV,EAAIv7B,OAAS,SAAgBgxC,GAC3B,OAAOr4E,KAAKoK,IAAIiuE,GAAS,IAW3BzV,EAAIx7B,QAAU,SAAiBixC,GAC7B,OAAOr4E,KAAKoK,IAAIiuE,GAAS,IAO3BhtC,EAAQzoC,QAAQ,SAAS03B,GACvBsoC,EAAItoC,GAAU,SAAS/b,GACrB,GAAe,QAAX+b,GAAyC,IAArB33B,UAAUtD,OAEhC,OAAOW,KAAKoK,IAAImU,GAGlBve,KAAK83E,aAEL,IAAI3qC,EAAQntC,KAAK+3E,QAAQ5qC,MAAM5uB,GAE/B,OADA4uB,EAAM7S,GAAQh2B,MAAM6oC,EAAOzqC,EAAMhH,KAAKiH,UAAW,IAC1C3C,QAcX4iE,EAAIr6D,IAAM,SAAagW,GACrBve,KAAK83E,aAKL,IAHA,IAAI3qC,EAAQntC,KAAK+3E,QAAQ5qC,MAAM5uB,GAC3B9D,EAAO/X,EAAMhH,KAAKiH,UAAW,GAExBpH,EAAI,EAAGA,EAAI8vC,EAAQhsC,OAAQ9D,IAClC4xC,EAAM9B,EAAQ9vC,IAAI+I,MAAM6oC,EAAO1yB,GAGjC,OAAOza,MAKT4iE,EAAI2V,IAAMphE,EAAUQ,SAASirD,EAAI4V,OAAQ,mCAmBzC5V,EAAI6V,OAAS,SAAgB38E,EAAMuJ,EAAShF,GAC1C,IAKIq4E,EALArhB,EAAQr3D,KAAKq3D,MACbl1D,EAAO9B,EACPo3E,EAAUz3E,KAAKy3E,QACfh8D,EAAOpW,EACPszE,EAAgB,GA+BpB,GA3BuB,mBAAZtzE,IACTlD,EAAOkD,EACPoW,EAAO,IAITovB,EAAM8tC,EAAe34E,KAAK43E,QAGtBn8D,EAAKm9D,SACP/tC,EAAM8tC,EAAel9D,EAAKm9D,SAI5B/tC,EAAM8tC,EAAel9D,GAGM,MAAvBk9D,EAActhB,QAChBshB,EAActhB,MAAQr3D,KAAKsmC,QAAQ,eAIjCqyC,EAActhB,QAChBqhB,EAAOrhB,EAAMv7D,KAIV48E,EAAM,CAST,KANAA,EAAO,IAFI14E,KAAK5D,IAAI,QAEb,CAASN,EAAM,CACpB+8E,cAAe74E,KAAK5D,IAAI,eACxBqgC,KAAMz8B,KAAK5D,IAAI,SACfq7E,QAASA,KAGDl5D,KAAM,CACd,IAAIu6D,EAAO/5E,MAAMC,QAAQ05E,EAAKj8C,OAASi8C,EAAKj8C,KAAKp9B,OAAS,EACtD,gBAAkBq5E,EAAKj8C,KAAK/5B,MAAM,GAAI,GAAG6D,KAAK,QAAU,SAAWmyE,EAAKj8C,KAAKi8C,EAAKj8C,KAAKp9B,OAAS,GAAK,IACrG,cAAgBq5E,EAAKj8C,KAAO,IAC5B58B,EAAM,IAAIyF,MAAM,0BAA4BxJ,EAAO,cAAgBg9E,GAEvE,OADAj5E,EAAI64E,KAAOA,EACJv2E,EAAKtC,GAIV84E,EAActhB,QAChBA,EAAMv7D,GAAQ48E,IAmDpB,SAAmBA,EAAMrzE,EAAShF,GAChC,IACEq4E,EAAKD,OAAOpzE,EAAShF,GACrB,MAAOR,GACPQ,EAASR,IAlDXk5E,CAAUL,EAAMC,EAAex2E,IAwBjCygE,EAAIoW,OAAS,WACX,IAAIC,EAAS7+C,EAAK8+C,aAAal5E,MAC/B,OAAOi5E,EAAOD,OAAO10E,MAAM20E,EAAQt2E,a;;;;;GC5lBrC,IAAIwyB,EAAQ,EAAQ,EAAR,CAAiB,gBACzBqF,EAAY,EAAQ,IACpBC,EAAa,EAAQ,IACrBxF,EAAa,EAAQ,IACrBsW,EAAW,EAAQ,IACnB7kB,EAAW,EAAQ,IACnB4iB,EAAS,EAAQ,IAOjB6vC,EAAsB,WACtBC,EAAiB,MAGjBjjD,EAAgC,mBAAjBmB,aACfA,aACA,SAAUn3B,GAAMoD,QAAQC,SAASrD,EAAGpD,KAAKuH,MAAMnE,EAAIwC,aACnDuzB,EAAajB,EAAWiB,WA6N5B,SAASqJ,EAAa3Q,GACpB,MAAkC,kBAApBA,EAAI2Q,YACdzZ,QAAQ8I,EAAI4Q,SACZ5Q,EAAI2Q,YAjMVjkC,EAAOD,QAYP,SAAuB6sB,EAAK0G,EAAKvpB,GAC/B,IAAIoW,EAAOpW,GAAW,GAGlB0S,EAAM0D,EAAK1D,KAAO,aAGlBigE,EAAUv8D,EAAKu8D,QAEnB,OAAO,SAAUn4E,GACf,IAAIsoB,EACAzP,EACA8N,EAGJ,GAAK3mB,IAAO0/B,EAAY3Q,GAAxB,CAkCA,GA5BI/uB,QAIayD,KAFfkjB,EA+FN,SAA6B3mB,GAE3B,GAA0B,iBAAfA,EAAI2mB,QAAuB3mB,EAAI2mB,QAAU,KAAO3mB,EAAI2mB,OAAS,IACtE,OAAO3mB,EAAI2mB,OAIb,GAA8B,iBAAnB3mB,EAAIs0B,YAA2Bt0B,EAAIs0B,YAAc,KAAOt0B,EAAIs0B,WAAa,IAClF,OAAOt0B,EAAIs0B,WAGb,OA1GaklD,CAAmBx5E,IAI1B2mB,EAoIR,SAAgCoI,GAC9B,IAAIpI,EAASoI,EAAIuF,YAGK,iBAAX3N,GAAuBA,EAAS,KAAOA,EAAS,OACzDA,EAAS,KAGX,OAAOA,EA5IQ8yD,CAAsB1qD,GAG/BzG,EAsCR,SAA0BtoB,GACxB,IAAKA,EAAIsoB,SAAkC,iBAAhBtoB,EAAIsoB,QAC7B,OAMF,IAHA,IAAIA,EAAUlsB,OAAOY,OAAO,MACxBiE,EAAO7E,OAAO6E,KAAKjB,EAAIsoB,SAElB5sB,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,IAAIuB,EAAMgE,EAAKvF,GACf4sB,EAAQrrB,GAAO+C,EAAIsoB,QAAQrrB,GAG7B,OAAOqrB,EAnDSoxD,CAAgB15E,GAI5B6Y,EA4DN,SAA0B7Y,EAAK2mB,EAAQzO,GACrC,IAAIW,EAEQ,eAARX,KAEFW,EAAM7Y,EAAIiE,QAG0B,mBAAjBjE,EAAIoN,WACrByL,EAAM7Y,EAAIoN,aAId,OAAOyL,GAAOgO,EAASF,GAzEbgzD,CAAgB35E,EAAK2mB,EAAQzO,KAGnCyO,EAAS,IACT9N,EAAM,UAAYwP,EAAIoS,OAAS,IAAME,EAyG3C,SAA0BtS,GACxB,IACE,OAAOqjB,EAAShiB,SAASrB,GAAKiB,SAC9B,MAAO9b,GACP,MAAO,YA7G0CosE,CAAgBvxD,KAGjEiN,EAAM,aAAc3O,GAGhB3mB,GAAOm4E,GACT7hD,EAAM6hD,EAASn4E,EAAKqoB,EAAK0G,GAIvB2Q,EAAY3Q,GAGd,OAFAuG,EAAM,+BAAgC3O,QACtC0B,EAAI4O,OAAOyD,WAgJjB,SAAerS,EAAK0G,EAAKpI,EAAQ2B,EAASrc,GACxC,SAASqN,IAEP,IAAI2E,EAxOR,SAA6BhS,GAK3B,MAAO,kHAJI2uB,EAAW3uB,GACnBkP,QAAQo+D,EAAgB,QACxBp+D,QAAQm+D,EAAqB,WASb,6BA4NNv8C,CAAmB9wB,GAG9B8iB,EAAIuF,WAAa3N,EACjBoI,EAAI8qD,cAAgBhzD,EAASF,GA0CjC,SAAqBoI,EAAKzG,GACxB,IAAKA,EACH,OAIF,IADA,IAAIrnB,EAAO7E,OAAO6E,KAAKqnB,GACd5sB,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,IAAIuB,EAAMgE,EAAKvF,GACfqzB,EAAI8O,UAAU5gC,EAAKqrB,EAAQrrB,KA/C3B6gC,CAAW/O,EAAKzG,GAGhByG,EAAI8O,UAAU,0BAA2B,sBACzC9O,EAAI8O,UAAU,yBAA0B,WAGxC9O,EAAI8O,UAAU,eAAgB,4BAC9B9O,EAAI8O,UAAU,iBAAkB5/B,OAAO8/B,WAAW9f,EAAM,SAErC,SAAfoK,EAAIoS,OAKR1L,EAAI+J,IAAI7a,EAAM,QAJZ8Q,EAAI+J,MAOR,GAAIzC,EAAWhO,GAEb,YADA/O,IAKFmwB,EAAOphB,GAGP+M,EAAW/M,EAAK/O,GAChB+O,EAAI6N,SAjLFqJ,CAAKlX,EAAK0G,EAAKpI,EAAQ2B,EAASzP,QAxC9Byc,EAAM,oC,cCxFZ75B,EAAOD,QAuBP,SAASs+E,EAAap7D,EAAMzd,EAAMuE,GAChCA,EAAUA,GAAW,GACrBvE,EAAOA,GAAQ,GACf,IAAIgrC,EAASzmC,EAAQymC,OACrB,IAAInT,GAAsB,IAAhBtzB,EAAQszB,IAClB,IAAIltB,EAAQpG,EAAQopC,UAAY,GAAK,IACrC,IAAImrC,EAAc,EAClB,IAAIC,EAAa/4E,EAAKzB,OACtB,IAAI9D,EAAI,EACR,IAAIO,EAAO,EACX,IAAIH,EAEJ,GAAI4iB,aAAgBkpB,OAAQ,CAC1B,KAAO9rC,EAAIm+E,EAAsBrvE,KAAK8T,EAAK1b,SACzC/B,EAAK4D,KAAK,CACR5I,KAAMA,IACNi+E,UAAU,EACV3tE,OAAQzQ,EAAEuG,QAId,OAAOqc,EAGT,GAAIxf,MAAMC,QAAQuf,GAQhB,OAJAA,EAAOA,EAAKhZ,IAAI,SAAU/I,GACxB,OAAOm9E,EAAan9E,EAAOsE,EAAMuE,GAASxC,SAGrC,IAAI4kC,OAAO,MAAQlpB,EAAKhY,KAAK,KAAO,IAAKkF,GAGlD8S,GAAQ,IAAMA,GAAQutB,EAAS,GAA+B,MAA1BvtB,EAAKA,EAAKlf,OAAS,GAAa,IAAM,OACvE2b,QAAQ,QAAS,QACjBA,QAAQ,YAAa,QACrBA,QAAQ,4CAA6C,SAAU0N,EAAOsxD,EAAOx4E,EAAQ1E,EAAKm9E,EAASC,EAAMH,EAAU3tE,GAClH4tE,EAAQA,GAAS,GACjBx4E,EAASA,GAAU,GACnBy4E,EAAUA,GAAW,SAAWz4E,EAAS,OACzCu4E,EAAWA,GAAY,GAEvBj5E,EAAK4D,KAAK,CACR5I,KAAMgB,EACNi9E,WAAYA,EACZ3tE,OAAQA,EAASwtE,IAGnB,IAAI95E,GACCi6E,EAAW,GAAKC,GACjB,MACAx4E,GAAUu4E,EAAWC,EAAQ,IAAMC,GAClCC,EAAO,WAAa14E,EAAS,UAAY,IAC1C,IACAu4E,EAIJ,OAFAH,GAAe95E,EAAOT,OAASqpB,EAAMrpB,OAE9BS,IAERkb,QAAQ,MAAO,SAAUk/D,EAAMh4E,GAG9B,IAFA,IAAI87B,EAAMl9B,EAAKzB,OAER2+B,KAAQ67C,GAAc/4E,EAAKk9B,GAAK5xB,OAASlK,GAC9CpB,EAAKk9B,GAAK5xB,QAAU,EAGtB,MAAO,SAIX,KAAOzQ,EAAIm+E,EAAsBrvE,KAAK8T,IAAO,CAI3C,IAHA,IAAI47D,EAAc,EACdj4E,EAAQvG,EAAEuG,MAEkB,OAAzBqc,EAAKqV,SAAS1xB,IACnBi4E,IAIEA,EAAc,GAAM,KAIpBN,EAAat+E,IAAMuF,EAAKzB,QAAUyB,EAAK+4E,EAAat+E,GAAG6Q,OAASzQ,EAAEuG,QACpEpB,EAAK8D,OAAOi1E,EAAat+E,EAAG,EAAG,CAC7BO,KAAMA,IACNi+E,UAAU,EACV3tE,OAAQzQ,EAAEuG,QAId3G,KAIFgjB,GAASoa,EAAM,IAAiC,MAA1Bpa,EAAKA,EAAKlf,OAAS,GAAa,GAAK,YAE3D,OAAO,IAAIooC,OAAOlpB,EAAM9S,IAtH1B,IAAIquE,EAAwB,a;;;;;;;GCM5B,IAAI1zD,EAAiB,EAAQ,IAY7B/qB,EAAQ8rC,KAAO,SAASy7B,GACtB,OAAO,SAAqB16C,EAAK0G,EAAKnuB,GAChCmiE,EAAIt8B,QAAQ,iBAAiB1X,EAAI8O,UAAU,eAAgB,WAC/DxV,EAAI0G,IAAMA,EACVA,EAAI1G,IAAMA,EACVA,EAAIznB,KAAOA,EAEX2lB,EAAe8B,EAAK06C,EAAInoB,SACxBr0B,EAAewI,EAAKg0C,EAAIhgB,UAExBh0B,EAAIgpD,OAAShpD,EAAIgpD,QAAU37E,OAAOY,OAAO,MAEzC4D,O;;;;;;;GCxBJ,IAAI00B,EAAQ,EAAQ,EAAR,CAAiB,gBACzB5W,EAAO,EAAQ,GACfmc,EAAK,EAAQ,IAOb0/C,EAAU77D,EAAK67D,QACftqC,EAAWvxB,EAAKuxB,SAChBhV,EAAUvc,EAAKuc,QACfv0B,EAAOgY,EAAKhY,KACZ5G,EAAU4e,EAAK5e,QAuBnB,SAAS43E,EAAKz7E,EAAMuJ,GAClB,IAAIoW,EAAOpW,GAAW,GAOtB,GALArF,KAAK64E,cAAgBp9D,EAAKo9D,cAC1B74E,KAAKo4E,IAAMt9C,EAAQh/B,GACnBkE,KAAKlE,KAAOA,EACZkE,KAAKy8B,KAAOhhB,EAAKghB,MAEZz8B,KAAKo4E,MAAQp4E,KAAK64E,cACrB,MAAM,IAAIvzE,MAAM,kEAGlB,IAAIo+D,EAAW5nE,EAWf,GATKkE,KAAKo4E,MAERp4E,KAAKo4E,IAAgC,MAA1Bp4E,KAAK64E,cAAc,GAC1B,IAAM74E,KAAK64E,cACX74E,KAAK64E,cAETnV,GAAY1jE,KAAKo4E,MAGd38D,EAAKg8D,QAAQz3E,KAAKo4E,KAAM,CAE3B,IAAI/oD,EAAMrvB,KAAKo4E,IAAIr0E,OAAO,GAC1BoxB,EAAM,eAAgB9F,GAGtB,IAAIlvB,EAAK,OAAQkvB,GAAKgrD,UAEtB,GAAkB,mBAAPl6E,EACT,MAAM,IAAImF,MAAM,WAAa+pB,EAAM,qCAGrC5T,EAAKg8D,QAAQz3E,KAAKo4E,KAAOj4E,EAI3BH,KAAKm4E,OAAS18D,EAAKg8D,QAAQz3E,KAAKo4E,KAGhCp4E,KAAKue,KAAOve,KAAKgf,OAAO0kD,GAgF1B,SAAS4W,EAAQ/7D,GACf4W,EAAM,YAAa5W,GAEnB,IACE,OAAOmc,EAAG6/C,SAASh8D,GACnB,MAAOlR,GACP,QAhJJ/R,EAAOD,QAAUk8E,EAoEjBA,EAAKp6E,UAAU6hB,OAAS,SAAgBljB,GACtC,IAAIyiB,EACAi8D,EAAQ,GAAGl+D,OAAOtc,KAAKy8B,MAE3BtH,EAAM,cAAer5B,GAErB,IAAK,IAAIP,EAAI,EAAGA,EAAIi/E,EAAMn7E,SAAWkf,EAAMhjB,IAAK,CAC9C,IAAIkhC,EAAO+9C,EAAMj/E,GAGbqjC,EAAMj/B,EAAQ88B,EAAM3gC,GACpB2+E,EAAML,EAAQx7C,GACd5nB,EAAO84B,EAASlR,GAGpBrgB,EAAOve,KAAKL,QAAQ86E,EAAKzjE,GAG3B,OAAOuH,GAWTg5D,EAAKp6E,UAAUs7E,OAAS,SAAgBpzE,EAAShF,GAC/C80B,EAAM,cAAen1B,KAAKue,MAC1Bve,KAAKm4E,OAAOn4E,KAAKue,KAAMlZ,EAAShF,IAWlCk3E,EAAKp6E,UAAUwC,QAAU,SAAiB86E,EAAKzjE,GAC7C,IAAIohE,EAAMp4E,KAAKo4E,IAGX75D,EAAOhY,EAAKk0E,EAAKzjE,GACjBqoB,EAAOi7C,EAAQ/7D,GAEnB,OAAI8gB,GAAQA,EAAKq7C,SACRn8D,GAKT8gB,EAAOi7C,EADP/7D,EAAOhY,EAAKk0E,EAAK3qC,EAAS94B,EAAMohE,GAAM,QAAUA,MAGpC/4C,EAAKq7C,SACRn8D,OADT,I,cChKF,SAASo8D,EAAoBzyD,GAC5B,IAAI7a,EAAI,IAAI/H,MAAM,uBAAyB4iB,EAAM,KAEjD,MADA7a,EAAE3C,KAAO,mBACH2C,EAEPstE,EAAoB75E,KAAO,WAAa,MAAO,IAC/C65E,EAAoBh7E,QAAUg7E,EAC9Br/E,EAAOD,QAAUs/E,EACjBA,EAAoB5pB,GAAK,K,gBCPzB,IAAI7kD,EAAS,EAAQ,IACjBpO,EAASoO,EAAOpO,OAGpB,SAASuxC,EAAWC,EAAKC,GACvB,IAAK,IAAIzyC,KAAOwyC,EACdC,EAAIzyC,GAAOwyC,EAAIxyC,GAWnB,SAAS0yC,EAAYtb,EAAKpU,EAAkBzgB,GAC1C,OAAOvB,EAAOo2B,EAAKpU,EAAkBzgB,GATnCvB,EAAOU,MAAQV,EAAOC,OAASD,EAAOO,aAAeP,EAAO2xC,gBAC9Dn0C,EAAOD,QAAU6Q,GAGjBmjC,EAAUnjC,EAAQ7Q,GAClBA,EAAQyC,OAAS0xC,GAQnBH,EAAUvxC,EAAQ0xC,GAElBA,EAAWhxC,KAAO,SAAU01B,EAAKpU,EAAkBzgB,GACjD,GAAmB,iBAAR60B,EACT,MAAM,IAAIv1B,UAAU,iCAEtB,OAAOb,EAAOo2B,EAAKpU,EAAkBzgB,IAGvCmwC,EAAWzxC,MAAQ,SAAUC,EAAMG,EAAMO,GACvC,GAAoB,iBAATV,EACT,MAAM,IAAIW,UAAU,6BAEtB,IAAI0D,EAAMvE,EAAOE,GAUjB,YATasF,IAATnF,EACsB,iBAAbO,EACT2D,EAAIlE,KAAKA,EAAMO,GAEf2D,EAAIlE,KAAKA,GAGXkE,EAAIlE,KAAK,GAEJkE,GAGTmtC,EAAWnxC,YAAc,SAAUL,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIW,UAAU,6BAEtB,OAAOb,EAAOE,IAGhBwxC,EAAWC,gBAAkB,SAAUzxC,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIW,UAAU,6BAEtB,OAAOuN,EAAOwjC,WAAW1xC,K;;;;;;GC9C3B,IAAImZ,EAAY,EAAQ,EAAR,CAAgB,eAC5BiP,EAAiB,EAAQ,IACzBM,EAAW,EAAQ,IACnBvZ,EAAW,EAAQ,KACnBumB,EAAe,EAAQ,IAkB3B,SAASC,EAAWnN,GAClB,OAAOtR,OAAOsB,OAAOgQ,GAAQoN,OAAO,GAAK,MA8L3C,SAASC,EAAUC,EAAMh4B,GACvB,IAAIi4B,EAAO93B,OAAO0a,yBAAyBmd,EAAM,QAE7CC,GAAQA,EAAKnZ,eACfmZ,EAAKv3B,MAAQV,EACbG,OAAOC,eAAe43B,EAAM,OAAQC,IA/MxCz4B,EAAOD,QAsBP,SAAS24B,IAEP,IAAIn0B,EACJ,IAAI6Y,EACJ,IAAI8N,EAAS,IACb,IAAIyN,EAAQ,GACZ,IAAK,IAAI14B,EAAI,EAAGA,EAAIoH,UAAUtD,OAAQ9D,IAAK,CACzC,IAAI24B,EAAMvxB,UAAUpH,GACpB,GAAI24B,aAAe5uB,MAEjBkhB,GADA3mB,EAAMq0B,GACO1N,QAAU3mB,EAAIs0B,YAAc3N,OAG3C,cAAe0N,GACb,IAAK,SACHxb,EAAMwb,EACN,MACF,IAAK,SACH1N,EAAS0N,EACC,IAAN34B,GACF4b,EAAU,4DAA8D+c,EAAM,UAEhF,MACF,IAAK,SACHD,EAAQC,GAKQ,iBAAX1N,IAAwBA,EAAS,KAAOA,GAAU,MAC3DrP,EAAU,4DAGU,iBAAXqP,IACPE,EAASF,KAAYA,EAAS,KAAOA,GAAU,QACjDA,EAAS,KAIX,IAAI4N,EAAYJ,EAAYxN,IAAWwN,EAAYL,EAAUnN,IAExD3mB,IAEHA,EAAMu0B,EACF,IAAIA,EAAU1b,GACd,IAAIpT,MAAMoT,GAAOgO,EAASF,IAC9BlhB,MAAMoN,kBAAkB7S,EAAKm0B,IAG1BI,GAAev0B,aAAeu0B,GAAcv0B,EAAI2mB,SAAWA,IAE9D3mB,EAAIw0B,OAAS7N,EAAS,IACtB3mB,EAAI2mB,OAAS3mB,EAAIs0B,WAAa3N,GAGhC,IAAK,IAAI1pB,KAAOm3B,EACF,WAARn3B,GAA4B,eAARA,IACtB+C,EAAI/C,GAAOm3B,EAAMn3B,IAIrB,OAAO+C,GAlFTvE,EAAOD,QAAQ+4B,UA0Ff,WACE,SAASA,IACP,MAAM,IAAIz1B,UAAU,mCAKtB,OAFAwO,EAASinB,EAAW9uB,OAEb8uB,EAjGkBE,GAuN3B,SAAqCj5B,EAASkrB,EAAO6N,GACnD7N,EAAM3jB,QAAQ,SAAsB8H,GAClC,IAAI6pB,EACAz4B,EAAO43B,EAAahN,EAAShc,IAEjC,OAAQipB,EAAUjpB,IAChB,KAAK,IACH6pB,EArHR,SAAuCH,EAAWt4B,EAAM4O,GACtD,IAAI8pB,EAAY14B,EAAK4sB,MAAM,UAAY5sB,EAAOA,EAAO,QAErD,SAAS24B,EAAa3oB,GAEpB,IAAI4M,EAAiB,MAAX5M,EAAkBA,EAAU4a,EAAShc,GAC3C7K,EAAM,IAAIyF,MAAMoT,GAwBpB,OArBApT,MAAMoN,kBAAkB7S,EAAK40B,GAG7BrO,EAAevmB,EAAK40B,EAAYt3B,WAGhClB,OAAOC,eAAe2D,EAAK,UAAW,CACpC1D,YAAY,EACZye,cAAc,EACdpe,MAAOkc,EACP9B,UAAU,IAIZ3a,OAAOC,eAAe2D,EAAK,OAAQ,CACjC1D,YAAY,EACZye,cAAc,EACdpe,MAAOg4B,EACP5d,UAAU,IAGL/W,EAUT,OAPAsN,EAASsnB,EAAaL,GACtBP,EAASY,EAAaD,GAEtBC,EAAYt3B,UAAUqpB,OAAS9b,EAC/B+pB,EAAYt3B,UAAUg3B,WAAazpB,EACnC+pB,EAAYt3B,UAAUk3B,QAAS,EAExBI,EA6EWC,CAA6BN,EAAWt4B,EAAM4O,GAC1D,MACF,KAAK,IACH6pB,EAxER,SAAuCH,EAAWt4B,EAAM4O,GACtD,IAAI8pB,EAAY14B,EAAK4sB,MAAM,UAAY5sB,EAAOA,EAAO,QAErD,SAAS64B,EAAa7oB,GAEpB,IAAI4M,EAAiB,MAAX5M,EAAkBA,EAAU4a,EAAShc,GAC3C7K,EAAM,IAAIyF,MAAMoT,GAwBpB,OArBApT,MAAMoN,kBAAkB7S,EAAK80B,GAG7BvO,EAAevmB,EAAK80B,EAAYx3B,WAGhClB,OAAOC,eAAe2D,EAAK,UAAW,CACpC1D,YAAY,EACZye,cAAc,EACdpe,MAAOkc,EACP9B,UAAU,IAIZ3a,OAAOC,eAAe2D,EAAK,OAAQ,CACjC1D,YAAY,EACZye,cAAc,EACdpe,MAAOg4B,EACP5d,UAAU,IAGL/W,EAUT,OAPAsN,EAASwnB,EAAaP,GACtBP,EAASc,EAAaH,GAEtBG,EAAYx3B,UAAUqpB,OAAS9b,EAC/BiqB,EAAYx3B,UAAUg3B,WAAazpB,EACnCiqB,EAAYx3B,UAAUk3B,QAAS,EAExBM,EAgCWC,CAA6BR,EAAWt4B,EAAM4O,GAI1D6pB,IAEFl5B,EAAQqP,GAAQ6pB,EAChBl5B,EAAQS,GAAQy4B,KAKpBl5B,EAAQ,cAAgB8b,EAAUQ,SAAStc,EAAQw5B,UACjD,0CA3OJC,CAA2Bx5B,EAAOD,QAASqrB,EAASH,MAAOjrB,EAAOD,QAAQ+4B,Y,gBC7B1E,IACE,IAAI52B,EAAO,EAAQ,GAEnB,GAA6B,mBAAlBA,EAAK2P,SAAyB,KAAM,GAC/C7R,EAAOD,QAAUmC,EAAK2P,SACtB,MAAOE,GAEP/R,EAAOD,QAAU,EAAQ,O,cCPE,mBAAlBY,OAAOY,OAEhBvB,EAAOD,QAAU,SAAkB4pE,EAAMC,GACnCA,IACFD,EAAKl5D,OAASm5D,EACdD,EAAK9nE,UAAYlB,OAAOY,OAAOqoE,EAAU/nE,UAAW,CAClD+F,YAAa,CACX1G,MAAOyoE,EACP9oE,YAAY,EACZya,UAAU,EACVgE,cAAc,OAOtBtf,EAAOD,QAAU,SAAkB4pE,EAAMC,GACvC,GAAIA,EAAW,CACbD,EAAKl5D,OAASm5D,EACd,IAAIC,EAAW,aACfA,EAAShoE,UAAY+nE,EAAU/nE,UAC/B8nE,EAAK9nE,UAAY,IAAIgoE,EACrBF,EAAK9nE,UAAU+F,YAAc+hE,K;;;;;GCVnC,IAAI2V,EAAa,EAAQ,IAAMA,WAC3B//C,EAAS,EAAQ,IAuDrB,SAASggD,IACgB,iBAAZ76E,KAAKinE,IAEdjnE,KAAKghD,QAnDT1lD,EAAOD,QASP,SAAiB+5B,GACf,GAAIA,aAAkBwlD,EACpB,OAqBJ,SAA2BxlD,GACzBA,EAAOmF,UAEqB,mBAAjBnF,EAAO4rB,OAEhB5rB,EAAO6B,GAAG,OAAQ4jD,GAGpB,OAAOzlD,EA7BE0lD,CAAkB1lD,GAG3B,KAAMA,aAAkByF,GACtB,OAAOzF,EAGqB,mBAAnBA,EAAOmF,SAChBnF,EAAOmF,UAGT,OAAOnF,I,gBC3CE,EAAQ,GAAnB,IACIsF,EAAK,EAAQ,IAEjB,SAASqgD,IAEP/6E,KAAKkf,MAAQjjB,OAAOY,OAAO,MAG3BmD,KAAK87B,WAAa7/B,OAAOY,OAAO,MAYlCk+E,EAAK59E,UAAU69E,OAAS,SAAUz1E,GAChC,IAAK,IAAIN,KAAQM,EAAK,CAEpB,IADA,IAAIskC,EAAOtkC,EAAIN,GACN1J,EAAI,EAAGA,EAAIsuC,EAAKxqC,OAAQ9D,IAC3BgI,QAAQwU,IAAIkjE,YAAcj7E,KAAKkf,MAAM2qB,EAAKtuC,KAC5CqhB,QAAQC,MAAM7c,KAAKk7E,UAAY,YAAYlgE,QAAQ,OAAQ,IAAK,YAAc6uB,EAAKtuC,GAAK,yBACtFyE,KAAKkf,MAAM2qB,EAAKtuC,IAAM,OAAS0J,GAGnCjF,KAAKkf,MAAM2qB,EAAKtuC,IAAM0J,EAInBjF,KAAK87B,WAAW72B,KACnBjF,KAAK87B,WAAW72B,GAAQ4kC,EAAK,MAanCkxC,EAAK59E,UAAUioE,KAAO,SAASpuD,GAC7BhX,KAAKk7E,SAAWlkE,EAEhB,IAAIzR,EAAM,GACIm1B,EAAGygD,aAAankE,EAAM,SAChBlM,MAAM,WAEpBlI,QAAQ,SAASyW,GAErB,IAAIoxC,EAASpxC,EAAK2B,QAAQ,oBAAqB,IAAIlQ,MAAM,OACzDvF,EAAIklD,EAAOlQ,SAAWkQ,IAGxBzqD,KAAKg7E,OAAOz1E,GAEZvF,KAAKk7E,SAAW,MAMlBH,EAAK59E,UAAU6hB,OAAS,SAAST,EAAMqxB,GACrC,IAAIwoC,EAAM75D,EAAKvD,QAAQ,cAAe,IAAI3Z,cAE1C,OAAOrB,KAAKkf,MAAMk5D,IAAQxoC,GAAY5vC,KAAKo7E,cAM7CL,EAAK59E,UAAUysC,UAAY,SAASyxC,GAClC,IAAIp2E,EAAOo2E,EAAS3yD,MAAM,2BAA2B,GAAGrnB,cACxD,OAAOrB,KAAK87B,WAAW72B,IAIzB,IAAIuY,EAAO,IAAIu9D,EAGfv9D,EAAKw9D,OAAO,EAAQ,MAGpBx9D,EAAK49D,aAAe59D,EAAKwB,OAAO,OAMhCxB,EAAKu9D,KAAOA,EAKZv9D,EAAKqiB,SAAW,CACd7gB,OAAQ,SAASq8D,EAAUzrC,GAEzB,MAAO,0CAA4Cnd,KAAK4oD,GAAY,QAAUzrC,IAIlFt0C,EAAOD,QAAUmiB,G,u39BCvGjB,IAAIlgB,EAAI,IACJ3B,EAAQ,GAAJ2B,EACJ0hD,EAAQ,GAAJrjD,EACJE,EAAQ,GAAJmjD,EACJs8B,EAAQ,EAAJz/E,EACJ2qE,EAAQ,OAAJ3qE,EAqJR,SAAS4qE,EAAO9rC,EAAI4gD,EAAOv+E,EAAGlB,GAC5B,IAAI0/E,EAAWD,GAAa,IAAJv+E,EACxB,OAAO0J,KAAKigE,MAAMhsC,EAAK39B,GAAK,IAAMlB,GAAQ0/E,EAAW,IAAM,IAvI7DlgF,EAAOD,QAAU,SAASgL,EAAKhB,GAC7BA,EAAUA,GAAW,GACrB,IAAIJ,SAAcoB,EAClB,GAAa,WAATpB,GAAqBoB,EAAIhH,OAAS,EACpC,OAkBJ,SAAegX,GAEb,IADAA,EAAMG,OAAOH,IACLhX,OAAS,IACf,OAEF,IAAIqpB,EAAQ,uIAAuIje,KACjJ4L,GAEF,IAAKqS,EACH,OAEF,IAAI1rB,EAAI8hB,WAAW4J,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAMrnB,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOrE,EAAIwpE,EACb,IAAK,QACL,IAAK,OACL,IAAK,IACH,OAAOxpE,EAAIs+E,EACb,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOt+E,EAAInB,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOmB,EAAIgiD,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOhiD,EAAIrB,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOqB,EAAIM,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAON,EACT,QACE,QAvEKihB,CAAM5X,GACR,GAAa,WAATpB,IAAoC,IAAf+B,MAAMX,GACpC,OAAOhB,EAAQqhE,KA0GnB,SAAiB/rC,GACf,IAAI4gD,EAAQ70E,KAAK+e,IAAIkV,GACrB,GAAI4gD,GAAS1/E,EACX,OAAO4qE,EAAO9rC,EAAI4gD,EAAO1/E,EAAG,OAE9B,GAAI0/E,GAASv8B,EACX,OAAOynB,EAAO9rC,EAAI4gD,EAAOv8B,EAAG,QAE9B,GAAIu8B,GAAS5/E,EACX,OAAO8qE,EAAO9rC,EAAI4gD,EAAO5/E,EAAG,UAE9B,GAAI4/E,GAASj+E,EACX,OAAOmpE,EAAO9rC,EAAI4gD,EAAOj+E,EAAG,UAE9B,OAAOq9B,EAAK,MAxHY8gD,CAAQp1E,GAiFlC,SAAkBs0B,GAChB,IAAI4gD,EAAQ70E,KAAK+e,IAAIkV,GACrB,GAAI4gD,GAAS1/E,EACX,OAAO6K,KAAKigE,MAAMhsC,EAAK9+B,GAAK,IAE9B,GAAI0/E,GAASv8B,EACX,OAAOt4C,KAAKigE,MAAMhsC,EAAKqkB,GAAK,IAE9B,GAAIu8B,GAAS5/E,EACX,OAAO+K,KAAKigE,MAAMhsC,EAAKh/B,GAAK,IAE9B,GAAI4/E,GAASj+E,EACX,OAAOoJ,KAAKigE,MAAMhsC,EAAKr9B,GAAK,IAE9B,OAAOq9B,EAAK,KA/F2BisC,CAASvgE,GAEhD,MAAM,IAAIf,MACR,wDACE8mC,KAAKlS,UAAU7zB,M;;;;;GCtBrB/K,EAAOD,QAUP,SAAoB6sB,GAClB,IAAKA,EACH,MAAM,IAAIvpB,UAAU,4BAItB,IAAI+8E,EAeN,SAAgBpoD,GAMd,IALA,IAAIqF,EAAMrF,EAAOj0B,OACb8K,EAAO,GACPqK,EAAQ8e,EAAOj0B,OAGV9D,EAAI+3B,EAAOj0B,OAAS,EAAG9D,GAAK,EAAGA,IACtC,OAAQ+3B,EAAOpK,WAAW3tB,IACxB,KAAK,GACCiZ,IAAUmkB,IACZnkB,EAAQmkB,EAAMp9B,GAEhB,MACF,KAAK,GACCiZ,IAAUmkB,GACZxuB,EAAKzF,KAAK4uB,EAAOzX,UAAUrH,EAAOmkB,IAEpCnkB,EAAQmkB,EAAMp9B,EACd,MACF,QACEiZ,EAAQjZ,EAMViZ,IAAUmkB,GACZxuB,EAAKzF,KAAK4uB,EAAOzX,UAAUrH,EAAOmkB,IAGpC,OAAOxuB,EA7CU8T,CAAMiK,EAAIC,QAAQ,oBAAsB,IAKzD,MAHY,CADKD,EAAIi2B,WAAWw9B,eACPr/D,OAAOo/D,K,iBC/BlC,wBACE,IAAIE,EAAY1oC,EAAQ2oC,EAAUC,EAAaC,EAAUC,EAAaC,EAEtE/oC,EAAS,GAIwC,OAAX53C,GAAoBA,EAAOD,QAC/DC,EAAOD,QAAU63C,EAHZlzC,KAKQ,OAAIkzC,EAGnB+oC,EAAY,SAASjlD,EAAOklD,EAAQC,EAAUC,GAC5C,IAAIr9C,EAAMwb,EACV,GAAIvjB,EAAM33B,SAAW68E,EAAO78E,OAC1B,MAAM,IAAIiG,MAAM,gEAGlB,IADAy5B,EAAO,EACAq9C,EAAW,GAAG,CAKnB,IAJA7hC,EAAQ4hC,EAAWC,GACP,IACV7hC,EAAQ,GAENvjB,EAAM+H,IAASwb,GAAU2hC,EAAOn9C,IAASwb,EAC3C,OAAO,EAET6hC,GAAYD,EACZp9C,GAAQ,EAEV,OAAO,GAGTmU,EAAOmpC,YAAc,SAAShpE,EAASipE,EAAWC,GAChD,IAAIn7E,EAAG48B,EAAKw+C,EAAW7oC,EAAcE,EAIrC,IAAK2oC,KAHc,MAAfD,IACFA,EAAc,WAEED,EAKhB,MAJA3oC,EAAe2oC,EAAUE,IACR,IAAQ7oC,EAAa,aAAc50C,QAClD40C,EAAe,CAACA,IAEbvyC,EAAI,EAAG48B,EAAM2V,EAAat0C,OAAQ+B,EAAI48B,EAAK58B,IAE9C,GADAyyC,EAASF,EAAavyC,GAClBiS,EAAQ2gC,SAAWH,EAAO,GAAGG,QAC3B3gC,EAAQqV,MAAMpkB,MAAM+O,EAASwgC,GAC/B,OAAO2oC,EAKf,OAAOD,GAGTrpC,EAAOupC,KAAO,WACZ,SAASA,EAAKC,GACZ,IAAIt7E,EAAG48B,EAAK2+C,EACZ,GAAsB,IAAlBD,EAAOr9E,OACT,MAAM,IAAIiG,MAAM,wCAElB,IAAKlE,EAAI,EAAG48B,EAAM0+C,EAAOr9E,OAAQ+B,EAAI48B,EAAK58B,IAExC,KAAO,IADPu7E,EAAQD,EAAOt7E,KACMu7E,GAAS,KAC5B,MAAM,IAAIr3E,MAAM,2CAGpBtF,KAAK08E,OAASA,EAkFhB,OA/EAD,EAAKt/E,UAAU62C,KAAO,WACpB,MAAO,QAGTyoC,EAAKt/E,UAAU8P,SAAW,WACxB,OAAOjN,KAAK08E,OAAOn2E,KAAK,MAG1Bk2E,EAAKt/E,UAAUy/E,mBAAqB,WAClC,OAAO58E,KAAKiN,YAGdwvE,EAAKt/E,UAAU0/E,YAAc,WAC3B,OAAO78E,KAAK08E,OAAOh6E,MAAM,IAG3B+5E,EAAKt/E,UAAUurB,MAAQ,SAAS8D,EAAOswD,GACrC,IAAIC,EAIJ,QAHkB,IAAdD,IACWtwD,GAAbuwD,EAAMvwD,GAAmB,GAAIswD,EAAYC,EAAI,IAE1B,SAAjBvwD,EAAMwnB,OACR,MAAM,IAAI1uC,MAAM,uDAElB,OAAO22E,EAAUj8E,KAAK08E,OAAQlwD,EAAMkwD,OAAQ,EAAGI,IAGjDL,EAAKt/E,UAAU6/E,cAAgB,CAC7BC,YAAa,CAAC,CAAC,IAAIR,EAAK,CAAC,EAAG,EAAG,EAAG,IAAK,IACvCS,UAAW,CAAC,CAAC,IAAIT,EAAK,CAAC,IAAK,IAAK,IAAK,MAAO,KAC7CU,UAAW,CAAC,CAAC,IAAIV,EAAK,CAAC,IAAK,EAAG,EAAG,IAAK,IACvCW,UAAW,CAAC,CAAC,IAAIX,EAAK,CAAC,IAAK,IAAK,EAAG,IAAK,KACzChpC,SAAU,CAAC,CAAC,IAAIgpC,EAAK,CAAC,IAAK,EAAG,EAAG,IAAK,IACtCY,gBAAiB,CAAC,CAAC,IAAIZ,EAAK,CAAC,IAAK,GAAI,EAAG,IAAK,KAC9C,QAAW,CAAC,CAAC,IAAIA,EAAK,CAAC,GAAI,EAAG,EAAG,IAAK,GAAI,CAAC,IAAIA,EAAK,CAAC,IAAK,GAAI,EAAG,IAAK,IAAK,CAAC,IAAIA,EAAK,CAAC,IAAK,IAAK,EAAG,IAAK,KACxGa,SAAU,CAAC,CAAC,IAAIb,EAAK,CAAC,IAAK,EAAG,EAAG,IAAK,IAAK,CAAC,IAAIA,EAAK,CAAC,IAAK,EAAG,EAAG,IAAK,IAAK,CAAC,IAAIA,EAAK,CAAC,IAAK,GAAI,GAAI,IAAK,IAAK,CAAC,IAAIA,EAAK,CAAC,IAAK,GAAI,IAAK,IAAK,IAAK,CAAC,IAAIA,EAAK,CAAC,IAAK,EAAG,IAAK,IAAK,IAAK,CAAC,IAAIA,EAAK,CAAC,IAAK,EAAG,EAAG,IAAK,KAG/MA,EAAKt/E,UAAUw/B,MAAQ,WACrB,OAAOuW,EAAOmpC,YAAYr8E,KAAMA,KAAKg9E,gBAGvCP,EAAKt/E,UAAUo3C,oBAAsB,WACnC,OAAOrB,EAAOqqC,KAAKt/D,MAAM,UAAaje,KAAKiN,aAG7CwvE,EAAKt/E,UAAU83C,2BAA6B,WAC1C,IAAIuoC,EAAMjiF,EAAG6F,EAAGu7E,EAAOc,EAAMC,EAAOC,EAcpC,IAbAA,EAAY,CACVjH,EAAG,EACHkH,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,EACLC,IAAK,GAEPX,EAAO,EACPC,GAAO,EACFliF,EAAI6F,EAAI,EAAGA,GAAK,EAAG7F,EAAI6F,IAAM,EAAG,CAEnC,MADAu7E,EAAQ38E,KAAK08E,OAAOnhF,MACPoiF,GAUX,OAAO,KARP,GADAD,EAAQC,EAAUhB,GACdc,GAAkB,IAAVC,EACV,OAAO,KAEK,IAAVA,IACFD,GAAO,GAETD,GAAQE,EAKZ,OAAO,GAAKF,GAGPf,EA9FK,GAkGdZ,EAAW,uBAEXC,EAAc,CACZsC,UAAW,IAAI32C,OAAO,IAAMo0C,EAAW,MAAQA,EAAW,MAAQA,EAAW,MAAQA,EAAW,IAAK,KACrGwC,UAAW,IAAI52C,OAAO,IAAMo0C,EAAW,IAAK,MAG9C3oC,EAAOupC,KAAKr7B,OAAS,SAAS/tB,GAC5B,IAAI3K,EAAO41D,EAAcv/C,EAAMwb,EAAO/9C,EAQtC,GAPA8hF,EAAe,SAASjrD,GACtB,MAAkB,MAAdA,EAAO,IAA4B,MAAdA,EAAO,GACvBlN,SAASkN,EAAQ,GAEjBlN,SAASkN,IAGhB3K,EAAQ2K,EAAO3K,MAAMozD,EAAYsC,WACnC,OAAO,WACL,IAAIh9E,EAAG48B,EAAK++C,EAAK72D,EAGjB,IADAA,EAAU,GACL9kB,EAAI,EAAG48B,GAFZ++C,EAAMr0D,EAAMhmB,MAAM,EAAG,IAECrD,OAAQ+B,EAAI48B,EAAK58B,IACrC29B,EAAOg+C,EAAI37E,GACX8kB,EAAQxhB,KAAK45E,EAAav/C,IAE5B,OAAO7Y,EARF,GAUF,GAAIwC,EAAQ2K,EAAO3K,MAAMozD,EAAYuC,WAAY,CAEtD,IADA7hF,EAAQ8hF,EAAa51D,EAAM,KACf,YAAclsB,EAAQ,EAChC,MAAM,IAAI8I,MAAM,yCAElB,OAAQ,WACN,IAAIlE,EAAG8kB,EAEP,IADAA,EAAU,GACLq0B,EAAQn5C,EAAI,EAAGA,GAAK,GAAIm5C,EAAQn5C,GAAK,EACxC8kB,EAAQxhB,KAAMlI,GAAS+9C,EAAS,KAElC,OAAOr0B,EANF,GAODq4D,UAEN,OAAO,MAIXrrC,EAAOqqC,KAAO,WACZ,SAASA,EAAK9+D,EAAO+/D,GACnB,IAAIjjF,EAAG6F,EAAG5F,EAAGwiC,EAAKe,EAAMg+C,EACxB,GAAqB,KAAjBt+D,EAAMpf,OAER,IADAW,KAAKye,MAAQ,GACRljB,EAAI6F,EAAI,EAAGA,GAAK,GAAI7F,EAAI6F,GAAK,EAChCpB,KAAKye,MAAM/Z,KAAM+Z,EAAMljB,IAAM,EAAKkjB,EAAMljB,EAAI,QAEzC,IAAqB,IAAjBkjB,EAAMpf,OAGf,MAAM,IAAIiG,MAAM,6CAFhBtF,KAAKye,MAAQA,EAKf,IAAKjjB,EAAI,EAAGwiC,GADZ++C,EAAM/8E,KAAKye,OACWpf,OAAQ7D,EAAIwiC,EAAKxiC,IAErC,KAAO,IADPujC,EAAOg+C,EAAIvhF,KACSujC,GAAQ,OAC1B,MAAM,IAAIz5B,MAAM,2CAGhBk5E,IACFx+E,KAAKw+E,OAASA,GAmKlB,OA/JAjB,EAAKpgF,UAAU62C,KAAO,WACpB,MAAO,QAGTupC,EAAKpgF,UAAU8P,SAAW,WACxB,OAAOjN,KAAK48E,qBAAqB5hE,QAAQ,mBAAoB,OAG/DuiE,EAAKpgF,UAAUshF,gBAAkB,WAC/B,IAAIC,EAAgBC,EAAiBj2D,EAAOk2D,EAAOvrD,EAKnD,IAJAurD,EAAQ,uBACRvrD,EAASrzB,KAAK48E,qBACd8B,EAAiB,EACjBC,GAAmB,EACXj2D,EAAQk2D,EAAMn0E,KAAK4oB,IACrB3K,EAAM,GAAGrpB,OAASs/E,IACpBD,EAAiBh2D,EAAMxmB,MACvBy8E,EAAkBj2D,EAAM,GAAGrpB,QAG/B,OAAIs/E,EAAkB,EACbtrD,EAEFA,EAAOxX,UAAU,EAAG6iE,GAAkB,KAAOrrD,EAAOxX,UAAU6iE,EAAiBC,IAGxFpB,EAAKpgF,UAAU0/E,YAAc,WAC3B,IAAIp9C,EAAOr+B,EAAG48B,EAAKe,EAAMg+C,EAGzB,IAFAt9C,EAAQ,GAEHr+B,EAAI,EAAG48B,GADZ++C,EAAM/8E,KAAKye,OACWpf,OAAQ+B,EAAI48B,EAAK58B,IACrC29B,EAAOg+C,EAAI37E,GACXq+B,EAAM/6B,KAAKq6B,GAAQ,GACnBU,EAAM/6B,KAAY,IAAPq6B,GAEb,OAAOU,GAGT89C,EAAKpgF,UAAUy/E,mBAAqB,WAClC,IAAIzoC,EAAMpV,EAAM80C,EAehB,OAdA1/B,EAAQ,WACN,IAAI/yC,EAAG48B,EAAK++C,EAAK72D,EAGjB,IADAA,EAAU,GACL9kB,EAAI,EAAG48B,GAFZ++C,EAAM/8E,KAAKye,OAEWpf,OAAQ+B,EAAI48B,EAAK58B,IACrC29B,EAAOg+C,EAAI37E,GACX8kB,EAAQxhB,KAAKq6B,EAAK9xB,SAAS,KAE7B,OAAOiZ,GACNxqB,KAAKsE,MAAOuG,KAAK,KACpBstE,EAAS,GACL7zE,KAAKw+E,SACP3K,EAAS,IAAM7zE,KAAKw+E,QAEfrqC,EAAO0/B,GAGhB0J,EAAKpgF,UAAU0hF,oBAAsB,WACnC,IAAI1qC,EAAMpV,EAAM80C,EAehB,OAdA1/B,EAAQ,WACN,IAAI/yC,EAAG48B,EAAK++C,EAAK72D,EAGjB,IADAA,EAAU,GACL9kB,EAAI,EAAG48B,GAFZ++C,EAAM/8E,KAAKye,OAEWpf,OAAQ+B,EAAI48B,EAAK58B,IACrC29B,EAAOg+C,EAAI37E,GACX8kB,EAAQxhB,KAAKq6B,EAAK9xB,SAAS,IAAI6xE,SAAS,EAAG,MAE7C,OAAO54D,GACNxqB,KAAKsE,MAAOuG,KAAK,KACpBstE,EAAS,GACL7zE,KAAKw+E,SACP3K,EAAS,IAAM7zE,KAAKw+E,QAEfrqC,EAAO0/B,GAGhB0J,EAAKpgF,UAAUurB,MAAQ,SAAS8D,EAAOswD,GACrC,IAAIC,EAIJ,QAHkB,IAAdD,IACWtwD,GAAbuwD,EAAMvwD,GAAmB,GAAIswD,EAAYC,EAAI,IAE1B,SAAjBvwD,EAAMwnB,OACR,MAAM,IAAI1uC,MAAM,uDAElB,OAAO22E,EAAUj8E,KAAKye,MAAO+N,EAAM/N,MAAO,GAAIq+D,IAGhDS,EAAKpgF,UAAU6/E,cAAgB,CAC7BC,YAAa,CAAC,IAAIM,EAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAClDH,UAAW,CAAC,IAAIG,EAAK,CAAC,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IACrDJ,UAAW,CAAC,IAAII,EAAK,CAAC,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GACrD9pC,SAAU,CAAC,IAAI8pC,EAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,KAC/CwB,YAAa,CAAC,IAAIxB,EAAK,CAAC,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GACvDyB,WAAY,CAAC,IAAIzB,EAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,MAAQ,EAAG,IAAK,IACtD0B,QAAS,CAAC,IAAI1B,EAAK,CAAC,EAAG,EAAG,EAAG,EAAG,MAAQ,EAAG,EAAG,IAAK,IACnD2B,QAAS,CAAC,IAAI3B,EAAK,CAAC,IAAM,MAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IACtD,OAAQ,CAAC,IAAIA,EAAK,CAAC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAClD4B,OAAQ,CAAC,IAAI5B,EAAK,CAAC,KAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAClDD,SAAU,CAAC,CAAC,IAAIC,EAAK,CAAC,KAAQ,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,MAG3DA,EAAKpgF,UAAUw/B,MAAQ,WACrB,OAAOuW,EAAOmpC,YAAYr8E,KAAMA,KAAKg9E,gBAGvCO,EAAKpgF,UAAUk3C,oBAAsB,WACnC,MAAwB,eAAjBr0C,KAAK28B,SAGd4gD,EAAKpgF,UAAUm3C,cAAgB,WAC7B,IAAIl1C,EAAMD,EAAK49E,EACf,IAAK/8E,KAAKq0C,sBACR,MAAM,IAAI/uC,MAAM,4DAGlB,OAD4BlG,GAA5B29E,EAAM/8E,KAAKye,MAAM/b,OAAO,IAAe,GAAIvD,EAAM49E,EAAI,GAC9C,IAAI7pC,EAAOupC,KAAK,CAACr9E,GAAQ,EAAU,IAAPA,EAAaD,GAAO,EAAS,IAANA,KAG5Do+E,EAAKpgF,UAAU83C,2BAA6B,WAC1C,IAAIuoC,EAAMjiF,EAAG6F,EAAG29B,EAAM0+C,EAAMC,EAAOC,EAsBnC,IArBAA,EAAY,CACVjH,EAAG,GACH0I,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,EACPC,MAAO,GAET3C,EAAO,EACPC,GAAO,EACFliF,EAAI6F,EAAI,EAAGA,GAAK,EAAG7F,EAAI6F,IAAM,EAAG,CAEnC,MADA29B,EAAO/+B,KAAKye,MAAMljB,MACNoiF,GAUV,OAAO,KARP,GADAD,EAAQC,EAAU5+C,GACd0+C,GAAkB,IAAVC,EACV,OAAO,KAEK,KAAVA,IACFD,GAAO,GAETD,GAAQE,EAKZ,OAAO,IAAMF,GAGRD,EAxLK,GA4LdxB,EAAW,oBAIXC,EAAc,CACZoE,UAAW,IAAI34C,OAHL,gBAGuB,KACjC,OAAU,IAAIA,OAAO,UAAYs0C,EAAW,uCAA4C,KACxFsE,aAAc,IAAI54C,OAAQ,QAAUs0C,EAAW,cAAgBA,EAAW,MAAUF,EAAW,MAAQA,EAAW,MAAQA,EAAW,MAAQA,EAAY,oBAA2B,MAGtLD,EAAa,SAASvoD,EAAQ5U,GAC5B,IAAI6hE,EAAYC,EAAWxhD,EAAMyhD,EAAaC,EAAkBjC,EAChE,GAAInrD,EAAOrvB,QAAQ,QAAUqvB,EAAO0hB,YAAY,MAC9C,OAAO,KAST,KAPAypC,GAAUnrD,EAAO3K,MAAMszD,EAAuB,YAAM,IAAI,MAEtDwC,EAASA,EAAO3iE,UAAU,GAC1BwX,EAASA,EAAOrY,QAAQ,OAAQ,KAElCslE,EAAa,EACbC,GAAa,GACLA,EAAYltD,EAAOrvB,QAAQ,IAAKu8E,EAAY,KAAO,GACzDD,IAQF,GAN4B,OAAxBjtD,EAAOtvB,OAAO,EAAG,IACnBu8E,IAE2B,OAAzBjtD,EAAOtvB,QAAQ,EAAG,IACpBu8E,IAEEA,EAAa7hE,EACf,OAAO,KAIT,IAFAgiE,EAAmBhiE,EAAQ6hE,EAC3BE,EAAc,IACPC,KACLD,GAAe,KAmBjB,MAhBkB,OADlBntD,EAASA,EAAOrY,QAAQ,KAAMwlE,IACnB,KACTntD,EAASA,EAAO3wB,MAAM,IAEU,MAA9B2wB,EAAOA,EAAOh0B,OAAS,KACzBg0B,EAASA,EAAO3wB,MAAM,GAAI,IAYrB,CACL+b,MAXFA,EAAQ,WACN,IAAIrd,EAAG48B,EAAK++C,EAAK72D,EAGjB,IADAA,EAAU,GACL9kB,EAAI,EAAG48B,GAFZ++C,EAAM1pD,EAAOvoB,MAAM,MAEGzL,OAAQ+B,EAAI48B,EAAK58B,IACrC29B,EAAOg+C,EAAI37E,GACX8kB,EAAQxhB,KAAKyhB,SAAS4Y,EAAM,KAE9B,OAAO7Y,EARD,GAYNs4D,OAAQA,IAIZtrC,EAAOqqC,KAAKn8B,OAAS,SAAS/tB,GAC5B,IAAI8gB,EAAM/yC,EAAG48B,EAAKtV,EAAOi0D,EAAOD,EAAQ8B,EACxC,GAAIxC,EAAoB,OAAEvpD,KAAKY,GAC7B,OAAOuoD,EAAWvoD,EAAQ,GACrB,IAAI3K,EAAQ2K,EAAO3K,MAAMszD,EAA0B,iBACxDwC,EAAS91D,EAAM,IAAM,IACrByrB,EAAOynC,EAAWlzD,EAAM,GAAGhmB,MAAM,GAAI,GAAK87E,EAAQ,IACzC//D,OAAO,CAEd,IAAKrd,EAAI,EAAG48B,GADZ0+C,EAAS,CAACv2D,SAASuC,EAAM,IAAKvC,SAASuC,EAAM,IAAKvC,SAASuC,EAAM,IAAKvC,SAASuC,EAAM,MAC5DrpB,OAAQ+B,EAAI48B,EAAK58B,IAExC,KAAO,IADPu7E,EAAQD,EAAOt7E,KACMu7E,GAAS,KAC5B,OAAO,KAKX,OAFAxoC,EAAK11B,MAAM/Z,KAAKg4E,EAAO,IAAM,EAAIA,EAAO,IACxCvoC,EAAK11B,MAAM/Z,KAAKg4E,EAAO,IAAM,EAAIA,EAAO,IACjC,CACLj+D,MAAO01B,EAAK11B,MACZ+/D,OAAQrqC,EAAKqqC,QAInB,OAAO,MAGTtrC,EAAOupC,KAAKiE,OAASxtC,EAAOqqC,KAAKoD,OAAS,SAASttD,GACjD,OAA+B,OAAxBrzB,KAAKohD,OAAO/tB,IAGrB6f,EAAOupC,KAAKppC,QAAU,SAAShgB,GAE7B,IAEE,OADA,IAAIrzB,KAAKA,KAAKohD,OAAO/tB,KACd,EACP,MAAOutD,GAEP,OADIA,GACG,IAIX1tC,EAAOupC,KAAKoE,uBAAyB,SAASxtD,GAC5C,SAAI6f,EAAOupC,KAAKppC,QAAQhgB,KAAWA,EAAO3K,MAAM,uCAOlDwqB,EAAOqqC,KAAKlqC,QAAU,SAAShgB,GAC7B,IAAI8gB,EACJ,GAAsB,iBAAX9gB,IAAgD,IAAzBA,EAAOrvB,QAAQ,KAC/C,OAAO,EAET,IAGE,OADA,IAAIhE,MADJm0C,EAAOn0C,KAAKohD,OAAO/tB,IACL5U,MAAO01B,EAAKqqC,SACnB,EACP,MAAOoC,GAEP,OADIA,GACG,IAIX1tC,EAAOupC,KAAKx+D,MAAQ,SAASoV,GAC3B,IAAI5U,EAEJ,GAAc,QADdA,EAAQze,KAAKohD,OAAO/tB,IAElB,MAAM,IAAI/tB,MAAM,mDAElB,OAAO,IAAItF,KAAKye,IAGlBy0B,EAAOqqC,KAAKt/D,MAAQ,SAASoV,GAC3B,IAAI8gB,EAEJ,GAAmB,QADnBA,EAAOn0C,KAAKohD,OAAO/tB,IACV5U,MACP,MAAM,IAAInZ,MAAM,mDAElB,OAAO,IAAItF,KAAKm0C,EAAK11B,MAAO01B,EAAKqqC,SAGnCtrC,EAAOupC,KAAKqE,UAAY,SAASztD,GAC/B,IAAI0tD,EAAYr4D,EAAOjJ,EACvB,IAAIiJ,EAAQ2K,EAAO3K,MAAM,oBACvBq4D,EAAa56D,SAASuC,EAAM,MACV,GAAKq4D,GAAc,GAOnC,OANAthE,EAAS,CAACzf,KAAKie,MAAMyK,EAAM,IAAKq4D,GAChC9kF,OAAOC,eAAeujB,EAAQ,WAAY,CACxCjjB,MAAO,WACL,OAAOwD,KAAKuG,KAAK,QAGdkZ,EAGX,MAAM,IAAIna,MAAM,4DAGlB4tC,EAAOupC,KAAKuE,2BAA6B,SAASja,GAChD,IAAIka,EAAkBx6E,EAAGi2E,EAEzB,IADA3V,EAAS5gD,SAAS4gD,IACL,GAAKA,EAAS,GACzB,MAAM,IAAIzhE,MAAM,sCAKlB,IAHAo3E,EAAS,CAAC,EAAG,EAAG,EAAG,GACnBj2E,EAAI,EACJw6E,EAAmBv6E,KAAKC,MAAMogE,EAAS,GAChCtgE,EAAIw6E,GACTvE,EAAOj2E,GAAK,IACZA,IAKF,OAHIw6E,EAAmB,IACrBvE,EAAOuE,GAAoBv6E,KAAK2e,IAAI,EAAG0hD,EAAS,GAAK,GAAK,EAAKA,EAAS,GAEnE,IAAI/mE,KAAK08E,IAGlBxpC,EAAOupC,KAAKyE,yBAA2B,SAAS7tD,GAC9C,IAAImqD,EAAajiF,EAAG4lF,EAAmBzE,EAAQ0E,EAC/C,IAME,IAJAD,GADA3D,EAAOx9E,KAAK8gF,UAAUztD,IACG,GAAGwpD,cAC5BuE,EAAmBphF,KAAKghF,2BAA2BxD,EAAK,IAAIX,cAC5DH,EAAS,GACTnhF,EAAI,EACGA,EAAI,GACTmhF,EAAOh4E,KAAKyhB,SAASg7D,EAAkB5lF,GAAI,IAA0C,IAApC4qB,SAASi7D,EAAiB7lF,GAAI,KAC/EA,IAEF,OAAO,IAAIyE,KAAK08E,GAChB,MAAOkE,GAEP,MADQA,EACF,IAAIt7E,MAAM,wDAIpB4tC,EAAOupC,KAAK4E,uBAAyB,SAAShuD,GAC5C,IAAImqD,EAAajiF,EAAG4lF,EAAmBzE,EAAQ0E,EAC/C,IAME,IAJAD,GADA3D,EAAOx9E,KAAK8gF,UAAUztD,IACG,GAAGwpD,cAC5BuE,EAAmBphF,KAAKghF,2BAA2BxD,EAAK,IAAIX,cAC5DH,EAAS,GACTnhF,EAAI,EACGA,EAAI,GACTmhF,EAAOh4E,KAAKyhB,SAASg7D,EAAkB5lF,GAAI,IAAM4qB,SAASi7D,EAAiB7lF,GAAI,KAC/EA,IAEF,OAAO,IAAIyE,KAAK08E,GAChB,MAAOkE,GAEP,MADQA,EACF,IAAIt7E,MAAM,wDAIpB4tC,EAAOqqC,KAAKuD,UAAY,SAASztD,GAC/B,IAAI0tD,EAAYr4D,EAAOjJ,EACvB,IAAIiJ,EAAQ2K,EAAO3K,MAAM,oBACvBq4D,EAAa56D,SAASuC,EAAM,MACV,GAAKq4D,GAAc,IAOnC,OANAthE,EAAS,CAACzf,KAAKie,MAAMyK,EAAM,IAAKq4D,GAChC9kF,OAAOC,eAAeujB,EAAQ,WAAY,CACxCjjB,MAAO,WACL,OAAOwD,KAAKuG,KAAK,QAGdkZ,EAGX,MAAM,IAAIna,MAAM,4DAGlB4tC,EAAOG,QAAU,SAAShgB,GACxB,OAAO6f,EAAOqqC,KAAKlqC,QAAQhgB,IAAW6f,EAAOupC,KAAKppC,QAAQhgB,IAG5D6f,EAAOj1B,MAAQ,SAASoV,GACtB,GAAI6f,EAAOqqC,KAAKlqC,QAAQhgB,GACtB,OAAO6f,EAAOqqC,KAAKt/D,MAAMoV,GACpB,GAAI6f,EAAOupC,KAAKppC,QAAQhgB,GAC7B,OAAO6f,EAAOupC,KAAKx+D,MAAMoV,GAEzB,MAAM,IAAI/tB,MAAM,yDAIpB4tC,EAAO4tC,UAAY,SAASztD,GAE1B,IACE,OAAO6f,EAAOqqC,KAAKuD,UAAUztD,GAC7B,MAAOutD,GACHA,EACJ,IACE,OAAO1tC,EAAOupC,KAAKqE,UAAUztD,GAC7B,MAAOutD,GAEP,MADIA,EACE,IAAIt7E,MAAM,gEAKtB4tC,EAAOouC,cAAgB,SAAS7hD,GAC9B,IAAIpgC,EAEJ,GAAe,KADfA,EAASogC,EAAMpgC,QAEb,OAAO,IAAI6zC,EAAOupC,KAAKh9C,GAClB,GAAe,KAAXpgC,EACT,OAAO,IAAI6zC,EAAOqqC,KAAK99C,GAEvB,MAAM,IAAIn6B,MAAM,iEAIpB4tC,EAAO3vC,QAAU,SAAS8vB,GACxB,IAAI8gB,EAEJ,MAAoB,UADpBA,EAAOn0C,KAAKie,MAAMoV,IACT2gB,QAAqBG,EAAKE,sBAC1BF,EAAKG,gBAELH,KAIVz4C,KAAKsE,Q,oCChqBR1E,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAOimF,kBACXjmF,EAAO6b,UAAY,aACnB7b,EAAOgiC,MAAQ,GAEVhiC,EAAOkmF,WAAUlmF,EAAOkmF,SAAW,IACxCvlF,OAAOC,eAAeZ,EAAQ,SAAU,CACvCa,YAAY,EACZC,IAAK,WACJ,OAAOd,EAAOE,KAGhBS,OAAOC,eAAeZ,EAAQ,KAAM,CACnCa,YAAY,EACZC,IAAK,WACJ,OAAOd,EAAOC,KAGhBD,EAAOimF,gBAAkB,GAEnBjmF,I;;;;;;;GCLR,IAAImmF,EAAU,EAAQ,KAClBtqE,EAAY,EAAQ,EAAR,CAAgB,WAC5BuqE,EAAO,EAAQ,IAAOA,KACtB95D,EAAS,EAAQ,IACjBwS,EAAO,EAAQ,IACfrR,EAAQ,EAAQ,IAChB6R,EAAa,EAAQ,IACrB3c,EAAQ,EAAQ,IAChBP,EAAY,EAAQ,IAOpBwK,EAAMjsB,OAAOY,OAAOu9B,EAAKunD,gBAAgBxkF,WAwe7C,SAASykF,EAAazgF,EAAKrF,EAAMC,GAC/BE,OAAOC,eAAeiF,EAAKrF,EAAM,CAC/B8e,cAAc,EACdze,YAAY,EACZC,IAAKL,IAreTT,EAAOD,QAAU6sB,EA0BjBA,EAAI9rB,IACJ8rB,EAAIoL,OAAS,SAAgBx3B,GAC3B,IAAKA,EACH,MAAM,IAAI6C,UAAU,wCAGtB,GAAoB,iBAAT7C,EACT,MAAM,IAAI6C,UAAU,oCAGtB,IAAIkjF,EAAK/lF,EAAKuF,cAEd,OAAQwgF,GACN,IAAK,UACL,IAAK,WACH,OAAO7hF,KAAKmoB,QAAQ25D,UACf9hF,KAAKmoB,QAAQ45D,QACpB,QACE,OAAO/hF,KAAKmoB,QAAQ05D,KAkD1B35D,EAAIu5D,QAAU,WACZ,IAAIO,EAASP,EAAQzhF,MACrB,OAAOgiF,EAAO9iE,MAAM5a,MAAM09E,EAAQr/E,YAWpCulB,EAAI+5D,iBAAmB,WACrB,IAAID,EAASP,EAAQzhF,MACrB,OAAOgiF,EAAOp6C,UAAUtjC,MAAM09E,EAAQr/E,YAGxCulB,EAAIg6D,gBAAkB/qE,EAAUQ,SAASuQ,EAAI+5D,iBAC3C,qDAWF/5D,EAAIi6D,gBAAkB,WACpB,IAAIH,EAASP,EAAQzhF,MACrB,OAAOgiF,EAAOniD,SAASv7B,MAAM09E,EAAQr/E,YAGvCulB,EAAIk6D,eAAiBjrE,EAAUQ,SAASuQ,EAAIi6D,gBAC1C,mDAWFj6D,EAAIm6D,iBAAmB,WACrB,IAAIL,EAASP,EAAQzhF,MACrB,OAAOgiF,EAAOM,UAAUh+E,MAAM09E,EAAQr/E,YAGxCulB,EAAIq6D,gBAAkBprE,EAAUQ,SAASuQ,EAAIm6D,iBAC3C,qDA2BFn6D,EAAIyU,MAAQ,SAAe3+B,EAAMqH,GAC/B,IAAIs3B,EAAQ38B,KAAK5D,IAAI,SACrB,GAAKugC,EACL,OAAO/B,EAAW58B,EAAM2+B,EAAOt3B,IAoBjC6iB,EAAIxE,MAAQ,SAAe5nB,EAAM0mF,GAC/B,IAAIxhF,EAAShB,KAAKgB,QAAU,GACxB8c,EAAO9d,KAAK8d,MAAQ,GACpBhQ,EAAQ9N,KAAK8N,OAAS,GAEtB2M,EAA4B,IAArB9X,UAAUtD,OACjB,OACA,gBAGJ,OAFA8X,EAAU,aAAesD,EAAO,qDAE5B,MAAQzZ,EAAOlF,IAASkF,EAAO5D,eAAetB,GAAckF,EAAOlF,GACnE,MAAQgiB,EAAKhiB,GAAcgiB,EAAKhiB,GAChC,MAAQgS,EAAMhS,GAAcgS,EAAMhS,GAE/B0mF,GA6BTt6D,EAAIM,GAAK,SAAYtJ,GACnB,IAAIpgB,EAAMogB,EAGV,IAAKngB,MAAMC,QAAQkgB,GAAQ,CACzBpgB,EAAM,IAAIC,MAAM4D,UAAUtD,QAC1B,IAAK,IAAI9D,EAAI,EAAGA,EAAIuD,EAAIO,OAAQ9D,IAC9BuD,EAAIvD,GAAKoH,UAAUpH,GAIvB,OAAOqsB,EAAO5nB,KAAMlB,IAiBtB8iF,EAAa15D,EAAK,WAAY,WAC5B,IAAI5B,EAAQtmB,KAAKm+C,WAAWskC,UACxB,QACA,OAGJ,IAFYziF,KAAK4iE,IAAIxmE,IAAI,iBAEpB02C,CAAM9yC,KAAKm+C,WAAWw9B,cAAe,GACxC,OAAOr1D,EAKT,IAAIgN,EAAStzB,KAAK5D,IAAI,sBAAwBkqB,EAC1CpkB,EAAQoxB,EAAOtvB,QAAQ,KAE3B,OAAkB,IAAX9B,EACHoxB,EAAOzX,UAAU,EAAG3Z,GAAO8I,OAC3BsoB,EAAOtoB,SAYb42E,EAAa15D,EAAK,SAAU,WAC1B,MAAyB,UAAlBloB,KAAKihD,WAad2gC,EAAa15D,EAAK,KAAM,WACtB,IAAI4qB,EAAQ9yC,KAAK4iE,IAAIxmE,IAAI,kBACzB,OAAOshB,EAAU1d,KAAM8yC,KAezB8uC,EAAa15D,EAAK,MAAO,WACvB,IAAI4qB,EAAQ9yC,KAAK4iE,IAAIxmE,IAAI,kBACrB22C,EAAQr1B,EAAUnV,IAAIvI,KAAM8yC,GAMhC,OAFAC,EAAMwrC,UAAUn0C,MAET2I,IAkBT6uC,EAAa15D,EAAK,aAAc,WAC9B,IAAIw6D,EAAW1iF,KAAK0iF,SAEpB,IAAKA,EAAU,MAAO,GAEtB,IAAIt2E,EAASpM,KAAK4iE,IAAIxmE,IAAI,oBACtBumF,EAAcjB,EAAKgB,GAEnB,CAACA,GADDA,EAAS53E,MAAM,KAAKyzE,UAGxB,OAAOoE,EAAWjgF,MAAM0J,KAU1Bw1E,EAAa15D,EAAK,OAAQ,WACxB,OAAOjK,EAAMje,MAAMmpB,WAcrBy4D,EAAa15D,EAAK,WAAY,WAC5B,IAAI4qB,EAAQ9yC,KAAK4iE,IAAIxmE,IAAI,kBACrB0W,EAAO9S,KAAK5D,IAAI,oBAUpB,GARK0W,GAASggC,EAAM9yC,KAAKm+C,WAAWw9B,cAAe,IAEjB,IAAvB7oE,EAAK9O,QAAQ,OAGtB8O,EAAOA,EAAK+I,UAAU,EAAG/I,EAAK9O,QAAQ,MAAM4+E,aAJ5C9vE,EAAO9S,KAAK5D,IAAI,QAOb0W,EAAL,CAGA,IAAI1G,EAAqB,MAAZ0G,EAAK,GACdA,EAAK9O,QAAQ,KAAO,EACpB,EACA9B,EAAQ4Q,EAAK9O,QAAQ,IAAKoI,GAE9B,OAAkB,IAAXlK,EACH4Q,EAAK+I,UAAU,EAAG3Z,GAClB4Q,KAKN8uE,EAAa15D,EAAK,OAAQ/Q,EAAUQ,SAAS,WAC3C,OAAO3X,KAAK0iF,UACX,uCAWHd,EAAa15D,EAAK,QAAS,WACzB,IAAIoS,EAASt6B,KAAKs6B,OACd1L,EAAM5uB,KAAK4uB,IACXpI,EAASoI,EAAIuF,WAGjB,OAAI,QAAUmG,GAAU,SAAWA,MAG9B9T,GAAU,KAAOA,EAAS,KAAQ,MAAQA,IACtCuC,EAAM/oB,KAAKmoB,QAAS,CACzB,KAAQyG,EAAIxyB,IAAI,QAChB,gBAAiBwyB,EAAIxyB,IAAI,sBAgB/BwlF,EAAa15D,EAAK,QAAS,WACzB,OAAQloB,KAAK+oB,QAUf64D,EAAa15D,EAAK,MAAO,WAEvB,MAA6B,oBADnBloB,KAAK5D,IAAI,qBAAuB,IAC/BiF,iB;;;;;;GC7eb,IAAIwhF,EAAa,EAAQ,KACrBrlE,EAAO,EAAQ,IAgBnB,SAASslE,EAAS56D,GAChB,KAAMloB,gBAAgB8iF,GACpB,OAAO,IAAIA,EAAQ56D,GAGrBloB,KAAKmoB,QAAUD,EAAIC,QACnBnoB,KAAK+iF,WAAa,IAAIF,EAAW36D,GAwLnC,SAAS86D,EAAW/9E,GAClB,OAA8B,IAAvBA,EAAKjB,QAAQ,KAChBwZ,EAAKwB,OAAO/Z,GACZA,EAWN,SAASg+E,EAAWh+E,GAClB,MAAuB,iBAATA,EAtNhB3J,EAAOD,QAAUynF,EA2DjBA,EAAQ3lF,UAAU8H,KAClB69E,EAAQ3lF,UAAU+hB,MAAQ,SAAU2I,GAClC,IAAI3I,EAAQ2I,EAGZ,GAAI3I,IAAUngB,MAAMC,QAAQkgB,GAAQ,CAClCA,EAAQ,IAAIngB,MAAM4D,UAAUtD,QAC5B,IAAK,IAAI9D,EAAI,EAAGA,EAAI2jB,EAAM7f,OAAQ9D,IAChC2jB,EAAM3jB,GAAKoH,UAAUpH,GAKzB,IAAK2jB,GAA0B,IAAjBA,EAAM7f,OAClB,OAAOW,KAAK+iF,WAAWG,aAIzB,IAAKljF,KAAKmoB,QAAQ65D,OAChB,OAAO9iE,EAAM,GAGf,IAAIikE,EAAQjkE,EAAM3Z,IAAIy9E,GAClBvB,EAAUzhF,KAAK+iF,WAAWG,WAAWC,EAAMppC,OAAOkpC,IAClDjsD,EAAQyqD,EAAQ,GAEpB,QAAOzqD,GACH9X,EAAMikE,EAAMn/E,QAAQgzB,KAiB1B8rD,EAAQ3lF,UAAUuB,SAClBokF,EAAQ3lF,UAAUyqC,UAAY,SAAUw7C,GACtC,IAAIx7C,EAAYw7C,EAGhB,GAAIx7C,IAAc7oC,MAAMC,QAAQ4oC,GAAY,CAC1CA,EAAY,IAAI7oC,MAAM4D,UAAUtD,QAChC,IAAK,IAAI9D,EAAI,EAAGA,EAAIqsC,EAAUvoC,OAAQ9D,IACpCqsC,EAAUrsC,GAAKoH,UAAUpH,GAK7B,OAAKqsC,GAAkC,IAArBA,EAAUvoC,OAIrBW,KAAK+iF,WAAWn7C,UAAUA,GAAW,KAAM,EAHzC5nC,KAAK+iF,WAAWn7C,aAmB3Bk7C,EAAQ3lF,UAAUqiB,QAClBsjE,EAAQ3lF,UAAU0iC,SAAW,SAAUwjD,GACrC,IAAIxjD,EAAWwjD,EAGf,GAAIxjD,IAAa9gC,MAAMC,QAAQ6gC,GAAW,CACxCA,EAAW,IAAI9gC,MAAM4D,UAAUtD,QAC/B,IAAK,IAAI9D,EAAI,EAAGA,EAAIskC,EAASxgC,OAAQ9D,IACnCskC,EAAStkC,GAAKoH,UAAUpH,GAK5B,OAAKskC,GAAgC,IAApBA,EAASxgC,OAInBW,KAAK+iF,WAAWljD,SAASA,GAAU,KAAM,EAHvC7/B,KAAK+iF,WAAWljD,YAmB3BijD,EAAQ3lF,UAAUmmF,KAClBR,EAAQ3lF,UAAUomF,MAClBT,EAAQ3lF,UAAUqmF,SAClBV,EAAQ3lF,UAAUmlF,UAAY,SAAUmB,GACtC,IAAInB,EAAYmB,EAGhB,GAAInB,IAAcvjF,MAAMC,QAAQsjF,GAAY,CAC1CA,EAAY,IAAIvjF,MAAM4D,UAAUtD,QAChC,IAAK,IAAI9D,EAAI,EAAGA,EAAI+mF,EAAUjjF,OAAQ9D,IACpC+mF,EAAU/mF,GAAKoH,UAAUpH,GAK7B,OAAK+mF,GAAkC,IAArBA,EAAUjjF,OAIrBW,KAAK+iF,WAAWT,UAAUA,GAAW,KAAM,EAHzCtiF,KAAK+iF,WAAWT,c;;;;;;;GChM3B,IAAI7mF,EAAUQ,OAAOY,OAAO,MAgB5B,SAASgmF,EAAWpoC,GAClB,KAAMz6C,gBAAgB6iF,GACpB,OAAO,IAAIA,EAAWpoC,GAGxBz6C,KAAKy6C,QAAUA,EA0DjB,SAASipC,EAAWC,GAClB,IAAIroF,EAASG,EAAQkoF,GAErB,QAAergF,IAAXhI,EACF,OAAOA,EAIT,OAAQqoF,GACN,IAAK,UACHroF,EAAS,EAAQ,KACjB,MACF,IAAK,WACHA,EAAS,EAAQ,KACjB,MACF,IAAK,WACHA,EAAS,EAAQ,KACjB,MACF,IAAK,YACHA,EAAS,EAAQ,KACjB,MACF,QACE,MAAM,IAAIgK,MAAM,uBAA0Bq+E,EAAa,KAM3D,OAFAloF,EAAQkoF,GAAcroF,EAEfA,EApGTA,EAAOD,QAAUwnF,EACjBvnF,EAAOD,QAAQwnF,WAAaA,EAgB5BA,EAAW1lF,UAAUqiB,QAAU,SAAiBokE,GAC9C,IAAIx5E,EAAMpK,KAAK6/B,SAAS+jD,GACxB,OAAOx5E,GAAOA,EAAI,IAGpBy4E,EAAW1lF,UAAU0iC,SAAW,SAAkB+jD,GAEhD,OAAOC,EADiBH,EAAW,WAAWG,mBACrB7jF,KAAKy6C,QAAQtyB,QAAQ,kBAAmBy7D,IAGnEf,EAAW1lF,UAAUuB,SAAW,SAAkBklF,GAChD,IAAIx5E,EAAMpK,KAAK4nC,UAAUg8C,GACzB,OAAOx5E,GAAOA,EAAI,IAGpBy4E,EAAW1lF,UAAUyqC,UAAY,SAAmBg8C,GAElD,OAAOE,EADkBJ,EAAW,YAAYI,oBACtB9jF,KAAKy6C,QAAQtyB,QAAQ,mBAAoBy7D,IAGrEf,EAAW1lF,UAAUqmF,SAAW,SAAkBI,GAChD,IAAIx5E,EAAMpK,KAAKsiF,UAAUsB,GACzB,OAAOx5E,GAAOA,EAAI,IAGpBy4E,EAAW1lF,UAAUmlF,UAAY,SAAmBsB,GAElD,OAAOG,EADkBL,EAAW,YAAYK,oBACtB/jF,KAAKy6C,QAAQtyB,QAAQ,mBAAoBy7D,IAGrEf,EAAW1lF,UAAU6mF,UAAY,SAAmBJ,GAClD,IAAIx5E,EAAMpK,KAAKkjF,WAAWU,GAC1B,OAAOx5E,GAAOA,EAAI,IAGpBy4E,EAAW1lF,UAAU+lF,WAAa,SAAoBU,GAEpD,OAAOK,EADmBP,EAAW,aAAaO,qBACvBjkF,KAAKy6C,QAAQtyB,QAAQ65D,OAAQ4B,IAI1Df,EAAW1lF,UAAU+mF,iBAAmBrB,EAAW1lF,UAAUqiB,QAC7DqjE,EAAW1lF,UAAU0mF,kBAAoBhB,EAAW1lF,UAAU0iC,SAC9DgjD,EAAW1lF,UAAUgnF,kBAAoBtB,EAAW1lF,UAAUuB,SAC9DmkF,EAAW1lF,UAAU2mF,mBAAqBjB,EAAW1lF,UAAUyqC,UAC/Di7C,EAAW1lF,UAAUinF,kBAAoBvB,EAAW1lF,UAAUqmF,SAC9DX,EAAW1lF,UAAU4mF,mBAAqBlB,EAAW1lF,UAAUmlF,UAC/DO,EAAW1lF,UAAUknF,mBAAqBxB,EAAW1lF,UAAU6mF,UAC/DnB,EAAW1lF,UAAU8mF,oBAAsBpB,EAAW1lF,UAAU+lF,Y,6BCxEhE5nF,EAAOD,QAAUwoF,EACjBvoF,EAAOD,QAAQwoF,kBAAoBA,EAOnC,IAAIS,EAAsB,8BA6B1B,SAASC,EAAaluE,EAAK9a,GACzB,IAAImtB,EAAQ47D,EAAoB75E,KAAK4L,GACrC,IAAKqS,EAAO,OAAO,KAEnB,IAAIlJ,EAAUkJ,EAAM,GAChB0b,EAAI,EACR,GAAI1b,EAAM,GAER,IADA,IAAI1nB,EAAS0nB,EAAM,GAAG5d,MAAM,KACnBrE,EAAI,EAAGA,EAAIzF,EAAO3B,OAAQoH,IAAK,CACtC,IAAIpJ,EAAI2D,EAAOyF,GAAGuE,OAAOF,MAAM,KAC/B,GAAa,MAATzN,EAAE,GAAY,CAChB+mC,EAAItlB,WAAWzhB,EAAE,IACjB,OAKN,MAAO,CACLmiB,QAASA,EACT4kB,EAAGA,EACH7oC,EAAGA,GA4BP,SAASipF,EAAQhlE,EAASilE,EAAMviF,GAC9B,IAAI5E,EAAI,EACR,GAAGmnF,EAAKjlE,QAAQne,gBAAkBme,EAAQne,cACxC/D,GAAK,OACA,GAAqB,MAAjBmnF,EAAKjlE,QACd,OAAO,KAGT,MAAO,CACLjkB,EAAG2G,EACHlG,EAAGyoF,EAAKlpF,EACR6oC,EAAGqgD,EAAKrgD,EACR9mC,EAAGA,GASP,SAASumF,EAAkB7B,EAAQ0C,GAEjC,IAAIjD,EA7FN,SAA4BO,GAG1B,IAFA,IAAIP,EAAUO,EAAOl3E,MAAM,KAElBvP,EAAI,EAAGkL,EAAI,EAAGlL,EAAIkmF,EAAQpiF,OAAQ9D,IAAK,CAC9C,IAAIikB,EAAU+kE,EAAa9C,EAAQlmF,GAAGyP,OAAQzP,GAE1CikB,IACFiiE,EAAQh7E,KAAO+Y,GAOnB,OAFAiiE,EAAQpiF,OAASoH,EAEVg7E,EA+EOkD,MAA8BrhF,IAAX0+E,EAAuB,IAAMA,GAAU,IAExE,IAAK0C,EAEH,OAAOjD,EACJ1nC,OAAO6qC,GACPpoE,KAAKqoE,GACLt/E,IAAIu/E,GAGT,IAAIC,EAAaL,EAASn/E,IAAI,SAAqBN,EAAM/C,GACvD,OArDJ,SAA4Bsd,EAASwlE,EAAU9iF,GAG7C,IAFA,IAAI+iF,EAAW,CAACjpF,GAAI,EAAGooC,EAAG,EAAG9mC,EAAG,GAEvB/B,EAAI,EAAGA,EAAIypF,EAAS3lF,OAAQ9D,IAAK,CACxC,IAAIkpF,EAAOD,EAAQhlE,EAASwlE,EAASzpF,GAAI2G,GAErCuiF,IAASQ,EAAS3nF,EAAImnF,EAAKnnF,GAAK2nF,EAAS7gD,EAAIqgD,EAAKrgD,GAAK6gD,EAASjpF,EAAIyoF,EAAKzoF,GAAK,IAChFipF,EAAWR,GAIf,OAAOQ,EA0CEC,CAAmBjgF,EAAMw8E,EAASv/E,KAI3C,OAAO6iF,EAAWhrC,OAAO6qC,GAAWpoE,KAAKqoE,GAAct/E,IAAI,SAAoB0/E,GAC7E,OAAOP,EAASK,EAAW/gF,QAAQihF,MASvC,SAASJ,EAAazgF,EAAGnG,GACvB,OAAQA,EAAEmmC,EAAIhgC,EAAEggC,GAAOnmC,EAAEX,EAAI8G,EAAE9G,GAAO8G,EAAEpI,EAAIiC,EAAEjC,GAAOoI,EAAE7I,EAAI0C,EAAE1C,GAAM,EAQrE,SAASupF,EAAeL,GACtB,OAAOA,EAAKjlE,QAQd,SAASolE,EAAUH,GACjB,OAAOA,EAAKrgD,EAAI,I,6BCxJlB9oC,EAAOD,QAAUyoF,EACjBxoF,EAAOD,QAAQyoF,mBAAqBA,EAOpC,IAAIqB,EAAuB,8BA6C3B,SAASC,EAAc/uE,EAAK9a,GAC1B,IAAImtB,EAAQy8D,EAAqB16E,KAAK4L,GACtC,IAAKqS,EAAO,OAAO,KAEnB,IAAIhqB,EAAWgqB,EAAM,GACjB0b,EAAI,EACR,GAAI1b,EAAM,GAER,IADA,IAAI1nB,EAAS0nB,EAAM,GAAG5d,MAAM,KACnBrE,EAAI,EAAGA,EAAIzF,EAAO3B,OAAQoH,IAAK,CACtC,IAAIpJ,EAAI2D,EAAOyF,GAAGuE,OAAOF,MAAM,KAC/B,GAAa,MAATzN,EAAE,GAAY,CAChB+mC,EAAItlB,WAAWzhB,EAAE,IACjB,OAKN,MAAO,CACLqB,SAAUA,EACV0lC,EAAGA,EACH7oC,EAAGA,GA4BP,SAASipF,EAAQ9lF,EAAU+lF,EAAMviF,GAC/B,IAAI5E,EAAI,EACR,GAAGmnF,EAAK/lF,SAAS2C,gBAAkB3C,EAAS2C,cAC1C/D,GAAK,OACA,GAAsB,MAAlBmnF,EAAK/lF,SACd,OAAO,KAGT,MAAO,CACLnD,EAAG2G,EACHlG,EAAGyoF,EAAKlpF,EACR6oC,EAAGqgD,EAAKrgD,EACR9mC,EAAGA,GASP,SAASwmF,EAAmB9B,EAAQ0C,GAClC,IAAIjD,EA5GN,SAA6BO,GAK3B,IAJA,IAAIP,EAAUO,EAAOl3E,MAAM,KACvBu6E,GAAc,EACdC,EAAa,EAER/pF,EAAI,EAAGkL,EAAI,EAAGlL,EAAIkmF,EAAQpiF,OAAQ9D,IAAK,CAC9C,IAAImD,EAAW0mF,EAAc3D,EAAQlmF,GAAGyP,OAAQzP,GAE5CmD,IACF+iF,EAAQh7E,KAAO/H,EACf2mF,EAAcA,GAAeb,EAAQ,WAAY9lF,GACjD4mF,EAAa5+E,KAAKS,IAAIm+E,EAAY5mF,EAAS0lC,GAAK,IAmBpD,OAfKihD,IAKH5D,EAAQh7E,KAAO,CACb/H,SAAU,WACV0lC,EAAGkhD,EACH/pF,EAAGA,IAKPkmF,EAAQpiF,OAASoH,EAEVg7E,EA8EO8D,CAAoBvD,GAAU,IAE5C,IAAK0C,EAEH,OAAOjD,EACJ1nC,OAAO6qC,GACPpoE,KAAKqoE,GACLt/E,IAAIigF,GAGT,IAAIT,EAAaL,EAASn/E,IAAI,SAAqBN,EAAM/C,GACvD,OApDJ,SAA6BxD,EAAUsmF,EAAU9iF,GAG/C,IAFA,IAAI+iF,EAAW,CAACjpF,GAAI,EAAGooC,EAAG,EAAG9mC,EAAG,GAEvB/B,EAAI,EAAGA,EAAIypF,EAAS3lF,OAAQ9D,IAAK,CACxC,IAAIkpF,EAAOD,EAAQ9lF,EAAUsmF,EAASzpF,GAAI2G,GAEtCuiF,IAASQ,EAAS3nF,EAAImnF,EAAKnnF,GAAK2nF,EAAS7gD,EAAIqgD,EAAKrgD,GAAK6gD,EAASjpF,EAAIyoF,EAAKzoF,GAAK,IAChFipF,EAAWR,GAIf,OAAOQ,EAyCEQ,CAAoBxgF,EAAMw8E,EAASv/E,KAI5C,OAAO6iF,EAAWhrC,OAAO6qC,GAAWpoE,KAAKqoE,GAAct/E,IAAI,SAAqB0/E,GAC9E,OAAOP,EAASK,EAAW/gF,QAAQihF,MASvC,SAASJ,EAAazgF,EAAGnG,GACvB,OAAQA,EAAEmmC,EAAIhgC,EAAEggC,GAAOnmC,EAAEX,EAAI8G,EAAE9G,GAAO8G,EAAEpI,EAAIiC,EAAEjC,GAAOoI,EAAE7I,EAAI0C,EAAE1C,GAAM,EAQrE,SAASiqF,EAAgBf,GACvB,OAAOA,EAAK/lF,SAQd,SAASkmF,EAAUH,GACjB,OAAOA,EAAKrgD,EAAI,I,6BCvKlB9oC,EAAOD,QAAU0oF,EACjBzoF,EAAOD,QAAQ0oF,mBAAqBA,EAOpC,IAAI2B,EAAuB,+CA6B3B,SAASC,EAActvE,EAAK9a,GAC1B,IAAImtB,EAAQg9D,EAAqBj7E,KAAK4L,GACtC,IAAKqS,EAAO,OAAO,KAEnB,IAAIq+C,EAASr+C,EAAM,GACjBmrD,EAASnrD,EAAM,GACfk9D,EAAO7e,EAEL8M,IAAQ+R,GAAQ,IAAM/R,GAE1B,IAAIzvC,EAAI,EACR,GAAI1b,EAAM,GAER,IADA,IAAI1nB,EAAS0nB,EAAM,GAAG5d,MAAM,KACnBrE,EAAI,EAAGA,EAAIzF,EAAO3B,OAAQoH,IAAK,CACtC,IAAIpJ,EAAI2D,EAAOyF,GAAGqE,MAAM,KACX,MAATzN,EAAE,KAAY+mC,EAAItlB,WAAWzhB,EAAE,KAIvC,MAAO,CACL0pE,OAAQA,EACR8M,OAAQA,EACRzvC,EAAGA,EACH7oC,EAAGA,EACHqqF,KAAMA,GA4BV,SAASpB,EAAQhB,EAAUiB,EAAMviF,GAC/B,IAAI7E,EAAIsoF,EAAcnC,GACtB,IAAKnmF,EAAG,OAAO,KACf,IAAIC,EAAI,EACR,GAAGmnF,EAAKmB,KAAKvkF,gBAAkBhE,EAAEuoF,KAAKvkF,cACpC/D,GAAK,OACA,GAAImnF,EAAK1d,OAAO1lE,gBAAkBhE,EAAEuoF,KAAKvkF,cAC9C/D,GAAK,OACA,GAAImnF,EAAKmB,KAAKvkF,gBAAkBhE,EAAE0pE,OAAO1lE,cAC9C/D,GAAK,OACA,GAAkB,MAAdmnF,EAAKmB,KACd,OAAO,KAGT,MAAO,CACLrqF,EAAG2G,EACHlG,EAAGyoF,EAAKlpF,EACR6oC,EAAGqgD,EAAKrgD,EACR9mC,EAAGA,GASP,SAASymF,EAAmB/B,EAAQ0C,GAElC,IAAIjD,EAvGN,SAA6BO,GAG3B,IAFA,IAAIP,EAAUO,EAAOl3E,MAAM,KAElBvP,EAAI,EAAGkL,EAAI,EAAGlL,EAAIkmF,EAAQpiF,OAAQ9D,IAAK,CAC9C,IAAIioF,EAAWmC,EAAclE,EAAQlmF,GAAGyP,OAAQzP,GAE5CioF,IACF/B,EAAQh7E,KAAO+8E,GAOnB,OAFA/B,EAAQpiF,OAASoH,EAEVg7E,EAyFOoE,MAA+BviF,IAAX0+E,EAAuB,IAAMA,GAAU,IAEzE,IAAK0C,EAEH,OAAOjD,EACJ1nC,OAAO6qC,GACPpoE,KAAKqoE,GACLt/E,IAAIugF,GAGT,IAAIf,EAAaL,EAASn/E,IAAI,SAAqBN,EAAM/C,GACvD,OA3DJ,SAA6BshF,EAAUwB,EAAU9iF,GAG/C,IAFA,IAAI+iF,EAAW,CAACjpF,GAAI,EAAGooC,EAAG,EAAG9mC,EAAG,GAEvB/B,EAAI,EAAGA,EAAIypF,EAAS3lF,OAAQ9D,IAAK,CACxC,IAAIkpF,EAAOD,EAAQhB,EAAUwB,EAASzpF,GAAI2G,GAEtCuiF,IAASQ,EAAS3nF,EAAImnF,EAAKnnF,GAAK2nF,EAAS7gD,EAAIqgD,EAAKrgD,GAAK6gD,EAASjpF,EAAIyoF,EAAKzoF,GAAK,IAChFipF,EAAWR,GAIf,OAAOQ,EAgDEc,CAAoB9gF,EAAMw8E,EAASv/E,KAI5C,OAAO6iF,EAAWhrC,OAAO6qC,GAAWpoE,KAAKqoE,GAAct/E,IAAI,SAAqB0/E,GAC9E,OAAOP,EAASK,EAAW/gF,QAAQihF,MASvC,SAASJ,EAAazgF,EAAGnG,GACvB,OAAQA,EAAEmmC,EAAIhgC,EAAEggC,GAAOnmC,EAAEX,EAAI8G,EAAE9G,GAAO8G,EAAEpI,EAAIiC,EAAEjC,GAAOoI,EAAE7I,EAAI0C,EAAE1C,GAAM,EAQrE,SAASuqF,EAAgBrB,GACvB,OAAOA,EAAKmB,KAQd,SAAShB,EAAUH,GACjB,OAAOA,EAAKrgD,EAAI,I,6BClKlB9oC,EAAOD,QAAU4oF,EACjB3oF,EAAOD,QAAQ4oF,oBAAsBA,EAOrC,IAAI+B,EAAwB,2CAO5B,SAASC,EAAYjE,GAGnB,IAFA,IAAIP,EA6NN,SAAyBO,GAGvB,IAFA,IAAIP,EAAUO,EAAOl3E,MAAM,KAElBvP,EAAI,EAAGkL,EAAI,EAAGlL,EAAIkmF,EAAQpiF,OAAQ9D,IACrC2qF,EAAWzE,EAAQh7E,IAAM,GAAK,EAChCg7E,IAAUh7E,GAAKg7E,EAAQlmF,GAEvBkmF,EAAQh7E,IAAM,IAAMg7E,EAAQlmF,GAOhC,OAFAkmF,EAAQpiF,OAASoH,EAAI,EAEdg7E,EA3OO0E,CAAgBnE,GAErBzmF,EAAI,EAAGkL,EAAI,EAAGlL,EAAIkmF,EAAQpiF,OAAQ9D,IAAK,CAC9C,IAAIyoF,EAAYoC,EAAe3E,EAAQlmF,GAAGyP,OAAQzP,GAE9CyoF,IACFvC,EAAQh7E,KAAOu9E,GAOnB,OAFAvC,EAAQpiF,OAASoH,EAEVg7E,EAQT,SAAS2E,EAAe/vE,EAAK9a,GAC3B,IAAImtB,EAAQs9D,EAAsBv7E,KAAK4L,GACvC,IAAKqS,EAAO,OAAO,KAEnB,IAAI1nB,EAAS/E,OAAOY,OAAO,MACvBunC,EAAI,EACJwlB,EAAUlhC,EAAM,GAChBzjB,EAAOyjB,EAAM,GAEjB,GAAIA,EAAM,GAGR,IAFA,IAAI29D,EAoNR,SAAyBhwE,GAGvB,IAFA,IAAIqJ,EAAarJ,EAAIvL,MAAM,KAElBvP,EAAI,EAAGkL,EAAI,EAAGlL,EAAImkB,EAAWrgB,OAAQ9D,IACxC2qF,EAAWxmE,EAAWjZ,IAAM,GAAK,EACnCiZ,IAAajZ,GAAKiZ,EAAWnkB,GAE7BmkB,EAAWjZ,IAAM,IAAMiZ,EAAWnkB,GAKtCmkB,EAAWrgB,OAASoH,EAAI,EAExB,IAASlL,EAAI,EAAGA,EAAImkB,EAAWrgB,OAAQ9D,IACrCmkB,EAAWnkB,GAAKmkB,EAAWnkB,GAAGyP,OAGhC,OAAO0U,EAtOM4mE,CAAgB59D,EAAM,IAAInjB,IAAIghF,GAEhC9/E,EAAI,EAAGA,EAAI4/E,EAAKhnF,OAAQoH,IAAK,CACpC,IAAI+/E,EAAOH,EAAK5/E,GACZ3J,EAAM0pF,EAAK,GAAGnlF,cACdgF,EAAMmgF,EAAK,GAGXhqF,EAAQ6J,GAAkB,MAAXA,EAAI,IAAsC,MAAxBA,EAAIA,EAAIhH,OAAS,GAClDgH,EAAItC,OAAO,EAAGsC,EAAIhH,OAAS,GAC3BgH,EAEJ,GAAY,MAARvJ,EAAa,CACfsnC,EAAItlB,WAAWtiB,GACf,MAIFwE,EAAOlE,GAAON,EAIlB,MAAO,CACLyI,KAAMA,EACN2kD,QAASA,EACT5oD,OAAQA,EACRojC,EAAGA,EACH7oC,EAAGA,GA4BP,SAASipF,EAAQv/E,EAAMw/E,EAAMviF,GAC3B,IAAI7E,EAAI+oF,EAAenhF,GACnB3H,EAAI,EAER,IAAKD,EACH,OAAO,KAGT,GAAGonF,EAAKx/E,KAAK5D,eAAiBhE,EAAE4H,KAAK5D,cACnC/D,GAAK,OACA,GAAgB,KAAbmnF,EAAKx/E,KACb,OAAO,KAGT,GAAGw/E,EAAK76B,QAAQvoD,eAAiBhE,EAAEusD,QAAQvoD,cACzC/D,GAAK,OACA,GAAmB,KAAhBmnF,EAAK76B,QACb,OAAO,KAGT,IAAI9oD,EAAO7E,OAAO6E,KAAK2jF,EAAKzjF,QAC5B,GAAIF,EAAKzB,OAAS,EAAG,CACnB,IAAIyB,EAAKo9B,MAAM,SAAU98B,GACvB,MAAyB,KAAlBqjF,EAAKzjF,OAAOI,KAAcqjF,EAAKzjF,OAAOI,IAAM,IAAIC,gBAAkBhE,EAAE2D,OAAOI,IAAM,IAAIC,gBAI5F,OAAO,KAFP/D,GAAK,EAMT,MAAO,CACL/B,EAAG2G,EACHlG,EAAGyoF,EAAKlpF,EACR6oC,EAAGqgD,EAAKrgD,EACR9mC,EAAGA,GASP,SAAS2mF,EAAoBjC,EAAQ0C,GAEnC,IAAIjD,EAAUwE,OAAuB3iF,IAAX0+E,EAAuB,MAAQA,GAAU,IAEnE,IAAK0C,EAEH,OAAOjD,EACJ1nC,OAAO6qC,GACPpoE,KAAKqoE,GACLt/E,IAAIkhF,GAGT,IAAI1B,EAAaL,EAASn/E,IAAI,SAAqBN,EAAM/C,GACvD,OA5EJ,SAA8B+C,EAAM+/E,EAAU9iF,GAG5C,IAFA,IAAI+iF,EAAW,CAACjpF,GAAI,EAAGooC,EAAG,EAAG9mC,EAAG,GAEvB/B,EAAI,EAAGA,EAAIypF,EAAS3lF,OAAQ9D,IAAK,CACxC,IAAIkpF,EAAOD,EAAQv/E,EAAM+/E,EAASzpF,GAAI2G,GAElCuiF,IAASQ,EAAS3nF,EAAImnF,EAAKnnF,GAAK2nF,EAAS7gD,EAAIqgD,EAAKrgD,GAAK6gD,EAASjpF,EAAIyoF,EAAKzoF,GAAK,IAChFipF,EAAWR,GAIf,OAAOQ,EAiEEyB,CAAqBzhF,EAAMw8E,EAASv/E,KAI7C,OAAO6iF,EAAWhrC,OAAO6qC,GAAWpoE,KAAKqoE,GAAct/E,IAAI,SAAiB0/E,GAC1E,OAAOP,EAASK,EAAW/gF,QAAQihF,MASvC,SAASJ,EAAazgF,EAAGnG,GACvB,OAAQA,EAAEmmC,EAAIhgC,EAAEggC,GAAOnmC,EAAEX,EAAI8G,EAAE9G,GAAO8G,EAAEpI,EAAIiC,EAAEjC,GAAOoI,EAAE7I,EAAI0C,EAAE1C,GAAM,EAQrE,SAASkrF,EAAYhC,GACnB,OAAOA,EAAKx/E,KAAO,IAAMw/E,EAAK76B,QAQhC,SAASg7B,EAAUH,GACjB,OAAOA,EAAKrgD,EAAI,EAQlB,SAAS8hD,EAAW7yD,GAIlB,IAHA,IAAIvsB,EAAQ,EACR5E,EAAQ,GAEqC,KAAzCA,EAAQmxB,EAAOrvB,QAAQ,IAAK9B,KAClC4E,IACA5E,IAGF,OAAO4E,EAQT,SAASy/E,EAAkBlwE,GACzB,IACIvZ,EACAuJ,EAFAnE,EAAQmU,EAAIrS,QAAQ,KAWxB,OAPe,IAAX9B,EACFpF,EAAMuZ,GAENvZ,EAAMuZ,EAAItS,OAAO,EAAG7B,GACpBmE,EAAMgQ,EAAItS,OAAO7B,EAAQ,IAGpB,CAACpF,EAAKuJ,K;;;;;;GCtOf,IAAIvI,EAAS,EAAQ,IAAeA,OAChCuf,EAAqB,EAAQ,IAC7BlG,EAAY,EAAQ,EAAR,CAAgB,WAC5BqjB,EAAY,EAAQ,IACpBC,EAAa,EAAQ,IACrBL,EAAO,EAAQ,IACf9b,EAAa,EAAQ,IAAWA,WAChC2W,EAAa,EAAQ,IACrB1W,EAAO,EAAQ,GACfmI,EAAW,EAAQ,IACnBmkB,EAAQ,EAAQ,IAChB3G,EAAO,EAAQ,KAAoBA,KACnC1lB,EAAgB,EAAQ,IAAWA,cACnCS,EAAiB,EAAQ,IAAWA,eACpCM,EAAa,EAAQ,IAAWA,WAChConE,EAAS,EAAQ,KACjBvnD,EAAO,EAAQ,IACftE,EAAUvc,EAAKuc,QACftd,EAAO4hB,EAAK5hB,KACZ7d,EAAU4e,EAAK5e,QACfinF,EAAO,EAAQ,KAOfh4D,EAAM3yB,OAAOY,OAAOu9B,EAAKysD,eAAe1pF,WAO5C7B,EAAOD,QAAUuzB,EAOjB,IAAIk4D,EAAgB,kBAg8BpB,SAASC,EAASn4D,EAAK5X,EAAM3R,EAAShF,GACpC,IACI2mF,EADA7kF,GAAO,EAIX,SAAS8kF,IACP,IAAI9kF,EAAJ,CACAA,GAAO,EAEP,IAAItC,EAAM,IAAIyF,MAAM,mBACpBzF,EAAI6K,KAAO,eACXrK,EAASR,IAcX,SAASm4E,EAAQn4E,GACXsC,IACJA,GAAO,EACP9B,EAASR,IAsCXmX,EAAKigB,GAAG,YAnDR,WACE,IAAI90B,EAAJ,CACAA,GAAO,EAEP,IAAItC,EAAM,IAAIyF,MAAM,gBACpBzF,EAAI6K,KAAO,SACXrK,EAASR,MA8CXmX,EAAKigB,GAAG,MAnCR,WACM90B,IACJA,GAAO,EACP9B,OAiCF2W,EAAKigB,GAAG,QAAS+gD,GACjBhhE,EAAKigB,GAAG,OA9BR,WACE+vD,GAAY,IA8BdhwE,EAAKigB,GAAG,SARR,WACE+vD,GAAY,IAQd/xD,EAAWrG,EA3BX,SAAkB/uB,GAChB,OAAIA,GAAoB,eAAbA,EAAI6K,KAA8Bu8E,IACzCpnF,EAAYm4E,EAAQn4E,QACpBsC,GAEJm1B,aAAa,YACO,IAAd0vD,GAAwB7kF,EAKxBA,IACJA,GAAO,EACP9B,KANE4mF,SAsBF5hF,EAAQ8iB,SAEVnR,EAAKigB,GAAG,UAAW,SAAiBrI,GAIlC,IAHA,IAAIztB,EAAMkE,EAAQ8iB,QACdrnB,EAAO7E,OAAO6E,KAAKK,GAEd5F,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,IAAI6F,EAAIN,EAAKvF,GACbqzB,EAAI8O,UAAUt8B,EAAGD,EAAIC,OAM3B4V,EAAKye,KAAK7G,GAeZ,SAASsL,EAAW19B,EAAO0qF,EAAUC,EAAQpvD,GAG3C,IAAI+qC,EAAOokB,GAAYC,EACnB/6C,KAAKlS,UAAU19B,EAAO0qF,EAAUC,GAChC/6C,KAAKlS,UAAU19B,GAkBnB,OAhBIu7B,IACF+qC,EAAOA,EAAK9nD,QAAQ,SAAU,SAAUpf,GACtC,OAAQA,EAAEstB,WAAW,IACnB,KAAK,GACH,MAAO,UACT,KAAK,GACH,MAAO,UACT,KAAK,GACH,MAAO,UAET,QACE,OAAOttB,MAKRknE,EAnjCTl0C,EAAIpI,OAAS,SAAgB9b,GAE3B,OADA1K,KAAKm0B,WAAazpB,EACX1K,MAkBT4uB,EAAIw4D,MAAQ,SAASA,GACnB,IAAIC,EAAOrnF,KAAK5D,IAAI,SAAW,GAE/B,OADIirF,IAAMA,GAAQ,MACXrnF,KAAKoK,IAAI,OAAQi9E,EAAOprF,OAAO6E,KAAKsmF,GAAO7hF,IAAI,SAAS+hF,GAC7D,MAAO,IAAMF,EAAME,GAAO,WAAaA,EAAM,MAC5C/gF,KAAK,QAgBVqoB,EAAIwQ,KAAO,SAActhB,GACvB,IACIpf,EAEAuG,EAHA0jE,EAAQ7qD,EAERoK,EAAMloB,KAAKkoB,IAIX06C,EAAM5iE,KAAK4iE,IA2Bf,OAxByB,IAArBjgE,UAAUtD,SAEgB,iBAAjBsD,UAAU,IAA2C,iBAAjBA,UAAU,IACvDwU,EAAU,qEACVnX,KAAKm0B,WAAaxxB,UAAU,KAE5BwU,EAAU,qEACVnX,KAAKm0B,WAAaxxB,UAAU,GAC5BgmE,EAAQhmE,UAAU,KAKD,iBAAVgmE,GAA2C,IAArBhmE,UAAUtD,SAEpCW,KAAK5D,IAAI,iBACZ4D,KAAKiF,KAAK,OAGZkS,EAAU,wDACVnX,KAAKm0B,WAAaw0C,EAClBA,EAAQjiD,EAASiiD,WAGJA,GAEb,IAAK,SACE3oE,KAAK5D,IAAI,iBACZ4D,KAAKiF,KAAK,QAEZ,MACF,IAAK,UACL,IAAK,SACL,IAAK,SACH,GAAc,OAAV0jE,EACFA,EAAQ,OACH,KAAI7qE,EAAOigB,SAAS4qD,GAKzB,OAAO3oE,KAAK8iE,KAAK6F,GAJZ3oE,KAAK5D,IAAI,iBACZ4D,KAAKiF,KAAK,QASG,iBAAV0jE,IACTjqE,EAAW,OAIS,iBAHpBuG,EAAOjF,KAAK5D,IAAI,kBAId4D,KAAKoK,IAAI,eAAgBmV,EAAWta,EAAM,WAK9C,IAII+4B,EAmBAvgB,EAvBA8pE,EAAS3kB,EAAIxmE,IAAI,WACjBorF,GAAgBxnF,KAAK5D,IAAI,SAA6B,mBAAXmrF,EAgD/C,YA5CcjkF,IAAVqlE,IACE7qE,EAAOigB,SAAS4qD,GAElB3qC,EAAM2qC,EAAMtpE,QACFmoF,GAAgB7e,EAAMtpE,OAAS,IAEzC2+B,EAAMlgC,EAAO8/B,WAAW+qC,EAAOjqE,IAG/BiqE,EAAQ7qE,EAAOU,KAAKmqE,EAAOjqE,GAC3BA,OAAW4E,EACX06B,EAAM2qC,EAAMtpE,QAGdW,KAAKoK,IAAI,iBAAkB4zB,IAKzBwpD,QAAwBlkF,IAAR06B,IACbvgB,EAAO8pE,EAAO5e,EAAOjqE,KACxBsB,KAAKoK,IAAI,OAAQqT,GAKjByK,EAAIa,QAAO/oB,KAAKm0B,WAAa,KAG7B,MAAQn0B,KAAKm0B,YAAc,MAAQn0B,KAAKm0B,aAC1Cn0B,KAAKw9B,aAAa,gBAClBx9B,KAAKw9B,aAAa,kBAClBx9B,KAAKw9B,aAAa,qBAClBmrC,EAAQ,IAGS,SAAfzgD,EAAIoS,OAENt6B,KAAK24B,MAGL34B,KAAK24B,IAAIgwC,EAAOjqE,GAGXsB,MAeT4uB,EAAIk0C,KAAO,SAAc3hE,GACvB,IAAIkF,EAAMlF,EAGe,IAArBwB,UAAUtD,SAEgB,iBAAjBsD,UAAU,IACnBwU,EAAU,mEACVnX,KAAKm0B,WAAaxxB,UAAU,KAE5BwU,EAAU,mEACVnX,KAAKm0B,WAAaxxB,UAAU,GAC5B0D,EAAM1D,UAAU,KAKpB,IAAIigE,EAAM5iE,KAAK4iE,IACX7qC,EAAS6qC,EAAIxmE,IAAI,eACjB8qF,EAAWtkB,EAAIxmE,IAAI,iBACnB+qF,EAASvkB,EAAIxmE,IAAI,eACjB0hB,EAAOoc,EAAU7zB,EAAK6gF,EAAUC,EAAQpvD,GAO5C,OAJK/3B,KAAK5D,IAAI,iBACZ4D,KAAKoK,IAAI,eAAgB,oBAGpBpK,KAAKo/B,KAAKthB,IAenB8Q,EAAI64D,MAAQ,SAAetmF,GACzB,IAAIkF,EAAMlF,EAGe,IAArBwB,UAAUtD,SAEgB,iBAAjBsD,UAAU,IACnBwU,EAAU,oEACVnX,KAAKm0B,WAAaxxB,UAAU,KAE5BwU,EAAU,qEACVnX,KAAKm0B,WAAaxxB,UAAU,GAC5B0D,EAAM1D,UAAU,KAKpB,IAAIigE,EAAM5iE,KAAK4iE,IACX7qC,EAAS6qC,EAAIxmE,IAAI,eACjB8qF,EAAWtkB,EAAIxmE,IAAI,iBACnB+qF,EAASvkB,EAAIxmE,IAAI,eACjB0hB,EAAOoc,EAAU7zB,EAAK6gF,EAAUC,EAAQpvD,GACxC13B,EAAWL,KAAKkoB,IAAIpa,MAAM80D,EAAIxmE,IAAI,wBA+BtC,OA5BK4D,KAAK5D,IAAI,kBACZ4D,KAAKoK,IAAI,yBAA0B,WACnCpK,KAAKoK,IAAI,eAAgB,qBAIvBrL,MAAMC,QAAQqB,KAChBA,EAAWA,EAAS,IAIE,iBAAbA,GAA6C,IAApBA,EAAShB,SAC3CW,KAAKoK,IAAI,yBAA0B,WACnCpK,KAAKoK,IAAI,eAAgB,mBAYzB0T,EAAO,gBATPzd,EAAWA,EAAS2a,QAAQ,eAAgB,KAST,sBAA0B3a,EAAW,KANxEyd,EAAOA,EACJ9C,QAAQ,UAAW,WACnBA,QAAQ,UAAW,YAI+D,MAGhFhb,KAAKo/B,KAAKthB,IAkBnB8Q,EAAI84D,WAAa,SAAoBvzD,GACnC,IAAIrW,EAAO4I,EAASyN,IAAe3d,OAAO2d,GAK1C,OAHAn0B,KAAKm0B,WAAaA,EAClBn0B,KAAKiF,KAAK,OAEHjF,KAAKo/B,KAAKthB,IA4CnB8Q,EAAIuQ,SAAW,SAAkB5gB,EAAMlZ,EAAShF,GAC9C,IAAI8B,EAAO9B,EACP6nB,EAAMloB,KAAKkoB,IAEXznB,EAAOynB,EAAIznB,KACXgb,EAAOpW,GAAW,GAEtB,IAAKkZ,EACH,MAAM,IAAI5f,UAAU,6CAGtB,GAAoB,iBAAT4f,EACT,MAAM,IAAI5f,UAAU,yCAStB,GALuB,mBAAZ0G,IACTlD,EAAOkD,EACPoW,EAAO,KAGJA,EAAKghB,OAASne,EAAWC,GAC5B,MAAM,IAAI5f,UAAU,yDAItB,IAAIwqB,EAAW0O,UAAUtZ,GAIzBwoE,EA3BU/mF,KAwBCo/B,EAAKlX,EAAKiB,EAAU1N,GAGXA,EAAM,SAAU5b,GAClC,OAAIsC,EAAaA,EAAKtC,GAClBA,GAAoB,WAAbA,EAAI6K,KAA0BjK,SAGrCZ,GAAoB,iBAAbA,EAAI6K,MAA2C,UAAhB7K,EAAI8nF,SAC5ClnF,EAAKZ,OA8CX+uB,EAAIm4D,SAAW,SAAUxoE,EAAMlZ,EAAShF,GACtC,IAAI8B,EAAO9B,EACP6nB,EAAMloB,KAAKkoB,IAEXznB,EAAOynB,EAAIznB,KACXgb,EAAOpW,GAAW,GAGC,mBAAZA,IACTlD,EAAOkD,EACPoW,EAAO,IAOTsrE,EAdU/mF,KAWCo/B,EAAKlX,EAAK3J,EAAM9C,GAGPA,EAAM,SAAU5b,GAClC,OAAIsC,EAAaA,EAAKtC,GAClBA,GAAoB,WAAbA,EAAI6K,KAA0BjK,SAGrCZ,GAAoB,iBAAbA,EAAI6K,MAA2C,UAAhB7K,EAAI8nF,SAC5ClnF,EAAKZ,OAKX+uB,EAAIm4D,SAAW5vE,EAAUQ,SAASiX,EAAIm4D,SACpC,0CAoBFn4D,EAAIg5D,SAAW,SAAmBrpE,EAAMoxB,EAAUtqC,EAAShF,GACzD,IAAI8B,EAAO9B,EACPvE,EAAO6zC,EACPl0B,EAAOpW,GAAW,KAGE,mBAAbsqC,GACTxtC,EAAOwtC,EACP7zC,EAAO,KACP2f,EAAO,MACqB,mBAAZpW,IAChBlD,EAAOkD,EACPoW,EAAO,MAIT,IAAI0M,EAAU,CACZ,sBAAuB9K,EAAmBvhB,GAAQyiB,IAIpD,GAAI9C,GAAQA,EAAK0M,QAEf,IADA,IAAIrnB,EAAO7E,OAAO6E,KAAK2a,EAAK0M,SACnB5sB,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,IAAIuB,EAAMgE,EAAKvF,GACW,wBAAtBuB,EAAIuE,gBACN8mB,EAAQrrB,GAAO2e,EAAK0M,QAAQrrB,KAMlC2e,EAAOxf,OAAOY,OAAO4e,IAChB0M,QAAUA,EAGf,IAAI0/D,EAAWloF,EAAQ4e,GAGvB,OAAOve,KAAKm/B,SAAS0oD,EAAUpsE,EAAMtZ,IAoBvCysB,EAAItR,YACJsR,EAAI3pB,KAAO,SAAqBA,GAC9B,IAAI6iF,GAA4B,IAAvB7iF,EAAKjB,QAAQ,KAClBwZ,EAAKwB,OAAO/Z,GACZA,EAEJ,OAAOjF,KAAKoK,IAAI,eAAgB09E,IA4DlCl5D,EAAIptB,OAAS,SAASL,GACpB,IAAI+mB,EAAMloB,KAAKkoB,IACXznB,EAAOynB,EAAIznB,KAEXN,EAAKgB,EAAI4mF,QACT5nF,UAAWgB,EAAI4mF,QACnB,IAAIjnF,EAAO7E,OAAO6E,KAAKK,GAEnBrE,EAAMgE,EAAKzB,OAAS,GACpB6oB,EAAIu5D,QAAQ3gF,GAKhB,GAFAd,KAAK4mF,KAAK,UAEN9pF,EACFkD,KAAKoK,IAAI,eAAgBoU,EAAc1hB,GAAKN,OAC5C2E,EAAIrE,GAAKorB,EAAKloB,KAAMS,QACf,GAAIN,EACTA,QACK,CACL,IAAIN,EAAM,IAAIyF,MAAM,kBACpBzF,EAAI2mB,OAAS3mB,EAAIs0B,WAAa,IAC9Bt0B,EAAIqf,MAAQD,EAAene,GAAMyE,IAAI,SAASvJ,GAAI,OAAOA,EAAEQ,QAC3DiE,EAAKZ,GAGP,OAAOG,MAWT4uB,EAAIo5D,WAAa,SAAoBr4C,GAOnC,OANIA,GACF3vC,KAAKiF,KAAK61B,EAAQ6U,IAGpB3vC,KAAKoK,IAAI,sBAAuBiT,EAAmBsyB,IAE5C3vC,MAkBT4uB,EAAI+V,OAAS,SAAgB+lB,EAAOrkD,GAClC,IAAIogC,EAAOzmC,KAAK5D,IAAIsuD,GAChBluD,EAAQ6J,EASZ,OAPIogC,IAEFjqC,EAAQuC,MAAMC,QAAQynC,GAAQA,EAAKnqB,OAAOjW,GACtCtH,MAAMC,QAAQqH,GAAO,CAACogC,GAAMnqB,OAAOjW,GACnC,CAACogC,EAAMpgC,IAGNrG,KAAKoK,IAAIsgD,EAAOluD,IAqBzBoyB,EAAIxkB,IACJwkB,EAAI0E,OAAS,SAAgBo3B,EAAOrkD,GAClC,GAAyB,IAArB1D,UAAUtD,OAAc,CAC1B,IAAI7C,EAAQuC,MAAMC,QAAQqH,GACtBA,EAAId,IAAIiR,QACRA,OAAOnQ,GAGX,GAA4B,iBAAxBqkD,EAAMrpD,cAAkC,CAC1C,GAAItC,MAAMC,QAAQxC,GAChB,MAAM,IAAImC,UAAU,0CAEtB,IAAKmoF,EAAcr0D,KAAKj2B,GAAQ,CAC9B,IAAIgjB,EAAUhC,EAAKqiB,SAAS7gB,OAAOxiB,EAAMsO,MAAM,KAAK,IAChD0U,IAAShjB,GAAS,aAAegjB,EAAQne,gBAIjDrB,KAAK09B,UAAUgtB,EAAOluD,QAEtB,IAAK,IAAIM,KAAO4tD,EACd1qD,KAAKoK,IAAItN,EAAK4tD,EAAM5tD,IAGxB,OAAOkD,MAWT4uB,EAAIxyB,IAAM,SAASsuD,GACjB,OAAO1qD,KAAKuzB,UAAUm3B,IAYxB97B,EAAIq5D,YAAc,SAAqBnsF,EAAMuJ,GAC3C,IAAIoW,EAAOovB,EAAM,CAAEq9C,QAAS,IAAI/2E,KAAK,GAAIoN,KAAM,KAAOlZ,GAEtD,OAAOrF,KAAK2mF,OAAO7qF,EAAM,GAAI2f,IA2B/BmT,EAAI+3D,OAAS,SAAU7qF,EAAMU,EAAO6I,GAClC,IAAIoW,EAAOovB,EAAM,GAAIxlC,GACjB8iF,EAASnoF,KAAKkoB,IAAIigE,OAClBC,EAAS3sE,EAAK2sE,OAElB,GAAIA,IAAWD,EACb,MAAM,IAAI7iF,MAAM,sDAGlB,IAAIe,EAAuB,iBAAV7J,EACb,KAAO4vC,KAAKlS,UAAU19B,GACtBga,OAAOha,GAiBX,OAfI4rF,IACF/hF,EAAM,KAAO69B,EAAK79B,EAAK8hF,IAGrB,WAAY1sE,IACdA,EAAKysE,QAAU,IAAI/2E,KAAKA,KAAKkD,MAAQoH,EAAK6gB,QAC1C7gB,EAAK6gB,QAAU,KAGA,MAAb7gB,EAAK8C,OACP9C,EAAK8C,KAAO,KAGdve,KAAK2kC,OAAO,aAAcgiD,EAAO0B,UAAUvsF,EAAM0a,OAAOnQ,GAAMoV,IAEvDzb,MAoBT4uB,EAAI05D,SAAW,SAAkB3/D,GAC/B,IAAIiW,EAAMjW,EAQV,MALY,SAARA,IACFiW,EAAM5+B,KAAKkoB,IAAI9rB,IAAI,aAAe,KAI7B4D,KAAKoK,IAAI,WAAYowB,EAAUoE,KAqBxChQ,EAAIhI,SAAW,SAAkB+B,GAC/B,IACI7K,EADAzK,EAAUsV,EAEVnC,EAAS,IAGY,IAArB7jB,UAAUtD,SACgB,iBAAjBsD,UAAU,IACnB6jB,EAAS7jB,UAAU,GACnB0Q,EAAU1Q,UAAU,KAEpBwU,EAAU,oEACVqP,EAAS7jB,UAAU,KAKvB0Q,EAAUrT,KAAKsoF,SAASj1E,GAASjX,IAAI,YAGrC4D,KAAKwB,OAAO,CACV/C,KAAM,WACJqf,EAAO4I,EAASF,GAAU,oBAAsBnT,GAGlD2kB,KAAM,WACJ,IAAIuwD,EAAI9tD,EAAWpnB,GACnByK,EAAO,MAAQ4I,EAASF,GAAU,6BAA+B+hE,EAAI,KAAOA,EAAI,YAGlFR,QAAS,WACPjqE,EAAO,MAKX9d,KAAKm0B,WAAa3N,EAClBxmB,KAAKoK,IAAI,iBAAkBtM,EAAO8/B,WAAW9f,IAErB,SAApB9d,KAAKkoB,IAAIoS,OACXt6B,KAAK24B,MAEL34B,KAAK24B,IAAI7a,IAab8Q,EAAIg4D,KAAO,SAASl8B,GAElB,OAAKA,GAAU3rD,MAAMC,QAAQ0rD,KAAWA,EAAMrrD,QAC5C8X,EAAU,oCACHnX,OAGT4mF,EAAK5mF,KAAM0qD,GAEJ1qD,OAgBT4uB,EAAI6pD,OAAS,SAAgBC,EAAMrzE,EAAShF,GAC1C,IAAIuiE,EAAM5iE,KAAKkoB,IAAI06C,IACfzgE,EAAO9B,EACPob,EAAOpW,GAAW,GAClB6iB,EAAMloB,KAAKkoB,IACXliB,EAAOhG,KAGY,mBAAZqF,IACTlD,EAAOkD,EACPoW,EAAO,IAITA,EAAKm9D,QAAU5yE,EAAK4xE,OAGpBz1E,EAAOA,GAAQ,SAAUtC,EAAKwW,GAC5B,GAAIxW,EAAK,OAAOqoB,EAAIznB,KAAKZ,GACzBmG,EAAKo5B,KAAK/oB,IAIZusD,EAAI6V,OAAOC,EAAMj9D,EAAMtZ,K,gBC/+BzB,IAAIuvC,EAAS,EAAQ,IA4CrB,SAAS82C,EAAKnyE,GACZ,OAAOq7B,EAAOC,WAAW,QAAQC,OAAOv7B,GAAKw7B,OAAO,OAlCtDx2C,EAAQ6oC,KAAO,SAAS79B,EAAK8hF,GAC3B,GAAI,iBAAmB9hF,EAAK,MAAM,IAAI1H,UAAU,8CAChD,GAAI,iBAAmBwpF,EAAQ,MAAM,IAAIxpF,UAAU,mCACnD,OAAO0H,EAAM,IAAMqrC,EAChB+2C,WAAW,SAAUN,GACrBv2C,OAAOvrC,GACPwrC,OAAO,UACP72B,QAAQ,OAAQ,KAarB3f,EAAQqtF,OAAS,SAASriF,EAAK8hF,GAC7B,GAAI,iBAAmB9hF,EAAK,MAAM,IAAI1H,UAAU,0CAChD,GAAI,iBAAmBwpF,EAAQ,MAAM,IAAIxpF,UAAU,mCACnD,IAAI0X,EAAMhQ,EAAI3D,MAAM,EAAG2D,EAAI0uC,YAAY,MAGvC,OAAOyzC,EAFGntF,EAAQ6oC,KAAK7tB,EAAK8xE,KAERK,EAAKniF,IAAOgQ,I;;;;;;GC3BlChb,EAAQ4iB,MAkCR,SAAe5H,EAAKhR,GAClB,GAAmB,iBAARgR,EACT,MAAM,IAAI1X,UAAU,iCAQtB,IALA,IAAIwC,EAAM,GACNwnF,EAAMtjF,GAAW,GACjBujF,EAAQvyE,EAAIvL,MAAM+9E,GAClBh0E,EAAM8zE,EAAI3yD,QAAUA,EAEfz6B,EAAI,EAAGA,EAAIqtF,EAAMvpF,OAAQ9D,IAAK,CACrC,IAAIirF,EAAOoC,EAAMrtF,GACbutF,EAAStC,EAAKxiF,QAAQ,KAG1B,KAAI8kF,EAAS,GAAb,CAIA,IAAIhsF,EAAM0pF,EAAKziF,OAAO,EAAG+kF,GAAQ99E,OAC7B3E,EAAMmgF,EAAKziF,SAAS+kF,EAAQtC,EAAKnnF,QAAQ2L,OAGzC,KAAO3E,EAAI,KACbA,EAAMA,EAAI3D,MAAM,GAAI,IAIlBY,MAAanC,EAAIrE,KACnBqE,EAAIrE,GAAOisF,EAAU1iF,EAAKwO,KAI9B,OAAO1T,GAlET9F,EAAQgtF,UAqFR,SAAmBvsF,EAAMuK,EAAKhB,GAC5B,IAAIsjF,EAAMtjF,GAAW,GACjB+iC,EAAMugD,EAAI1lE,QAAUA,EAExB,GAAmB,mBAARmlB,EACT,MAAM,IAAIzpC,UAAU,4BAGtB,IAAKqqF,EAAmBv2D,KAAK32B,GAC3B,MAAM,IAAI6C,UAAU,4BAGtB,IAAInC,EAAQ4rC,EAAI/hC,GAEhB,GAAI7J,IAAUwsF,EAAmBv2D,KAAKj2B,GACpC,MAAM,IAAImC,UAAU,2BAGtB,IAAI0X,EAAMva,EAAO,IAAMU,EAEvB,GAAI,MAAQmsF,EAAIrsD,OAAQ,CACtB,IAAIA,EAASqsD,EAAIrsD,OAAS,EAC1B,GAAIt1B,MAAMs1B,GAAS,MAAM,IAAIh3B,MAAM,6BACnC+Q,GAAO,aAAe3P,KAAKC,MAAM21B,GAGnC,GAAIqsD,EAAIM,OAAQ,CACd,IAAKD,EAAmBv2D,KAAKk2D,EAAIM,QAC/B,MAAM,IAAItqF,UAAU,4BAGtB0X,GAAO,YAAcsyE,EAAIM,OAG3B,GAAIN,EAAIpqE,KAAM,CACZ,IAAKyqE,EAAmBv2D,KAAKk2D,EAAIpqE,MAC/B,MAAM,IAAI5f,UAAU,0BAGtB0X,GAAO,UAAYsyE,EAAIpqE,KAGzB,GAAIoqE,EAAIT,QAAS,CACf,GAAuC,mBAA5BS,EAAIT,QAAQ/tE,YACrB,MAAM,IAAIxb,UAAU,6BAGtB0X,GAAO,aAAesyE,EAAIT,QAAQ/tE,cAGhCwuE,EAAIO,WACN7yE,GAAO,cAGLsyE,EAAIQ,SACN9yE,GAAO,YAGT,GAAIsyE,EAAIS,SAAU,CAIhB,OAHuC,iBAAjBT,EAAIS,SACtBT,EAAIS,SAAS/nF,cAAgBsnF,EAAIS,UAGnC,KAAK,EACH/yE,GAAO,oBACP,MACF,IAAK,MACHA,GAAO,iBACP,MACF,IAAK,SACHA,GAAO,oBACP,MACF,IAAK,OACHA,GAAO,kBACP,MACF,QACE,MAAM,IAAI1X,UAAU,+BAI1B,OAAO0X,GA9JT,IAAI2f,EAAS8I,mBACT7b,EAASiuB,mBACT23C,EAAkB,MAUlBG,EAAqB,wCA6JzB,SAASD,EAAU1yE,EAAK2f,GACtB,IACE,OAAOA,EAAO3f,GACd,MAAOhJ,GACP,OAAOgJ,K;;;;;GCvLX/a,EAAOD,QAwHP,SAAeuzB,EAAK87B,GAClB,IAAK97B,IAAQA,EAAI2E,YAAc3E,EAAI8O,UAEjC,MAAM,IAAI/+B,UAAU,4BAItB,IAAI0H,EAAMuoB,EAAI2E,UAAU,SAAW,GAC/BD,EAASv0B,MAAMC,QAAQqH,GACvBA,EAAIE,KAAK,MACTiQ,OAAOnQ,IAGNA,EAAMs+B,EAAOrR,EAAQo3B,KACxB97B,EAAI8O,UAAU,OAAQr3B,IArI1B/K,EAAOD,QAAQspC,OAASA,EAaxB,IAAI0kD,EAAoB,iCAWxB,SAAS1kD,EAAQrR,EAAQo3B,GACvB,GAAsB,iBAAXp3B,EACT,MAAM,IAAI30B,UAAU,+BAGtB,IAAK+rD,EACH,MAAM,IAAI/rD,UAAU,8BAStB,IALA,IAAI8rD,EAAU1rD,MAAMC,QAAQ0rD,GAExBA,EADAzsC,EAAMzH,OAAOk0C,IAIRjkD,EAAI,EAAGA,EAAIgkD,EAAOprD,OAAQoH,IACjC,IAAK4iF,EAAkB52D,KAAKg4B,EAAOhkD,IACjC,MAAM,IAAI9H,UAAU,kDAKxB,GAAe,MAAX20B,EACF,OAAOA,EAIT,IAAIjtB,EAAMitB,EACN/c,EAAO0H,EAAMqV,EAAOjyB,eAGxB,IAA6B,IAAzBopD,EAAOzmD,QAAQ,OAAsC,IAAvBuS,EAAKvS,QAAQ,KAC7C,MAAO,IAGT,IAAK,IAAIzI,EAAI,EAAGA,EAAIkvD,EAAOprD,OAAQ9D,IAAK,CACtC,IAAI+tF,EAAM7+B,EAAOlvD,GAAG8F,eAGO,IAAvBkV,EAAKvS,QAAQslF,KACf/yE,EAAK7R,KAAK4kF,GACVjjF,EAAMA,EACFA,EAAM,KAAOokD,EAAOlvD,GACpBkvD,EAAOlvD,IAIf,OAAO8K,EAWT,SAAS4X,EAAOqV,GAMd,IALA,IAAIqF,EAAM,EACNxuB,EAAO,GACPqK,EAAQ,EAGHjZ,EAAI,EAAGyiC,EAAM1K,EAAOj0B,OAAQ9D,EAAIyiC,EAAKziC,IAC5C,OAAQ+3B,EAAOpK,WAAW3tB,IACxB,KAAK,GACCiZ,IAAUmkB,IACZnkB,EAAQmkB,EAAMp9B,EAAI,GAEpB,MACF,KAAK,GACH4O,EAAKzF,KAAK4uB,EAAOzX,UAAUrH,EAAOmkB,IAClCnkB,EAAQmkB,EAAMp9B,EAAI,EAClB,MACF,QACEo9B,EAAMp9B,EAAI,EAQhB,OAFA4O,EAAKzF,KAAK4uB,EAAOzX,UAAUrH,EAAOmkB,IAE3BxuB,I;;;;;;;GC1GT,IAAIqwB,EAAY,EAAQ,IACpBC,EAAa,EAAQ,IACrB8Q,EAAW,EAAQ,IACnB5rC,EAAU,EAAQ,GAAQA,QAC1By/B,EAAO,EAAQ,IACfzW,EAAM,EAAQ,IAOlBrtB,EAAOD,QAUP,SAAsBohC,EAAMp3B,GAC1B,IAAKo3B,EACH,MAAM,IAAI99B,UAAU,sBAGtB,GAAoB,iBAAT89B,EACT,MAAM,IAAI99B,UAAU,8BAItB,IAAI8c,EAAOxf,OAAOY,OAAOwI,GAAW,MAGhCkkF,GAAmC,IAArB9tE,EAAK8tE,YAGnB3iE,GAA6B,IAAlBnL,EAAKmL,SAGhB+W,EAAaliB,EAAKkiB,WAEtB,GAAIA,GAAoC,mBAAfA,EACvB,MAAM,IAAIh/B,UAAU,sCAItB8c,EAAK8gB,OAAS9gB,EAAK8gB,QAAU9gB,EAAK6gB,QAAU,EAC5C7gB,EAAKghB,KAAO98B,EAAQ88B,GAGpB,IAAI+sD,EAAc5iE,EAmHX,SAAmBgI,GACxB,GAAI5uB,KAAK69B,mBACP79B,KAAK6D,MAAM,SADb,CAMA,IAAI2lB,EAAc+hB,EAAShiB,SAASvpB,KAAKkoB,KAGzCsB,EAAYjL,KAAO,KACnBiL,EAAYL,SA7DhB,SAAiC9S,GAC/B,IAAK,IAAI9a,EAAI,EAAGA,EAAI8a,EAAIhX,QACI,KAAtBgX,EAAI6S,WAAW3tB,GADWA,KAMhC,OAAOA,EAAI,EACP,IAAM8a,EAAItS,OAAOxI,GACjB8a,EAoDqBwoB,CAAuBrV,EAAYL,SAAW,KAGrE,IA5CyB0T,EAAO/e,EA4C5B8gB,EAAMpE,EAAU7R,EAAInnB,OAAOgoB,IAC3B+T,GA7CqBV,EA6CI,cA7CG/e,EA6CY,2BAA6B2c,EAAWmE,GAAO,KACzFnE,EAAWmE,GAAO,OA7Cf,6EAIO/B,EAAQ,mCAGV/e,EAAO,8BAyCjB8Q,EAAIuF,WAAa,IACjBvF,EAAI8O,UAAU,eAAgB,4BAC9B9O,EAAI8O,UAAU,iBAAkB5/B,OAAO8/B,WAAWL,IAClD3O,EAAI8O,UAAU,0BAA2B,sBACzC9O,EAAI8O,UAAU,yBAA0B,WACxC9O,EAAI8O,UAAU,WAAYkB,GAC1BhQ,EAAI+J,IAAI4E,KApCH,WACLv9B,KAAK6D,MAAM,MArGb,OAAO,SAAsBqkB,EAAK0G,EAAKnuB,GACrC,GAAmB,QAAfynB,EAAIoS,QAAmC,SAAfpS,EAAIoS,OAC9B,OAAIivD,EACK9oF,KAITmuB,EAAIuF,WAAa,IACjBvF,EAAI8O,UAAU,QAAS,aACvB9O,EAAI8O,UAAU,iBAAkB,UAChC9O,EAAI+J,OAIN,IAAI8wD,GAAgBF,EAChB//D,EAAc+hB,EAAShiB,SAASrB,GAChC3J,EAAOgtB,EAASrjB,GAAKiB,SAGZ,MAAT5K,GAAoD,MAApCiL,EAAYL,SAASplB,QAAQ,KAC/Cwa,EAAO,IAIT,IAAI6W,EAASgK,EAAKlX,EAAK3J,EAAM9C,GAG7B2Z,EAAO6B,GAAG,YAAauyD,GAGnB7rD,GACFvI,EAAO6B,GAAG,UAAW0G,GAInB4rD,GACFn0D,EAAO6B,GAAG,OAAQ,WAEhBwyD,GAAe,IAKnBr0D,EAAO6B,GAAG,QAAS,SAAgBp3B,IAC7B4pF,GAAkB5pF,EAAIs0B,WAAa,IAKvC1zB,IAJEA,EAAKZ,KAQTu1B,EAAOK,KAAK7G,KAhGhBtzB,EAAOD,QAAQmiB,KAAO4hB,EAAK5hB,M,6BC3B3B,MAAMksE,EAAM,EAAQ,IACdlsF,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GA0BtB,SAASg7B,KAoCT,SAAS4mD,KApBT5mD,EAAkB5lC,UAAUysF,UAAY,SAAUv2E,EAAS2tB,EAAM3gC,GAC/DA,EAASgT,EAAU,IAAM2tB,IAuB3BxjC,EAAK2P,SAASw8E,EAA0B5mD,GAMxC4mD,EAAyBxsF,UAAUysF,UAAY,SAAUv2E,EAAS2tB,EAAM3gC,GACtE,IAAIwpF,EAAax2E,EACjB,MAAMrN,EAAOhG,KACb,IAAIlE,EACJiM,EAAM5B,OAAO,CACX,SAAiB1F,GACfipF,EAAInL,QAAQlrE,EAAS,SAAUxT,EAAKiqF,GAClC,OAAIjqF,EACKY,EAAKZ,GAETiqF,GAGLhuF,EAAOguF,EAAU,QACjBrpF,KAHSA,OAMb,SAAgBA,GACd,IAAK3E,EACH,OAAO2E,IAETipF,EAAI1qE,OAAOljB,EAAM,SAAU+D,EAAKkqF,GAC9B,GAAIlqF,EACF,OAAOY,EAAKZ,GAEdgqF,EAAaE,EACbtpF,QAEA,SAAUZ,GACVA,GAEFmG,EAAKgkF,SAAS32E,EAASxT,GAEzBQ,EAASwpF,EAAa,IAAM7oD,MAUhC2oD,EAAyBxsF,UAAU6sF,SAAW,SAAU32E,EAASxT,KAIjExE,EAAQ0nC,kBAAoBA,EAC5B1nC,EAAQsuF,yBAA2BA,G,6BCzHnC,MAAMnsF,EAAO,EAAQ,GACf0hB,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GAEjBwsF,EAAqBhuF,OAAO0B,OAAO,CAAEwE,MAAM,IAOjD,SAASygC,KAiDT,SAASsnD,IACPlqF,KAAKkC,MAAQ,EA8Cf,SAASkzC,EAAwB+0C,GAC/BnqF,KAAKmqF,QAAUA,EACfnqF,KAAKkC,MAAQ,EAEblC,KAAKoqF,gBAAkB,KAsHzB,SAASj1C,EAAkBsC,GACzB,IAAKA,EACH,MAAM,IAAInyC,MAAM,kDAElBtF,KAAKy3C,YAAcA,EAoDrB,SAAS4yC,EAAmBr6D,EAAUtuB,EAAaw0D,EAAUze,GAC3Dz3C,KAAKgwB,SAAWA,EAChBhwB,KAAKy3C,YAAcA,EACnBz3C,KAAKqF,QAAU3D,EACf1B,KAAKsqF,cAAgB,GACrBtqF,KAAKuqF,aAAe,EACpBvqF,KAAKwqF,WAAa,GAClBxqF,KAAKyqF,cAAgB,KAIrB,IAAK,IAAIlvF,EAAI,EAAGA,EAAI26D,EAAS72D,OAAQ9D,IAAK,CACxC,MAAMuX,EAAOojD,EAAS36D,GAClByE,KAAKy3C,YAAYkC,YAAY7mC,KAAUoM,EAAMxQ,SAASC,QAG1D3O,KAAKwqF,WAAW13E,EAAKO,UAAW,EAChCrT,KAAKsqF,cAAc5lF,KAAKoO,IAK1B9S,KAAKiuD,WAAavnD,KAAKC,MAAMD,KAAKE,SAAW5G,KAAKsqF,cAAcjrF,QA+ElE,SAASqrF,EAAiBjzC,EAAakzC,GACrC,IAAKlzC,EACH,MAAM,IAAInyC,MAAM,kDAElB,IAAK9H,EAAKwB,QAAQ2rF,GAChB,MAAM,IAAIrlF,MAAM,qDAElBtF,KAAKy3C,YAAcA,EACnB,MAAMlyC,EAAM,GACZolF,EAAU/nF,QAAQ,SAAUyQ,GAC1B9N,EAAI8N,IAAW,IAEjBrT,KAAK2qF,UAAYplF,EAzXnBq9B,EAAoBzlC,UAAUgqC,KAAO,SAAU/W,EAAQqpB,EAAOp5C,GAC5DL,KAAKowB,OAASA,EACdpwB,KAAKy5C,MAAQA,EACbp5C,KAOFuiC,EAAoBzlC,UAAUw8C,YAAc,SAAU7mC,GACpD,OAAOoM,EAAMxQ,SAASC,OAYxBi0B,EAAoBzlC,UAAU6zD,aAAe,SAAUhhC,EAAU8oB,EAAkBz4C,GACjFA,EAAS,IAAIiF,MAAM,uEAMrBs9B,EAAoBzlC,UAAUytF,WAAa,WACzC,OAAO,IAAIztE,KAYb3f,EAAK2P,SAAS+8E,EAAkBtnD,GAShCsnD,EAAiB/sF,UAAU6zD,aAAe,SAAUhhC,EAAU8oB,EAAkBz4C,GAC9E,IAAKL,KAAKy5C,MACR,OAAOp5C,EAAS,IAAIiF,MAAM,0CAE5B,MAAMm0C,EAAQz5C,KAAKy5C,MAAM10C,SACnBiB,EAAOhG,KACb,IAAIoJ,EAAU,EAEVyhF,EAAY7kF,EAAK9D,MAAQu3C,EAAMp6C,OACnC2G,EAAK9D,OAAS,EACV8D,EAAK9D,OAAS6F,EAAMtC,SACtBO,EAAK9D,MAAQ,GAGf7B,EAAS,KAAM,CACbI,KAAM,WACJ,QAAM2I,EAAUqwC,EAAMp6C,OACb4qF,EAEF,CAACztF,MAAOi9C,EAAMoxC,IAAcpxC,EAAMp6C,QAAS8C,MAAM,OAsB9D3E,EAAK2P,SAASioC,EAAyBxS,GAQvCwS,EAAwBj4C,UAAUgqC,KAAO,SAAU/W,EAAQqpB,EAAOp5C,GAiBhE,GAhBAL,KAAKowB,OAASA,EACdpwB,KAAKy5C,MAAQA,EACbA,EAAMxiB,GAAG,MAAOj3B,KAAK8qF,gBAAgB/tF,KAAKiD,OAC1Cy5C,EAAMxiB,GAAG,SAAUj3B,KAAK8qF,gBAAgB/tF,KAAKiD,OAEzCowB,GAAUA,EAAO/qB,UACfrF,KAAKmqF,UAAY/5D,EAAO/qB,QAAQ0lF,iBAClC/qF,KAAKowB,OAAOprB,IAAI,OAAQ,sBAAyBhF,KAAKmqF,QAAU,+NAMlEnqF,KAAKmqF,QAAUnqF,KAAKmqF,SAAW/5D,EAAO/qB,QAAQ0lF,kBAG3C/qF,KAAKmqF,QACR,OAAO9pF,EAAS,IAAI5C,EAAO8D,cAAc,4HAG3ClB,KAOF+0C,EAAwBj4C,UAAUw8C,YAAc,SAAU7mC,GACxD,OAAKA,EAAK6oC,WAGN7oC,EAAK6oC,aAAe37C,KAAKmqF,QACpBjrE,EAAMxQ,SAASC,MAEjBuQ,EAAMxQ,SAASE,OALbsQ,EAAMxQ,SAASG,SAQ1BumC,EAAwBj4C,UAAU2tF,gBAAkB,WAClD9qF,KAAKoqF,gBAAkB,MAGzBh1C,EAAwBj4C,UAAU6tF,mBAAqB,WACrD,MAAMvxC,EAAQz5C,KAAKy5C,MAAM10C,SACrB/E,KAAKoqF,kBAITpqF,KAAKoqF,gBAAkB,GACvB3wC,EAAM72C,QAAQ,SAAUo8C,GACjBA,EAAErD,YAIHqD,EAAErD,aAAe37C,KAAKmqF,SACxBnqF,KAAKoqF,gBAAgB1lF,KAAKs6C,IAE3Bh/C,QAULo1C,EAAwBj4C,UAAU6zD,aAAe,SAAUhhC,EAAU8oB,EAAkBz4C,GACrF,IAAKL,KAAKy5C,MACR,OAAOp5C,EAAS,IAAIiF,MAAM,0CAE5BtF,KAAKkC,OAAS,EACVlC,KAAKkC,OAAS6F,EAAMtC,SACtBzF,KAAKkC,MAAQ,GAEflC,KAAKgrF,qBAEL,MAAMZ,EAAkBpqF,KAAKoqF,gBAC7B,IAAIa,EAAiBjrF,KAAKkC,MACtBkH,EAAU,EACd/I,EAAS,KAAM,CACbI,KAAM,WACJ,IAAIqS,EACJ,OAAI1J,IAAYghF,EAAgB/qF,OAEvB,CAAE7C,MADTsW,EAAOs3E,EAAgBa,IAAmBb,EAAgB/qF,QACpC8C,MAAM,GAEvB8nF,MAQb70C,EAAwBj4C,UAAUytF,WAAa,WAC7C,OAAO,IAAIztE,IAAI,CACb,CAAC,kBAAmBnd,KAAKmqF,YAiB7B3sF,EAAK2P,SAASgoC,EAAkBvS,GAEhCuS,EAAiBh4C,UAAUgqC,KAAO,SAAU/W,EAAQqpB,EAAOp5C,GACzDL,KAAKowB,OAASA,EACdpwB,KAAKy5C,MAAQA,EACbz5C,KAAKy3C,YAAYtQ,KAAK/W,EAAQqpB,EAAOp5C,IAGvC80C,EAAiBh4C,UAAUw8C,YAAc,SAAU7mC,GACjD,OAAO9S,KAAKy3C,YAAYkC,YAAY7mC,IAYtCqiC,EAAiBh4C,UAAU6zD,aAAe,SAAUhhC,EAAU8oB,EAAkBz4C,GAC9E,IAAIowB,EAOAylC,EAIJ,GAVIpd,IACFroB,EAAaqoB,EAAiB0U,gBAC1B1U,EAAiB2c,gBACnBzlC,EAAW8oB,EAAiB2c,gBAI5BhlC,IACFylC,EAAWl2D,KAAKowB,OAAOgmC,YAAYpmC,EAAUS,KAE1CA,IAAeylC,EAClB,OAAOl2D,KAAKy3C,YAAYuZ,aAAahhC,EAAU8oB,EAAkBz4C,GAElD,IAAIgqF,EAAmBr6D,EAAU8oB,EAAkBod,EAAUl2D,KAAKy3C,aAC1EyzC,QAAQ7qF,IAqCnBgqF,EAAmBltF,UAAU+tF,QAAU,SAAU7qF,GAE/C,MAAM2F,EAAOhG,KACbA,KAAKy3C,YAAYuZ,aAAahxD,KAAKgwB,SAAUhwB,KAAKqF,QAAS,SAAUxF,EAAKiF,GACxE,GAAIjF,EACF,OAAOQ,EAASR,GAGlBmG,EAAKykF,cAAgB3lF,EACrBzE,EAAS,KAAM,CACbI,KAAM,WAAc,OAAOuF,EAAKmlF,oBAKtCd,EAAmBltF,UAAUguF,YAAc,WACzC,IAAIr4E,EAMArO,EALJ,GAAIzE,KAAKuqF,aAAevqF,KAAKsqF,cAAcjrF,OAEzC,MAAO,CAAE7C,MADTsW,EAAO9S,KAAKsqF,eAAetqF,KAAKiuD,WAAcjuD,KAAKuqF,gBAAmBvqF,KAAKsqF,cAAcjrF,QACnE8C,MAAM,GAI9B,MAAQsC,EAAOzE,KAAKyqF,cAAchqF,UAAYgE,EAAKtC,MACjD,IAAInC,KAAKwqF,WAAW/lF,EAAKjI,MAAM6W,SAI/B,OAAO5O,EAET,OAAOwlF,GAMT90C,EAAiBh4C,UAAUytF,WAAa,WACtC,MAAMrlF,EAAM,IAAI4X,IAAI,CAClB,CAAC,mBAAgD7Z,IAAjCtD,KAAKy3C,YAAYv0C,YAA4BlD,KAAKy3C,YAAYv0C,YAAYpH,KAAO,QAOnG,OAJIkE,KAAKy3C,uBAAuBrC,GAC9B7vC,EAAI6E,IAAI,kBAAmBpK,KAAKy3C,YAAY0yC,SAGvC5kF,GA8CT/H,EAAK2P,SAASu9E,EAAiB9nD,GAE/B8nD,EAAgBvtF,UAAUgqC,KAAO,SAAU/W,EAAQqpB,EAAOp5C,GACxDL,KAAKy3C,YAAYtQ,KAAK/W,EAAQqpB,EAAOp5C,IAQvCqqF,EAAgBvtF,UAAUw8C,YAAc,SAAU7mC,GAChD,OAAK9S,KAAKorF,UAAUt4E,GAGb9S,KAAKy3C,YAAYkC,YAAY7mC,GAF3BoM,EAAMxQ,SAASG,SAU1B67E,EAAgBvtF,UAAUiuF,UAAY,SAAUt4E,GAC9C,QAAS9S,KAAK2qF,UAAU73E,EAAKO,UAM/Bq3E,EAAgBvtF,UAAU6zD,aAAe,SAAUhhC,EAAU9qB,EAAM7E,GACjE,MAAM2F,EAAOhG,KACbA,KAAKy3C,YAAYuZ,aAAahhC,EAAU9qB,EAAM,SAAUrF,EAAKiF,GAC3D,GAAIjF,EACF,OAAOQ,EAASR,GAElBQ,EAAS,KAAM2F,EAAKqlF,QAAQvmF,OAIhC4lF,EAAgBvtF,UAAUkuF,QAAU,SAAUZ,GAC5C,MAAMzkF,EAAOhG,KACb,MAAO,CACLS,KAAM,WACJ,MAAMgE,EAAOgmF,EAAchqF,OAC3B,OAAKgE,EAAKtC,MAAS6D,EAAKolF,UAAU3mF,EAAKjI,OAGhCiI,EAFEzE,KAAKS,UAUpBiqF,EAAgBvtF,UAAUytF,WAAa,WACrC,OAAO,IAAIztE,IAAI,CACb,CAAC,mBAAgD7Z,IAAjCtD,KAAKy3C,YAAYv0C,YAA4BlD,KAAKy3C,YAAYv0C,YAAYpH,KAAO,MACjG,CAAC,YAAaG,OAAO6E,KAAKd,KAAK2qF,eAInCtvF,EAAQ+5C,wBAA0BA,EAClC/5C,EAAQunC,oBAAsBA,EAC9BvnC,EAAQ6uF,iBAAmBA,EAC3B7uF,EAAQ85C,iBAAmBA,EAC3B95C,EAAQqvF,gBAAkBA,G,6BCtd1B,MAAMltF,EAAO,EAAQ,GACfk0C,EAAS,EAAQ,IACjB1pC,EAAO,EAAQ,IAEfH,EAAO,EAAQ,IACfE,EAAQ,EAAQ,GAQhBujF,EAAmB,YAMnBC,EAAa,IAEbC,EAAYzjF,EAAMzJ,sBAAsB,eAAgB,OACxDmtF,EAAa1jF,EAAMzJ,sBAAsB,OAAQ,OACjDotF,EAAY3jF,EAAMzJ,sBAAsB,eAAgB,OACxDqtF,EAAa5jF,EAAMzJ,sBAAsB,OAAQ,OAOvD,IAAIstF,EAAS,EAMTC,EAAuB,EAMvBC,EAAiB,EAuBrB,SAASlkF,EAASpL,EAAOuU,EAAOC,EAAQC,GACtC,IAAI/E,EACJ,GAAI1P,aAAiBsB,OAAQ,CAC3B,GAAqB,KAAjBtB,EAAM6C,OACR,MAAM,IAAIiG,MAAM,gCAElB4G,EAAS1P,OAGT0P,EAmSJ,SAAwBnC,EAAMgH,EAAOC,EAAQC,GAC3C,MAAM86E,EAvCR,SAA0BhiF,EAAMgH,GAC9B,KAAMhH,aAAgBoH,OAASnK,MAAM+C,EAAKyI,WAAY,CAGpD,MAAMxI,GADND,EAAO,IAAIoH,MACOqB,aAClBq5E,EAC0BN,GAAcvhF,EAAO8hF,KAC7CD,EAAuB,EACvBC,EAAiB9hF,GAEnB+G,EAAQ86E,EAEV,MAAO,CACL7hF,KAAMD,EAAKyI,UACXzB,MAAOi7E,EAASj7E,IAyBIk7E,CAAiBliF,EAAMgH,GAC7CC,EA9EF,SAAmBA,GACjB,IAAI9E,EAAS8E,EACS,iBAAXA,IACT9E,EAASnE,EAAMzJ,sBAAsB0S,EAAQ,UAE/C,GAAM9E,aAAkBpO,QAInB,GAAsB,IAAlBoO,EAAO7M,OACd,MAAM,IAAIiG,MAAM,0CAHhB4G,EAASupC,EAAe,GAK1B,OAAOvpC,EAkEEggF,CAAUl7E,GACnBC,EApGF,SAAoBA,GAClB,IAAI/E,EAAS+E,EACU,iBAAZA,IACT/E,EAASnE,EAAMzJ,sBAAsB2S,EAAS,UAEhD,GAAM/E,aAAkBpO,QAInB,GAAsB,IAAlBoO,EAAO7M,OACd,MAAM,IAAIiG,MAAM,2CAHhB4G,EAASupC,EAAe,GAK1B,OAAOvpC,EAwFGigF,CAAWl7E,GACrB,MAAM/E,EAASnE,EAAM3J,kBAAkB,IAoBvC,OA3IF,SAAmB8N,EAAQlC,EAAM+G,GAE/B,MAAM1K,EAAM2B,EACTuK,WAAWvI,EAAOshF,GAClB74E,SAASzK,EAAKuK,WAAW,MACzB5R,IAAIqH,EAAKuK,WAAWxB,IACjBq7E,EAAW/lF,EAAI0G,sBACrBb,EAAOW,cAAcxG,EAAI2G,qBAAsB,GAC/Cd,EAAOoF,cAAyB,MAAX86E,EAAmB,GACxClgF,EAAOoF,cAAc86E,IAAa,GAAK,MAAQ,GAgH/CC,CAAUngF,EAAQ6/E,EAAc/hF,KAAM+hF,EAAch7E,OAEpDE,EAAQ1O,KAAK2J,EAAQ,EAAG,GAExB8E,EAAOzO,KAAK2J,EAAQ,GAAI,GAIxBA,EAAO,GAAiB,GAAZA,EAAO,GAEnBA,EAAO,GAAiB,GAAZA,EAAO,GAKnBA,EAAO,GAAiB,GAAZA,EAAO,GAEnBA,EAAO,GAAiB,IAAZA,EAAO,GACZA,EA3TIogF,CAAe9vF,EAAOuU,EAAOC,EAAQC,GAEhDpJ,EAAKnM,KAAKsE,KAAMkM,GA0OlB,SAAS8/E,EAASj7E,GAQhB,OAPqB,iBAAVA,GAAqBA,GAASw6E,OACvCK,GACcL,IACZK,EAAS,GAEX76E,EAAQ66E,GAEH76E,EA2BT,SAAS0kC,EAAep2C,GACtB,OAAOqyC,EAAOgE,YAAYr2C,GAG5B,SAASktF,EAAoBx7B,EAAI1xD,EAAQgB,GACvC,GAAI0wD,EACF,OAAO1wD,EAAS,KAAM0wD,GAExBrf,EAAOgE,YAAYr2C,EAAQgB,GAlR7B7C,EAAK2P,SAASvF,EAAUC,GA8BxBD,EAASyjD,SAAW,SAAUthD,EAAMgH,EAAOC,EAAQC,EAAS5Q,GAY1D,GAXqB,mBAAV0Q,GACT1Q,EAAW0Q,EACXA,EAAQC,EAASC,EAAU,MACA,mBAAXD,GAChB3Q,EAAW2Q,EACXA,EAASC,EAAU,MACS,mBAAZA,IAChB5Q,EAAW4Q,EACXA,EAAU,OAGP5Q,EACH,OAAO,IAAIuH,EAASmC,EAAMgH,EAAOC,EAAQC,GAG3ClJ,EAAMpC,SAAS,CACblF,GAAQ8rF,EAAoBv7E,EAAQ,EAAG,CAACnR,EAAKqM,IAAWzL,EAAKZ,EAAKmR,EAAS9E,IAC3EzL,GAAQ8rF,EAAoBt7E,EAAS,EAAG,CAACpR,EAAKqM,IAAWzL,EAAKZ,EAAKoR,EAAU/E,KAC3ErM,IACF,GAAIA,EACF,OAAOQ,EAASR,GAGlB,IAAI2sF,EACJ,IACEA,EAAW,IAAI5kF,EAASmC,EAAMgH,EAAOC,EAAQC,GAE/C,MAAO5D,GACL,OAAOhN,EAASgN,GAGlBhN,EAAS,KAAMmsF,MASnB5kF,EAAS8iB,WAAa,SAAUluB,GAC9B,OAAO,IAAIoL,EAASC,EAAK6iB,WAAWluB,GAAOgV,cAM7C5J,EAAST,IAAM,SAAU4C,EAAMgH,GAC7B,OAAO,IAAInJ,EAASmC,EAAMgH,EAAOy6E,EAAWC,IAM9C7jF,EAAS4S,IAAM,SAAUzQ,EAAMgH,GAC7B,OAAO,IAAInJ,EAASmC,EAAMgH,EAAO26E,EAAWC,IA0B9C/jF,EAASyM,IAAM,SAAUrD,EAAQC,EAAS5Q,GACxC,OAAOuH,EAASyjD,SAAS,KAAM,KAAMr6C,EAAQC,EAAS5Q,IAQxDuH,EAASzK,UAAUsvF,iBAAmB,WACpC,MAAMC,EAAU1sF,KAAKkM,OAAOM,aAAa,GAEzC,IAAI4/E,EAAW,EACfA,IAA+B,IAAjBpsF,KAAKkM,OAAO,KAAe,EACzCkgF,GAA6B,IAAjBpsF,KAAKkM,OAAO,GACxBkgF,IAA+B,GAAjBpsF,KAAKkM,OAAO,KAAe,GACzCkgF,IAA+B,IAAjBpsF,KAAKkM,OAAO,KAAe,GAEzC,MAAM7F,EAAM2B,EAAKuiB,SAASmiE,EAASN,GAC7BO,EAAgB3kF,EAAKuK,WAAWg5E,GAChCx6E,EAAQ1K,EAAI+oB,OAAOu9D,GACnB3iF,EAAO3D,EACVulB,IAAI+gE,GACJ7gE,SAAS9jB,EAAKuK,WAAW+4E,IAC5B,MAAO,CAAEvhF,KAAM,IAAIoH,KAAKnH,EAAKshB,YAAava,MAAOA,EAAMua,aAOzD1jB,EAASzK,UAAUyvF,QAAU,WAC3B,OAAO5sF,KAAKysF,mBAAmB1iF,MAOjCnC,EAASzK,UAAU+uF,UAAY,WAC7B,OAAOlsF,KAAKkM,OAAOxJ,MAAM,KAO3BkF,EAASzK,UAAUgvF,WAAa,WAC9B,OAAOnsF,KAAKkM,OAAOxJ,MAAM,EAAG,KAO9BkF,EAASzK,UAAU0vF,gBAAkB,WACnC,OAAO7sF,KAAKkM,OAAOxJ,MAAM,IAAIuK,SAAS,UAiJxC3R,EAAOD,QAAUuM,G,6BCxYjB,MAAMG,EAAQ,EAAQ,GAChB+kF,EAAgB,EAAQ,KACxBC,EAAOD,EAAc7uE,MAAM,SAC3B+uE,EAAOF,EAAc7uE,MAAM,SAC3BgvE,EAAOH,EAAc7uE,MAAM,SAC3BivE,EAAOJ,EAAc7uE,MAAM,SAiB3BnW,EAAkB,CAGtBsqB,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ66D,GAAI,EACJC,GAAI,EACJjtC,aAAc,EACdktC,aAAc,EACdnqD,YAAa,SAAU13B,GACrB,OAAQA,GAAW,GAAQA,GAAW,GAQxC8hF,6BAA8B,SAAU9hF,GACtC,OAAQA,GAAWxL,KAAKmtF,IAS1BI,iCAAkC,SAAU/hF,GAC1C,OAAQA,GAAWxL,KAAKsyB,IAS1B9P,eAAgB,SAAUhX,GACxB,OAAQA,GAAWxL,KAAKqyB,IAQ1B1O,kBAAmB,SAAUnY,GAC3B,OAAQA,GAAWxL,KAAKsyB,IAQ1Bk7D,wBAAyB,SAAUhiF,GACjC,OAAQA,GAAWxL,KAAKsyB,IAQ1Bw9B,cAAe,SAAUtkD,GACvB,OAAQA,GAAWxL,KAAKmtF,IAQ1BnhF,oBAAqB,SAAUR,GAC7B,OAAQA,GAAWxL,KAAKsyB,IAQ1Bu1B,2BAA4B,SAAUr8C,GACpC,OAAQA,GAAWxL,KAAKsyB,IAS1BwwB,iCAAkC,SAAUt3C,GAC1C,OAAQA,GAAWxL,KAAKmtF,IAS1BnqC,kBAAmB,SAAUx3C,GAC3B,OAAIA,GAAWxL,KAAKotF,GACXptF,KAAKmtF,GAEV3hF,GAAWxL,KAAKoyB,GACX,EAEF5mB,EAAU,GAiBnBiiF,iBAAkB,SAAStvC,EAAY1E,GACrC,MAAMz0C,EAAMm5C,EAAWn5C,IAAMm5C,EAAWn5C,IAAIjI,KAAKohD,GAAcp2C,EAAMnK,KACrE,IAAIsjC,EAAaid,EAAWr2C,gBAExB4lF,GAAgB,EAEhBC,EAAwBzsD,EAqC5B,GApCAuY,EAAM72C,QAAQo8C,IACZ,GAAKA,EAAEtD,kBAAkD,IAA9BsD,EAAEtD,iBAAiBr8C,OAM9C,IACE,MAAMq8C,EAAmBoxC,EAAc7uE,MAAM+gC,EAAEtD,kBAC/C12C,EAAI,UAAW,oBAAsBg6C,EAAE3rC,QAAU,2BAA6BqoC,GAC1EA,EAAiB7uB,QAAQqgE,IAAS,GAEpCQ,GAAgB,EAChBxsD,EAAax6B,KAAKS,IAAInH,KAAKmtF,GAAIjsD,GAC/BysD,EAAwBzsD,GACfwa,EAAiB7uB,QAAQogE,IAAS,GAE3C/rD,EAAax6B,KAAKS,IAAInH,KAAKmtF,GAAIjsD,GAC/BysD,EAAwBzsD,GACfwa,EAAiB7uB,QAAQmgE,IAAS,GAE3C9rD,EAAax6B,KAAKS,IAAInH,KAAKsyB,GAAI4O,GAC/BysD,EAAwBzsD,GAGxBA,EAFSwa,EAAiB7uB,QAAQkgE,IAAS,EAE9BrmF,KAAKS,IAAInH,KAAKqyB,GAAI6O,GAGlBlhC,KAAKoyB,GAEpB,MAAO/kB,GACPrI,EAAI,UAAW,oBAAsBg6C,EAAE3rC,QAAU,uCAAyC2rC,EAAEtD,iBACxF,yDA9BJ12C,EAAI,UAAW,oBAAsBg6C,EAAE3rC,QAAU,iFAkCjDq6E,GAAiBxsD,EAAalhC,KAAKsyB,GAAI,CACzC,MAAMs7D,EAAW,4GACbD,EAAwB3tF,KAAKsyB,GAC/BttB,EAAI,QAAS,yFACVm5C,EAAW9qC,QAAU,IAAM8qC,EAAWnd,KAAO,6BAA+B2sD,EAC5E,+CAAiDC,GAEpD5oF,EAAI,QAAS,qDAAuDk8B,EAAWj0B,SAAS,IACpF,gHACA2gF,GAEN1sD,EAAaysD,EAIf,OADA3oF,EAAI,UAAW,+BAAiCk8B,EAAWj0B,SAAS,IAAM,uDACnEi0B,IAIX5lC,EAAOD,QAAUyM,G,6BCpNjB,MAAM+lF,EAAkB,sFAsBxB,MAAMf,EACJ,YAAYgB,EAAOC,EAAOC,EAAOC,EAAUC,EAAaC,GACtDnuF,KAAK8tF,MAAQA,EACb9tF,KAAK+tF,MAAQA,EACb/tF,KAAKguF,MAAQA,EACbhuF,KAAKiuF,SAAWA,EAChBjuF,KAAKkuF,YAAcA,EACnBluF,KAAKmuF,MAAQA,EAMf,WACE,IAAI93E,EAAMrW,KAAK8tF,MAAQ,IAAM9tF,KAAK+tF,MAelC,YAdmBzqF,IAAftD,KAAKguF,QACP33E,GAAO,IAAMrW,KAAKguF,YAEE1qF,IAAlBtD,KAAKiuF,WACP53E,GAAO,IAAMrW,KAAKiuF,eAEK3qF,IAArBtD,KAAKkuF,aACPluF,KAAKkuF,YAAYtrF,QAASwrF,IACxB/3E,GAAO,IAAM+3E,IAGbpuF,KAAKmuF,QACP93E,GAAO,IAAMrW,KAAKmuF,OAEb93E,EAQT,QAAQmW,GACN,GAAIxsB,KAAK8tF,MAAQthE,EAAMshE,MACrB,OAAQ,EACH,GAAI9tF,KAAK8tF,MAAQthE,EAAMshE,MAC5B,OAAO,EACF,GAAI9tF,KAAK+tF,MAAQvhE,EAAMuhE,MAC5B,OAAQ,EACH,GAAI/tF,KAAK+tF,MAAQvhE,EAAMuhE,MAC5B,OAAO,EAIT,MAAMM,EAAYruF,KAAKguF,OAAS,EAC1BM,EAAa9hE,EAAMwhE,OAAS,EAClC,GAAIK,EAAYC,EACd,OAAQ,EACH,GAAID,EAAYC,EACrB,OAAO,EAIT,QAAsBhrF,IAAlBtD,KAAKiuF,UACP,QAAuB3qF,IAAnBkpB,EAAMyhE,SACR,OAAQ,MAEL,SAAuB3qF,IAAnBkpB,EAAMyhE,SACf,OAAO,EAEP,GAAIjuF,KAAKiuF,SAAWzhE,EAAMyhE,SACxB,OAAQ,EACH,GAAIjuF,KAAKiuF,SAAWzhE,EAAMyhE,SAC/B,OAAO,EAKX,QAAyB3qF,IAArBtD,KAAKkuF,aACP,QAA0B5qF,IAAtBkpB,EAAM0hE,YACR,OAAO,OAEJ,QAA0B5qF,IAAtBkpB,EAAM0hE,YACf,OAAQ,EAIV,OAAO,EAGT,aAAa1iF,GACX,IAAKA,EACH,OAAO,KAGT,MAAMkd,EAAQld,EAAQkd,MAAMmlE,GAC5B,GAAInlE,EAAO,CACT,MAAMolE,EAAQ3nE,SAASuC,EAAM,GAAI,IAC3BqlE,EAAQ5nE,SAASuC,EAAM,GAAI,IAC3BslE,EAAQtlE,EAAM,GAAKvC,SAASuC,EAAM,GAAI,SAAMplB,EAC5C2qF,EAAWvlE,EAAM,GAAKvC,SAASuC,EAAM,GAAI,SAAMplB,EAC/C4qF,EAAcxlE,EAAM,GAAKA,EAAM,GAAG5d,MAAM,UAAOxH,EAC/C6qF,EAAQzlE,EAAM,GACpB,OAAO,IAAIokE,EAAcgB,EAAOC,EAAOC,EAAOC,EAAUC,EAAaC,GAEvE,MAAM,IAAIxvF,UAAU,mCAAsC6M,EAAU,MAIxElQ,EAAOD,QAAUyxF,G,6BC/HjB,MAAMl7E,EAAU,EAAQ,IAClB7J,EAAQ,EAAQ,GAqBtB,SAAS0J,EAAW88E,EAAeC,GACJ,iBAAlBD,IACTA,EAAgB38E,EAAQW,WAAWg8E,IAMrCvuF,KAAKyuF,QAAUF,EAKfvuF,KAAK0uF,OAASF,EAQhB/8E,EAAWtF,WAAa,SAAU9J,GAChC,MAAMmsF,EAAQnsF,EAAIyK,YAAY,GAE9B,OAAO,IAAI2E,EADWG,EAAQzF,WAAW9J,EAAIK,MAAM,IACd8rF,IAQvC/8E,EAAWhF,SAAW,SAAUjQ,GAC9B,MAAMmyF,EAAsB/8E,EAAQnF,SAASjQ,EAAMiyF,SAC7CG,EAAc7mF,EAAM3J,kBAAkB,GAE5C,OADAwwF,EAAYv4C,aAAa75C,EAAMkyF,OAAQ,GAChC5wF,OAAOwe,OAAO,CAACsyE,EAAaD,GAAsBC,EAAYvvF,OAASsvF,EAAoBtvF,SAQpGoS,EAAWiZ,WAAa,SAAUluB,GAChC,IAAKA,EACH,MAAM,IAAImC,UAAU,mCAGtB,MAAMkwF,GADNryF,EAAQA,EAAMwO,QACWhH,QAAQ,KACjC,IAAIwqF,EAAQ,EAKZ,OAJIK,GAAc,IAChBL,EAAQhyF,EAAM6C,OAAS,EAAIwvF,EAC3BryF,EAAQA,EAAMuH,OAAO,EAAG8qF,GAAcryF,EAAMuH,OAAO8qF,EAAa,IAE3D,IAAIp9E,EAAWG,EAAQ8Y,WAAWluB,GAAQgyF,IAQnD/8E,EAAWc,WAAa,SAAU/V,GAChC,GAAIwK,MAAMxK,GACR,OAAO,IAAIiV,EAAWG,EAAQU,KAAM,GAEtC,IAAIw8E,EAAYtyF,EAAMyQ,WAKtB,OAJI6hF,EAAU9qF,QAAQ,MAAQ,IAE5B8qF,EAAYtyF,EAAMwpB,QAAQ,KAErBvU,EAAWiZ,WAAWokE,IAQ/Br9E,EAAWtU,UAAUuuB,OAAS,SAAUc,GACtC,OAASA,aAAiB/a,GAAuC,IAAxBzR,KAAK6sB,QAAQL,IAGxD/a,EAAWtU,UAAUyB,QAAU,WAC7B,OAAOoB,KAAKkD,YAAYpH,KAAO,KAAOkE,KAAKiN,YAO7CwE,EAAWtU,UAAUuvB,UAAY,SAAUF,GACzC,OAAQxsB,KAAK0rB,OAAOc,IAStB/a,EAAWtU,UAAU0vB,QAAU,SAAUL,GACvC,MAAMga,EAAOxmC,KAAK8rB,SAASU,GAC3B,OAAIga,EAAK/a,cACC,EAEN+a,EAAKjb,SACA,EAEF,GAQT9Z,EAAWtU,UAAU2uB,SAAW,SAAUU,GACxC,MAAMwK,EAAQh3B,KACd,GAAIg3B,EAAM03D,SAAWliE,EAAMkiE,OACzB,OAAO,IAAIj9E,EAAWulB,EAAMy3D,QAAQ3iE,SAASU,EAAMiiE,SAAUz3D,EAAM03D,QAErE,IAAIK,EACAR,EACJ,OAAIv3D,EAAM03D,OAASliE,EAAMkiE,QAEvBK,EAAYviE,EAAMkiE,OAAS13D,EAAM03D,OAK1B,IAAIj9E,EAHX88E,EAAgBv3D,EAAMy3D,QACnBh8E,SAASb,EAAQW,WAAW7L,KAAK2e,IAAI,GAAI0pE,KACzCjjE,SAASU,EAAMiiE,SACmBjiE,EAAMkiE,UAG7CK,EAAY/3D,EAAM03D,OAASliE,EAAMkiE,OAK1B,IAAIj9E,EAHX88E,EAAgBv3D,EAAMy3D,QACnB3iE,SACCU,EAAMiiE,QAAQh8E,SAASb,EAAQW,WAAW7L,KAAK2e,IAAI,GAAI0pE,MACtB/3D,EAAM03D,UAQ7Cj9E,EAAWtU,UAAUwD,IAAM,SAAU6rB,GACnC,MAAMwK,EAAQh3B,KACd,GAAIg3B,EAAM03D,SAAWliE,EAAMkiE,OACzB,OAAO,IAAIj9E,EAAWulB,EAAMy3D,QAAQ9tF,IAAI6rB,EAAMiiE,SAAUz3D,EAAM03D,QAEhE,IAAIK,EACAR,EACJ,OAAIv3D,EAAM03D,OAASliE,EAAMkiE,QAEvBK,EAAYviE,EAAMkiE,OAAS13D,EAAM03D,OAK1B,IAAIj9E,EAHX88E,EAAgBv3D,EAAMy3D,QACnBh8E,SAASb,EAAQW,WAAW7L,KAAK2e,IAAI,GAAI0pE,KACzCpuF,IAAI6rB,EAAMiiE,SACwBjiE,EAAMkiE,UAG7CK,EAAY/3D,EAAM03D,OAASliE,EAAMkiE,OAK1B,IAAIj9E,EAHX88E,EAAgBv3D,EAAMy3D,QACnB9tF,IACC6rB,EAAMiiE,QAAQh8E,SAASb,EAAQW,WAAW7L,KAAK2e,IAAI,GAAI0pE,MACtB/3D,EAAM03D,UAQ7Cj9E,EAAWtU,UAAU8vB,YAAc,SAAUT,GAC3C,OAA+B,IAAxBxsB,KAAK6sB,QAAQL,IAItB/a,EAAWtU,UAAUsuB,WAAa,WAChC,OAAOzrB,KAAKyuF,QAAQhjE,cAItBha,EAAWtU,UAAUouB,OAAS,WAC5B,OAAOvrB,KAAKyuF,QAAQljE,UAOtB9Z,EAAWtU,UAAU8P,SAAW,WAC9B,IAAI+hF,EAAYhvF,KAAKyuF,QAAQxhF,WAC7B,GAAoB,IAAhBjN,KAAK0uF,OACP,OAAOM,EAET,IAAIC,EAAa,GACW,MAAxBD,EAAUp7D,OAAO,KACnBq7D,EAAa,IACbD,EAAYA,EAAUjrF,OAAO,IAE/B,IAAIsrD,EAAiB2/B,EAAU3vF,OAASW,KAAK0uF,OAM7C,OALIr/B,GAAkB,IAGpBA,GADA2/B,EAAYjnF,EAAM3B,aAAa,IAAyB,EAAlBipD,GAAuB2/B,GAClC3vF,OAASW,KAAK0uF,QAEpCO,EAAaD,EAAUjrF,OAAO,EAAGsrD,GAAkB,IAAM2/B,EAAUjrF,OAAOsrD,IAOnF59C,EAAWtU,UAAUmuB,SAAW,WAC9B,OAAOxM,WAAW9e,KAAKiN,aAOzBwE,EAAWtU,UAAU+P,OAAS,WAC5B,OAAOlN,KAAKiN,YAId3R,EAAOD,QAAUoW,G,6BC9PjB,MAAMzJ,EAAO,EAAQ,IACfxK,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAKhBmnF,EAAkB,CACtBC,OAAQpnF,EAAMlK,YAAY,GAC1BuxF,KAAMrnF,EAAMlK,YAAY,GACxBwxF,YAAatnF,EAAMlK,YAAY,IAI3ByxF,EAAkBtnF,EAAKqD,QAAQ,KAC/BkkF,EAAgBD,EAChBE,EAAgBF,EAAgB78E,SAAS88E,GACzCE,EAAiBH,EAAgB78E,SAAS+8E,GAC1CE,EAAiB1nF,EAAKqD,QAAQ,IAAIoH,SAASg9E,GAC3CE,EAAe3nF,EAAKqD,QAAQ,IAAIoH,SAASi9E,GAGzCE,EAAgB,sCAChBC,EAAe,8DACfC,EAAmB,UACnBC,EAAwB,mDAY9B,SAASr+E,EAASy9E,EAAQC,EAAMC,GAK9BrvF,KAAKmvF,OAASA,EAKdnvF,KAAKovF,KAAOA,EAKZpvF,KAAKqvF,YAAqC,iBAAhBA,EAA2BrnF,EAAKuK,WAAW88E,GAAeA,EAwNtF,SAASW,EAAQvkE,GACfzrB,KAAKiwF,YAAcxkE,EACnBzrB,KAAKkwF,WAAa,EAClBlwF,KAAKmwF,QAAU,EACfnwF,KAAKowF,MAAQ,EACbpwF,KAAKqwF,aAAeroF,EAAKsK,KACzBtS,KAAKswF,YAAc,CACjB,EAAKtwF,KAAKuwF,SACV,GAAMvwF,KAAKwwF,UACX,EAAKxwF,KAAKywF,SACV,EAAKzwF,KAAK0wF,QACV,EAAK1wF,KAAK2wF,SACV,EAAK3wF,KAAK4wF,WACV,EAAK5wF,KAAK6wF,WACV,GAAM7wF,KAAK8wF,UAEX,KAAW9wF,KAAK+wF,UAChB,GAAM/wF,KAAK+wF,UACX,GAAM/wF,KAAKgxF,UAEbhxF,KAAKixF,aAAe,CAClB,KAAM,QAAS,SAAU,QAAS,OAAQ,QAAS,UAAW,UAAW,eAAgB,eACzF,eA3OJv/E,EAASvU,UAAUuuB,OAAS,SAAUc,GACpC,OAAMA,aAAiB9a,IAGhB1R,KAAKmvF,SAAW3iE,EAAM2iE,QAC3BnvF,KAAKovF,OAAS5iE,EAAM4iE,MACpBpvF,KAAKqvF,YAAY3jE,OAAOc,EAAM6iE,eAOlC39E,EAASvU,UAAUsP,SAAW,WAC5B,MAAMykF,EAAeC,EAAWC,UAAUppF,EAAKuK,WAAWvS,KAAKmvF,QAASD,EAAgBC,QAClFkC,EAAaF,EAAWC,UAAUppF,EAAKuK,WAAWvS,KAAKovF,MAAOF,EAAgBE,MAC9EkC,EAAoBH,EAAWC,UAAUpxF,KAAKqvF,YAAaH,EAAgBG,aAC3EnjF,EAASnE,EAAM3J,kBAAkB8yF,EAAeG,EAAaC,GACnEpC,EAAgBC,OAAO5sF,KAAK2J,EAAQ,EAAG,EAAGglF,GAC1C,IAAI9kF,EAAS8kF,EAIb,OAHAhC,EAAgBE,KAAK7sF,KAAK2J,EAAQE,EAAQ,EAAGilF,GAC7CjlF,GAAUilF,EACVnC,EAAgBG,YAAY9sF,KAAK2J,EAAQE,EAAQ,EAAGklF,GAC7CplF,GAOTwF,EAASvU,UAAU8P,SAAW,WAC5B,IAAIzQ,EAAQ,GACZ,SAASmoC,EAAO4sD,EAAU7iE,EAAS3I,GACjC,OAAiB,IAAbwrE,GAAkBA,EAAW7iE,EACxB6iE,GAGT/0F,IAAU+0F,EAAW7iE,GAAS1I,QAAQ,GAAKD,EACpCwrE,EAAW7iE,GAEpB,SAAS8iE,EAASD,EAAU7iE,EAAS3I,GACnC,OAAIwrE,EAAS7lE,OAAO1jB,EAAKsK,OAASi/E,EAAS3kE,SAAS8B,GAC3C6iE,GAGT/0F,GAAS+0F,EAAS1lE,OAAO6C,GAASzhB,WAAa8Y,EACxCwrE,EAASniE,OAAOV,KAErB1uB,KAAKmvF,OAAS,GAAKnvF,KAAKovF,KAAO,GAAKpvF,KAAKqvF,YAAY5jE,gBACvDjvB,EAAQ,KAEV,IAAIi1F,EAAY9sD,EAAOj+B,KAAK+e,IAAIzlB,KAAKmvF,QArFjB,GAqFyC,KAI7D,GAHAxqD,EAAO8sD,EAAW,EAAG,MACrB9sD,EAAOj+B,KAAK+e,IAAIzlB,KAAKovF,MAAO,EAAG,MAE1BpvF,KAAKqvF,YAAY3jE,OAAO1jB,EAAKsK,MAAO,CAEvCm/E,EAAYD,EADExxF,KAAKqvF,YAAY5jE,aAAezrB,KAAKqvF,YAAYhlE,SAAWrqB,KAAKqvF,YACnDM,EAAc,KAC1C8B,EAAYD,EAASC,EAAW/B,EAAgB,KAChD+B,EAAYD,EAASC,EAAWhC,EAAgB,KAChDgC,EAAYD,EAASC,EAAWjC,EAAe,MAC/CiC,EAAYD,EAASC,EAAWlC,EAAe,MAC/CiC,EAASC,EAAWzpF,EAAKkjB,IAAK,MAEhC,OAAO1uB,GAQTkV,EAASvF,WAAa,SAAUD,GAC9B,MAAME,EAAS,CAAE5P,MAAO,GAIxB,OAAO,IAAIkV,EAHIy/E,EAAWO,SAASxlF,EAAQE,GAAQkf,WACtC6lE,EAAWO,SAASxlF,EAAQE,GAAQkf,WAC7B6lE,EAAWO,SAASxlF,EAAQE,KA8BlDsF,EAASgZ,WAAa,SAAUinE,GAC9B,MAAMlmE,EAAiC,MAApBkmE,EAAM/9D,OAAO,GAC1B/wB,EAAS4oB,EAAakmE,EAAM5tF,OAAO,GAAK4tF,EAC9C,MAAyB,MAArB9uF,EAAO+wB,OAAO,GACyB,MAArC/wB,EAAO+wB,OAAO/wB,EAAOxD,OAAS,GAoEtC,SAAgCosB,EAAY5oB,GAC1C,MAAMwvC,EAAUy9C,EAAiBrlF,KAAK5H,GACtC,IAAKwvC,GAAWA,EAAQ,KAAOxvC,EAC7B,MAAM,IAAIlE,UAAUnB,EAAKgE,OAAO,uCAAwCqB,IAE1E,OAAO,IAAImtF,EAAQvkE,GAChBglE,SAASp+C,EAAQ,IACjB87C,QA1EQyD,CAAuBnmE,EAAY5oB,GAExCA,EAAOmB,QAAQ,KAAO,EAiF9B,SAAuCynB,EAAY5oB,GACjD,MAAMwvC,EAAU09C,EAAsBtlF,KAAK5H,GAC3C,IAAKwvC,GAAWA,EAAQ,KAAOxvC,EAC7B,MAAM,IAAIlE,UAAUnB,EAAKgE,OAAO,uCAAwCqB,IAE1E,OAAO,IAAImtF,EAAQvkE,GAAY8kE,SAASl+C,EAAQ,IAC7Cm+C,UAAUn+C,EAAQ,IAClBq+C,QAAQr+C,EAAQ,IAChBs+C,SAASt+C,EAAQ,IACjBu+C,WAAWv+C,EAAQ,IACnBw+C,WAAWx+C,EAAQ,IACnB87C,QA3FQ0D,CAA8BpmE,EAAY5oB,GA6BvD,SAA4B4oB,EAAY5oB,GACtC,MAAMwvC,EAAUw9C,EAAaplF,KAAK5H,GAClC,IAAKwvC,GAAWA,EAAQ,KAAOxvC,EAC7B,MAAM,IAAIlE,UAAUnB,EAAKgE,OAAO,uCAAwCqB,IAE1E,MAAMivF,EAAU,IAAI9B,EAAQvkE,GACxB4mB,EAAQ,IACVy/C,EAAQvB,SAASl+C,EAAQ,IAEvBA,EAAQ,IACVy/C,EAAQtB,UAAUn+C,EAAQ,IAExBA,EAAQ,IACVy/C,EAAQpB,QAAQr+C,EAAQ,IAEtBA,EAAQ,KACNA,EAAQ,IACVy/C,EAAQnB,SAASt+C,EAAQ,IAEvBA,EAAQ,KACVy/C,EAAQlB,WAAWv+C,EAAQ,KAEzBA,EAAQ,KACVy/C,EAAQjB,WAAWx+C,EAAQ,MAG/B,OAAOy/C,EAAQ3D,QArDN4D,CAAmBtmE,EAAY5oB,GAW1C,SAA6B4oB,EAAY5oB,GACvC,MAAMivF,EAAU,IAAI9B,EAAQvkE,GAE5B,IAAI4mB,EADJu9C,EAAcn8D,UAAY,EAE1B,MAAQ4e,EAAUu9C,EAAcnlF,KAAK5H,KAAYwvC,EAAQhzC,QAAU,GACjEyyF,EAAQnxF,IAAI0xC,EAAQ,GAAIA,EAAQ,IAElC,OAAOy/C,EAAQ3D,QAhBR6D,CAAoBvmE,EAAY5oB,IAyHzCmtF,EAAQ7yF,UAAU80F,eAAiB,SAAUC,GAC3C,GAAIA,IAAclyF,KAAKkwF,WACrB,MAAM,IAAIvxF,UAAUnB,EAAKgE,OAAO,wDAAyDxB,KAAKmyF,aAAaD,KAG7G,GAAIA,GAAalyF,KAAKkwF,WACpB,MAAM,IAAIvxF,UAAUnB,EAAKgE,OAAO,8CAC9BxB,KAAKmyF,aAAanyF,KAAKkwF,YACvBlwF,KAAKmyF,aAAaD,KAEtBlyF,KAAKkwF,WAAagC,GAOpBlC,EAAQ7yF,UAAUi1F,gBAAkB,SAASC,EAAOC,GAClDtyF,KAAKuyF,YAAYF,GA3SF,WA2SqBryF,KAAKmwF,SAAWmC,EAAe,WAOrEtC,EAAQ7yF,UAAUq1F,cAAgB,SAASH,EAAOI,GAChDzyF,KAAKuyF,YAAYF,GAnTF,WAmTqBryF,KAAKowF,OAASqC,EAAa,SAOjEzC,EAAQ7yF,UAAUu1F,eAAiB,SAASL,EAAOM,GACjD3yF,KAAK4yF,YAAYP,EAAOrqF,EAAKkiB,UAAU4B,SAAS9rB,KAAKqwF,cAAcxkE,OAAO8mE,GAAe,gBAQ3F3C,EAAQ7yF,UAAUo1F,YAAc,SAASF,EAAOnrF,EAAO2rF,GACrD,GAAIR,EAAQnrF,EACV,MAAM,IAAIvI,UAAUnB,EAAKgE,OAAO,uEAC9BqxF,EAtUW,cAgVjB7C,EAAQ7yF,UAAUy1F,YAAc,SAASP,EAAOnrF,EAAO2rF,GACrD,GAAIR,EAAMplE,YAAY/lB,GACpB,MAAM,IAAIvI,UAAUnB,EAAKgE,OAAO,uEAC9BqxF,EACA7qF,EAAKkiB,UAAUjd,cAIrB+iF,EAAQ7yF,UAAUg1F,aAAe,SAASD,GACxC,MAAMp2F,EAAOkE,KAAKixF,cAAciB,GAChC,IAAKp2F,EACH,MAAM,IAAIwJ,MAAM,uBAAyB4sF,GAE3C,OAAOp2F,GAGTk0F,EAAQ7yF,UAAUwD,IAAM,SAAUmuF,EAAWgE,GAC3C,MAAMC,EAAY/yF,KAAKswF,YAAYwC,EAAOzxF,eAC1C,IAAK0xF,EACH,MAAM,IAAIp0F,UAAUnB,EAAKgE,OAAO,+BAAgCsxF,IAElE,OAAOC,EAAUr3F,KAAKsE,KAAM8uF,IAO9BkB,EAAQ7yF,UAAUozF,SAAW,SAAUyC,GACrC,MAAMx2F,GAASw2F,EAIf,OAHAhzF,KAAKiyF,eAAe,GACpBjyF,KAAKoyF,gBAAgB51F,EAvWD,IAwWpBwD,KAAKmwF,SAxWe,GAwWJ3zF,EACTwD,MAOTgwF,EAAQ7yF,UAAUqzF,UAAY,SAASrB,GACrC,MAAM3yF,GAAS2yF,EAIf,OAHAnvF,KAAKiyF,eAAe,GACpBjyF,KAAKoyF,gBAAgB51F,EAAO,GAC5BwD,KAAKmwF,SAAW3zF,EACTwD,MAOTgwF,EAAQ7yF,UAAUszF,SAAW,SAASwC,GACpC,MAAMz2F,GAASy2F,EAIf,OAHAjzF,KAAKiyF,eAAe,GACpBjyF,KAAKwyF,cAAch2F,EAhYD,GAiYlBwD,KAAKowF,OAjYa,EAiYJ5zF,EACPwD,MAOTgwF,EAAQ7yF,UAAUuzF,QAAU,SAAStB,GACnC,MAAM5yF,GAAS4yF,EAIf,OAHApvF,KAAKiyF,eAAe,GACpBjyF,KAAKwyF,cAAch2F,EAAO,GAC1BwD,KAAKowF,OAAS5zF,EACPwD,MAOTgwF,EAAQ7yF,UAAUwzF,SAAW,SAASuC,GACpC,MAAM12F,EAAyB,iBAAV02F,EAAqBlrF,EAAK0iB,WAAWwoE,GAASA,EAInE,OAHAlzF,KAAKiyF,eAAe,GACpBjyF,KAAK0yF,eAAel2F,EAAOmzF,GAC3B3vF,KAAKqwF,aAAerwF,KAAKqwF,aAAa1vF,IAAInE,EAAMiW,SAASk9E,IAClD3vF,MAOTgwF,EAAQ7yF,UAAUyzF,WAAa,SAASuC,GACtC,MAAM32F,EAA2B,iBAAZ22F,EAAuBnrF,EAAK0iB,WAAWyoE,GAAWA,EAIvE,OAHAnzF,KAAKiyF,eAAe,GACpBjyF,KAAK0yF,eAAel2F,EAAOkzF,GAC3B1vF,KAAKqwF,aAAerwF,KAAKqwF,aAAa1vF,IAAInE,EAAMiW,SAASi9E,IAClD1vF,MAOTgwF,EAAQ7yF,UAAU0zF,WAAa,SAASuC,GACtC,MAAM52F,EAA2B,iBAAZ42F,EAAuBprF,EAAK0iB,WAAW0oE,GAAWA,EAIvE,OAHApzF,KAAKiyF,eAAe,GACpBjyF,KAAK0yF,eAAel2F,EAAOizF,GAC3BzvF,KAAKqwF,aAAerwF,KAAKqwF,aAAa1vF,IAAInE,EAAMiW,SAASg9E,IAClDzvF,MAOTgwF,EAAQ7yF,UAAU2zF,UAAY,SAASuC,GACrC,MAAM72F,EAA0B,iBAAX62F,EAAsBrrF,EAAK0iB,WAAW2oE,GAAUA,EAIrE,OAHArzF,KAAKiyF,eAAe,GACpBjyF,KAAK0yF,eAAel2F,EAAOgzF,GAC3BxvF,KAAKqwF,aAAerwF,KAAKqwF,aAAa1vF,IAAInE,EAAMiW,SAAS+8E,IAClDxvF,MAOTgwF,EAAQ7yF,UAAU4zF,UAAY,SAASuC,GACrC,MAAM92F,EAA0B,iBAAX82F,EAAsBtrF,EAAK0iB,WAAW4oE,GAAUA,EAIrE,OAHAtzF,KAAKiyF,eAAe,GACpBjyF,KAAK0yF,eAAel2F,EAAO+yF,GAC3BvvF,KAAKqwF,aAAerwF,KAAKqwF,aAAa1vF,IAAInE,EAAMiW,SAAS88E,IAClDvvF,MAOTgwF,EAAQ7yF,UAAU6zF,SAAW,SAASuC,GACpC,MAAM/2F,EAAyB,iBAAV+2F,EAAqBvrF,EAAK0iB,WAAW6oE,GAASA,EAInE,OAHAvzF,KAAKiyF,eAAe,IACpBjyF,KAAK0yF,eAAel2F,EAAOwL,EAAKkjB,KAChClrB,KAAKqwF,aAAerwF,KAAKqwF,aAAa1vF,IAAInE,GACnCwD,MAITgwF,EAAQ7yF,UAAUgxF,MAAQ,WACxB,OAAQnuF,KAAKiwF,YACX,IAAIv+E,GAAU1R,KAAKmwF,SAAUnwF,KAAKowF,MAAOpwF,KAAKqwF,aAAahmE,UAC3D,IAAI3Y,EAAS1R,KAAKmwF,QAASnwF,KAAKowF,MAAOpwF,KAAKqwF,eAQhD,MAAMc,EA0LG,CACLO,SA3EF,SAAkBxlF,EAAQE,GACxB,OAzGsBpP,EAiHxB,SAA0B20F,EAAOvlF,GAC/B,MAAMonF,EAAY7B,EAAMvlF,EAAO5P,SAC/B,GAA2B,IAAV,IAAZg3F,GACH,OAAOxrF,EAAKqD,QAAQmoF,GAEtB,MAAMC,GAWqBj3F,EAXUg3F,GAYzB,IACHh3F,EAAQ,IAEVA,EAdDwB,EA8CR,SAAkCw1F,GAEhC,OA/BF,SAAmCj4F,GACjC,GAAU,IAANA,EACF,OAAO,GAET,IAAIyB,EAAI,EAkBR,OAjBIzB,IAAM,IAAO,IACfyB,GAAK,GACLzB,IAAM,IAEJA,IAAM,IAAO,IACfyB,GAAK,EACLzB,IAAM,GAEJA,IAAM,IAAO,IACfyB,GAAK,EACLzB,IAAM,GAEJA,IAAM,IAAO,IACfyB,GAAK,EACLzB,IAAM,GAERyB,GAAKzB,IAAM,GAUJm4F,EAA2BF,GAAa,GAhDlCG,CAAyBF,GAUxC,IAA6Bj3F,EAT3B,IAAIsD,EAASkI,EAAKqD,QAAQooF,EAuDnB,KAvDiDz1F,GACxD,IAAK,IAAI41F,EAAK,EAAGA,EAAK51F,EAAM41F,IAAM,CAChC,MAAM31F,EAAI+J,EAAKqD,QAAQsmF,EAAMvlF,EAAO5P,UAEpCsD,EAASA,EAAOgvB,UAAU,GAAGS,GAAGtxB,GAElC,OAAO6B,EArBe+zF,CAAiB3nF,EAAQE,IAvGtCwjB,mBAAmB,GAAGJ,IAAIxyB,EAAEsyB,IAAItnB,EAAKkjB,KAAKb,UAFrD,IAAwBrtB,GAoLtBo0F,UA1KF,SAAmB50F,EAAO0P,GACxB,OAQF,SAA2B1P,EAAO0P,GAChC,MAAMlO,EAaR,SAAiCxB,GAE/B,OAAQ,IAAkB,EA6B5B,SAA8BA,GAC5B,GAAIA,EAAMkvB,OAAO1jB,EAAKsK,MACpB,OAAO,GAET,IAAItV,EAAI,EACJ+N,EAAIvO,EAAMyvB,cAsBd,OArBU,IAANlhB,IACF/N,GAAK,GACL+N,EAAIvO,EAAM0vB,cAERnhB,IAAM,IAAO,IACf/N,GAAK,GACL+N,IAAM,IAEJA,IAAM,IAAO,IACf/N,GAAK,EACL+N,IAAM,GAEJA,IAAM,IAAO,IACf/N,GAAK,EACL+N,IAAM,GAEJA,IAAM,IAAO,IACf/N,GAAK,EACL+N,IAAM,GAER/N,GAAK+N,IAAM,GAxDO+oF,CAAqBt3F,EAAM+yB,GAAGvnB,EAAKkjB,OACrB,EAfnB6oE,CAAwBv3F,GACrC,OAAa,IAATwB,GACFkO,EAAO,GAAK1P,EAAM0vB,aACX,IAoBX,SAAoB1vB,EAAOwB,EAAMkO,GAC/B,MAAM8nF,EAAah2F,EAAO,EAC1B,IACIzC,EADA04F,EAAWz3F,EAAM0vB,aAEjBgoE,EAAW,EACf,IAAK34F,EAAIy4F,EAAYz4F,GAAK,GAAM24F,KAAc,EAAG34F,IAC/C2Q,EAAO3Q,GAAK,IAAO04F,EACnBA,IAAa,EAGf,IADAA,EAAWz3F,EAAMyvB,cACV1wB,GAAK,EAAGA,IACb2Q,EAAO3Q,GAAK,IAAO04F,EACnBA,IAAa,EAEf/nF,EAAO,MAuCE,KAvC2B8nF,GAhCpCG,CAAW33F,EAAOwB,EAAMkO,GACjBlO,GAfAo2F,EAjBep3F,EAiBkBR,GAf/BuzB,aAAajB,UAAU,GAAGU,IAAIxyB,EAAE6xB,WAAW,KAeJ3iB,GAjBlD,IAAwBlP,IA8L1B1B,EAAOD,QAAUqW,G,6BCxrBjB,MAAM3J,EAAQ,EAAQ,GAUtB,SAAS4J,EAAYzF,GACnB,KAAMA,aAAkBpO,SAA8B,IAAlBoO,EAAO7M,QAAkC,KAAlB6M,EAAO7M,OAChE,MAAM,IAAIV,UAAU,6CAOtBqB,KAAKkM,OAASA,EAMdlM,KAAKX,OAAS6M,EAAO7M,OAMrBW,KAAKwL,QAA4B,IAAlBU,EAAO7M,OAAe,EAAI,EAO3CsS,EAAY+Y,WAAa,SAAUluB,GACjC,IAAKA,EACH,OAAO,IAAImV,EAAY5J,EAAMlJ,qBAAqB,CAAC,EAAG,EAAG,EAAG,KAE9D,MAAMw1F,EAAc,uCAEpB,IAAI51E,EACJ,GAAI41E,EAAY5hE,KAAKj2B,GAEnB,OADAiiB,EAAQjiB,EAAMsO,MAAM,KACb,IAAI6G,EAAY5J,EAAMlJ,qBAAqB4f,IAEpD,IANoB,gBAMHgU,KAAKj2B,GACpB,MAAM,IAAImC,UAAU,6CAA+CnC,GAGrE,IADAiiB,EAAQjiB,EAAMsO,MAAM,MACVzL,OAAS,EACjB,MAAM,IAAIV,UAAU,6CAA+CnC,GAErE,MAAM0P,EAASnE,EAAM3J,kBAAkB,IACvC,IAAIk2F,EAAU,EAAI71E,EAAMpf,OAAS,EAC7Bk1F,GAAU,EACVnoF,EAAS,EACb,MAAMooF,EAAcH,EAAY5hE,KAAKhU,EAAMA,EAAMpf,OAAS,IAM1D,SAASi7C,EAAUm6C,GACjBvoF,EAAOQ,YAAY+nF,EAAWroF,KAN5BooF,IAGFF,GAAW,GAKb,IAAK,IAAI/4F,EAAI,EAAGA,EAAIkjB,EAAMpf,OAAQ9D,IAAK,CACrC,MAAMkJ,EAAOga,EAAMljB,GACnB,GAAIkJ,EAAJ,CACE,GAAI+vF,GAAej5F,IAAMkjB,EAAMpf,OAAS,EAAG,CACzCoF,EAAKqG,MAAM,KAAKlI,QAAQ03C,GACxB,MAEFpuC,EAAOoF,cAAc6U,SAAS1hB,EAAM,IAAK2H,GACzCA,GAAkB,MANpB,CAUImoF,IAEFD,EAAU,GAEZC,GAAU,EACV,IAAK,IAAI9tF,EAAI,EAAGA,EAAI6tF,EAAS7tF,IAC3ByF,EAAOE,KAAY,EACnBF,EAAOE,KAAY,GAGvB,GAAIooF,IA6HN,SAA2BtoF,GAMzB,IAAK,IAAI3Q,EAAI,EAAGA,EAAI2Q,EAAO7M,OAAS,EAAG9D,IACrC,GAAkB,IAAd2Q,EAAO3Q,GACT,OAAO,EAGX,QAAwB,MAAf2Q,EAAO,KAA8B,MAAfA,EAAO,KAxIlBwoF,CAAkBxoF,GACpC,MAAM,IAAIvN,UAAU,0FAEtB,OAAO,IAAIgT,EAAYzF,IAQzByF,EAAYxU,UAAUuuB,OAAS,SAAUc,GACvC,OAAMA,aAAiB7a,IAGf3R,KAAKkM,OAAO7M,SAAWmtB,EAAMtgB,OAAO7M,QAC1CW,KAAKkM,OAAOe,SAAS,SAAWuf,EAAMtgB,OAAOe,SAAS,SAO1D0E,EAAYxU,UAAUqU,UAAY,WAChC,OAAOxR,KAAKkM,QAOdyF,EAAYxU,UAAUyB,QAAU,WAC9B,OAAOoB,KAAKkD,YAAYpH,KAAO,KAAOkE,KAAKiN,YAe7C0E,EAAYxU,UAAU8P,SAAW,SAAUvO,GACzC,GAAiB,QAAbA,EAEF,OAAOsB,KAAKkM,OAAOe,SAAS,OAE9B,GAA2B,IAAvBjN,KAAKkM,OAAO7M,OACd,OACEW,KAAKkM,OAAO,GAAK,IACjBlM,KAAKkM,OAAO,GAAK,IACjBlM,KAAKkM,OAAO,GAAK,IACjBlM,KAAKkM,OAAO,GAGhB,IAAIsI,GAAS,EACb,MAAMmgF,EAAU,CAAEt1F,OAAQ,EAAGmV,OAAQ,GACrC,SAASogF,EAAcr5F,GACrB,GAAIiZ,GAAS,EAAG,CAEd,MAAMnV,EAAS9D,EAAIiZ,EACfnV,EAASs1F,EAAQt1F,SACnBs1F,EAAQt1F,OAASA,EACjBs1F,EAAQngF,MAAQA,EAChBA,GAAS,IAKf,IAAK,IAAIjZ,EAAI,EAAGA,EAAIyE,KAAKkM,OAAO7M,OAAQ9D,GAAQ,EACvB,IAAnByE,KAAKkM,OAAO3Q,IAAmC,IAAvByE,KAAKkM,OAAO3Q,EAAI,GAa5Cq5F,EAAar5F,IAXPiZ,EAAQ,IACVA,EAAQjZ,GAIPA,IAAMyE,KAAKkM,OAAO7M,OAAS,GAC5Bu1F,EAAar5F,EAAE,IAQrB,IAAI8X,EAAU,GACd,IAAK,IAAI2rC,EAAI,EAAGA,EAAIh/C,KAAKkM,OAAO7M,OAAQ2/C,GAAQ,EAC1CA,IAAM21C,EAAQngF,MAIdwqC,EAAK21C,EAAQngF,MAAQmgF,EAAQt1F,QAAW2/C,EAAI21C,EAAQngF,QAIpDnB,EAAQhU,OAAS,IACnBgU,GAAW,KAEbA,IAAarT,KAAKkM,OAAO8yC,IAAM,EAAKh/C,KAAKkM,OAAO8yC,EAAE,IAAI/xC,SAAS,KAV7DoG,GAAW,IAef,MAHyC,MAArCA,EAAQugB,OAAOvgB,EAAQhU,OAAO,KAChCgU,GAAW,KAENA,GAOT1B,EAAYxU,UAAU+P,OAAS,WAC7B,OAAOlN,KAAKiN,YAsBd3R,EAAOD,QAAUsW,G,6BCvOjB,MAAMnU,EAAO,EAAQ,GAEfuK,EAAQ,EAAQ,GAOhB8sF,EAAqB,MAIrBC,EAAapuF,KAAK2e,IAAI,EAAE,IAyB9B,SAASxT,EAAUkjF,EAAMC,EAAOC,GAE9B,GAAoB,iBAATF,GAAsC,iBAAVC,GAAqC,iBAARC,GAMlE,GAHAj1F,KAAK+J,KAAO,IAAIoH,KAChBnR,KAAK+J,KAAKmrF,YAAY,EAAG,EAAG,EAAG,GAC/Bl1F,KAAK+J,KAAKorF,eAAeJ,EAAMC,EAAM,EAAGC,GACrCjuF,MAAMhH,KAAK+J,KAAKyI,WACjB,MAAM,IAAIlN,MAAM9H,EAAKgE,OAAO,2CAC1BuzF,EAAMC,EAAOC,SAGd,QAAqB,IAAVD,QAAwC,IAARC,GAC1B,iBAATF,EAAmB,CAE5B,GAAGA,GAAQ,YAAcA,EAAO,WAC9B,MAAM,IAAIzvF,MAAM,6FAElBtF,KAAK+J,KAAO,IAAIoH,KAAK4jF,EAAOF,GAIhC,QAAyB,IAAd70F,KAAK+J,KACd,MAAM,IAAIzE,MAAM,gDAOlBtF,KAAKy4B,OAASzxB,MAAMhH,KAAK+J,KAAKyI,WAAauiF,EAAO,KAOlD/0F,KAAK+0F,KAAO/0F,KAAK+J,KAAKqrF,iBAMtBp1F,KAAKg1F,MAAQh1F,KAAK+J,KAAKsrF,cAAgB,EAMvCr1F,KAAKi1F,IAAMj1F,KAAK+J,KAAKurF,aA4IvB,SAASC,EAAU/4F,EAAOg5F,GACxB,OAAIh5F,EAAM6C,QAAUm2F,EACXh5F,EAEFuL,EAAM3B,aAAa,IAAKovF,EAASh5F,EAAM6C,QAAU7C,EA1I1DqV,EAAUwC,IAAM,WACd,OAAOxC,EAAUw5C,SAAS,IAAIl6C,OAMhCU,EAAU4jF,OAAS,WACjB,OAAO,IAAI5jF,EAAUV,KAAKkD,QAQ5BxC,EAAUw5C,SAAW,SAAUthD,GAC7B,GAAI/C,MAAM+C,EAAKyI,WACb,MAAM,IAAI7T,UAAU,iBAAmBoL,GAEzC,OAAO,IAAI8H,EAAU9H,EAAK2rF,cAAe3rF,EAAK4rF,WAAa,EAAG5rF,EAAK6iF,YAQrE/6E,EAAU6Y,WAAa,SAAUluB,GAE/B,IADmBA,EAAMksB,MAAM,OAAS,IAAIrpB,QAC5B,EAAG,CACjB,IAAIkvB,EAAa,EACA,MAAb/xB,EAAM,KACRA,EAAQA,EAAMqf,UAAU,GACxB0S,GAAc,GAEhB,MAAM9P,EAAQjiB,EAAMsO,MAAM,KAC1B,OAAO,IAAI+G,EAAU0c,EAAapI,SAAS1H,EAAM,GAAI,IAAK0H,SAAS1H,EAAM,GAAI,IAAK0H,SAAS1H,EAAM,GAAI,KAEvG,GAAGjiB,EAAMksB,MAAM,WAEb,OAAO,IAAI7W,EAAUsU,SAAS3pB,EAAO,KAEvC,MAAM,IAAI8I,MAAM,kBAAoB9I,EAAQ,OAO9CqV,EAAU1F,WAAa,SAAUD,GAE/B,OAAO,IAAI2F,EAAW3F,EAAOM,aAAa,GAAKsoF,IASjDjjF,EAAU1U,UAAU0vB,QAAU,SAAUL,GACtC,MAEMga,GAFYx/B,MAAMhH,KAAK+J,KAAKyI,WAAaxS,KAAKy4B,OAASo8D,EAAqB70F,KAAK+J,KAAKyI,YACzExL,MAAMwlB,EAAMziB,KAAKyI,WAAaga,EAAMiM,OAASo8D,EAAqBroE,EAAMziB,KAAKyI,WAEhG,OAAIg0B,EAAO,GACD,EAENA,EAAO,EACF,EAEF,GAQT30B,EAAU1U,UAAUuuB,OAAS,SAAUc,GACrC,OAASA,aAAiB3a,GAAuC,IAAxB7R,KAAK6sB,QAAQL,IAGxD3a,EAAU1U,UAAUyB,QAAU,WAC5B,OAAOoB,KAAKkD,YAAYpH,KAAO,KAAOkE,KAAKiN,YAO7C4E,EAAU1U,UAAUsP,SAAW,WAE7B,MACMjQ,GADiBwK,MAAMhH,KAAK+J,KAAKyI,WAAaxS,KAAKy4B,OAAS/xB,KAAKC,MAAM3G,KAAK+J,KAAKyI,UAAYqiF,IACpEC,EACzBzyF,EAAM0F,EAAM3J,kBAAkB,GAEpC,OADAiE,EAAIwK,cAAcrQ,EAAO,GAClB6F,GAQTwP,EAAU1U,UAAU8P,SAAW,WAC7B,IAAInN,EAEJ,OAAIkH,MAAMhH,KAAK+J,KAAKyI,WACXxS,KAAKy4B,OAAOxrB,YAGnBnN,EADEE,KAAK+0F,KAAO,EACL,IAAMQ,IAAwB,EAAbv1F,KAAK+0F,MAAW9nF,WAAY,GAG7CsoF,EAAUv1F,KAAK+0F,KAAK9nF,WAAY,GAE3CnN,GAAU,IAAMy1F,EAAUv1F,KAAKg1F,MAAM/nF,WAAY,GAAK,IAAMsoF,EAAUv1F,KAAKi1F,IAAIhoF,WAAY,KAQ7F4E,EAAU1U,UAAU+P,OAAS,WAC3B,OAAOlN,KAAKiN,YAed3R,EAAOD,QAAUwW,G,6BC3OjB,MAAM7J,EAAO,EAAQ,IACfxK,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAOhB6tF,EAAW5tF,EAAK0iB,WAAW,kBAM3BmrE,EAAe7tF,EAAKuK,WAAW,KAM/BujF,EAAkB9tF,EAAKuK,WAAW,KAkBxC,SAAST,EAAUikF,GACjB,KAAMA,aAA4B/tF,GAChC,MAAM,IAAI1C,MAAM,qDAElB,GAAIywF,EAAiBnpE,SAAS5kB,EAAKsK,OAASyjF,EAAiB9oE,YAAY2oE,GACvE,MAAM,IAAItwF,MAAM,kCAElBtF,KAAKxD,MAAQu5F,EAMb/1F,KAAKg2F,KAAOh2F,KAAKi2F,YAAY,GAK7Bj2F,KAAKk2F,OAASl2F,KAAKi2F,YAAY,GAK/Bj2F,KAAKk8E,OAASl8E,KAAKi2F,YAAY,GAK/Bj2F,KAAKm2F,WAAan2F,KAAKi2F,YAAY,GAQrCnkF,EAAU4Y,WAAa,SAAUluB,GAC/B,GAAqB,iBAAVA,EACT,MAAM,IAAI8I,MAAM,0BAA4B9H,EAAKoB,QAAQpC,IAE3D,MAAMiiB,EAAQjiB,EAAMsO,MAAM,KAC1B,IACIyoF,EADAF,EAAkC,KAAzBltE,SAAS1H,EAAM,GAAI,IAAyC,IAAzB0H,SAAS1H,EAAM,GAAI,IAEnE,GAAqB,IAAjBA,EAAMpf,OAAc,CACtB,MAAM+2F,EAAW33E,EAAM,GAAG3T,MAAM,KAChCuoF,GAAsC,IAA5BltE,SAASiwE,EAAS,GAAI,IACR,IAApBA,EAAS/2F,SACXk0F,EAAQ6C,EAAS,GAEjB7C,GAAgBxrF,EAAM3B,aAAa,IAAK,EAAImtF,EAAMl0F,SAGtD,OAAOyS,EAAUukF,iBAAiBhD,EAAQltE,SAASotE,EAAO,KAAO,IAQnEzhF,EAAUuC,IAAM,SAAUg7E,GACxB,OAAOv9E,EAAUu5C,SAAS,IAAIl6C,KAAQk+E,IASxCv9E,EAAUu5C,SAAW,SAAUthD,EAAMslF,GACnC,IAAK7xF,EAAKyF,OAAO8G,GACf,MAAM,IAAIzE,MAAM,oBAGlB,MAAM+tF,GAAUtpF,EAAKyI,WAAwC,IAA5BzI,EAAKusF,qBAvFpB,MAwFlB,OAAOxkF,EAAUukF,iBAAiBhD,EAAQhE,IAS5Cv9E,EAAUukF,iBAAmB,SAAUE,EAAclH,GAInD,MAH2B,iBAAhBA,IACTA,EAAc,GAET,IAAIv9E,EAAU9J,EAClBuK,WAAWgkF,GACX9jF,SAASqjF,GACTn1F,IAAIqH,EAAKuK,WAAW88E,MAQzBv9E,EAAU3F,WAAa,SAAU3P,GAC/B,KAAMA,aAAiBsB,QACrB,MAAM,IAAIa,UAAU,6BAA+BnB,EAAKoB,QAAQpC,IAElE,OAAO,IAAIsV,EAAU,IAAI9J,EAAKxL,EAAMsQ,YAAY,GAAItQ,EAAMsQ,YAAY,MASxEgF,EAAU3U,UAAU0vB,QAAU,SAAUL,GACtC,OAAOxsB,KAAKxD,MAAMqwB,QAAQL,EAAMhwB,QAQlCsV,EAAU3U,UAAUuuB,OAAS,SAAUc,GACrC,OAASA,aAAiB1a,GAAuC,IAAxB9R,KAAK6sB,QAAQL,IAOxD1a,EAAU3U,UAAUq5F,oBAAsB,WACxC,OAAOx2F,KAAKxD,OAGdsV,EAAU3U,UAAUyB,QAAU,WAC5B,OAAOoB,KAAKkD,YAAYpH,KAAO,KAAOkE,KAAKiN,YAO7C6E,EAAU3U,UAAUsP,SAAW,WAC7B,MAAMP,EAASnE,EAAM3J,kBAAkB,GAGvC,OAFA8N,EAAOW,cAAc7M,KAAKxD,MAAMuQ,sBAAuB,GACvDb,EAAOW,cAAc7M,KAAKxD,MAAMwQ,qBAAsB,GAC/Cd,GAOT4F,EAAU3U,UAAU8P,SAAW,WAC7B,OA4CF,SAAoBlI,GAClB,IAAIjF,EAEFA,EADEiF,EAAO,GAAK,GACL,IAAMA,EAAO,GAAK,IAGlBA,EAAO,GAAK,IAEnBA,EAAO,GAAK,GACdjF,GAAU,IAAMiF,EAAO,GAAK,IAG5BjF,GAAUiF,EAAO,GAAK,IAEpBA,EAAO,GAAK,GACdjF,GAAU,IAAMiF,EAAO,GAGvBjF,GAAUiF,EAAO,GAEnB,GAAIA,EAAO,GAAK,EAAG,CACjB,IAKI0xF,EALAlD,EAAQxuF,EAAO,GAAGkI,WAElBsmF,EAAMl0F,OAAS,IACjBk0F,EAAQxrF,EAAM3B,aAAa,IAAK,EAAImtF,EAAMl0F,QAAUk0F,GAGtD,IAAK,IAAIh4F,EAAIg4F,EAAMl0F,OAAS,EAAG9D,EAAI,GAChB,MAAbg4F,EAAMh4F,GAD0BA,IAIpCk7F,EAAel7F,EAEbk7F,IACFlD,EAAQA,EAAM13E,UAAU,EAAG46E,IAE7B32F,GAAU,IAAMyzF,EAElB,OAAOzzF,EAlFA42F,CAAW12F,KAAKi2F,cAOzBnkF,EAAU3U,UAAU+P,OAAS,WAC3B,OAAOlN,KAAKiN,YAOd6E,EAAU3U,UAAU84F,UAAY,WAC9B,IAAKj2F,KAAK22F,YAAa,CAErB,MAAMl4E,EAAQ,CAAC,EAAG,EAAG,EAAG,GAClBm4E,EAAO52F,KAAKxD,MAAMovB,IAAIiqE,GAG5Bp3E,EAAM,GAAKze,KAAKxD,MAAMsvB,SAAS8qE,EAAKnkF,SAASojF,IAAevqE,WAE5D7M,EAAM,GAAKm4E,EAAKtrE,WACZ7M,EAAM,IAAM,KAEdA,EAAM,GAAK/X,KAAKC,MAAM8X,EAAM,GAAK,IACjCA,EAAM,GAAKA,EAAM,GAAK,IAEpBA,EAAM,IAAM,KAEdA,EAAM,GAAK/X,KAAKC,MAAM8X,EAAM,GAAK,IACjCA,EAAM,GAAKA,EAAM,GAAK,IAExBze,KAAK22F,YAAcl4E,EAErB,OAAOze,KAAK22F,aAgDdr7F,EAAOD,QAAUyW,G,6BCtRjB,MAAM/J,EAAQ,EAAQ,GAgBtB,SAASgK,EAAU6wC,EAAU9vC,EAAMo+C,EAAYc,EAAuBnwC,EAAag1E,IAElD,IAA3B7kC,IACFA,EAAwB,GA2B1BhyD,KAAKkF,KAAO,CACV4xF,YAAahkF,EACbo+C,WAAYA,EACZc,sBAAuBA,EACvB+kC,oBAAqBl1E,EACrBg3C,QAAS,KACT3F,SAAU,KACVjkD,cAAe,KACf4nF,uBAGEj0C,EAASn3C,QACXzL,KAAKkF,KAAK2zD,QAAUjW,EAASn3C,MAAMotD,QACnC74D,KAAKkF,KAAKguD,SAAWtQ,EAASn3C,MAAMynD,SACpClzD,KAAKkF,KAAK+J,cAAgB2zC,EAASn3C,MAAMwD,eAM3CjP,KAAK4Q,KAAOgyC,EAAShyC,KAKrB5Q,KAAK8lC,UAAY9lC,KAAK4Q,KAAO5Q,KAAK4Q,KAAKvR,OAASujD,EAAS9c,UAMzD9lC,KAAKiB,QAAU,KAOfjB,KAAK8wB,UAAY,KAOjB9wB,KAAKg3F,cAAW1zF,EAEhB,MAAMoe,EAAOkhC,EAASlhC,KAElBA,IACF1hB,KAAKiB,QAAUygB,EAAKzgB,QAEhBygB,EAAKoP,YACP9wB,KAAK8wB,UAAYpP,EAAKoP,UAAU7jB,SAAS,OAGzChR,OAAOC,eAAe8D,KAAM,eAAgB,CAAExD,MAAOklB,EAAKoP,UAAW30B,YAAY,MAQvF4V,EAAU5U,UAAU65B,MAAQ,WAC1B,OAAIh3B,KAAK4Q,MAAQ5Q,KAAK4Q,KAAKvR,OAClBW,KAAK4Q,KAAK,GAEZ,MAGTmB,EAAU5U,UAAUulB,aAAe,WAEjC,OAAO1iB,KAAK8wB,WAGd/e,EAAU5U,UAAU85F,WAAa,WAE/B,OAAOj3F,KAAKiB,SAad8Q,EAAU5U,UAAU4oC,WAAa,WAC/B,IAAK/lC,KAAK4Q,MAA6B,IAArB5Q,KAAK4Q,KAAKvR,OAC1B,OAAO,EAET,MACMk1F,EADWv0F,KAAK4Q,KAAK,GACF,aACzB,MAA0B,kBAAZ2jF,GAAwBA,GAmBxCxiF,EAAU5U,UAAUb,OAAOwI,UAAY,WACrC,OAAK9E,KAAK4Q,KAGH5Q,KAAK4Q,KAAKtU,OAAOwI,YAFfiD,EAAMtE,WAAWnH,OAAOwI,aAKnCxJ,EAAOD,QAAU0W,G,6BCzKjB,MAAMvU,EAAO,EAAQ,GACf43B,EAAS,EAAQ,IAOvB,SAASpjB,EAAa22E,GACpBvzD,EAAOw9C,SAASl3E,KAAKsE,KAAM2oF,GAC3B3oF,KAAKkM,OAAS,GACdlM,KAAKk3F,QAAS,EAGhB15F,EAAK2P,SAAS6E,EAAcojB,EAAOw9C,UAEnC5gE,EAAa7U,UAAUg6F,MAAQ,WAK7B,IAJAn3F,KAAKk3F,QAAS,EACa,IAAvBl3F,KAAKkM,OAAO7M,SACdW,KAAKmoE,eAAeivB,SAAU,IAExBp3F,KAAKk3F,QAAUl3F,KAAKkM,OAAO7M,OAAS,GAC1CW,KAAKk3F,QAAUl3F,KAAK0E,KAAK1E,KAAKkM,OAAOquC,SAEjCv6C,KAAKk3F,QAAWl3F,KAAKkM,OAAO7M,SAAUW,KAAKq3F,YAC/Cr3F,KAAKq3F,YACLr3F,KAAKq3F,UAAY,OAQrBrlF,EAAa7U,UAAUm6F,OAAS,SAAUC,GACxCv3F,KAAKq3F,UAAY,KACXE,IAGDv3F,KAAKk3F,QAAUl3F,KAAKkM,OAAO7M,OAC9BW,KAAKq3F,UAAYE,EAGjBA,MAIJvlF,EAAa7U,UAAUwD,IAAM,SAAUgoE,GACrC3oE,KAAKkM,OAAOxH,KAAKikE,GACjB3oE,KAAKskE,KAAK,IAGZhpE,EAAOD,QAAU2W,G,6BC9CjB,SAASC,EAAIhR,GACX,IAAKA,EACH,MAAM,IAAIqE,MAAM,uBAGlBrJ,OAAOC,eAAe8D,KAAM,YAAa,CAAExD,MAAOyE,EAAS9E,YAAY,EAAOya,UAAU,IAO1F3E,EAAI9U,UAAUf,IAAM,SAAUmjE,GAC5B,MAA0B,iBAAfA,EAEFv/D,KAAKA,KAAKw3F,UAAUj4B,GAAYzjE,MAElCkE,KAAKu/D,IAOdttD,EAAI9U,UAAU4H,OAAS,WACrB,MAAM0yF,EAAc,GAIpB,OAHAz3F,KAAK4C,QAAQ,SAAUyD,GACrBoxF,EAAY/yF,KAAK2B,KAEZoxF,GAOTxlF,EAAI9U,UAAU2D,KAAO,WACnB,MAAMygB,EAAY,GAIlB,OAHAvhB,KAAK4C,QAAQ,SAAUyD,EAAKvJ,GAC1BykB,EAAU7c,KAAK5H,KAEVykB,GAOTtP,EAAI9U,UAAUyF,QAAU,SAAUvC,GAChC,IAAK,MAAMk/D,KAAcv/D,KAClBA,KAAK5C,eAAemiE,IAGzBl/D,EAASL,KAAKu/D,GAAaA,IAI/BjkE,EAAOD,QAAU4W,G,6BC/DjB,MAAMzU,EAAO,EAAQ,GAcrB,SAAS0U,IACP,IAAI24C,EAAW9rD,MAAM5B,UAAUuF,MAAMhH,KAAKiH,WAC1C,GAAwB,IAApBkoD,EAASxrD,OACX,MAAM,IAAIV,UAAU,yCAEE,IAApBksD,EAASxrD,QAAgB7B,EAAKwB,QAAQ6rD,KAExCA,EAAWA,EAAS,IAOtB7qD,KAAK6qD,SAAWA,EAMhB7qD,KAAKX,OAASW,KAAK6qD,SAASxrD,OAQ9B6S,EAAMwlF,UAAY,SAAU7sC,GAE1B,OAAO,IAAI34C,EAAM24C,EAASnoD,MAAM,KAOlCwP,EAAM/U,UAAUf,IAAM,SAAU8F,GAC9B,OAAOlC,KAAK6qD,SAAS3oD,GAAS,IAUhCgQ,EAAM/U,UAAU8P,SAAW,WACzB,MAAQ,IACNjN,KAAK6qD,SAAS1uC,OAAO,SAAUsqB,EAAM17B,EAAGxP,GACtC,OAAOkrC,GAAQlrC,EAAI,EAAI,IAAM,IAAMwP,EAAEkC,YACpC,IACH,KAOJiF,EAAM/U,UAAU+P,OAAS,WACvB,OAAOlN,KAAK6qD,UAOd34C,EAAM/U,UAAU4H,OAAS,WACvB,OAAO/E,KAAK6qD,SAASnoD,MAAM,IAG7BpH,EAAOD,QAAU6W,G,6BCtFjB,MAAM1U,EAAO,EAAQ,GAOrB,SAASqlC,KAwBT,SAAS80D,EAA2B5kC,GAClC/yD,KAAK+yD,MAAQA,EAsCf,SAAS1d,EAA8BuiD,EAAWC,EAAUC,GAC1D93F,KAAK43F,UAAYA,EACjB53F,KAAK63F,SAAWA,EAChB73F,KAAK83F,iBAAmBA,EA1D1Bj1D,EAAmB1lC,UAAU++C,YAAc,WACzC,MAAM,IAAI52C,MAAM,iEAMlBu9B,EAAmB1lC,UAAUytF,WAAa,WACxC,OAAO,IAAIztE,KAYb3f,EAAK2P,SAASwqF,EAA4B90D,GAM1C80D,EAA2Bx6F,UAAU++C,YAAc,WACjD,MAAMl2C,EAAOhG,KACb,MAAO,CACLS,KAAM,WACJ,MAAO,CAACjE,MAAOwJ,EAAK+sD,MAAO5wD,MAAM,MAQvCw1F,EAA2Bx6F,UAAUytF,WAAa,WAChD,OAAO,IAAIztE,IAAI,CAAC,CAAC,QAASnd,KAAK+yD,UAsBjCv1D,EAAK2P,SAASkoC,EAA+BxS,GAM7CwS,EAA8Bl4C,UAAU++C,YAAc,YACpD,IAAIh6C,EAAQlC,KAAK83F,kBAAoB,EAAI,EAEzC,OAAa,CACX,IAAI/kC,EAAQ,EAER7wD,GAAS,GACX6wD,EAAQ/yD,KAAK63F,UACO,IAAX31F,IACT6wD,EAAQrsD,KAAKS,IAAIT,KAAK2e,IAAI,EAAGnjB,GAASlC,KAAK43F,UAAW53F,KAAK63F,WAG7D31F,UAEMlC,KAAK+3F,WAAWhlC,KAS1B1d,EAA8Bl4C,UAAU46F,WAAa,SAAUv7F,GAC7D,GAAc,IAAVA,EAEF,OAAOA,EAIT,IAAIw7F,EAAgB,IAChBr7D,EAAQ,GAWZ,OATK38B,KAAK83F,kBAAoBt7F,IAAUwD,KAAK43F,UAIlCp7F,IAAUwD,KAAK63F,WAExBl7D,EAAQ,MAJRq7D,EAAgB,EAChBr7D,EAAQ,KAMHj2B,KAAKC,MAAMnK,GAASkK,KAAKE,SAAW+1B,EAAQq7D,KAMrD3iD,EAA8Bl4C,UAAUytF,WAAa,WACnD,OAAO,IAAIztE,IAAI,CACb,CAAC,YAAand,KAAK43F,WACnB,CAAC,WAAY53F,KAAK63F,UAClB,CAAC,mBAAoB73F,KAAK83F,qBAI9Bz8F,EAAQwnC,mBAAqBA,EAC7BxnC,EAAQs8F,2BAA6BA,EACrCt8F,EAAQg6C,8BAAgCA,G,6BC3IxC,MAAM73C,EAAO,EAAQ,GACfC,EAAS,EAAQ,GAYvB,SAASw6F,KAgDT,SAAS3iD,IACPt1C,KAAKk4F,MAAQ,CACXllC,cAAe,WACb,OAAQ,IAuBd,SAASmlC,EAAmCplC,EAAOqlC,GACjD,KAAMrlC,GAAS,GACb,MAAM,IAAIt1D,EAAO8D,cAAc,2CAEjC,KAAM62F,EAA2B,GAC/B,MAAM,IAAI36F,EAAO8D,cAAc,sDAEjCvB,KAAKq4F,OAAStlC,EACd/yD,KAAKs4F,0BAA4BF,EAzEnCH,EAA2B96F,UAAUgqC,KAAO,SAAU/W,KAQtD6nE,EAA2B96F,UAAU6/C,SAAW,aAahDi7C,EAA2B96F,UAAU20D,QAAU,SAAU9hC,EAAUuoE,GACjE,MAAM,IAAIjzF,MAAM,0EAMlB2yF,EAA2B96F,UAAUytF,WAAa,WAChD,OAAO,IAAIztE,KAkBb3f,EAAK2P,SAASmoC,EAA8B2iD,GAE5C3iD,EAA6Bn4C,UAAU20D,QAAU,WAC/C,OAAO9xD,KAAKk4F,OA0Bd16F,EAAK2P,SAASgrF,EAAoCF,GAElDE,EAAmCh7F,UAAU20D,QAAU,WACrD,IAAI0mC,EAAa,EACjB,MAAMxyF,EAAOhG,KACb,MAAO,CACLgzD,cAAe,WACb,OAAIwlC,IAAexyF,EAAKsyF,0BACftyF,EAAKqyF,QAEN,KAQdF,EAAmCh7F,UAAUytF,WAAa,WACxD,OAAO,IAAIztE,IAAI,CACb,CAAC,QAASnd,KAAKq4F,QACf,CAAC,2BAA4Br4F,KAAKs4F,8BAItCj9F,EAAQi6C,6BAA+BA,EACvCj6C,EAAQ48F,2BAA6BA,EACrC58F,EAAQ88F,mCAAqCA,G,6BC7H7C,MAAM36F,EAAO,EAAQ,GACfwK,EAAO,EAAQ,GAAYA,KAC3BvK,EAAS,EAAQ,GAgBjB2N,EAAmBpD,EAAKqD,QAAQ,KAYtC,SAAS23B,KAuCT,SAASuS,EAA4BkjD,EAAkBC,GACrD,GAAID,EAAmB,EACrB,MAAM,IAAIh7F,EAAO8D,cAAc,4CAEjCvB,KAAK24F,kBAAoBF,GAAoB,IAC7Cz4F,KAAK44F,gBAAkB,IACO,iBAAnBF,IAET14F,KAAK44F,gBAAkBF,GAEzB14F,KAAK64F,SAAW,EAChB74F,KAAK84F,UAAY,EACjB94F,KAAK+4F,aAAe,EA/BtB/1D,EAAmB7lC,UAAUsD,KAAO,SAAU2vB,GAC5C,MAAM,IAAI9qB,MAAM,+BAiClB9H,EAAK2P,SAASooC,EAA6BvS,GAM3CuS,EAA4Bp4C,UAAUyvF,QAAU,WAC9C,OAAOz7E,KAAKkD,OAGdkhC,EAA4Bp4C,UAAUsD,KAAO,SAAU2vB,GACrD,IAAIrmB,EAAO/J,KAAK4sF,UACZoM,EAAU,EACd,GAAIjvF,EAAO/J,KAAK84F,UAGd,OAFA94F,KAAK64F,QAAU,EACf74F,KAAK84F,UAAY/uF,EACV/J,KAAKi5F,wBAGVlvF,EAAO/J,KAAK84F,YACdE,EAAUh5F,KAAK84F,UAAY/uF,EAC3BA,EAAO/J,KAAK84F,WAES,OAAjB94F,KAAK64F,UACT74F,KAAK64F,QAAU,EACX9uF,IAAS/J,KAAK84F,YAEhB/uF,IACAivF,MAGJ,MAAME,EAAWl5F,KAAK84F,UACtB94F,KAAK84F,UAAY/uF,EACjB,MAAMjK,EAASE,KAAKi5F,wBACpB,GAAID,GAAWh5F,KAAK24F,kBAAmB,CAGrC,MAAMQ,EAAiBhoF,KAAKkD,MAC5B,GAAIrU,KAAK44F,gBAAkB,GAAK54F,KAAK+4F,aAAe/4F,KAAK44F,iBAAmBO,EAAe,CACzF,MAAMrtF,EAAUtO,EAAKgE,OACnB,0NAGAw3F,EAASE,EAAUp5F,GACrBE,KAAK+4F,aAAeI,EACpB/oE,EAAOprB,IAAI,UAAW8G,IAG1B,OAAOhM,GAOTy1C,EAA4Bp4C,UAAU87F,sBAAwB,WAC5D,OAAIj5F,KAAK84F,UAjIgB,cAoIC,IAAjB94F,KAAK84F,UAAmB94F,KAAK64F,QAE/B7wF,EACJuK,WAAWvS,KAAK84F,WAChBrmF,SAASrH,GACTzK,IAAIqH,EAAKqD,QAAQrL,KAAK64F,WAG3Bx9F,EAAQ2nC,mBAAqBA,EAC7B3nC,EAAQk6C,4BAA8BA,G,6BCxJtC,MAAMlxB,EAAS,EAAQ,GACjBoe,EAAiB,EAAQ,IACzBhlC,EAAS,EAAQ,GACjB+D,EAAS,EAAQ,GAAQA,OAEzB43F,EAAgB,IAChBC,EAA+B,IAC/BC,EAAiC,GACjCC,EAAkC,IAsIxC,SAASC,EAASvgD,GAChB,OAAoB,IAAbA,EAAQ,GAAYA,EAAQ,GAAKmgD,EAG1C,SAASK,EAAiB3rF,EAAO4R,EAAYhe,EAAa2D,GACxD,MAAMq0F,EAAiBr0F,EAAQs0F,uBAAyBN,EAClDO,EAAqBv0F,EAAQw0F,gCAAkCP,EAErE,GAAIv6F,MAAMC,QAAQ8O,GAChB,OAgBJ,SAA+BwV,EAAS5hB,EAAag4F,EAAgBE,GAEnE,IAGIr+F,EAHAuQ,GAAWpK,EAAY8hB,gBAAkB,UAAY,IAAM,YAAcF,EAAQjkB,QACjFqC,EAAYo4F,aAAiC,GAAlB,iBAAwB,aACnD3nB,EAAYunB,EAGhB,IAAKn+F,EAAI,EAAGA,EAAI+nB,EAAQjkB,QAAU8yE,EAAY,EAAG52E,IAAK,CACpD,IAAI6oC,EAAI9gB,EAAQ/nB,GAChB,MAAMyF,EAASojC,EAAEpjC,OACA,iBAANojC,IACTA,EAAIA,EAAEt2B,OAGJvS,EAAI,IACNuQ,GAAW,IACXqmE,KAGF,MAAM4nB,EAAcrzF,KAAKS,IAAIgrE,EAAW/tC,EAAE/kC,QAI1C,GAHAyM,GAAWs4B,EAAErgC,OAAO,EAAGg2F,IACvB5nB,GAAa4nB,IAEI,EACf,MAGF,MAAMr6E,EAAas6E,EAAkBh5F,EAAQmxE,EAAWynB,GACxDznB,GAAazyD,EAAWrgB,OACxByM,GAAW4T,EAIb,OADA5T,GAAWvQ,EAAI+nB,EAAQjkB,OAAS,QAAU,IAhDjC46F,CAAsBnsF,EAAOpM,EAAag4F,EAAgBE,GAInE,IAAI9tF,EAAUgC,EAAM/J,OAAO,EAAG21F,GAS9B,OAPA5tF,GAAWkuF,EAAkBt6E,EADXg6E,EAAiB5tF,EAAQzM,OAAS,EACAu6F,GAE/Cl4F,EAAYo4F,eAEfhuF,GAAW,mBAGNA,EAuCT,SAASkuF,EAAkBh5F,EAAQmxE,EAAWynB,GAC5C,GAAIznB,GAAa,EAGf,MAAO,SAGT,IAAKnxE,EACH,MAAO,MAGT,IAAIk5F,EAAmB,CAACh4F,EAAO7C,IAAW86F,EAAYn5F,EAAOkB,GAAQ7C,GACrE,IAAKN,MAAMC,QAAQgC,GAAS,CAC1B,MAAMG,EAAMH,EACZA,EAAS/E,OAAO6E,KAAKE,GACrBk5F,EAAmB,CAACh4F,EAAO7C,KACzB,MAAMvC,EAAMkE,EAAOkB,GACnB,IAAIpC,EAAShD,EAAIiH,OAAO,EAAG1E,GAC3B,MAAMmsB,EAAMnsB,EAASS,EAAOT,OAAS,EACrC,OAAImsB,GAAO,EACF1rB,EAETA,GAAU,IAAMq6F,EAAYh5F,EAAIrE,GAAM0uB,IAK1C,IACIjwB,EADAuQ,EAAU,KAEd,IAAKvQ,EAAI,EAAG42E,EAAY,GAAK52E,EAAIyF,EAAO3B,OAAQ9D,IAAK,CAC/CA,EAAI,IACNuQ,GAAW,IACXqmE,KAGF,MAAMioB,EAAcF,EAAiB3+F,EAAGmL,KAAKS,IAAIyyF,EAAoBznB,IACrEA,GAAaioB,EAAY/6F,OACzByM,GAAWsuF,EAQb,OALI7+F,EAAIyF,EAAO3B,SACbyM,GAAW,OAGbA,GAAW,IAIb,SAASquF,EAAY39F,EAAO69F,GAC1B,YAAc/2F,IAAV9G,EACK,YAGK,OAAVA,EACK,OAGFA,EAAMyQ,WAAWlJ,OAAO,EAAGs2F,GAGpC,SAASC,EAAgBvhD,EAAeC,GACtC,IAAIltC,EAAU,gBAAkByuF,EAAWxhD,GAI3C,YAHuBz1C,IAAnB01C,IACFltC,GAAW,oBAAsByuF,EAAWvhD,IAEvCltC,EAGT,SAASyuF,EAAWl7F,GAClB,OAAOA,EAAS,IAAOqH,KAAKigE,MAAMtnE,EAAS,MAAQ,MAAQA,EAAS,SAGtE/D,EAAOD,QA9PP,cAA4BonC,EAsB1B,YAAYp9B,GAEV,GADAsc,SACKtc,EACH,MAAM,IAAI5H,EAAO8D,cAAc,+CAGjCvB,KAAKutC,SAAWloC,EAOhBrF,KAAKw6F,kBAAoBx6F,KAAKutC,SAASitD,kBAOvCx6F,KAAKy6F,mBAAqBz6F,KAAKutC,SAASktD,mBAOxCz6F,KAAKi9B,QAAU,IAAI5Y,EAAO6hB,aAO5B,UAAUpzB,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GACzEj5C,KAAKutC,SAASmtD,cAAgB,GAAKlB,EAASvgD,GAAWj5C,KAAKutC,SAASmtD,cACvE16F,KAAK26F,SAAS7nF,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GAE5Ej5C,KAAKutC,SAASqtD,qBAAuB,GAAK7hD,EAAgB/4C,KAAKutC,SAASqtD,qBAC/E56F,KAAK66F,iBAAiB/nF,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GAEpFj5C,KAAKw6F,mBACZx6F,KAAK86F,kBAAkBhoF,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GAQhG,QAAQnmC,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAel5C,EAAKo5C,GAC5Dj5C,KAAKutC,SAASqtD,qBAAuB,GAAK7hD,EAAgB/4C,KAAKutC,SAASqtD,qBAC1E56F,KAAK+6F,sBAAsBjoF,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAel5C,EAAKo5C,GAE9Ej5C,KAAKy6F,oBACZz6F,KAAKg7F,iBAAiBloF,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAel5C,EAAKo5C,GAIpF,SAASnmC,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GAC5E,MAAMntC,EAAUtK,EAAO,yCAA0CsR,EAAKO,QAAS3M,KAAKC,MAAM6yF,EAASvgD,IACjGqhD,EAAgBvhD,EAAeC,GAAiBygD,EAAiB3rF,EAAO4R,EAAYhe,EAAa1B,KAAKutC,WACxGvtC,KAAKi9B,QAAQpkB,KAAK,OAAQ/M,GAG5B,iBAAiBgH,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GACpF,MAAMntC,EAAUtK,EAAO,oDAAqDsR,EAAKO,QAC/EinF,EAAgBvhD,EAAeC,KAAmBwgD,EAASvgD,GAC3DwgD,EAAiB3rF,EAAO4R,EAAYhe,EAAa1B,KAAKutC,WACxDvtC,KAAKi9B,QAAQpkB,KAAK,QAAS/M,GAG7B,kBAAkBgH,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAeC,EAAgBC,GACrF,MAAMntC,EAAUtK,EAAO,uDAAwDsR,EAAKO,UAAWmmF,EAASvgD,GACtGqhD,EAAgBvhD,EAAeC,GAAiBygD,EAAiB3rF,EAAO4R,EAAYhe,EAAa1B,KAAKutC,WACxGvtC,KAAKi9B,QAAQpkB,KAAK,SAAU/M,GAG9B,sBAAsBgH,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAel5C,EAAKo5C,GAC9E,MAAMgiD,EAAsBj7F,KAAKutC,SAAS2tD,iCAAmC3B,EACvEztF,EAAUtK,EAAO,oFACrBsR,EAAKO,QAASinF,EAAgBvhD,KAAkBygD,EAASvgD,GACzDwgD,EAAiB3rF,EAAO4R,EAAYhe,EAAa1B,KAAKutC,UAAW1tC,EAAIiE,MAAMC,OAAO,EAAGk3F,IAGvFj7F,KAAKi9B,QAAQpkB,KAAK,QAAS/M,GAG7B,iBAAiBgH,EAAMhF,EAAO4R,EAAYhe,EAAaq3C,EAAel5C,EAAKo5C,GACzE,MAAMgiD,EAAsBj7F,KAAKutC,SAAS2tD,iCAAmC3B,EACvEztF,EAAUtK,EAAO,gEAAiEsR,EAAKO,UACzFmmF,EAASvgD,GAAUqhD,EAAgBvhD,GACrC0gD,EAAiB3rF,EAAO4R,EAAYhe,EAAa1B,KAAKutC,UAAW1tC,EAAIiE,MAAMC,OAAO,EAAGk3F,IAGvFj7F,KAAKi9B,QAAQpkB,KAAK,UAAW/M,M,6BC1IjC,MAAM42B,EAAgB,EAAQ,IACxBwD,EAAe,EAAQ,GAkL7B5qC,EAAOD,QAjKP,cAA6BqnC,EAI3B,cACE/gB,QAcA3hB,KAAKvC,OAAS,IAAIyoC,EAClBlmC,KAAKvC,OAAO09F,eAAiB,IAAIj1D,EACjClmC,KAAKvC,OAAO29F,cAAgB,IAAIl1D,EAChClmC,KAAKvC,OAAO0gD,WAAa,IAAIjY,EAC7BlmC,KAAKvC,OAAO+uB,MAAQ,IAAI0Z,EACxBlmC,KAAKvC,OAAOuS,YAAc,IAAIk2B,EAC9BlmC,KAAKvC,OAAO49F,YAAc,IAAIn1D,EAC9BlmC,KAAKvC,OAAOsS,aAAe,IAAIm2B,EAe/BlmC,KAAKs7F,QAAU,IAAIp1D,EACnBlmC,KAAKs7F,QAAQF,cAAgB,IAAIl1D,EACjClmC,KAAKs7F,QAAQ9uE,MAAQ,IAAI0Z,EACzBlmC,KAAKs7F,QAAQtrF,YAAc,IAAIk2B,EAC/BlmC,KAAKs7F,QAAQD,YAAc,IAAIn1D,EAC/BlmC,KAAKs7F,QAAQvrF,aAAe,IAAIm2B,EAMhClmC,KAAKgyD,sBAAwB,IAAI9rB,EAMjClmC,KAAKu7F,cAAgB,IAAIr1D,EAOzBlmC,KAAKw7F,UAAY,IAAIt1D,EACrBlmC,KAAKw7F,UAAUC,QAAU,IAAIv1D,EAI/B,sBAAsB74B,GACpBrN,KAAKvC,OAAO09F,eAAetiF,KAAK,YAAaxL,GAC7CrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAGhC,kBAAkBA,GAChBrN,KAAKvC,OAAO0gD,WAAWtlC,KAAK,YAAaxL,GACzCrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAIhC,mBAAmBA,GACjBrN,KAAKvC,OAAOuS,YAAY6I,KAAK,YAAaxL,GAC1CrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAIhC,oBAAoBA,GAClBrN,KAAKvC,OAAOsS,aAAa8I,KAAK,YAAaxL,GAC3CrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAIhC,mBAAmBA,GACjBrN,KAAKvC,OAAO49F,YAAYxiF,KAAK,YAAaxL,GAC1CrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAIhC,qBAAqBA,GACnBrN,KAAKvC,OAAO29F,cAAcviF,KAAK,YAAaxL,GAC5CrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAIhC,aAAaA,GACXrN,KAAKvC,OAAO+uB,MAAM3T,KAAK,YAAaxL,GACpCrN,KAAKvC,OAAOob,KAAK,YAAaxL,GAIhC,qBAAqBA,GACnBrN,KAAKs7F,QAAQF,cAAcviF,KAAK,YAAaxL,GAC7CrN,KAAKs7F,QAAQziF,KAAK,YAAaxL,GAIjC,kBAAkBA,GAChBrN,KAAKs7F,QAAQ9uE,MAAM3T,KAAK,YAAaxL,GACrCrN,KAAKs7F,QAAQziF,KAAK,YAAaxL,GAIjC,mBAAmBA,GACjBrN,KAAKs7F,QAAQtrF,YAAY6I,KAAK,YAAaxL,GAC3CrN,KAAKs7F,QAAQziF,KAAK,YAAaxL,GAIjC,mBAAmBA,GACjBrN,KAAKs7F,QAAQD,YAAYxiF,KAAK,YAAaxL,GAC3CrN,KAAKs7F,QAAQziF,KAAK,YAAaxL,GAIjC,oBAAoBA,GAClBrN,KAAKs7F,QAAQvrF,aAAa8I,KAAK,YAAaxL,GAC5CrN,KAAKs7F,QAAQziF,KAAK,YAAaxL,GAIjC,cAAcA,GACZrN,KAAKu7F,cAAc1iF,KAAK,YAAaxL,GAIvC,yBACErN,KAAKgyD,sBAAsBn5C,KAAK,aAIlC,qBAAqBogC,GACnBj5C,KAAKw7F,UAAUC,QAAQ5iF,KAAK,YAAaogC,GAI3C,WAAWA,GACTj5C,KAAKw7F,UAAU3iF,KAAK,YAAaogC,M,6BChLrC,MAAM50B,EAAS,EAAQ,GACjB7mB,EAAO,EAAQ,GAEfuK,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GACjByhB,EAAQ,EAAQ,GAChBi6B,EAAiB,EAAQ,IAAuBA,eAChDsG,EAAW,EAAQ,IACnB4iB,EAAgB,EAAQ,IACxBq5B,EAAc,EAAQ,KACtB92E,EAAc,EAAQ,IAAmBA,YACzCpZ,EAAU,EAAQ,IAAmBA,QACrC0kB,EAA0B,EAAQ,IAAuBA,wBAI/D,IAAIyrE,EAAoB,EAAQ,KAC5BlrC,EAAiB,EAAQ,IACzBvV,EAAiB,EAAQ,IA8T7B,SAASonB,EAAOj9D,GACdgf,EAAO6hB,aAAaxqC,KAAKsE,MACzBA,KAAKqF,QAAUg9D,EAAc3+D,OAAO,CAAE0B,WAAYpF,KAAK6Y,KAAK9b,KAAKiD,OAASqF,GAC1EpJ,OAAOC,eAAe8D,KAAM,iBAAkB,CAAExD,MAAO,IAAI28C,EAAen5C,KAAKqF,WAC/EpJ,OAAOC,eAAe8D,KAAM,oBAAqB,CAC/CxD,MAAO,IAAIm/F,EAAkB37F,KAAKqF,QAASrF,KAAKkxB,gBAAiBta,UAAU,IAG7E5W,KAAKggD,gBAAgB,GACrBhgD,KAAK2gD,WAAY,EACjB3gD,KAAK47F,gBAAiB,EAKtB57F,KAAKgwB,SAAW3qB,EAAQ2qB,SAKxBhwB,KAAKo7C,SAAWp7C,KAAKgyB,kBAAkBopB,SAKvCp7C,KAAKy5C,MAAQz5C,KAAKgyB,kBAAkBynB,MAQpCz5C,KAAK8b,QAAU9b,KAAKqF,QAAQyW,QAG9Bte,EAAK2P,SAASm1D,EAAQj+C,EAAO6hB,cAkD7Bo8B,EAAOnlE,UAAU6kD,QAAU,SAAU3hD,GACnC,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAUL,KAAK67F,aAOtEv5B,EAAOnlE,UAAU0+F,WAAa,SAAUx7F,GACtC,GAAIL,KAAK2gD,UACP,OAAOtgD,IAET,GAAIL,KAAK47F,eAEP,OAAOv7F,EAAS,IAAI5C,EAAOkV,qBAAqB,KAAM,+CAGxD,GADA3S,KAAKoiD,KAAK,YAAa/hD,GACnBL,KAAK87F,WAEP,OAEF97F,KAAK87F,YAAa,EAClB,MAAM91F,EAAOhG,KACbA,KAAKgF,IAAI,OAAQxH,EAAKgE,OAAO,8CAA+CojB,EAAapZ,IACzFzD,EAAM5B,OAAO,CACX,SAA+B1F,GAC7BuF,EAAKgsB,kBAAkBmV,KAAK1mC,IAE9B,SAAiCA,GAC/BuF,EAAKyzC,MAAQzzC,EAAKgsB,kBAAkBynB,MACpCzzC,EAAKkrB,eAAeiW,KAAKnhC,EAAMA,EAAKyzC,MAAOh5C,IAE7C,SAAqBA,GACnB,IAAKuF,EAAKgqB,SACR,OAAOvvB,IAETgwD,EAAe5/C,YAAY7K,EAAMvF,IAEnC,SAAiCA,GAG/B,GAFA4hE,EAAcx+B,6BAA6B79B,EAAKX,QAASW,EAAKgsB,kBAAkBlqB,kBAE3E9B,EAAKX,QAAQ87B,QAAQE,OACxB,OAAO5gC,IAETuF,EAAK+1F,QAAQt7F,KAEd,SAAyBZ,GAC1B,GAAIA,EAEF,OAAOmG,EAAKgsB,kBAAkBvc,MAAM,WAClCzP,EAAK26C,WAAY,EACjB36C,EAAK81F,YAAa,EAClB91F,EAAK6S,KAAK,YAAahZ,KAG3BmG,EAAKg2F,oBAELh2F,EAAKkrB,eAAeyoB,YAAY3zC,EAAKgsB,kBAAkBlf,MACvD9M,EAAK26C,WAAY,EACjB36C,EAAK81F,YAAa,EAClB91F,EAAK6S,KAAK,gBAoCdypD,EAAOnlE,UAAU6Q,QAAU,SAAUF,EAAO9M,EAAQqE,EAAShF,GAM3D,MAHwB,mBADxBA,EAAWA,GAAagF,GAAoBrE,KAE1CA,EAA2B,mBAAXA,EAAwBA,EAAS,MAE5C+G,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9E,IAAIgB,EACJ,IACEA,EAAcwuB,EAAwBrzB,OAAOwI,EAASrF,MAExD,MAAOqN,GACL,OAAO3M,EAAG2M,GAGZrN,KAAKi8F,cAAcnuF,EAAO9M,EAAQU,EAAahB,MAgCnD4hE,EAAOnlE,UAAU++F,QAAU,SAAUpuF,EAAO9M,EAAQqE,EAASgrB,EAAahwB,GAWxE,IAAIqB,GAVCrB,GAAYgwB,GAAkC,mBAAZhrB,GACrChF,EAAW0H,EAAMN,WAAW4oB,EAAa,eACzCA,EAAchrB,IAEdhF,EAAWA,GAAY0H,EAAMnK,KAC7ByyB,EAActoB,EAAMN,WAAW4oB,GAAehrB,GAAWrE,EAAQ,gBAGnEA,EAA2B,mBAAXA,EAAwBA,EAAS,KAGjD,IACEU,EAAcwuB,EAAwBrzB,OAAOwI,EAASrF,KAAMqwB,GAE9D,MAAOhjB,GACL,OAAOhN,EAASgN,GAGlB,MAAMrH,EAAOhG,KACb,IAAI8lC,EAAY,EAEhB,SAASkxD,IACPhxF,EAAKi2F,cAAcnuF,EAAO9M,EAAQU,EAAay6F,GAGjD,SAASA,EAAct8F,EAAKC,GAC1B,GAAID,EACF,OAAOQ,EAASR,GAKlB,GAFAimC,GAAahmC,EAAOgmC,eAEQxiC,IAAxBxD,EAAOs8F,aAA4B,CAGrC,GADA16F,EAAY26F,aAAav8F,EAAOs8F,cAC5B16F,EAAY46F,aAEd,OAAOtF,IAGTl3F,EAAOk3F,SAAWA,EAIpBl3F,EAAOgmC,UAAYA,EACnBzlC,EAAS,KAAMP,GAGjBE,KAAKi8F,cAAcnuF,EAAO9M,EAAQU,EAAay6F,IAuBjD75B,EAAOnlE,UAAUi4B,OAAS,SAAUtnB,EAAO9M,EAAQqE,EAAShF,GAC1DA,EAAWA,GAAY0H,EAAMnK,KAI7B,MAAM2+F,EAAe,IAAIr9E,EAAMlN,aAAa,CAAEmvC,WAAY,IAC1D,SAASxqB,EAAS92B,EAAKC,GACjBD,GACF08F,EAAa1jF,KAAK,QAAShZ,GAEzBC,GAAUA,EAAOk3F,SAGnBuF,EAAajF,OAAO,WAClB,IACEx3F,EAAOk3F,WAET,MAAOt1B,GACL66B,EAAa1jF,KAAK,QAAS6oD,OAMjC66B,EAAajF,OAAO,MACpBiF,EAAa57F,IAAI,MACjBN,EAASR,IAEX,IAAIwD,GAAO,EAaX,OAZArD,KAAKk8F,QAAQpuF,EAAO9M,EAAQqE,EAAS,SAAqBrI,EAAGgpC,GAC3Du2D,EAAa57F,IAAIqlC,IAChB,SAAyBnmC,EAAKC,GAC/B,GAAIuD,EAEF,OAAOi0B,aAAa,WAClBX,EAAS92B,EAAKC,KAGlB62B,EAAS92B,EAAKC,KAEhBuD,GAAO,EACAk5F,GAcTj6B,EAAOnlE,UAAUgR,MAAQ,SAAUmV,EAASje,EAAShF,GAEnD,OADAA,EAAWA,GAAYgF,EAChB0C,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAU,SAAiBK,GAC9EV,KAAKw8F,SAASl5E,EAASje,EAAS3E,MAUpC4hE,EAAOnlE,UAAUq/F,SAAW,SAAUl5E,EAASje,EAAShF,GACtD,IAAKtB,MAAMC,QAAQskB,GAEjB,MAAM,IAAI7lB,EAAO8D,cAAc,8BAEjC,GAAuB,IAAnB+hB,EAAQjkB,OACV,OAAOgB,EAAS,IAAI5C,EAAO8D,cAAc,mCAG3C,IAAIG,EAOA+6F,EACAhiD,EAPJ,IACE/4C,EAAcwuB,EAAwBrzB,OAAOwI,EAASrF,MACtD,MAAOqN,GACP,OAAOhN,EAASgN,GAMlBtF,EAAM5B,OAAO,CACX1F,GAAQT,KAAKgiD,QAAQvhD,GACrBA,IACE,GAAIiB,EAAYo4F,aACd,OAAO5+C,EAAewhD,oBACpB18F,KAAM0B,EAAY8wD,yBAA0BlvC,EAAStjB,KAAKgwB,SAAU,SAASnwB,EAAKC,GAChF28F,EAAa38F,EACbW,EAAKZ,KAGX48F,EAAa,IAAI19F,MAAMukB,EAAQjkB,QAC/B,IAAK,IAAI9D,EAAI,EAAGA,EAAI+nB,EAAQjkB,OAAQ9D,IAAK,CACvC,MAAMkJ,EAAO6e,EAAQ/nB,GACrB,IAAKkJ,EACH,OAAOhE,EAAK,IAAIhD,EAAO8D,cAAc/D,EAAKgE,OAAO,4BAA6BjG,KAEhF,MAAMuS,EAAwB,iBAATrJ,EAAoBA,EAAOA,EAAKqJ,MACrD,IAAKA,EACH,OAAOrN,EAAKhD,EAAO8D,cAAc/D,EAAKgE,OAAO,4BAA6BjG,KAE5EkhG,EAAWlhG,GAAK,CAAEuS,MAAOA,EAAO9M,OAAQyD,EAAKzD,QAE/CP,KAEFA,GAAQT,KAAK28F,oBAAoBF,EAAY/6F,EAAa,CAAC7B,EAAKxD,KAC9Do+C,EAAUp+C,EACVoE,EAAKZ,KAEPY,GAAQgwD,EAAerxB,KAAKqb,EAAS/4C,EAAa1B,KAAMS,IACvDJ,IASLiiE,EAAOnlE,UAAUi5D,YAAc,SAAUpmC,EAAUnM,GACjD,OAAO7jB,KAAKo7C,SAASgb,YAAYpmC,EAAUnM,IAW7Cy+C,EAAOnlE,UAAUy/F,SAAW,WAC1B,OAAOlB,EAAYl9F,KAAKwB,OAG1BsiE,EAAOnlE,UAAU6H,IAAM+C,EAAM/C,IAU7Bs9D,EAAOnlE,UAAU6/C,SAAW,SAAU38C,GACpC,OAAO0H,EAAMnC,eAAelK,KAAKsE,KAAMA,KAAKqF,QAAShF,EAAUL,KAAK68F,cAOtEv6B,EAAOnlE,UAAU0/F,YAAc,SAAUx8F,GACvC,MAAM2F,EAAOhG,KACb,SAAS88F,IACP92F,EAAK26C,WAAY,EACjB36C,EAAK41F,gBAAiB,EACtB,MAAMniD,EAAQzzC,EAAKyzC,MAAM10C,SAEzBiB,EAAKgsB,kBAAkBgrB,WACvBh3C,EAAKX,QAAQysB,SAAS8O,qBAAqBoc,WACvCh3C,EAAKX,QAAQw8B,gBACf77B,EAAKX,QAAQw8B,eAAemb,WAG9Bj1C,EAAM5E,KAAKs2C,EAAO,CAACuF,EAAGv+C,IAASu+C,EAAEhC,UAAS,EAAOv8C,GAAOJ,GAI1D,OAFAL,KAAKgF,IAAI,OAAQ,iBACjB3E,EAAWA,GAAY0H,EAAMnK,KACxBoC,KAAKy5C,OAAUz5C,KAAK2gD,UAKrB3gD,KAAK87F,YACP97F,KAAKgF,IAAI,UAAW,kCAEbhF,KAAKoiD,KAAK,YAAa06C,SAEhCA,KARE98F,KAAK2gD,WAAY,EACVtgD,MAgBXiiE,EAAOnlE,UAAU4/F,wBAA0B,SAAU5+C,EAAY99C,GAC/D,GAA0B,IAAtBL,KAAKy5C,MAAMp6C,OACb,OAAOi4B,aAAa,IAAMj3B,EAAS,MAAM,IAG3C,MAAMmU,EAAQjR,QAAQkR,SAChBuoF,EAAiBh9F,KAAKqF,QAAQ07B,gBAAgBE,8BAIpD,IAAIg8D,EAFJj9F,KAAKgF,IAAI,OAAQ,gCAIjB+C,EAAML,OACJ,KAAOu1F,GAAiB15F,QAAQkR,OAAOD,GAAO,GAAKwoF,EACnDv8F,IACET,KAAKo7C,SAASwe,sBAAsBzb,EAAY,CAACt+C,EAAKg6D,IAChDh6D,EACKY,EAAKZ,IAGdo9F,EAAgBpjC,IAGd75D,KAAKgF,IAAI,OAAQ,yBACVvE,UAIT6hD,WAAW7hD,EAAM,OAGpBZ,GAAQQ,EAASR,EAAKo9F,KAW3B36B,EAAOnlE,UAAU+/F,gCAAkC,SAAU/+C,EAAYjwC,EAAO7N,GAC9EL,KAAK+8F,wBAAwB5+C,EAAY,CAACt+C,EAAKg6D,KAK7C,GAJIh6D,GAEFG,KAAKgF,IAAI,UAAW,0EAA2EnF,IAE5FG,KAAKqF,QAAQ48B,sBAChB,OAAO5hC,EAASw5D,GAIlB75D,KAAKgyB,kBAAkBmrE,mBAAmBjvF,GAAO,EAAOrO,IAClDA,GACFG,KAAKgF,IAAI,UAAW,kDAAmDnF,GAEzEQ,EAASw5D,QAafyI,EAAOnlE,UAAU8+F,cAAgB,SAAUnuF,EAAO9M,EAAQU,EAAarB,GACrE,MAAMmL,EAAUxL,KAAKgyB,kBAAkBlqB,gBAEvC,IAAKpG,EAAYo4F,cAAgB94F,IAAWxD,EAAKwB,QAAQgC,KAAYke,EAAMpX,gBAAgB0lF,wBAAwBhiF,GAEjH,OAAOnL,EACL,IAAI5C,EAAO8D,cAAc,+EAG7B,IAAIk5C,EACJ1yC,EAAM5B,OAAO,CACX1F,GAAQT,KAAKgiD,QAAQvhD,GACrBA,IACE,IAAKiB,EAAYo4F,aACf,OAAO95F,KAAKo9F,oBAAoBtvF,EAAOpM,EAAaV,EAAQ,CAACnB,EAAKxD,KAChEo+C,EAAUp+C,EACVoE,EAAKZ,KAIT,MAAM0yD,EAAM7wD,EAAY8wD,yBACxBtX,EAAe4V,YAAY9wD,KAAMuyD,EAAKzkD,EAAO9N,KAAKgwB,SAAU,CAACnwB,EAAK4hB,EAASC,KACzE,GAAI7hB,EACF,OAAOY,EAAKZ,GAEdG,KAAKq9F,sBAAsBvvF,EAAO2T,EAAS/f,EAAaV,EAAQ0gB,EAAM,CAAC7hB,EAAKxD,KAC1Eo+C,EAAUp+C,EACVoE,EAAKZ,QAIXY,GAAQgwD,EAAerxB,KAAKqb,EAAS/4C,EAAa1B,KAAMS,IACvDJ,IAOLiiE,EAAOnlE,UAAU6+F,kBAAoB,WACnC,SAASsB,EAAkBrgE,EAAS+hB,GAClC,MAAO,IAAM/hB,EAAQpkB,KAAK,SAAUmmC,GAEtC,SAASu+C,EAAoBtgE,EAAS+hB,GACpC,MAAO,IAAM/hB,EAAQpkB,KAAK,WAAYmmC,GAExC,MAAMh5C,EAAOhG,KAEbA,KAAKy5C,MAAMxiB,GAAG,MAAO,SAA2B+nB,GAC9CA,EAAE/nB,GAAG,KAAMqmE,EAAkBt3F,EAAMg5C,IACnCA,EAAE/nB,GAAG,OAAQsmE,EAAoBv3F,EAAMg5C,IACvCh5C,EAAK6S,KAAK,UAAWmmC,KAGvBh/C,KAAKy5C,MAAMxiB,GAAG,SAAU,SAA6B+nB,GACnDA,EAAE8B,qBACF96C,EAAK6S,KAAK,aAAcmmC,KAG1Bh/C,KAAKy5C,MAAM72C,QAAQ,SAAUo8C,GAC3BA,EAAE/nB,GAAG,KAAMqmE,EAAkBt3F,EAAMg5C,IACnCA,EAAE/nB,GAAG,OAAQsmE,EAAoBv3F,EAAMg5C,OAI3CsjB,EAAOnlE,UAAU4+F,QAAU,SAAU17F,GACnC,MAAM2F,EAAOhG,KACPy5C,EAAQz5C,KAAKy5C,MAAM10C,SACzBgD,EAAMd,WAAWwyC,EAAMp6C,OAj7BL,GAi7B0B,SAA4B9D,EAAGkF,GACzE,MAAMu+C,EAAIvF,EAAMl+C,GAEhB,GADiByK,EAAKkrB,eAAeyoB,YAAYqF,KAChC9/B,EAAMxQ,SAASC,MAE9B,OAAOlO,IAETu+C,EAAEnB,WAAW,SAAUh+C,GACjBA,GAGFmG,EAAKhB,IAAI,UAAWxH,EAAKgE,OAAO,sDAAuDw9C,EAAE3rC,QAASxT,IAEpGY,OAEDJ,IAOLiiE,EAAOnlE,UAAUqgG,YAAc,WAC7B,MAAMn8E,EAAUrhB,KAAKgyB,kBAAkB+V,aACvC,IAAK1mB,EACH,MAAM,IAAI5jB,EAAOuV,oBAAoB,0BAEvC,OAAOqO,GAOTihD,EAAOnlE,UAAUw/F,oBAAsB,SAAUF,EAAYv3F,EAAM7E,GACjE,MAAMo9F,EAAahB,EAAW,GAC9B,IAAKgB,EAAW/7E,KACd,OAAOrhB,EAAS,KAAM,IAAIo/C,EAASp8B,aAAao5E,EAAYv3F,IAG9DlF,KAAK09F,gBAAgBx4F,EAAMu4F,EAAWz8F,OAAQy8F,EAAW/7E,KAAM,SAAU7hB,GACvE,GAAIA,EACF,OAAOQ,EAASR,GAElBQ,EAAS,KAAM,IAAIo/C,EAASp8B,aAAao5E,EAAYv3F,OAQzDo9D,EAAOnlE,UAAUkgG,sBAAwB,SAASvvF,EAAO2T,EAASvc,EAAMlE,EAAQ0gB,EAAMrhB,GACpF,IACEW,EAAS+G,EAAMhH,yBAAyBC,EAAQ0gB,EAAKzgB,SAEvD,MAAOpB,GACL,OAAOQ,EAASR,GAGlBG,KAAK09F,gBAAgBx4F,EAAMlE,EAAQ0gB,EAAM7hB,IACvC,GAAIA,EACF,OAAOQ,EAASR,GAElBQ,EAAS,KAAM,IAAIo/C,EAASj+B,eAAe1T,EAAO2T,EAASzgB,EAAQkE,EAAMwc,OAQ7E4gD,EAAOnlE,UAAUigG,oBAAsB,SAAUtvF,EAAOpM,EAAaV,EAAQX,GAC3EL,KAAKo7C,SAAS0e,eAAe95D,KAAKgwB,SAAUtuB,EAAYK,WAAalC,IACnE,GAAIA,EACF,OAAOQ,EAASR,GAGlB,IAAI89F,EACJ,IACEA,EAAa51F,EAAMtG,0BAA0BT,EAAQU,GACrD1B,KAAKw9F,cAAclwC,sBAAsBqwC,EAAW38F,OAAQU,EAAai8F,EAAW/7F,YACpF,MAAO/B,GACP,OAAOQ,EAASR,GAGlBQ,EAAS,KAAM,IAAIo/C,EAASt7B,aAAarW,EAAO6vF,EAAW38F,OAAQU,EAAai8F,EAAWh8F,qBAY/F2gE,EAAOnlE,UAAUugG,gBAAkB,SAAUh8F,EAAaV,EAAQ0gB,EAAMrhB,GACtE,MAAM2F,EAAOhG,KAGb,SAAS49F,EAAiBC,GACxB,MAAMx8E,EAAUrb,EAAKw3F,cACrB,IACMK,EACFx8E,EAAQisC,sBAAsBtsD,EAAQU,GAEtC2f,EAAQ0sC,sBAAsBrsC,EAAM1gB,EAAQU,GAGhD,MAAO7B,GACL,OAAOQ,EAASR,GAElBQ,IAMF,OAHKqB,EAAY+zD,eAAiB/zC,EAAKsO,UACrCtuB,EAAYmP,YAAY6Q,EAAKsO,UAE3BtuB,EAAY8rD,gBAEPowC,GAAiB,GAEtB7+F,MAAMC,QAAQ0iB,EAAK45C,gBAErB55D,EAAYo8F,kBAAkBp8E,EAAK45C,eAC5BsiC,UAIT59F,KAAKo7C,SAASmc,SAAS71C,EAAKsO,SAAUtO,EAAKukD,MAAO,CAACpmE,EAAKk+F,IAClDl+F,GACFG,KAAKgF,IAAI,UAAWxH,EAAKgE,OAAO,8CAA+CkgB,EAAKsO,SAAUtO,EAAKukD,QAC5F5lE,KAEJ09F,GAILr8F,EAAYo8F,kBAAkBC,EAAUziC,cAAc/1D,IAAI3J,GAAK8lB,EAAK25C,cAAcz/D,EAAEE,QAEpF4lB,EAAK45C,cAAgB55D,EAAYisD,yBACjCiwC,KALSv9F,MAgBb/E,EAAOD,QAAUinE,G,6BCnmCjB,MAAM9kE,EAAO,EAAQ,GACfC,EAAS,EAAQ,GAevB,SAASi+F,EAAYjiD,EAAOukD,EAAiBC,GAC3Cj+F,KAAKk+F,OAASzkD,EACdz5C,KAAKm+F,iBAAmBH,EACxBh+F,KAAKo+F,iBAAmBH,EAS1BvC,EAAYl9F,KAAO,SAAU4xB,GAC3B,MAAM4tE,EAAkB,GAClBC,EAAkB,GAClBrpC,EAAY,GAUlB,OATAxkC,EAAOqpB,MAAM72C,QAAQ,SAAckQ,GACI,IAAjCA,EAAKyoC,KAAKwC,YAAY1+C,SAI1Bu1D,EAAUlwD,KAAKoO,GACfkrF,EAAgBlrF,EAAKO,SAAWP,EAAKyoC,KAAKwC,YAAY1+C,OACtD4+F,EAAgBnrF,EAAKO,SAAWP,EAAKwrC,iBAEhC,IAAIo9C,EAAY9mC,EAAWopC,EAAiBC,IAOrDvC,EAAYv+F,UAAUkhG,kBAAoB,WACxC,OAAOr+F,KAAKk+F,QAQdxC,EAAYv+F,UAAUmhG,mBAAqB,SAAUxrF,GACnD,IAAKA,EACH,MAAM,IAAIrV,EAAO8D,cAAc,uBAEjC,OAAOvB,KAAKm+F,iBAAiBrrF,EAAKO,UAAY,GAYhDqoF,EAAYv+F,UAAUohG,mBAAqB,SAAUzrF,GACnD,IAAKA,EACH,MAAM,IAAIrV,EAAO8D,cAAc,uBAEjC,OAAOvB,KAAKo+F,iBAAiBtrF,EAAKO,UAAY,GAMhDqoF,EAAYv+F,UAAU8P,SAAW,WAC/B,OAAOzP,EAAKgE,OACV,8DACAxB,KAAKk+F,OAAO34F,IAAI,SAAUy5C,GAAK,OAAOA,EAAE3rC,UACxCrT,KAAKm+F,iBACLn+F,KAAKo+F,mBAIT9iG,EAAOD,QAAUqgG,G,6BC7FjB,MAAMr3E,EAAS,EAAQ,GACjB7mB,EAAO,EAAQ,GACfqiD,EAAM,EAAQ,IAEdpiD,EAAS,EAAQ,GACjB09C,EAAO,EAAQ,IAAUA,KACzBiB,EAAU,EAAQ,IAAUA,QAC5BkX,EAAW,EAAQ,IACnBkrC,EAAiB,EAAQ,KACzB1+C,EAAa,EAAQ,IACrBL,EAAW,EAAQ,IACnB13C,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAChBy5C,EAAIn7D,EAAKgE,OAEf,IAAIkoF,EAAM,EAAQ,IAElB,MAIM+U,EAGK,UAeX,SAAS9C,EAAkBt2F,EAAS6rB,EAAgBpX,GAClD9Z,KAAK8H,gBAAkB,KACvB9H,KAAKy5C,MAAQ,IAAI2C,EACjBp8C,KAAKggD,gBAAgB,GACrB/jD,OAAOC,eAAe8D,KAAM,UAAW,CAAExD,MAAO6I,EAASlJ,YAAY,EAAOya,UAAU,IAItF5W,KAAKo7C,SAAW,IAAIkY,EAAStzD,KAAKqF,QAASrF,MAC3CA,KAAK0+F,kBAAoB1+F,KAAKqF,QAAQysB,SAASwO,kBAC/CtgC,KAAK2+F,mBAAqB3+F,KAAKqF,QAAQysB,SAAS2O,aAChDzgC,KAAKi8C,qBAAuBj8C,KAAK2+F,mBAAmBziD,cACpDl8C,KAAKwzD,aAAc,EACnBxzD,KAAK47F,gBAAiB,EAKtB57F,KAAK8S,KAAO,KAKZ9S,KAAKm+C,WAAa,KAKlBn+C,KAAKqhB,QAAU,KACfrhB,KAAK4+F,UAAY,IAAIJ,EAAen5F,EAAQ28B,mBAAoBhiC,KAAKgF,IAAIjI,KAAKiD,OAC9EA,KAAKkxB,eAAiBA,EAEtBlxB,KAAK6+F,sBAAwB,KAE7B7+F,KAAK8+F,wBAA0B,KAC/B9+F,KAAK++F,oBAAsB,KAC3B/+F,KAAKg/F,aAAe,KACpBh/F,KAAKkxD,WAAa,KAClBlxD,KAAKi/F,uBAAyB,IAAI9hF,IAClCnd,KAAKk/F,eAAiB,IAAI33C,IAEtBztC,GAAWA,EAAQqlF,uBACrBn/F,KAAKm/F,qBAAuBrlF,EAAQqlF,sBAGlCrlF,GAAWA,EAAQslF,mBACrBp/F,KAAKo/F,iBAAmBtlF,EAAQslF,kBAIpC5hG,EAAK2P,SAASwuF,EAAmBt3E,EAAO6hB,cASxCy1D,EAAkBx+F,UAAUkiG,gBAAkB,SAAShsF,EAAS2tB,EAAMllC,EAAM6kF,GAC1E,GAAgB,OAAZttE,EAGF,YADArT,KAAKi/F,uBAAuB70F,IAAItO,EAAMiM,EAAMtE,YAI9C,MAAM67F,EAAan5E,SAAS6a,EAAM,KAAOhhC,KAAKqF,QAAQ07B,gBAAgBC,KAChE+e,KAAc1sC,KAAWisF,IAC/Bt/F,KAAKk/F,eAAev+F,IAAIo/C,GAGxB,MAAMw/C,EAAoB5e,MAAwBttE,MAAYisF,IAA3Bv/C,EAEnC,IAAIy/C,EAA0Bx/F,KAAKi/F,uBAAuB7iG,IAAIN,QAC9BwH,IAA5Bk8F,IACFA,EAA0B,GAC1Bx/F,KAAKi/F,uBAAuB70F,IAAItO,EAAM0jG,IAGxCA,EAAwB96F,KAAK66F,IAG/B5D,EAAkBx+F,UAAUsiG,sBAAwB,SAAS3jG,EAAM2E,GACjE,IAAIi/F,EAAgB5jG,EAChBklC,EAAO,KAEX,GAA0B,IAAtBllC,EAAKkI,QAAQ,MAAclI,EAAKkI,QAAQ,MAAQ,EAAG,CAErD,MAAM9B,EAAQpG,EAAKi5C,YAAY,MAC/B2qD,EAAgB5jG,EAAKiI,OAAO,EAAG7B,EAAQ,GACvC8+B,EAAOllC,EAAKiI,OAAO7B,EAAQ,QACtB,GAAIpG,EAAKkI,QAAQ,KAAO,EAAG,CAEhC,MAAMya,EAAQ3iB,EAAKgP,MAAM,KACJ,IAAjB2T,EAAMpf,SACRqgG,EAAgBjhF,EAAM,GACtBuiB,EAAOviB,EAAM,IAIjB,GAAIohC,EAAI6hC,KAAKge,GAEX,OADA1/F,KAAKq/F,gBAAgBK,EAAe1+D,EAAMllC,EAAM+jD,EAAI8gC,OAAO+e,IACpDj/F,KA81BX,SAAoB3E,EAAMuE,GACxB,MAAMs/F,EAAY,GAClB53F,EAAMpC,SAAS,CACb,SAAkBlF,GAChBipF,EAAIkW,SAAS9jG,EAAM,SAA0B+D,EAAKf,GAC5CA,GACFA,EAAI8D,QAAQyQ,GAAWssF,EAAUj7F,KAAK,CAAE2O,UAASstE,QAAQ,KAG3DlgF,OAGJ,SAAkBA,GAChBipF,EAAImW,SAAS/jG,EAAM,SAA0B+D,EAAKf,GAC5CA,GACFA,EAAI8D,QAAQyQ,GAAWssF,EAAUj7F,KAAK,CAAE2O,UAASstE,QAAQ,KAG3DlgF,QAGH,WACD,GAAyB,IAArBk/F,EAAUtgG,OAGZ,OAAOqqF,EAAI1qE,OAAOljB,EAAM,SAAU+D,EAAKwT,EAASysF,GAC9C,GAAIjgG,EACF,OAAOQ,EAASR,GAGlB8/F,EAAUj7F,KAAK,CAAE2O,UAASstE,OAAmB,IAAXmf,IAClCz/F,EAAS,KAAMs/F,KAGnBt/F,EAAS,KAAMs/F,KA73BjBI,CAAWL,EAAe,CAAC7/F,EAAK8/F,KAC9B,GAAI9/F,EAGF,OAFAG,KAAKgF,IAAI,0BAA2B06F,0BAAuC7/F,GAC3EG,KAAKq/F,gBAAgB,KAAM,KAAMvjG,GAAM,GAChC2E,IAGTk/F,EAAU/8F,QAAQo9F,GAAehgG,KAAKq/F,gBAAgBW,EAAY3sF,QAAS2tB,EAAMllC,EAAMkkG,EAAYrf,SAEnGlgF,OASJk7F,EAAkBx+F,UAAUgqC,KAAO,SAAU9mC,GAC3C,GAAIL,KAAKwzD,YAEP,OAAOnzD,IAkBT0H,EAAM5E,KACJnD,KAAKqF,QAAQk9B,cACb,CAACzmC,EAAMmkG,IAAajgG,KAAKy/F,sBAAsB3jG,EAAMmkG,GAjBpBpgG,IAKjC,GAJKA,GAAoC,IAA7BG,KAAKk/F,eAAelhG,OAC9B6B,EAAM,IAAIpC,EAAOkV,qBAAqB,GAAI,8BAGxC9S,EACF,OAAOQ,EAASR,GAGlBG,KAAKkgG,SAAQ,EAAOrgG,IAClBG,KAAKwzD,aAAe3zD,EACpBQ,EAASR,QAUf87F,EAAkBx+F,UAAUgjG,mBAAqB,SAAUrtF,EAAMqrC,GAC/D,MAAMn4C,EAAOhG,KACb,IAAIogG,EAAmB,EAQvB,SAASC,EAAkBC,GACE,GAAvBF,MANJttF,EAAKikB,eAAe,OAAQwpE,GAC5BztF,EAAKikB,eAAe,SAAUwpE,GAC9BpiD,EAAWpnB,eAAe,cAAeypE,GAWrCx6F,EAAK41F,iBAKL0E,EACFt6F,EAAKhB,IAAI,kBACC8N,EAAKO,gEACI8qC,EAAW8B,gDAE9Bj6C,EAAKhB,IAAI,2BAA4Bm5C,EAAW8B,iEAGlDj6C,EAAKk6F,YAGP,SAASK,IACPF,GAAkB,GAGpB,SAASG,IACPH,GAAkB,GAGpBvtF,EAAKsvC,KAAK,OAAQm+C,GAClBztF,EAAKsvC,KAAK,SAAUm+C,GACpBpiD,EAAWiE,KAAK,cAAeo+C,IAOjC7E,EAAkBx+F,UAAUsjG,kBAAoB,SAAUpgG,GACxD,MAAM2F,EAAOhG,KACb,IAAI8S,EACAqrC,EAAa,KAEjBp2C,EAAML,OACJ,WAEE,GAAIy2C,EACF,OAAO,EAET,MAAM15C,EAAOuB,EAAKg5F,aAAav+F,OAE/B,OADAqS,EAAOrO,EAAKjI,OACHiI,EAAKtC,MAEhB,SAAuB1B,GACrB,GAAIuF,EAAKwtD,YAAa,CAEpB,MAAM9kD,EAAW1I,EAAKkrB,eAAeyoB,YAAY7mC,GACjD,IAAKA,EAAKgqC,QAAUpuC,IAAawQ,EAAMxQ,SAASG,QAC9C,OAAOpO,IAGTuF,EAAKm5F,qBAAqBrsF,EAAM,SAAUjT,EAAKjE,GAC7CoK,EAAKkrD,WAAWp+C,EAAKO,SAAWxT,EAChCs+C,EAAaviD,EACb6E,WAIFuF,EAAKo5F,iBAAiBtsF,EAAM,CAACjT,EAAKjE,KAChCoK,EAAKkrD,WAAWp+C,GAAQjT,EACxBs+C,EAAaviD,EACb6E,OAIN,WACE,IAAK09C,EACH,OAAO99C,EAAS,IAAI5C,EAAOkV,qBAAqB3M,EAAKkrD,aAGlDlrD,EAAKwtD,cACRxtD,EAAK8B,gBAAkBq2C,EAAWr2C,gBAClC9B,EAAKqb,QAAU88B,EAAW98B,SAG5Brb,EAAKm4C,WAAaA,EAClB99C,OAKNs7F,EAAkBx+F,UAAUgiG,qBAAuB,SAAUrsF,EAAMzS,GAEjEyS,EAAK4qC,iBAAiB,KAAM,KAAMr9C,IAQpCs7F,EAAkBx+F,UAAUiiG,iBAAmB,SAAUsB,EAAcrgG,GACrE,MAAMzE,EAAI,IAAIkkD,EAAW4gD,EAAc,KAAM1gG,KAAKqF,SAClDzJ,EAAEimD,KAAKhiD,IACL,GAAIA,EAEF,OADAy3B,aAAa,IAAM17B,EAAEolD,SACd3gD,EAASR,GAGlBQ,EAAS,KAAMzE,MAWnB+/F,EAAkBx+F,UAAUwjG,aAAe,SAAUC,EAAcC,EAAgBxgG,GACjFA,EAAWA,GAAY0H,EAAMnK,KAG7B,MAAMhC,EAAIoE,KAAKm+C,WAEf,IAAKviD,EAGH,OAAOyE,IAGT,MAAM2F,EAAOhG,KACbA,KAAKgF,IAAI,OAAQ,mCAEjB+C,EAAM5B,OAAO,CACX,SAAsB1F,GACpB,MAAMg6C,EAAU,IAAIgF,EAASt7B,aAjUf,+CAiUyC,KAAM,MAC7DvoB,EAAE+mD,WAAWlI,EAAS,KAAM,SAAU56C,EAAKC,GAGzC,GAFAkG,EAAK86F,aAAaF,EAAcC,EAAgBjlG,EAAGkE,IAE9CD,IAAQmG,EAAK8M,KAChB,OAAOrS,EAAK,IAAIhD,EAAOuV,oBAAoB,yDAG7CvS,EAAKZ,MAGT,SAAsBY,GACpB,MAAMg6C,EAAU,IAAIgF,EAASt7B,aA9Uf,6BA8UyC,KAAM,MAC7DvoB,EAAE+mD,WAAWlI,EAAS,KAAM,SAAU56C,EAAKC,GACzCkG,EAAK+6F,aAAaH,EAAc/gG,EAAKC,EAAQW,MAGjD,SAAsCA,GACpC,IAAKuF,EAAKwtD,YAAa,CAErB,MAAMwtC,EAAgB9hF,EAAMpX,gBAAgB2lF,iBAAiB7xF,EAAGoK,EAAKyzC,OAC/DwnD,EAAYD,IAAkBh7F,EAAK8B,gBAOzC,GAJA9B,EAAK8B,gBAAkBk5F,EACvBh7F,EAAKyzC,MAAM72C,QAAQo8C,GAAKA,EAAEvB,mBAAmBz3C,EAAK8B,kBAG9Cm5F,EAWF,OAVAj7F,EAAKhB,IAAI,+DAAgEg8F,EAAc/zF,SAAS,OAChGrR,EAAEqnD,gBAAgBj9C,EAAK8B,sBACvBlM,EAAEolD,MAAM,IACN1pB,aAAa,IAAM17B,EAAEimD,KAAKhiD,IACpBA,GACFjE,EAAEolD,QAGJvgD,EAAKZ,OAKbY,KAEF,SAAsBA,GAIpB,GAFAuF,EAAKo1C,SAAS+Y,oBAAoBnuD,EAAK8M,KAAKisC,uBAC5C/4C,EAAKo1C,SAASqZ,YAAYzuD,EAAKyzC,QAC1BzzC,EAAKX,QAAQ48B,sBAEhB,OADAj8B,EAAKo1C,SAASoY,aAAc,EACrB/yD,IAETuF,EAAKo1C,SAASya,mBAAkB,GAAO,EAAM,KAC3C7vD,EAAKo1C,SAASoY,aAAc,EAC5B/yD,QAGHJ,IAoCLs7F,EAAkBx+F,UAAU+iG,QAAU,SAAUgB,EAAgB7gG,GAC9D,MAAMugG,GAAgB5gG,KAAKwzD,YAG3B,GAFAnzD,EAAWA,GAAY0H,EAAMnK,KAEzBoC,KAAK47F,eAEP,OADA57F,KAAKgF,IAAI,OAAQ,+EACV3E,EAAS,IAAI5C,EAAOkV,qBAAqB,GAAI,uCAItD3S,KAAK8S,KAAO,KACZ9S,KAAKm+C,WAAa,KAElB,MAAMn4C,EAAOhG,KAEb+H,EAAM5B,OAAO,CACX,SAAyB1F,GACvB,GAAIygG,EACF,OAAOzgG,IAKT,GAFAuF,EAAKkrD,WAAa,GAEd0vC,EAAc,CAChB56F,EAAKhB,IAAI,OAAQ,4BACjB,MAAMy0C,EAAQ16C,MAAMP,KAAKwH,EAAKk5F,gBAI9B,OAFAn3F,EAAMvB,aAAaizC,GACnBzzC,EAAKg5F,aAAevlD,EAAMn9C,OAAOwI,YAC1BrE,IAGTuF,EAAKhB,IAAI,OAAQ,gDAEjBgB,EAAKkrB,eAAe4oB,0BAA0BkX,aAAa,KAAM,KAAM,SAAmBnxD,EAAKiF,GAC7F,GAAIjF,EAEF,OADAmG,EAAKhB,IAAI,QAAS,oFAAqFnF,GAChGY,EAAKZ,GAEdmG,EAAKg5F,aAAel6F,EACpBrE,OAGJ,SAA2BA,GACzBuF,EAAKy6F,kBAAkBhgG,IAEzB,SAA8BA,GAC5BuF,EAAKhB,IAAI,QACN47F,gDACiD56F,EAAK8B,gBAAgBmF,SAAS,OAC5E,sCACajH,EAAKm4C,WAAW8B,wBAEnCj6C,EAAK26F,aAAaC,GAAc,EAAMngG,IAExC,SAAmCA,GACjCuF,EAAKm4C,WAAWlnB,GAAG,qBAAsBjxB,EAAKm7F,0BAA0BpkG,KAAKiJ,IAC7EA,EAAKm4C,WAAWlnB,GAAG,mBAAoBjxB,EAAKo7F,wBAAwBrkG,KAAKiJ,IACzEA,EAAKm4C,WAAWlnB,GAAG,mBAAoBjxB,EAAKq7F,wBAAwBtkG,KAAKiJ,IACzE,MAAMy0C,EAAU,IAAIgF,EAASr7B,gBAAgB,CAAC,kBAAmB,gBAAiB,kBAClFpe,EAAKm4C,WAAWwE,WAAWlI,EAAS,KAAMh6C,KAE3C,SAA0BZ,GAM3B,OAAKA,EAsBAmG,EAAKm4C,YAUVn4C,EAAKhB,IAAI,QAAS,0EAA2EnF,GAC7FmG,EAAKkrD,WAAWlrD,EAAKm4C,WAAW4B,UAAYlgD,EAExCA,GAAOA,EAAI86C,gBAAkBimD,GAAgB56F,EAAK8M,MACpD9M,EAAK8M,KAAKurC,eAAer4C,EAAKm4C,iBAIhCn4C,EAAKk6F,SAAQ,EAAM7/F,KAjBjB2F,EAAKhB,IAAI,QAAS,mDAAoDnF,GACjE+gG,GAAiB56F,EAAK41F,iBACzB51F,EAAKs7F,0BACLt7F,EAAK6S,KAAK,gBAAiBhZ,IAGtBQ,EAASR,IA5BXmG,EAAKm4C,WAAWwC,WAQjBigD,GAEF56F,EAAK8M,KAAKyoC,KAAKgmD,sBAAsBv7F,EAAKm4C,YAG5Cn4C,EAAKm6F,mBAAmBn6F,EAAK8M,KAAM9M,EAAKm4C,YACxCn4C,EAAKi2C,qBAAuBj2C,EAAK24F,mBAAmBziD,cACpDl2C,EAAK6S,KAAK,gBAAiB,KAAM7S,EAAKm4C,WAAYn4C,EAAK8M,MACvD9M,EAAKhB,IAAI,yCAA0CgB,EAAKm4C,WAAW8B,uCAE5D5/C,MAdL2F,EAAKhB,IAAI,OAAQ2zD,EAAE,uDAAwD3yD,EAAK8M,KAAKO,UAC9ErN,EAAKk6F,SAAQ,EAAO7/F,OAyCnCs7F,EAAkBx+F,UAAUmkG,wBAA0B,WACpD,MAAMvuC,EAAQ/yD,KAAKi8C,qBAAqBx7C,OAAOjE,MAC/CwD,KAAKgF,IAAI,UAAW2zD,EAAE,yEAA0E5F,IAChG,MAAM/sD,EAAOhG,KACbsiD,WAAW,IAAMt8C,EAAKk6F,UAAWntC,IAQnC4oC,EAAkBx+F,UAAU6H,IAAM+C,EAAM/C,IAKxC22F,EAAkBx+F,UAAUgkG,0BAA4B,SAAUjzF,GAChElO,KAAKgF,IAAI,OAAQ,2BAA4BkJ,GAE7C,MAAMlI,EAAOhG,KACbyjD,aAAazjD,KAAK6+F,uBAGlB7+F,KAAK6+F,sBAAwBv8C,WAAW,IAAMt8C,EAAKw7F,uBAxiBhC,MA8iBrB7F,EAAkBx+F,UAAUikG,wBAA0B,SAAUlzF,GAC9D,MAAMlI,EAAOhG,KACPyhG,EAAqBvzF,EAAMpE,KAAKuJ,QAAQpG,WACxC+zB,EAAOhhC,KAAKqF,QAAQ07B,gBAAgBC,KAC1ChhC,KAAK0+F,kBAAkB9U,UAAU6X,EAAoBzgE,EAAM,SAA2B0gE,GACpF,MAAM5uF,EAAO9M,EAAKyzC,MAAMr9C,IAAIslG,GAC5B,IAAK5uF,EAEH,YADA9M,EAAKhB,IAAI,UAAW,wDAA0Dy8F,GAGhF,MAAM/yF,EAAW1I,EAAKkrB,eAAeyoB,YAAY7mC,GACjD,OAAI5E,EAAMyzF,GACJjzF,IAAawQ,EAAMxQ,SAASG,QACvBiE,EAAK4pC,OAAM,IAEpB+G,aAAaz9C,EAAK84F,8BAElB94F,EAAK84F,wBAA0Bx8C,WAAW,IAAMxvC,EAAK+pC,YA/jBtC,OAmkBbnuC,IAAawQ,EAAMxQ,SAASG,QACvBiE,EAAKypC,eAEdv2C,EAAKhB,IAAI,UAAW,2CAA6C8N,EAAKO,YAO1EsoF,EAAkBx+F,UAAUkkG,wBAA0B,SAAUnzF,GAC9DlO,KAAKgF,IAAI,OAAQ,gBAAiBkJ,GAC7BlO,KAAKqF,QAAQ48B,uBAGlBjiC,KAAKm9F,mBAAmBjvF,GAAO,IAQjCytF,EAAkBx+F,UAAUggG,mBAAqB,SAAUjvF,EAAO0zF,EAAYvhG,GAC5E,MAAM2F,EAAOhG,KACb,IAAIP,EAASoiG,EACb,GAAI3zF,EAAM4zF,WACR,OAAI5zF,EAAM6zF,mBAAqBtD,GAC7Bh/F,EAAU,kBAGDuG,EAAKo1C,SAASmY,UAAUrlD,EAAM8hB,WAEhChwB,KAAKgiG,sBAAsBviG,EAASyO,EAAM8hB,SAAU,KAAM4xE,EAAYvhG,IAExEL,KAAKiiG,wBAAwB/zF,EAAM8hB,SAAU4xE,EAAYvhG,GAElE,MAAMq1D,EAAS11D,KAAKo7C,SAASmY,UAAUrlD,EAAM8hB,UACxC0lC,IAIDxnD,EAAM+3D,OACR47B,EAAY3zF,EAAM+3D,MAClBxmE,EAAU,kBACDi2D,EAAOgC,OAAOxpD,EAAM+3D,cACpBvQ,EAAO6C,MAAMrqD,EAAM+3D,SAGrB/3D,EAAM7D,KACbw3F,EAAY3zF,EAAM7D,IAClB5K,EAAU,kBACDi2D,EAAO4B,KAAKppD,EAAM7D,OAGpB6D,EAAM81D,cACb69B,EAAY3zF,EAAM81D,aAClBvkE,EAAU,kBACDi2D,EAAOgD,UAAUxqD,EAAM81D,gBAGzB91D,EAAMsqD,YACbqpC,EAAY3zF,EAAMsqD,UAClB/4D,EAAU,kBACDi2D,EAAO+C,WAAWvqD,EAAMsqD,aAG/B/4D,GAEFO,KAAKgiG,sBAAsBviG,EAASyO,EAAM8hB,SAAU6xE,EAAWD,EAAYvhG,KAW/Es7F,EAAkBx+F,UAAU6kG,sBAAwB,SAAUviG,EAAS42D,EAAcwrC,EAAWD,EAAYvhG,GAC1GL,KAAK4+F,UAAUsD,cAAc,CAAEziG,UAASuwB,SAAUqmC,EAAcwrC,UAAWA,EAAWxhG,YAAYuhG,IAQpGjG,EAAkBx+F,UAAU8kG,wBAA0B,SAAU5rC,EAAcurC,EAAYvhG,GACxFL,KAAK4+F,UAAUsD,cAAc,CAC3BziG,QAASiB,GAAMV,KAAKo7C,SAASka,gBAAgBe,EAAc31D,GAC3DsvB,SAAUqmC,EACVh2D,YACCuhG,IAMLjG,EAAkBx+F,UAAUqkG,qBAAuB,SAAUnhG,GAC3DL,KAAK4+F,UAAUsD,cAAc,CAC3BziG,QAASiB,GAAMV,KAAK2gG,cAAa,GAAO,EAAOjgG,GAC/C6H,KAAK,EACLlI,aACC,IAULs7F,EAAkBx+F,UAAU2jG,aAAe,SAAUF,EAAcC,EAAgBjlG,EAAGkE,GACpF,IAAKA,IAAWA,EAAO8Q,OAAS9Q,EAAO8Q,KAAKvR,OAE1C,YADAW,KAAKgF,IAAI,UAAW,mCAItB,MAAMghC,EAAMlmC,EAAO8Q,KAAK,GAExB,IAAIuxF,EAEJ,MAAMpiD,EAAWnkD,EAAEmkD,SAEnB,GAAI6gD,EACFuB,EAAY,IAAIhnD,EAAK4E,EAAU//C,KAAK8H,gBAAiB9H,KAAKqF,QAASrF,KAAKo7C,UACxEp7C,KAAKy5C,MAAMrvC,IAAI21C,EAAUoiD,GACzBniG,KAAKgF,IAAI,sBAAuB+6C,UAIhC,KAFAoiD,EAAYniG,KAAKy5C,MAAMr9C,IAAI2jD,IAIzB,YADA//C,KAAKgF,IAAI,QAAS,gCAKtBm9F,EAAUxmD,WAAa3V,EAAiB,YACxCm8D,EAAUvmD,KAAO5V,EAAU,KAC3Bm8D,EAAUtmD,OAAS7V,EAAY,OAC/Bm8D,EAAUrmD,OAAS9V,EAAa,QAChCm8D,EAAUzmD,iBAAmB1V,EAAqB,gBAClDhmC,KAAKo7C,SAASgZ,eAAepuB,EAAiB,aAC9ChmC,KAAKgF,IAAI,OAAQ,wBAEb67F,IAEF7gG,KAAK8S,KAAOqvF,IAWhBxG,EAAkBx+F,UAAU4jG,aAAe,SAAUH,EAAc/gG,EAAKC,EAAQO,GAC9E,IAAKP,IAAWA,EAAO8Q,MAAQ/Q,EAC7B,OAAOQ,EAASR,GAIlB,MAAMuiG,EAAQ,GACRphE,EAAOhhC,KAAKqF,QAAQ07B,gBAAgBC,KACpCqhE,EAAmB,IAAI96C,IAEzBvnD,KAAK8S,MAAQ9S,KAAK8S,KAAK6oC,YACzB0mD,EAAiB1hG,IAAIX,KAAK8S,KAAK6oC,YAGjC,MAAM31C,EAAOhG,KAEb+H,EAAM3E,WAAWtD,EAAO8Q,KAAM,SAAkBo1B,EAAKvlC,GACnDuF,EAAKs8F,sBAAsBt8D,EAAKhF,EAAM,SAAmC0gE,GACvE,IAAKA,EACH,OAAOjhG,IAGT2hG,EAAMV,IAAY,EAClB,IAAI5uF,EAAO9M,EAAKyzC,MAAMr9C,IAAIslG,GACtBa,GAAazvF,EAEbyvF,IACFzvF,EAAO,IAAIqoC,EAAKumD,EAAU17F,EAAK8B,gBAAiB9B,EAAKX,QAASW,EAAKo1C,UACnEp1C,EAAKhB,IAAI,OAAQ,eAAiB08F,GAClCa,GAAY,GAGdzvF,EAAK6oC,WAAa3V,EAAiB,YACnClzB,EAAK8oC,KAAO5V,EAAU,KACtBlzB,EAAK+oC,OAAS7V,EAAY,OAC1BlzB,EAAKgpC,OAAS9V,EAAa,QAC3BlzB,EAAK4oC,iBAAmB1V,EAAqB,gBAEzClzB,EAAK6oC,YACP0mD,EAAiB1hG,IAAImS,EAAK6oC,YAGxB4mD,IAGFv8F,EAAKyzC,MAAMrvC,IAAIs3F,EAAU5uF,GAEpB8tF,IAEH56F,EAAKkrB,eAAeyoB,YAAY7mC,GAGhCA,EAAKypC,YAIT97C,OAED,SAAUZ,GACX,GAAIA,EACF,OAAOQ,EAASR,GAGlB,GAAImG,EAAKyzC,MAAMp6C,OAASS,EAAO8Q,KAAKvR,OAAS,EAAG,CAE9C2G,EAAKhB,IAAI,OAAQ,gCACjB,MAAMo1D,EAAW,GACjBp0D,EAAKyzC,MAAM72C,QAAQ,SAAUo8C,GAEtBojD,EAAMpjD,EAAE3rC,UAAY2rC,IAAMh5C,EAAK8M,OAClC9M,EAAKhB,IAAI,OAAQ,iBAAmBg6C,EAAE3rC,SACtC+mD,EAAS11D,KAAKs6C,EAAE3rC,SAChB2rC,EAAEhC,UAAS,MAGfh3C,EAAKyzC,MAAMwF,eAAemb,GAE5B,GAAIwmC,GAAgB56F,EAAKX,QAAQ0lF,gBAAiB,CAChD,MAAMZ,EAAUnkF,EAAKX,QAAQ0lF,gBAE7B,IAAKsX,EAAiBjlF,IAAI+sE,GACxB,OAAO9pF,EAAS,IAAI5C,EAAO8D,cAAc,sCAAyC4oF,EAAU,6CAC5DprF,MAAMP,KAAK6jG,GAAkB97F,KAAK,MAAQ,MAG9EP,EAAKhB,IAAI,OAAQ,wBACjB3E,OAUJs7F,EAAkBx+F,UAAUmlG,sBAAwB,SAAUt8D,EAAKw8D,EAAaniG,GAC9E,IAAIgT,EAAU2yB,EAAiB,YAC/B,MAAMy8D,EAAOz8D,EAAU,KAEvB,IAAK3yB,EAGH,OAFArT,KAAKgF,IAAI,QAAS2zD,EAAE,mFAClB8pC,EAAMziG,KAAK8S,KAAKO,QAASovF,IACpBpiG,EAAS,MAJK,YAMnBgT,EAAQpG,aACVjN,KAAKgF,IAAI,UAAW2zD,EAAE,iKACsD8pC,IAC5EpvF,EAAUovF,GAEZziG,KAAK0+F,kBAAkB9U,UAAUv2E,EAAQpG,WAAYu1F,EAAaniG,IAOpEs7F,EAAkBx+F,UAAUulG,oBAAsB,SAAUriG,GAE1D,IAAI4c,EACJ,MAAMjX,EAAOhG,KACb,SAAS2iG,EAAsB9iG,GAC7B4jD,aAAaxmC,GACb5c,EAASR,GAEXG,KAAKoiD,KAAK,gBAAiBugD,GAC3B1lF,EAAUqlC,WAAW,WACnBt8C,EAAK+wB,eAAe,gBAAiB4rE,GACrCtiG,EAAS,IAAI5C,EAAOyV,uBAAuB,wDAn2Bb,MA82BlCyoF,EAAkBx+F,UAAU2Q,MAAQ,SAAU80F,EAAUhtC,EAAev1D,GACxC,mBAAlBu1D,IACTv1D,EAAWu1D,EACXA,GAAgB,GAGlB,MAAM5vD,EAAOhG,KAEb,SAAS6iG,IACP,IAAK78F,EAAKm4C,YAAcn4C,EAAK41F,eAC3B,OAAOv7F,EAAS,IAAI5C,EAAOkV,qBAAqB,GAAI,mDAGtD,MAAM8nC,EAA8B,iBAAbmoD,EAAwB,IAAInjD,EAASt7B,aAAay+E,EAAU,KAAM,MAAQA,EACjG58F,EAAKm4C,WAAWwE,WAAWlI,EAAS,KAAMp6C,GAG5C,IAAKL,KAAKm+C,YAAcyX,EAEtB,OAAO51D,KAAK0iG,oBAAoB,SAAsB7iG,GACpD,GAAIA,EAEF,OAAOQ,EAASR,GAElBgjG,MAIJA,KAIFlH,EAAkBx+F,UAAU4qC,WAAa,WACvC,IAAK/nC,KAAKqhB,QACR,MAAM,IAAI5jB,EAAOuV,oBAAoB,0BAEvC,OAAOhT,KAAKqhB,SAGds6E,EAAkBx+F,UAAU6/C,SAAW,WAErCh9C,KAAK47F,gBAAiB,EACtB57F,KAAK4+F,UAAU5hD,WAEfh9C,KAAK6Y,KAAK,gBAAiB,IAAIpb,EAAO8P,YAAY,wCAElDk2C,aAAazjD,KAAK6+F,uBAClBp7C,aAAazjD,KAAK8+F,yBAClBr7C,aAAazjD,KAAK++F,sBAMpBpD,EAAkBx+F,UAAUsY,MAAQ,SAAUpV,GAE5C,MAAMyiG,EAAe9iG,KAAKy5C,MAAM4F,QAEhCr/C,KAAK47F,gBAAiB,EACtB,MAAM51F,EAAOhG,KAEb+H,EAAM5E,KAAK2/F,EAAc,CAAC9jD,EAAGv+C,IAASu+C,EAAEhC,UAAS,EAAO,IAAMv8C,KAAS,WACrEuF,EAAKwtD,aAAc,EACnBxtD,EAAK41F,gBAAiB,EACtBv7F,OAOJs7F,EAAkBx+F,UAAU4lG,yBAA2B,WACrD,OAAO/iG,KAAKi/F,wBAOdtD,EAAkBx+F,UAAUsoD,gBAAkB,WAC5C,GAAKzlD,KAAKm+C,WAIV,OAAOn+C,KAAKm+C,WAAWsH,mBAOzBk2C,EAAkBx+F,UAAU6lG,YAAc,WACxC,GAAKhjG,KAAKm+C,WAIV,OAAOn+C,KAAKm+C,WAAW4B,UA+CzBzkD,EAAOD,QAAUsgG,G,6BCjhCjB,MAAMn+F,EAAO,EAAQ,GACf6mB,EAAS,EAAQ,GAEjBy7B,EAAa,EAAQ,IACrB/3C,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GACjB4iC,EAAiB,EAAQ,IAAoBA,iBAGnD,IAAI4iE,EAAkB,EACtB,MAAMC,EAA0Bx8F,KAAK2e,IAAI,EAAG,IAatC6iD,EAAQ,CAEZi7B,QAAS,EAETC,QAAS,EAETC,aAAc,EAEdC,SAAU,GAMZ,MAAMroD,UAA2B52B,EAAO6hB,aAOtC,YAAYpzB,EAAMhL,GAChB6Z,QACA3hB,KAAKujG,SAAWzwF,EAAKO,QACrBrT,KAAKwjG,sBAAwB,KAC7BxjG,KAAKyjG,WAAY,EACjBzjG,KAAK0jG,OAASx7B,EAAMi7B,QACpBnjG,KAAKi+C,gBAAkB,EACvBj+C,KAAKqF,QAAUyN,EAAKzN,QACpBrF,KAAK8H,gBAAkBA,EACvB9H,KAAKy8C,sBAAwB,EAK7Bz8C,KAAK+9C,YAAch2C,EAAMtE,WACzBzD,KAAKggD,gBAAgB,GACrBhgD,KAAKgF,IAAM+C,EAAM/C,IAQnB,0BAA0BgrB,EAAU3vB,GAClCL,KAAKnD,QAAO,EAAOgD,IACjB,GAAIA,EACF,OAAOQ,EAASR,GAGlBG,KAAK09C,iBAAiB1tB,EAAU,KAAM3vB,KAI1C,cACE,MAAMhB,EAASW,KAAK+9C,YAAY1+C,OAChC,GAAe,IAAXA,EACF,OAAOW,KAAK+9C,YAAY,GAAGO,cAG7B,IAAI0jB,EAAM,EACV,IAAK,IAAIzmE,EAAI,EAAGA,EAAI8D,EAAQ9D,IAC1BymE,GAAOhiE,KAAK+9C,YAAYxiD,GAAG+iD,cAE7B,OAAO0jB,EAST,iBAAiBhyC,EAAU2tB,EAAoBt9C,GAC7C,GAAgC,IAA5BL,KAAK+9C,YAAY1+C,OACnB,OAAOgB,EAAS,IAAIiF,MAAM,4BAG5B,MAAMq+F,EAAc3jG,KAAKqF,QAAQ87B,QAAQ7tB,yBACnC1X,EAAIq/C,EAAmB2oD,YAAY5jG,KAAK+9C,YAAa4lD,EAAahmD,GAExE,OAAI/hD,EAAE0iD,eAAiBqlD,EACdtjG,EAAS,IAAI5C,EAAO2V,oBAAoBpT,KAAKujG,SAAUI,EAAa3jG,KAAK+9C,YAAY1+C,SAGzF2wB,GAAYA,IAAap0B,EAAEo0B,cAKhCp0B,EAAEyoD,eAAer0B,EAAWnwB,IAC1BQ,EAASR,EAAKjE,KAJPyE,EAAS,KAAMzE,GAiB1B,mBAAmBmiD,EAAa4lD,EAAahmD,GAC3C,MAAMt+C,EAAS0+C,EAAY1+C,OAC3B,GAAe,IAAXA,EACF,OAAO0+C,EAAY,GASrB,IAAIpL,IALJswD,GACuBC,IACrBD,EAAkB,GAIpB,IAAK,IAAI/gG,EAAQ+gG,EAAiB/gG,EAAQ+gG,EAAkB5jG,EAAQ6C,IAAS,EAC3EywC,EAAUoL,EAAY77C,EAAQ7C,MACds+C,IAEdhL,EAAUoL,IAAe77C,EAAS7C,IAGpC,IAAIoB,EAAOs9C,GAAa77C,EAAQ,GAAK7C,GAUrC,GATIoB,IAASk9C,IAEXl9C,EAAOs9C,GAAa77C,EAAQ,GAAK7C,IAG/BoB,EAAK69C,cAAgB3L,EAAQ2L,gBAC/B3L,EAAUlyC,GAGRkyC,EAAQ2L,cAAgBqlD,EAG1B,MAGJ,OAAOhxD,EAQT,OAAOtR,EAAQhhC,GACb,GAAIL,KAAKw8C,YACP,OAAOn8C,EAAS,IAAIiF,MAAM,6CAI5B,GAAItF,KAAK+9C,YAAY1+C,QAAUW,KAAKy8C,sBAClC,OAAOp8C,IAET,IAAKghC,GAAUrhC,KAAK+9C,YAAY1+C,OAAS,EAIvC,OADAW,KAAK0+C,eACEr+C,IAGT,GADAL,KAAKoiD,KAAK,WAAY/hD,GAClBL,KAAKyjG,UAEP,OAEFzjG,KAAKyjG,WAAY,EACjB,IAAII,EAAsB7jG,KAAKy8C,sBAC1Bpb,IACHwiE,EAAsB,GAExB,MAAM79F,EAAOhG,KACb+H,EAAML,OACJ,WACE,OAAO1B,EAAK+3C,YAAY1+C,OAASwkG,GAEnC,SAAkBpjG,GAChBuF,EAAK89F,sBAAsBrjG,IAC1B,SAAqBZ,GAEtB,GADAmG,EAAKy9F,WAAY,EACb5jG,EAUF,OATImG,EAAKw2C,aACPx2C,EAAKhB,IAAI,OAAQ,mDACjBgB,EAAK+9F,uBACLlkG,EAAM,IAAIyF,MAAM,yBAIhBU,EAAKhB,IAAI,UAAWxH,EAAKgE,OAAO,kDAAmDwE,EAAKu9F,UAAW1jG,GAE9FmG,EAAK6S,KAAK,WAAYhZ,GAE/BmG,EAAKhB,IAAI,OAAQxH,EAAKgE,OAAO,2DAC3BwE,EAAKu9F,SAAUv9F,EAAK+3C,YAAY1+C,SAClC2G,EAAK6S,KAAK,YACV7S,EAAK04C,iBAKX,oBACE,MAAM9iD,EAAI,IAAIkkD,EAAW9/C,KAAKujG,SAAUvjG,KAAK8H,gBAAiB9H,KAAKqF,SAEnE,OADArF,KAAKgkG,cAAcpoG,GACZA,EAIT,cAAcA,GACZA,EAAEq7B,GAAG,mBAAoB,IAAMj3B,KAAKi+C,mBAEpC,MAAMj4C,EAAOhG,KACb,SAASikG,IAEPj+F,EAAK6+B,OAAOjpC,GAEdA,EAAEq7B,GAAG,mBAAoBgtE,GACzBroG,EAAEq7B,GAAG,cAAegtE,GAGtB,sBAAsBroG,GACpBoE,KAAKgkG,cAAcpoG,GAEnBoE,KAAK+9C,YAAc/9C,KAAK+9C,YAAYr7C,MAAM,GAC1C1C,KAAK+9C,YAAYr5C,KAAK9I,GAMxB,4BACOoE,KAAKwjG,wBAGV//C,aAAazjD,KAAKwjG,uBAClBxjG,KAAKwjG,sBAAwB,MAM/B,sBAAsBnjG,GACpB,MAAMzE,EAAIoE,KAAKkkG,oBACTl+F,EAAOhG,KACbA,KAAKoiD,KAAK,OAAQ/hD,GACdL,KAAKmkG,WAITnkG,KAAKmkG,UAAW,EAChBvoG,EAAEimD,KAAK,SAA6BhiD,GAElC,GADAmG,EAAKm+F,UAAW,EACZtkG,EAGF,OAFAmG,EAAKhB,IAAI,UAAWxH,EAAKgE,OAAO,4CAA6CwE,EAAKu9F,SAAU1jG,GAAMA,GAClGjE,EAAEolD,QACKh7C,EAAK6S,KAAK,OAAQhZ,GAE3B,GAAImG,EAAKw2C,YAGP,OAFAx2C,EAAKhB,IAAI,OAAQxH,EAAKgE,OAAO,iEAAkEwE,EAAKu9F,WACpG3nG,EAAEolD,QACKh7C,EAAK6S,KAAK,OAAQ,IAAIvT,MAAM,sBAGrC,MAAM8+F,EAAiBp+F,EAAK+3C,YAAYr7C,MAAM,GAC9C0hG,EAAe1/F,KAAK9I,GACpBoK,EAAK+3C,YAAcqmD,EACnBp+F,EAAKhB,IAAI,OAAQxH,EAAKgE,OAAO,uCAAwCwE,EAAKu9F,WAC1Ev9F,EAAK6S,KAAK,OAAQ,KAAMjd,MAI5B,gCACE,MAAMoK,EAAOhG,KACb,SAASqkG,IACPr+F,EAAK42C,4BACL52C,EAAKw4C,6BAA6B,GAEpC,OAAIx+C,KAAK0jG,SAAWx7B,EAAMi7B,QACjBkB,IAELrkG,KAAK0jG,SAAWx7B,EAAMk7B,QACjBpjG,KAAKoiD,KAAK,QAASiiD,QAD5B,EAWF,OAAOlmD,GAEL,MAAMj8C,EAAQlC,KAAK+9C,YAAY/5C,QAAQm6C,GACvC,GAAIj8C,EAAQ,EAEV,OAGF,MAAMkiG,EAAiBpkG,KAAK+9C,YAAYr7C,MAAM,GAC9C0hG,EAAex/F,OAAO1C,EAAO,GAC7BlC,KAAK+9C,YAAcqmD,EAEnB9sE,aAAa,WACX6mB,EAAW6C,UAEbhhD,KAAK6Y,KAAK,UAMZ,6BAA6Bk6C,GAC3B,GAAI/yD,KAAKw8C,YACP,OAEF,MAAMx2C,EAAOhG,KACbA,KAAKwjG,sBAAwBlhD,WAAW,WACtCt8C,EAAKw9F,sBAAwB,KACzBx9F,EAAK+3C,YAAY1+C,QAAU2G,EAAKy2C,uBAKpCz2C,EAAK89F,sBAAsB/7F,EAAMnK,OAChCm1D,GAGL,4BACE,QAAS/yD,KAAKwjG,uBAAyBxjG,KAAKmkG,SAM9C,eACMnkG,KAAK+9C,YAAY1+C,OAASW,KAAKy8C,wBAA0Bz8C,KAAKu+C,6BAEhEv+C,KAAKw+C,6BAA6B,GAQtC,6BACE,MAAM33C,EAAO7G,KAAKi+C,gBAElB,OADAj+C,KAAKi+C,gBAAkB,EAChBp3C,EAMT,YACE,OAAO7G,KAAK0jG,SAAWx7B,EAAMi7B,QAM/B,mBACE,GAAInjG,KAAKw8C,YAEP,OAEFx8C,KAAK0jG,OAASx7B,EAAMk7B,QACpBpjG,KAAK48C,4BACL,MAAM52C,EAAOhG,KACb,GAAgC,IAA5BA,KAAK+9C,YAAY1+C,OACnB,OAAOW,KAAKskG,gBAEd,MAAMvmD,EAAc/9C,KAAK+9C,YACzB/9C,KAAK+9C,YAAch2C,EAAMtE,WACzB,IAAI8gG,EAAoB,EACxBvkG,KAAKgF,IAAI,OAAQxH,EAAKgE,OAAO,4CAA6Cu8C,EAAY1+C,OAAQW,KAAKujG,WACnG,IAEIiB,EAFAC,GAAY,EAGhB,IAAK,IAAIlpG,EAAI,EAAGA,EAAIwiD,EAAY1+C,OAAQ9D,IAAK,CAC3C,MAAMK,EAAImiD,EAAYxiD,GACE,IAApBK,EAAE0iD,eAIN1iD,EAAE8kD,WAAY,EACd9kD,EAAEwmD,KAAK,QAASsiD,EAAgB9oG,KAJ9B8oG,EAAgB9oG,EAAhB8oG,GAMJ,SAASA,EAAgBvmD,GACvB,OAAO,WACLA,EAAW6C,UACLujD,EAAoBxmD,EAAY1+C,QAGlColG,IAGJA,GAAY,EACRD,GACF/gD,aAAa+gD,GAEfx+F,EAAKs+F,kBAIT,MAAMvxC,GAAS/yD,KAAKqF,QAAQ4sB,cAAcjiB,aAAeqwB,EAAepO,cAAcjiB,aAAe,IACrGw0F,EAAuBliD,WAAW,WAChCmiD,GAAY,EACZ1mD,EAAYn7C,QAAQ,SAAwBhH,GAC1CA,EAAEolD,UAEJh7C,EAAKs+F,iBACJvxC,GAGL,gBACE,MAAM/sD,EAAOhG,KACb,SAAS2kG,IACH3+F,EAAK09F,SAAWx7B,EAAMm7B,aACxBr9F,EAAK09F,OAASx7B,EAAMo7B,SAGpBt9F,EAAK09F,OAASx7B,EAAMi7B,QAEtBn9F,EAAK6S,KAAK,SAEZ,OAAI7Y,KAAKyjG,UAEAzjG,KAAKoiD,KAAK,WAAYuiD,GAE3B3kG,KAAKmkG,SAEAnkG,KAAKoiD,KAAK,OAAQuiD,QAE3BA,IAMF,SAAStkG,GAEP,GADAL,KAAK48C,6BACA58C,KAAK+9C,YAAY1+C,OAEpB,OADAW,KAAK0jG,OAASx7B,EAAMo7B,SACbjjG,IAET,MAAMukG,EAAgB5kG,KAAK0jG,OAE3B,GADA1jG,KAAK0jG,OAASx7B,EAAMm7B,aAChBuB,IAAkB18B,EAAMk7B,QAC1B,OAAOpjG,KAAKoiD,KAAK,QAAS/hD,GAG5B,GADAL,KAAKoiD,KAAK,WAAY/hD,GAClBukG,IAAkB18B,EAAMm7B,aAE1B,OAEF,MAAMr9F,EAAOhG,KACbA,KAAK+jG,qBAAqB,WACxB/9F,EAAK09F,OAASx7B,EAAMo7B,SACpBt9F,EAAK6S,KAAK,cAKd,qBAAqBxY,GACnBA,EAAWA,GAAY0H,EAAMnK,KAC7B,MAAMmgD,EAAc/9C,KAAK+9C,YAGzB,GADA/9C,KAAK+9C,YAAch2C,EAAMtE,WACE,IAAvBs6C,EAAY1+C,OACd,OAAOgB,IAETL,KAAKgF,IAAI,OAAQxH,EAAKgE,OAAO,+BAAgCu8C,EAAY1+C,OAAQW,KAAKujG,WACtFx7F,EAAM5E,KAAK46C,EAAa,SAAmBniD,EAAG6E,GAC5C7E,EAAEolD,MAAM,WAENvgD,OAEDJ,IAIP/E,EAAOD,QAAU4/C,G,cC7fjB3/C,EAAOD,QAAUkC,QAAQ,Q,6BCCzB,MAAMC,EAAO,EAAQ,GACf43B,EAAS,EAAQ,IACjB27C,EAAY37C,EAAO27C,UACnB8zB,EAAWzvE,EAAOyvE,SAElB3lF,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GACjB8N,EAAc2T,EAAM3T,YACpBu5F,EAAc,EAAQ,KAAaA,YAOzC,SAAS5jD,EAAU77C,GACjB0rE,EAAUr1E,KAAKsE,KAAMqF,GACrBrF,KAAKszB,OAAS,KACdtzB,KAAK4L,WAAa,EAClB5L,KAAK+kG,oBACL/kG,KAAKwL,QAAU,EACfxL,KAAKglG,WAAa,EAmGpB,SAAS3jD,EAAQ4jD,EAAe5jF,GAC9B0vD,EAAUr1E,KAAKsE,KAAMilG,GAErBjlG,KAAKklG,OAAS,GACdllG,KAAKqhB,QAAUA,EAyVjB,SAASkgC,EAAcl8C,GACrBw/F,EAASnpG,KAAKsE,KAAMqF,GAIpBrF,KAAKmlG,UAAY,GAlcnB3nG,EAAK2P,SAAS+zC,EAAU6vB,GAExB7vB,EAAS/jD,UAAUs0E,WAAa,SAAU9I,EAAOjqE,EAAU2B,GACzD,IAAIwD,EAAQ,KACZ,IACE7D,KAAKolG,UAAUz8B,GAEjB,MAAO9oE,GACLgE,EAAQhE,EAEVQ,EAASwD,IAUXq9C,EAAS/jD,UAAUioG,UAAY,SAAUz8B,GACvC,IAAKA,GAA0B,IAAjBA,EAAMtpE,OAClB,OAEmB,IAAjBW,KAAKwL,UAEPxL,KAAKwL,QAAUD,EAAYU,mBAAmB08D,GAC9C3oE,KAAKglG,WAAaz5F,EAAYvN,KAAKgC,KAAKwL,UAE1C,IAAIY,EAAS,EACTi5F,EAAgBrlG,KAAKszB,OAEzB,GADAtzB,KAAKszB,OAAS,KACuB,IAAjCtzB,KAAKslG,aAAa1nE,WAAkB,CAGtC,GADA59B,KAAKslG,aAAa7mF,MAAM/Z,KAAKikE,GACzB3oE,KAAKslG,aAAa1nE,WAAa+qC,EAAMtpE,OAASW,KAAKglG,WAErD,YADAhlG,KAAKslG,aAAa1nE,YAAc+qC,EAAMtpE,QAGxCgmG,EAAgB95F,EAAYY,WAAWrO,OAAOwe,OAAOtc,KAAKslG,aAAa7mF,MAAOze,KAAKglG,aACnF54F,EAASpM,KAAKglG,WAAahlG,KAAKslG,aAAa1nE,WAC7C59B,KAAK+kG,oBAEP,MAAM9kG,EAAQ,GACd,OAAa,CACX,IAAKolG,EAAe,CAClB,GAAIrlG,KAAKglG,WAAar8B,EAAMtpE,OAAS+M,EAAQ,CAC3C,GAAIu8D,EAAMtpE,OAAS+M,GAAU,EAC3B,MAGF,MAAMm5F,EAAa58B,EAAMjmE,MAAM0J,EAAQu8D,EAAMtpE,QAC7CW,KAAKslG,aAAa7mF,MAAM/Z,KAAK6gG,GAC7BvlG,KAAKslG,aAAa1nE,WAAa2nE,EAAWlmG,OAC1C,MAGFgmG,EAAgB95F,EAAYY,WAAWw8D,EAAOv8D,GAC9CA,GAAUpM,KAAKglG,WAGjB,MAAM7yB,EAAYxJ,EAAMtpE,OAAS+M,EACjC,GAAIi5F,EAAcz5F,YAAcumE,EAAYnyE,KAAK4L,WAC/C3L,EAAMyE,KAAK,CAAE4uB,OAAQ+xE,EAAe18B,MAAOA,EAAOv8D,OAAQA,EAAQo5F,YAAY,IAC9Ep5F,GAAUi5F,EAAcz5F,WAAa5L,KAAK4L,WAE1C5L,KAAK4L,WAAa,OAEf,GAAIumE,GAAa,EAAG,CAGvBnyE,KAAKszB,OAAS+xE,EACdrlG,KAAK4L,YAAcumE,EACfA,EAAY,GAEdlyE,EAAMyE,KAAK,CAAE4uB,OAAQ+xE,EAAe18B,MAAOA,EAAOv8D,OAAQA,EAAQo5F,YAAY,IAEhF,MAEFH,EAAgB,KAElB,IAAK,IAAI9pG,EAAI,EAAGA,EAAI0E,EAAMZ,OAAQ9D,IAChCyE,KAAK0E,KAAKzE,EAAM1E,KAIpB2lD,EAAS/jD,UAAU4nG,kBAAoB,WACrC/kG,KAAKslG,aAAe,CAAE1nE,WAAY,EAAGnf,MAAO,KAgB9CjhB,EAAK2P,SAASk0C,EAAQ0vB,GAEtB1vB,EAAOlkD,UAAUs0E,WAAa,SAAUhtE,EAAM/F,EAAU2B,GACtD,MAAMolG,EAAYzlG,KAAK0lG,WAAWjhG,GAElC,IAAIZ,EAAQ,KACZ,IACE7D,KAAK2lG,UAAUF,EAAWhhG,GAE5B,MAAO5E,GACLgE,EAAQhE,EAEVQ,EAASwD,GAELY,EAAK+gG,aACHC,EAAUG,YAEZ5lG,KAAK0E,KAAK,CACR4uB,OAAQmyE,EAAUnyE,OAClBzvB,MAAO,IAAIpG,EAAOuV,oBAAoB,8DACpCyyF,EAAUnyE,OAAO3nB,UAKvB3L,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQkyE,YAAY,MAQtDnkD,EAAOlkD,UAAUwoG,UAAY,SAAUF,EAAWhhG,GAEhD,GADAghG,EAAUI,YAAcJ,EAAU3gD,OAASrgD,EAAK6uB,OAAO3nB,SAAWuT,EAAM1R,QAAQ1N,QAC3EE,KAAK8lG,mBAAmBL,EAAWhhG,GAEtC,OAEF,MAAMshG,EAAS,IAAIjB,EAAYrgG,EAAK6uB,OAAQ7uB,EAAKkkE,MAAOlkE,EAAK2H,QAE7D,QAA4B9I,IAAxBmiG,EAAUO,UAAyB,CACrC,MAAMC,EAAiBF,EAAO35F,OAC9B,IACEq5F,EAAUO,UAAYD,EAAOG,gBAE/B,MAAO74F,GACL,OAAOrN,KAAKmmG,mBAAmB94F,EAAGo4F,EAAWM,EAAQE,IAMzD,OAAQxhG,EAAK6uB,OAAO3nB,QAClB,KAAKuT,EAAM1R,QAAQ1N,OACjB,OAAOE,KAAKomG,YAAYX,EAAWM,GACrC,KAAK7mF,EAAM1R,QAAQE,MACnB,KAAKwR,EAAM1R,QAAQc,YACjB,OAAOtO,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQ5lB,OAAO,IACtD,KAAKwR,EAAM1R,QAAQY,cACjB,OAAOpO,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQllB,eAAe,EAAMyV,MAAOkiF,EAAOM,cAClF,KAAKnnF,EAAM1R,QAAQG,aACjB,OAAO3N,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQ4vB,kBAAkB,EAAME,kBAAmB2iD,EAAOO,eACjG,KAAKpnF,EAAM1R,QAAQ3J,MACjB,OAAO7D,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQzvB,MAAOkiG,EAAOQ,cAC7D,KAAKrnF,EAAM1R,QAAQK,UACjB,OAAO7N,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,SACvC,KAAKpU,EAAM1R,QAAQU,MACjB,OAAOlO,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQplB,MAAO63F,EAAOS,cAC7D,QACE,OAAOxmG,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQzvB,MAAO,IAAIyB,MAAM,4BAA8Bb,EAAK6uB,OAAO3nB,YAU9G01C,EAAOlkD,UAAU2oG,mBAAqB,SAAUL,EAAWhhG,GACzD,IAAKghG,EAAUI,YAAa,CAG1B,OADuBJ,EAAUgB,cAAgB,GAAKhiG,EAAKkkE,MAAMtpE,OAASoF,EAAK2H,OAC3D3H,EAAK6uB,OAAO1nB,YAE9B5L,KAAK0mG,eAAejB,EAAWhhG,IACxB,IAGLghG,EAAUprD,UACZ51C,EAAKkkE,MAAQ3oE,KAAK2mG,eAAelB,EAAWhhG,GAC5CA,EAAK2H,OAAS,IAET,GAET,GAAIq5F,EAAUG,WAAY,CAExB,GAAoB,IAAhBnhG,EAAK2H,OACP,MAAM,IAAI3O,EAAOuV,oBAAoB,6DAGvC,GADAyyF,EAAUG,WAAWnnF,MAAM/Z,KAAKD,EAAKkkE,QAChC88B,EAAUG,WAAWgB,eAAgB,CAExC,GAA0C,IAAtCnB,EAAUG,WAAWnnF,MAAMpf,OAC7B,MAAM,IAAI5B,EAAOuV,oBAAoB,+DAIvC,OAFAvO,EAAKkkE,MAAQ7qE,OAAOwe,OAAOmpF,EAAUG,WAAWnnF,MAAOgnF,EAAUG,WAAWhoE,WAAan5B,EAAKkkE,MAAMtpE,QACpGomG,EAAUG,WAAa,MAChB,EAET,GAAIH,EAAUG,WAAWgB,eAAiBnB,EAAUG,WAAWhoE,WAAan5B,EAAKkkE,MAAMtpE,OAGrF,OADAomG,EAAUG,WAAWhoE,YAAcn5B,EAAKkkE,MAAMtpE,QACvC,EAEToF,EAAKkkE,MAAQ7qE,OAAOwe,OAAOmpF,EAAUG,WAAWnnF,MAAOgnF,EAAUG,WAAWhoE,WAAan5B,EAAKkkE,MAAMtpE,QACpGomG,EAAUG,WAAa,KAEzB,OAAO,GAQTvkD,EAAOlkD,UAAUupG,eAAiB,SAAUjB,EAAWhhG,GACrD,IAAKghG,EAAUprD,QAGb,OAFAorD,EAAUprD,QAAU,CAAE51C,EAAKkkE,MAAMjmE,MAAM+B,EAAK2H,cAC5Cq5F,EAAUgB,aAAehiG,EAAKkkE,MAAMtpE,OAASoF,EAAK2H,QAGpD,GAAI3H,EAAK2H,OAAS,EAChB,MAAM,IAAI3O,EAAOuV,oBAAoB,6DAEvCyyF,EAAUprD,QAAQ31C,KAAKD,EAAKkkE,OAC5B88B,EAAUgB,cAAgBhiG,EAAKkkE,MAAMtpE,QAQvCgiD,EAAOlkD,UAAUwpG,eAAiB,SAAUlB,EAAWhhG,GACrDghG,EAAUprD,QAAQ31C,KAAKD,EAAKkkE,OAC5B,MAAM7oE,EAAShC,OAAOwe,OAAOmpF,EAAUprD,QAASorD,EAAU75F,YAE1D,OADA65F,EAAUprD,QAAU,KACbv6C,GAQTuhD,EAAOlkD,UAAUipG,YAAc,SAAUX,EAAWM,GAClD,IAAIjmG,EAIJ,MAAMmmG,EAAiBF,EAAO35F,OAC9B,IACE,IAAKq5F,EAAU/jF,KAGb,OAFA+jF,EAAUzxD,KAAO+xD,EAAOc,UAEhBpB,EAAUzxD,MAChB,KAAK90B,EAAMxO,WAAWC,WACpB7Q,EAAS,CAAEwzB,OAAQmyE,EAAUnyE,OAAQ7nB,MAAOg6F,EAAUO,WACtD,MACF,KAAK9mF,EAAMxO,WAAWE,KAEpB60F,EAAU/jF,KAAOqkF,EAAOe,aAAarB,EAAUzxD,MAC/C,MACF,KAAK90B,EAAMxO,WAAWG,YACpB/Q,EAAS,CAAEwzB,OAAQmyE,EAAUnyE,OAAQyzE,YAAahB,EAAOO,aAAc76F,MAAOg6F,EAAUO,WACxF,MACF,KAAK9mF,EAAMxO,WAAWI,SACtB,CACE,MAAMk2F,EAAaj/F,EAAM3F,WAAW2jG,EAAOkB,kBAC3CxB,EAAU/jF,KAAOqkF,EAAOe,aAAarB,EAAUzxD,MAC/Cl0C,EAAS,CAAEwzB,OAAQmyE,EAAUnyE,OAAQy9B,GAAIi2C,EAAYtlF,KAAM+jF,EAAU/jF,KAAMjW,MAAOg6F,EAAUO,WAC5F,MAEF,KAAK9mF,EAAMxO,WAAWpB,aACpBxP,EAAS,CAAEwzB,OAAQmyE,EAAUnyE,OAAQhkB,aAAcy2F,EAAOmB,oBAAqBz7F,MAAOg6F,EAAUO,WAChG,MACF,QACE,MAAMvoG,EAAOuV,oBAAoB,2BAA6ByyF,EAAUzxD,OAIhF,MAAO3mC,GACL,OAAOrN,KAAKmmG,mBAAmB94F,EAAGo4F,EAAWM,EAAQE,GAEvD,GAAInmG,EAAQ,CACV,GAAI2lG,EAAU0B,QAEZ,OAGF,OADA1B,EAAU0B,SAAU,EACbnnG,KAAK0E,KAAK5E,GAGfimG,EAAOqB,kBAAoB,GAC7BpnG,KAAKqnG,UAAU5B,EAAWM,IAQ9B1kD,EAAOlkD,UAAUkqG,UAAY,SAAU5B,EAAWM,GAChD,GAAIN,EAAU6B,aAEZ,OAEF,QAA4BhkG,IAAxBmiG,EAAU3/D,UACZ,IACE2/D,EAAU3/D,UAAYigE,EAAOc,UAE/B,MAAOx5F,GACL,OAAOrN,KAAKmmG,mBAAmB94F,EAAGo4F,EAAWM,GAGjD,GAA4B,IAAxBN,EAAU3/D,UACZ,OAAO9lC,KAAK0E,KAAK,CACf4uB,OAAQmyE,EAAUnyE,OAClBxzB,OAAQ,CAAE8Q,KAAM7I,EAAMtE,WAAYie,KAAM+jF,EAAU/jF,KAAMjW,MAAOg6F,EAAUO,aAG7E,MAAMtkF,EAAO+jF,EAAU/jF,KACvB+jF,EAAU8B,SAAW9B,EAAU8B,UAAY,EAC3C,IAAK,IAAIhsG,EAAIkqG,EAAU8B,SAAUhsG,EAAIkqG,EAAU3/D,UAAWvqC,IAAK,CAC7D,MAAMisG,EAAYzB,EAAO35F,OACnB45B,EAAM,IAAI9mB,EAAMjN,IAAIyP,EAAKzgB,SAC/B,IAAI2kG,EACJ,IAAK,IAAIn/F,EAAI,EAAGA,EAAIib,EAAKzgB,QAAQ5B,OAAQoH,IAAM,CAC7C,MAAM7K,EAAI8lB,EAAKzgB,QAAQwF,GACvB,IACEm/F,EAAaG,EAAOM,YAEtB,MAAOh5F,GACL,OAAOrN,KAAKmmG,mBAAmB94F,EAAGo4F,EAAWM,EAAQyB,EAAWjsG,GAElE,IACEyqC,EAAIpqC,EAAEE,MAAQkE,KAAKqhB,QAAQ2U,OAAO4vE,EAAYhqG,EAAEqJ,MAElD,MAAOoI,GAEL,OAAOrN,KAAKmmG,mBAAmB94F,EAAGo4F,EAAW,OAGjDzlG,KAAK0E,KAAK,CACR4uB,OAAQmyE,EAAUnyE,OAClB0S,IAAKA,EACLtkB,KAAM+jF,EAAU/jF,KAChBojC,MAAO2gD,EAAU3gD,MACjBzlD,OAAQomG,EAAU3/D,UAClBr6B,MAAOg6F,EAAUO,cAUvB3kD,EAAOlkD,UAAU0nD,WAAa,SAAUkM,EAAI1rD,GAC1C,GAAIrF,KAAKklG,OAAOn0C,EAAG9jD,YACjB,MAAM,IAAIiS,EAAM3R,YAAY,0CAE9BvN,KAAKklG,OAAOn0C,EAAG9jD,YAAc5H,GAQ/Bg8C,EAAOlkD,UAAUuoG,WAAa,SAAUjhG,GACtC,IAAIghG,EAAYzlG,KAAKklG,OAAOzgG,EAAK6uB,OAAO5nB,UAaxC,OAZK+5F,EAOIhhG,EAAK+gG,mBAELxlG,KAAKklG,OAAOzgG,EAAK6uB,OAAO5nB,WAR/B+5F,EAAY,GACPhhG,EAAK+gG,aAERxlG,KAAKklG,OAAOzgG,EAAK6uB,OAAO5nB,UAAY+5F,IAOxCA,EAAUnyE,OAAS7uB,EAAK6uB,OACjBmyE,GAWTpkD,EAAOlkD,UAAUgpG,mBAAqB,SAAU94F,EAAGo4F,EAAWM,EAAQE,EAAgBsB,GACpF,GAAIxB,GAAUN,EAAUI,aAAgBx4F,aAAa0S,WAEnD,OAAO/f,KAAKynG,iBAAiBhC,EAAWM,EAAQE,EAAgBsB,EAAUl6F,EAAEu5F,gBAE9EnB,EAAU6B,cAAe,EACzB7B,EAAUG,WAAa,KACvB5lG,KAAK0E,KAAK,CAAE4uB,OAAQmyE,EAAUnyE,OAAQzvB,MAAOwJ,KAW/Cg0C,EAAOlkD,UAAUsqG,iBAAmB,SAAUhC,EAAWM,EAAQE,EAAgBsB,EAAUX,GACpFX,GAAqC,IAAnBA,IACrBA,EAAiBF,EAAO35F,QAE1Bq5F,EAAU8B,SAAWA,EACrB,MAAMr7F,EAAS65F,EAAOrjG,MAAMujG,GAC5BR,EAAUG,WAAa,CACrBnnF,MAAO,CAAEvS,GACT0xB,WAAY1xB,EAAO7M,OACnBunG,eAAgBA,IAepBppG,EAAK2P,SAASo0C,EAAesjD,GAE7BtjD,EAAcpkD,UAAUwnD,OAAS,SAAUlgD,EAAM/F,EAAU2B,GACzD,IAAIwD,EAAQ,KACZ,IACE7D,KAAKmD,KAAKsB,GAEZ,MAAO5E,GACLgE,EAAQhE,EAEVQ,EAASwD,IAOX09C,EAAcpkD,UAAUgG,KAAO,SAAUsB,GACvC,OAAIA,EAAKZ,OAASY,EAAK3E,OAGdE,KAAK6Y,KAAK,SAAUpU,EAAK6uB,OAAQ7uB,EAAKZ,MAAOY,EAAK3E,QAEvD2E,EAAK+gG,WACAxlG,KAAK6Y,KAAK,aAAcpU,EAAK6uB,QAElC7uB,EAAKqgD,MAEA9kD,KAAK6Y,KAAK,MAAOpU,EAAK6uB,OAAQ7uB,EAAKuhC,IAAKvhC,EAAKid,KAAMjd,EAAKpF,OAAQoF,EAAKgH,OAE1EhH,EAAKuhC,IAGAhmC,KAAK0nG,cAAcjjG,GAExBA,EAAKyJ,MAEAlO,KAAK6Y,KAAK,YAAapU,EAAK6uB,OAAQ7uB,EAAKyJ,OAG3ClO,KAAK6Y,KAAK,SAAUpU,EAAK6uB,OAAQ,KAAM7uB,IAMhD88C,EAAcpkD,UAAUuqG,cAAgB,SAAUjjG,GAChD,IAAImM,EAAO5Q,KAAKmlG,UAAU1gG,EAAK6uB,OAAO5nB,UACjCkF,IACHA,EAAO5Q,KAAKmlG,UAAU1gG,EAAK6uB,OAAO5nB,UAAY,IAEhDkF,EAAKlM,KAAKD,EAAKuhC,KACXp1B,EAAKvR,SAAWoF,EAAKpF,SACvBW,KAAK6Y,KAAK,SAAUpU,EAAK6uB,OAAQ,KAAM,CAAE1iB,KAAMA,EAAM8Q,KAAMjd,EAAKid,KAAMjW,MAAOhH,EAAKgH,eAC3EzL,KAAKmlG,UAAU1gG,EAAK6uB,OAAO5nB,YAItCrQ,EAAQ6lD,SAAWA,EACnB7lD,EAAQgmD,OAASA,EACjBhmD,EAAQkmD,cAAgBA,G,6BCzhBxB,MAAM/jD,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAChBzhB,EAAS,EAAQ,GAKjBkqG,EACgB,EADhBA,EAEgB,EAUtB,SAAS7C,EAAYxxE,EAAQxV,EAAM1R,GACjCpM,KAAKszB,OAASA,EACdtzB,KAAK2L,OAAS2nB,EAAO3nB,OACrB3L,KAAKoM,OAASA,GAAU,EACxBpM,KAAKqC,IAAMyb,EAGbgnF,EAAY3nG,UAAUiqG,gBAAkB,WACtC,OAAOpnG,KAAKqC,IAAIhD,OAASW,KAAKoM,QAGhC04F,EAAY3nG,UAAUqU,UAAY,WAChC,OAAOxR,KAAKqC,KASdyiG,EAAY3nG,UAAUuF,MAAQ,SAAU08C,EAAOzmB,GAI7C,YAHmB,IAARA,IACTA,EAAM34B,KAAKqC,IAAIhD,QAEVW,KAAKqC,IAAIK,MAAM08C,EAAOzmB,IAM/BmsE,EAAY3nG,UAAUwpC,QAAU,SAAUlH,GACxC,GAAIz/B,KAAKoM,OAAS,EAChB,MAAM,IAAI9G,MAAM,wDAElBtF,KAAKqC,IAAMvE,OAAOwe,OAAO,CAACmjB,EAAOz/B,KAAKqC,KAAMo9B,EAAMpgC,OAASW,KAAKqC,IAAIhD,SAStEylG,EAAY3nG,UAAUmnE,KAAO,SAAUjlE,GACrC,IAAIs5B,EAAM34B,KAAKqC,IAAIhD,YACG,IAAXA,GAA0BW,KAAKoM,OAAS/M,EAASW,KAAKqC,IAAIhD,SACnEs5B,EAAM34B,KAAKoM,OAAS/M,GAEtB,MAAMogC,EAAQz/B,KAAK0C,MAAM1C,KAAKoM,OAAQusB,GAEtC,OADA34B,KAAKoM,OAASusB,EACP8G,GAMTqlE,EAAY3nG,UAAUyqG,MAAQ,WAC5B5nG,KAAKoM,OAASpM,KAAKqC,IAAIhD,QAOzBylG,EAAY3nG,UAAU0pG,QAAU,WAC9B,MAAM/mG,EAASE,KAAKqC,IAAIyK,YAAY9M,KAAKoM,QAEzC,OADApM,KAAKoM,QAAU,EACRtM,GAITglG,EAAY3nG,UAAU0qG,UAAY,WAChC,MAAM/nG,EAASE,KAAKqC,IAAIstD,aAAa3vD,KAAKoM,QAE1C,OADApM,KAAKoM,QAAU,EACRtM,GAGTglG,EAAY3nG,UAAU2qG,SAAW,WAC/B,MAAMhoG,EAASE,KAAKqC,IAAIgK,UAAUrM,KAAKoM,QAEvC,OADApM,KAAKoM,QAAU,EACRtM,GAGTglG,EAAY3nG,UAAUmpG,WAAa,WACjC,MAAMjnG,EAASW,KAAK6nG,YACpB7nG,KAAK+nG,YAAY1oG,GACjB,MAAMS,EAASE,KAAKqC,IAAI4K,SAAS,OAAQjN,KAAKoM,OAAQpM,KAAKoM,OAAO/M,GAElE,OADAW,KAAKoM,QAAU/M,EACRS,GAOTglG,EAAY3nG,UAAU4qG,YAAc,SAAUC,GAC5C,GAAIhoG,KAAKoM,OAAS47F,EAAYhoG,KAAKqC,IAAIhD,OAAQ,CAC7C,MAAMQ,EAAM,IAAIkgB,WAAW,yCAE3B,MADAlgB,EAAI+mG,eAAiBoB,EACfnoG,IAQVilG,EAAY3nG,UAAU8qG,eAAiB,WACrC,MAAM5oG,EAASW,KAAK6nG,YACd19F,EAAO,IAAIpL,MAAMM,GACvB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,EAAQ9D,IAC1B4O,EAAK5O,GAAKyE,KAAKsmG,aAEjB,OAAOn8F,GAOT26F,EAAY3nG,UAAUkpG,UAAY,WAChC,MAAMhnG,EAASW,KAAK6mG,UACpB,OAAIxnG,EAAS,EACJ,MAETW,KAAK+nG,YAAY1oG,GACVW,KAAKskE,KAAKjlE,KAGnBylG,EAAY3nG,UAAU8pG,eAAiB,WACrC,MAAM5nG,EAASW,KAAK6nG,YACpB,OAAIxoG,EAAS,EACJ,MAETW,KAAK+nG,YAAY1oG,GACVW,KAAKskE,KAAKjlE,KAOnBylG,EAAY3nG,UAAU+qG,aAAe,WAGnC,MAAM7oG,EAASW,KAAK6nG,YACpB,GAAIxoG,EAAS,EACX,OAAO,KAET,MAAMkG,EAAM,GACZ,IAAK,IAAIhK,EAAI,EAAGA,EAAI8D,EAAQ9D,IAC1BgK,EAAIvF,KAAKsmG,cAAgBtmG,KAAKqmG,YAEhC,OAAO9gG,GAOTu/F,EAAY3nG,UAAUgrG,SAAW,WAC/B,IAAI5sG,EACJ,MAAM0J,EAAO,CACXyF,KAAM1K,KAAK6nG,YACX5iG,KAAM,MAER,OAAQA,EAAKyF,MACX,KAAKwU,EAAMpW,UAAUC,OACnB9D,EAAKC,KAAOlF,KAAKsmG,aACjB,MACF,KAAKpnF,EAAMpW,UAAUqB,KACrB,KAAK+U,EAAMpW,UAAUsB,IACnBnF,EAAKC,KAAOlF,KAAKmoG,WACjB,MACF,KAAKjpF,EAAMpW,UAAUvD,IACnBN,EAAKC,KAAO,CAAClF,KAAKmoG,WAAYnoG,KAAKmoG,YACnC,MACF,KAAKjpF,EAAMpW,UAAUuB,IAMnB,IALApF,EAAKC,KAAO,CACV8qB,SAAUhwB,KAAKsmG,aACfxqG,KAAMkE,KAAKsmG,aACX77C,OAAQ,IAAI1rD,MAAMiB,KAAK6nG,cAEpBtsG,EAAI,EAAGA,EAAI0J,EAAKC,KAAKulD,OAAOprD,OAAQ9D,IACvC0J,EAAKC,KAAKulD,OAAOlvD,GAAK,CACpBO,KAAMkE,KAAKsmG,aACXrhG,KAAMjF,KAAKmoG,YAGf,MACF,KAAKjpF,EAAMpW,UAAUwB,MAEnB,IADArF,EAAKC,KAAO,IAAInG,MAAMiB,KAAK6nG,aACtBtsG,EAAI,EAAGA,EAAI0J,EAAKC,KAAK7F,OAAQ9D,IAChC0J,EAAKC,KAAK3J,GAAKyE,KAAKmoG,WAI1B,OAAOljG,GAOT6/F,EAAY3nG,UAAUirG,SAAW,WAC/B,MAAM/oG,EAASW,KAAK8nG,WACdz0F,EAAUrT,KAAKskE,KAAKjlE,GAC1B,MAAO,CAACgU,QAAS,IAAI6L,EAAMvN,YAAY0B,GAAU2tB,KAAMhhC,KAAK6mG,YAQ9D/B,EAAY3nG,UAAU+oG,cAAgB,WACpC,GAA0B,IAAtBlmG,KAAKszB,OAAO7nB,MACd,OAAO1D,EAAMrK,YAEf,MAAMoC,EAAS,GAWf,OAVIE,KAAKszB,OAAO7nB,MAAQyT,EAAMpQ,WAAWE,UACvChP,KAAK+nG,YAAY,IACjBjoG,EAAO+4D,QAAU,IAAI35C,EAAMrX,KAAKE,EAAM3F,WAAWpC,KAAKskE,KAAK,OAEzDtkE,KAAKszB,OAAO7nB,MAAQyT,EAAMpQ,WAAWI,UACvCpP,EAAOozD,SAAWlzD,KAAKioG,kBAErBjoG,KAAKszB,OAAO7nB,MAAQyT,EAAMpQ,WAAWG,gBACvCnP,EAAOmP,cAAgBjP,KAAKkoG,gBAEvBpoG,GASTglG,EAAY3nG,UAAU2pG,aAAe,SAAU9yD,GAC7C,IAAIz4C,EAEJ,MAAMu+F,EAAc9lD,IAAS90B,EAAMxO,WAAWI,SACxC4Q,EAAO,GAEPjW,EAAQzL,KAAK6mG,UAEbwB,EAAeroG,KAAK6mG,UAC1B,GAAI3nF,EAAMpX,gBAAgBwlF,6BAA6BttF,KAAKszB,OAAO9nB,UAAYsuF,EAG7E,IADAp4E,EAAK45C,cAAgB,IAAIv8D,MAAMiB,KAAK6mG,WAC/BtrG,EAAI,EAAGA,EAAImmB,EAAK45C,cAAcj8D,OAAQ9D,IACzCmmB,EAAK45C,cAAc//D,GAAKyE,KAAK6nG,YAiBjC,IAdIp8F,EAAQk8F,IACVjmF,EAAKoP,UAAY/oB,EAAM3F,WAAWpC,KAAKqmG,cAErC56F,EAAQk8F,IACVjmF,EAAK4mF,oBAAqB,EAC1B5mF,EAAKsO,SAAWhwB,KAAKsmG,aACrB5kF,EAAKukD,MAAQjmE,KAAKsmG,cAEpB5kF,EAAKzgB,QAAU,IAAIlC,MAAMspG,GACzB3mF,EAAK25C,cAAgBtzD,EAAMrK,YACvBo8F,IAEFp4E,EAAK25C,cAAgB,IAElB9/D,EAAI,EAAGA,EAAI8sG,EAAc9sG,IAAK,CACjC,MAAMgtG,EAAM,GACR7mF,EAAK4mF,qBACPC,EAAIC,OAASxoG,KAAKsmG,aAClBiC,EAAIE,UAAYzoG,KAAKsmG,cAEvBiC,EAAIzsG,KAAOkE,KAAKsmG,aAChBiC,EAAItjG,KAAOjF,KAAKmoG,WAChBzmF,EAAKzgB,QAAQ1F,GAAKgtG,EACdzO,IACFp4E,EAAK25C,cAAcktC,EAAIzsG,MAAQP,GAInC,OAAOmmB,GAgBTojF,EAAY3nG,UAAUopG,UAAY,WAChC,MAAM77F,EAAO1K,KAAK6mG,UACZ/6F,EAAU9L,KAAKsmG,aACfzmG,EAAM,IAAIpC,EAAOsV,cAAcrI,EAAMoB,GAE3C,OAAQpB,GACN,KAAKwU,EAAM3P,mBAAmBI,qBAC5B9P,EAAIoI,cAAgBjI,KAAK6nG,YACzBhoG,EAAI+3C,SAAW53C,KAAK6mG,UACpBhnG,EAAIg4C,MAAQ73C,KAAK6mG,UACjBhnG,EAAIiM,QAAUtO,EAAKgE,OAnBG,4FAmByB0d,EAAMrW,oBAAoBhJ,EAAIoI,eAAgBpI,EAAI+3C,SAAU/3C,EAAIg4C,OAC/G,MACF,KAAK34B,EAAM3P,mBAAmBS,YAC9B,KAAKkP,EAAM3P,mBAAmBU,YAQ5B,GAPApQ,EAAIoI,cAAgBjI,KAAK6nG,YACzBhoG,EAAIq4C,SAAWl4C,KAAK6mG,UACpBhnG,EAAIs4C,SAAWn4C,KAAK6mG,UAChBn8F,IAASwU,EAAM3P,mBAAmBU,cACpCpQ,EAAI6oG,SAAW1oG,KAAK6mG,WAEtBhnG,EAAIu4C,cAAgBp4C,KAAK8nG,WACrBp9F,IAASwU,EAAM3P,mBAAmBS,YAAa,CACjD,IAAI24F,EAEFA,EADE9oG,EAAIq4C,SAAWr4C,EAAIs4C,SACX36C,EAAKgE,OAAO,2CAA4C3B,EAAIq4C,SAAUr4C,EAAIs4C,UAC1Et4C,EAAIu4C,cAGJ,2DAFA,kDAIZv4C,EAAIiM,QAAUtO,EAAKgE,OAtCC,0DAsC2B0d,EAAMrW,oBAAoBhJ,EAAIoI,eAAgB0gG,QAE7F9oG,EAAIiM,QAAUtO,EAAKgE,OAvCC,4HAuC2B0d,EAAMrW,oBAAoBhJ,EAAIoI,eAC3EpI,EAAIs4C,SAAUt4C,EAAIq4C,SAAUr4C,EAAI6oG,UAEpC,MACF,KAAKxpF,EAAM3P,mBAAmBQ,aAC9B,KAAKmP,EAAM3P,mBAAmBY,aAS5B,GARAtQ,EAAIoI,cAAgBjI,KAAK6nG,YACzBhoG,EAAIq4C,SAAWl4C,KAAK6mG,UACpBhnG,EAAIs4C,SAAWn4C,KAAK6mG,UAChBn8F,IAASwU,EAAM3P,mBAAmBY,eACpCtQ,EAAI6oG,SAAW1oG,KAAK6mG,WAEtBhnG,EAAIy4C,UAAYt4C,KAAKsmG,aAEjB57F,IAASwU,EAAM3P,mBAAmBQ,aAAc,CAClD,MAAM64F,EAA6B,cAAlB/oG,EAAIy4C,UA1DQ,8GADH,2GA4D1Bz4C,EAAIiM,QAAUtO,EAAKgE,OAAOonG,EAAU1pF,EAAMrW,oBAAoBhJ,EAAIoI,eAAgBpI,EAAIq4C,SAAUr4C,EAAIs4C,eAEpGt4C,EAAIiM,QAAUtO,EAAKgE,OA5DE,6HA4D2B0d,EAAMrW,oBAAoBhJ,EAAIoI,eAC5EpI,EAAIs4C,SAAUt4C,EAAIq4C,SAAUr4C,EAAI6oG,UAEpC,MACF,KAAKxpF,EAAM3P,mBAAmBkB,WAC5B5Q,EAAI4hB,QAAU1Z,EAAM3F,WAAWpC,KAAKinG,kBACpC,MACF,KAAK/nF,EAAM3P,mBAAmBW,gBAC5BrQ,EAAImwB,SAAWhwB,KAAKsmG,aACpBzmG,EAAImkE,aAAehkE,KAAKsmG,aACxBzmG,EAAIgpG,SAAW7oG,KAAKioG,iBACpB,MACF,KAAK/oF,EAAM3P,mBAAmBiB,cAAe,CAC3C3Q,EAAImwB,SAAWhwB,KAAKsmG,aACpB,MAAMrgC,EAAQjmE,KAAKsmG,aAChBrgC,EAAM5mE,OAAS,IAChBQ,EAAIomE,MAAQA,GAEd,OAGJ,OAAOpmE,GAOTilG,EAAY3nG,UAAUqpG,UAAY,WAChC,MAAMnhD,EAAYrlD,KAAKsmG,aACvB,OAAQjhD,GACN,KAAKnmC,EAAM/P,eAAeC,eACxB,MAAO,CACL05F,MAA6B,aAAtB9oG,KAAKsmG,aACZx8F,KAAM9J,KAAKooG,WACX/iD,UAAWA,GACf,KAAKnmC,EAAM/P,eAAeE,aACxB,MAAO,CACLsyF,GAA0B,OAAtB3hG,KAAKsmG,aACTx8F,KAAM9J,KAAKooG,WACX/iD,UAAWA,GACf,KAAKnmC,EAAM/P,eAAeG,aACxB,OAAOtP,KAAKknG,oBAGhB,MAAO,CAAE7hD,UAAWA,IAGtBy/C,EAAY3nG,UAAU+pG,kBAAoB,WACxC,IAAIpnG,EACJ,IAAKof,EAAMpX,gBAAgBylF,iCAAiCvtF,KAAKszB,OAAO9nB,SAStE,OAPA1L,EAAS,CACPulD,UAAWnmC,EAAM/P,eAAeG,aAChCyyF,iBAAkB/hG,KAAKsmG,aACvBt2E,SAAUhwB,KAAKsmG,aACfrgC,MAAOjmE,KAAKsmG,eAEPxE,YAAchiG,EAAOmmE,MACrBnmE,EAaT,QAVAA,EAAS,CACPulD,UAAWnmC,EAAM/P,eAAeG,aAChCyyF,iBAAkB/hG,KAAKsmG,aACvB7jG,OAAQzC,KAAKsmG,aACbt2E,SAAUhwB,KAAKsmG,aACfrgC,MAAO,KACP57D,IAAK,KACL2tD,UAAW,OAEN8pC,WAA+B,aAAlBhiG,EAAO2C,OACnB3C,EAAO2C,QACb,IAAK,QACH3C,EAAOmmE,MAAQjmE,KAAKsmG,aACpB,MACF,IAAK,OACHxmG,EAAOuK,IAAMrK,KAAKsmG,aAClB,MACF,IAAK,WACHxmG,EAAOkkE,aAAehkE,KAAKsmG,aAC3BxmG,EAAOk4D,UAAYh4D,KAAKioG,iBACxB,MACF,IAAK,YACHnoG,EAAO04D,UAAYx4D,KAAKsmG,aACxBxmG,EAAOk4D,UAAYh4D,KAAKioG,iBAE5B,OAAOnoG,GAGTzE,EAAQypG,YAAcA,G,6BC5ctB,MAAM5lF,EAAQ,EAAQ,GAMhB6pF,EAAY,IAOZC,EAAe,EAQfC,EAAiB,EAOjBC,EAAqB,IAQ3B,IAAIC,EAAe,IAyInB,SAASC,EAAcC,GACrB,MAAMvqG,EAAM,IAAIC,MAAMgqG,GAChBloC,EAAawoC,EAAeN,EAAY,EAC9C,IAAK,IAAIxtG,EAAI,EAAGA,EAAIwtG,EAAWxtG,IAC7BuD,EAAIvD,GAAKslE,EAAatlE,EAExB,OAAOuD,EAGTxD,EAAOD,QA3IP,MAME,YAAYmQ,GAGVxL,KAAKspG,aAAeF,EAAc,GAClCppG,KAAKupG,WAAa,EAClBvpG,KAAKwpG,OAAS,CAACxpG,KAAKspG,cACpBtpG,KAAKypG,eAAiB,KACtBzpG,KAAKujD,WAAW/3C,GAKhBxL,KAAKmlD,MAAQ,EAOf,WAAW35C,GAETxL,KAAK0pG,UAAYxqF,EAAMpX,gBAAgBkE,oBAAoBR,GAAW09F,EAAqB,EAQ7F,MACE,IAAIn4C,EAAK/wD,KAAKspG,aAAal/D,MAC3B,QAAkB,IAAP2mB,EAET,OADA/wD,KAAKmlD,QACE4L,EAGT,KAAO/wD,KAAKupG,WAAavpG,KAAKwpG,OAAOnqG,OAAS,GAK5C,GAHAW,KAAKspG,aAAetpG,KAAKwpG,SAASxpG,KAAKupG,iBAGrB,KADlBx4C,EAAK/wD,KAAKspG,aAAal/D,OAGrB,OADApqC,KAAKmlD,QACE4L,EAGX,OAAO/wD,KAAK2pG,kBAQd,KAAK54C,GACH/wD,KAAKmlD,QACL,MAAMokD,EAAax4C,GAAMi4C,EACnB5yD,EAAQp2C,KAAKwpG,OAAOD,GAC1BnzD,EAAM1xC,KAAKqsD,GACPw4C,EAAavpG,KAAKupG,aAEpBvpG,KAAKupG,WAAaA,EAClBvpG,KAAKspG,aAAelzD,GAEtBp2C,KAAK4pG,mBAMP,QACM5pG,KAAKypG,iBACPhmD,aAAazjD,KAAKypG,gBAClBzpG,KAAKypG,eAAiB,MAS1B,kBACE,OAAIzpG,KAAKwpG,OAAOnqG,SAAWW,KAAK0pG,UAEvB,MAGT1pG,KAAKupG,WAAavpG,KAAKwpG,OAAOnqG,OAE9BW,KAAKspG,aAAeF,EAAcppG,KAAKupG,YAAcP,GACrDhpG,KAAKwpG,OAAO9kG,KAAK1E,KAAKspG,cACtBtpG,KAAKmlD,QACEnlD,KAAKspG,aAAal/D,OAG3B,mBACE,GAAIpqC,KAAKypG,gBAAkBzpG,KAAKwpG,OAAOnqG,QAAU4pG,EAE/C,OAEF,MAAMjjG,EAAOhG,KACbA,KAAKypG,eAAiBnnD,WAAW,IAAMt8C,EAAK6jG,iBAAkBV,GAGhE,iBACE,IAAI//F,EAAU,EACVlH,EAAQlC,KAAKwpG,OAAOnqG,OAAS,EAGjC,KAAO+J,IAAY6/F,GAAkBjpG,KAAKwpG,OAAOnqG,OAAS4pG,GAAkB/mG,EAAQlC,KAAKupG,YACnFvpG,KAAKwpG,OAAOtnG,GAAO7C,SAAW0pG,GAIlC/oG,KAAKwpG,OAAOp/D,MACZloC,IAEFlC,KAAKypG,eAAiB,KAEtBzpG,KAAK4pG,sB,6BCzKT,MAAMpsG,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GACjBgiD,EAAW,EAAQ,IACnBj+B,EAAiBi+B,EAASj+B,eAC1B2C,EAAes7B,EAASt7B,aAExB+jD,EAAQ,CACZ/gC,KAAM,EACN7mC,UAAW,EACXwpG,SAAU,EACVC,UAAW,GAuIbzuG,EAAOD,QAjIP,MAOE,YAAYo/C,EAASpqB,EAAahwB,GAChCL,KAAKy6C,QAAUA,EACfz6C,KAAKuwB,aAAeF,EACpBrwB,KAAKkyD,UAAY7xD,EACjBL,KAAKgqG,SAAW,KAChBhqG,KAAK0jG,OAASx7B,EAAM/gC,KACpBnnC,KAAKiqG,UAAY,EAKjBjqG,KAAK0L,UAAY,EAMnB,SACM1L,KAAK0jG,SAAWx7B,EAAM/gC,OAGJ,OAAlBnnC,KAAKgqG,UACPvmD,aAAazjD,KAAKgqG,UAEpBhqG,KAAK0jG,OAASx7B,EAAM6hC,UACpB/pG,KAAKkyD,UAAYnqD,EAAMnK,MAMzB,eACE,OAAOoC,KAAK0jG,SAAWx7B,EAAM/gC,KAO/B,UACE,OAAOnnC,KAAKuwB,eAAiBvwB,KAAKy6C,mBAAmBj5B,GAAkBxhB,KAAKy6C,mBAAmBt2B,GAWjG,kBAAkBziB,EAAawoG,EAAoB72F,EAAS82F,EAAWC,GACrE,GAAIpqG,KAAK0jG,SAAWx7B,EAAM/gC,KAExB,OAEF,MAAMksD,OAA0C/vF,IAAjC5B,EAAY2oG,iBAAiC3oG,EAAY2oG,iBAAmBH,EAC3F,KAAM7W,EAAS,GAEb,OAEF,MAAMrtF,EAAOhG,KACbA,KAAKgqG,SAAW1nD,WAAW,WACzB6nD,IACA,MAAMr+F,EAAUtO,EAAKgE,OAAO,iDAAkD6R,EAASggF,GACvFrtF,EAAKskG,gBAAgB,IAAI7sG,EAAOyV,uBAAuBpH,EAASuH,GAAU+2F,IACzE/W,GAGL,aAAartD,EAAKtkB,EAAMokB,EAAWr6B,EAAO6nB,GAExC,GADAtzB,KAAKuqG,oBACAvqG,KAAKuwB,aACR,OAAOvwB,KAAK2jD,UAAU,IAAIlmD,EAAOuV,oBAAoB,sDAEvDhT,KAAKuwB,aAAavwB,KAAKiqG,YAAajkE,EAAKF,GACrC9lC,KAAKiqG,YAAcnkE,GACrB9lC,KAAKwqG,uBAAuB,KAAM,CAAE1kE,UAAWA,EAAWpkB,KAAMA,EAAMjW,MAAOA,GAAS6nB,EAAO1nB,YAUjG,gBAAgB/L,EAAKuqG,GACfpqG,KAAK0jG,SAAWx7B,EAAM/gC,OAG1BnnC,KAAK0jG,OAASx7B,EAAM4hC,SACpB9pG,KAAKwqG,uBAAuB3qG,EAAK,KAAM,KAAMuqG,IAG/C,mBACMpqG,KAAK0jG,SAAWx7B,EAAM/gC,OAGJ,OAAlBnnC,KAAKgqG,UACPvmD,aAAazjD,KAAKgqG,UAEpBhqG,KAAK0jG,OAASx7B,EAAM5nE,WAStB,UAAUT,EAAKC,EAAQT,GACrBW,KAAKuqG,mBACLvqG,KAAKwqG,uBAAuB3qG,EAAKC,EAAQT,GAG3C,uBAAuBQ,EAAKC,EAAQT,EAAQorG,GAC1C,MAAMpqG,EAAWL,KAAKkyD,UACtBlyD,KAAKkyD,UAAYu4C,GAAe1iG,EAAMnK,KACtCyC,EAASR,EAAKC,EAAQT,M,6BC9I1B,MAAM5B,EAAS,EAAQ,GACjBgiD,EAAW,EAAQ,IACnBl4B,EAAQ,EAAQ,IAChBrI,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAEhB2iG,EAAqBzuG,OAAO0B,OAAO,CACvC86C,SAAUlxB,EAAMub,YAAY4V,cAAcnxB,MAC1CixB,gBAAgB,EAChB32B,iBAAave,IAGTqnG,EAAkB1uG,OAAO0B,OAAO,CAAE86C,SAAUlxB,EAAMub,YAAY4V,cAAcC,UAK5EiyD,EAAa,CACjBC,KAAM,EAENC,YAAa,EAEbC,gCAAiC,EAEjC3P,cAAe,EAEf4P,sBAAuB,EAEvBC,sBAAuB,EACvBC,uBAAwB,EACxBC,uBAAwB,EACxBC,wBAAyB,EAEzBC,iBAAkB,GAGdC,EAAkB,IAAInuF,IAAI,CAC9B,CAAEytF,EAAWC,KAAM,CAAC/uF,EAASjc,EAAKo5C,IAAYn9B,EAAQyvF,qBAAqBtyD,IAC3E,CAAE2xD,EAAWE,YAAa,CAAChvF,EAASjc,IAAQic,EAAQunC,kBAAkBxjD,IACtE,CAAE+qG,EAAWxP,cAAe,CAACt/E,EAASjc,IAAQic,EAAQ0vF,qBAAqB3rG,IAC3E,CAAE+qG,EAAWK,sBAAuB,CAACnvF,EAASjc,IAAQic,EAAQ2vF,aAAa5rG,IAC3E,CAAE+qG,EAAWM,uBAAwB,CAACpvF,EAASjc,IAAQic,EAAQ4vF,mBAAmB7rG,IAClF,CAAE+qG,EAAWO,uBAAwB,CAACrvF,EAASjc,IAAQic,EAAQ6vF,mBAAmB9rG,IAClF,CAAE+qG,EAAWQ,wBAAyB,CAACtvF,EAASjc,IAAQic,EAAQ8vF,oBAAoB/rG,IACpF,CAAE+qG,EAAWS,iBAAkB,CAACvvF,EAASjc,IAAQic,EAAQ2vF,aAAa5rG,MAGlEgsG,EAAuB,IAAI1uF,IAAI,CACnC,CAAEytF,EAAWE,YAAa,CAAChvF,EAASjc,IAAQic,EAAQgwF,kBAAkBjsG,IACtE,CAAE+qG,EAAWxP,cAAe,CAACt/E,EAASjc,IAAQic,EAAQiwF,qBAAqBlsG,IAC3E,CAAE+qG,EAAWK,sBAAuB,CAACnvF,EAASjc,IAAQic,EAAQgwF,kBAAkBjsG,IAChF,CAAE+qG,EAAWM,uBAAwB,CAACpvF,EAASjc,IAAQic,EAAQkwF,mBAAmBnsG,IAClF,CAAE+qG,EAAWO,uBAAwB,CAACrvF,EAASjc,IAAQic,EAAQmwF,mBAAmBpsG,IAClF,CAAE+qG,EAAWQ,wBAAyB,CAACtvF,EAASjc,IAAQic,EAAQowF,oBAAoBrsG,IACpF,CAAE+qG,EAAWS,iBAAkB,CAACvvF,EAASjc,IAAQic,EAAQgwF,kBAAkBjsG,MAG7E,MAAM+xD,EAKJ,YAAYpkB,GACVxtC,KAAKmsG,QAAU3+D,EAEfxtC,KAAKosG,WAAa,KAClBpsG,KAAKqsG,MAAQ,KACbrsG,KAAKssG,YAAa,EAClBtsG,KAAKusG,WAAa,KAClBvsG,KAAKwsG,YAAc,EAGnBxsG,KAAKysG,SAAWzsG,KAAKmsG,QAAQ1xD,QAQ/B,MAAMiyD,GACJ,MAAM1mG,EAAOhG,KACb0sG,EAAkBA,GAAmB3kG,EAAMnK,KAC3CoC,KAAKmsG,QAAQQ,kBAAkB,SAAgC9sG,EAAKs+C,EAAYrrC,GAC9E,IAAI9M,EAAKsmG,WAAT,CAIA,GAAIzsG,EACF,OAAOmG,EAAKmmG,QAAQS,sBAAsB/sG,EAAKmG,GAEjDA,EAAK6mG,YAAc1uD,EACnBn4C,EAAKqmG,MAAQv5F,EACb45F,EAAgB55F,GACS,IAArB9M,EAAKwmG,aACPxmG,EAAKmmG,QAAQn6C,wBAEfhsD,EAAK8mG,uBAIT,oBACE9sG,KAAKusG,WAAahpG,QAAQkR,SAE1BzU,KAAKosG,WACHpsG,KAAK6sG,YAAYlqD,WAAW3iD,KAAKysG,SAAUzsG,KAAKmsG,QAAQrzD,iBAAkB,CAACj5C,EAAK+iD,EAAUvjD,KACxF,MAAM0tG,EAAYn7C,EAAiBo7C,cAAcntG,GAIjD,GAFAG,KAAKitG,eAAe1pG,QAAQkR,OAAOzU,KAAKusG,YAAaQ,EAAWltG,EAAKR,IAEjEW,KAAKssG,WAAT,CAKA,GAAIS,IAAcnC,EAAWC,KAC3B,OAAO7qG,KAAKktG,aAAaH,EAAWltG,GAGtC,GAAI+iD,EAAStzC,aACX,OAAOtP,KAAKmsG,QAAQ/7E,OAAO8sE,gCACzBl9F,KAAK6sG,YAAajqD,EAAStzC,aAAeuqD,IACpC75D,KAAKssG,YAKTtsG,KAAKmsG,QAAQ/4C,aAAa,KAAMpzD,KAAKmtG,cAAcvqD,EAAUiX,MAI/DjX,EAASmkD,cACX/mG,KAAKmsG,QAAQ/7E,OAAOJ,SAAW4yB,EAASmkD,aAG1C/mG,KAAKmsG,QAAQ/4C,aAAa,KAAMpzD,KAAKmtG,cAAcvqD,OAIzD,eAAe3J,EAAS8zD,EAAWltG,EAAKR,GAEtCuyD,EAAiBw7C,sBAAsBL,EAAW/sG,KAAKmsG,QAAQ/7E,OAAOtU,QAASjc,EAAKo5C,GAGpF,MAAMjZ,EAAUhgC,KAAKmsG,QAAQ/7E,OAAO/qB,QAAQw8B,eAE5C,GAAgB,OAAZ7B,EACF,OAIF,MAAMlyB,EAAQ9N,KAAKysG,SAAS3+F,OAAS9N,KAAKysG,SAASnpF,QAC7C5D,EAAa1f,KAAKysG,SAASzrG,OAC3B+3C,EAAgB/4C,KAAKysG,SAASptG,OAEhCQ,EACFmgC,EAAQqtE,QAAQrtG,KAAKqsG,MAAOv+F,EAAO4R,EAAY1f,KAAKmsG,QAAQrzD,iBAAkBC,EAAel5C,EAAKo5C,GAElGjZ,EAAQstE,UAAUttG,KAAKqsG,MAAOv+F,EAAO4R,EAAY1f,KAAKmsG,QAAQrzD,iBAAkBC,EAAe15C,EAAQ45C,GAI3G,cAAc2J,EAAUiX,GACtB,OAAO,IAAI36C,EAAMnN,UAAU6wC,EAAU5iD,KAAKqsG,MAAMh5F,QAASrT,KAAKmsG,QAAQj7C,WAAYlxD,KAAKmsG,QAAQn6C,sBAC7FhyD,KAAKysG,SAAS5qF,iBAA2Bve,IAAdu2D,GAA2BA,GAW1D,6BAA6BkzC,EAAWjxF,EAASjc,EAAKo5C,GACpD,MAAMx5C,EAAU6rG,EAAgBlvG,IAAI2wG,QACpBzpG,IAAZ7D,GACFA,EAAQqc,EAASjc,EAAKo5C,KAGnBp5C,GAAOA,aAAepC,EAAOsV,gBAChC+I,EAAQsuF,WAAWnxD,GAWvB,qCAAqC8zD,EAAWjxF,EAASjc,GACvD,MAAMJ,EAAUosG,EAAqBzvG,IAAI2wG,QAEzBzpG,IAAZ7D,GACFA,EAAQqc,EAASjc,GAQrB,SACEG,KAAKssG,YAAa,EACM,OAApBtsG,KAAKosG,YAGTpsG,KAAKosG,WAAWx1E,SAMlB,eACE,OAAO52B,KAAKssG,WAGd,aAAaS,EAAWltG,GAItB,GAHAG,KAAKmsG,QAAQj7C,WAAWlxD,KAAKqsG,MAAMh5F,SAAWxT,EAC9CA,EAAiB,YAAIG,KAAKqsG,MAAMh5F,QAE5B05F,IAAcnC,EAAWI,sBAC3B,OAAOhrG,KAAKutG,iBAAiB1tG,EAAI4hB,SAG/BsrF,IAAcnC,EAAWE,aAAeiC,IAAcnC,EAAWG,gCACnE/qG,KAAKqsG,MAAMhuD,eAAer+C,KAAK6sG,aACtBE,IAAcnC,EAAWxP,gBAClCp7F,KAAKmsG,QAAQnnG,IAAI,UAAWnF,EAAIiM,SAChC9L,KAAKqsG,MAAMnuD,YAAYl+C,KAAK6sG,cAG9B,MAAMW,EAAextG,KAAKytG,aAAaV,EAAWltG,GAElD,IAAK2tG,GAAgBA,EAAa/0D,WAAalxB,EAAMub,YAAY4V,cAAcC,QAI7E,OAHI34C,KAAKysG,oBAAoBhtD,EAASt7B,cAAgBnkB,KAAKysG,oBAAoBhtD,EAASj+B,kBACtF3hB,EAAW,MAAIG,KAAKysG,SAAS3+F,OAExB9N,KAAKmsG,QAAQ/4C,aAAavzD,GAGnC,MAAMic,EAAU9b,KAAKmsG,QAAQ/7E,OAAOtU,QAEpC,OAAI0xF,EAAa/0D,WAAalxB,EAAMub,YAAY4V,cAAcE,QAC5D98B,EAAQ4xF,cAAc7tG,GAGfG,KAAKmsG,QAAQ/4C,aAAa,KAAMpzD,KAAKmtG,cAAcplG,EAAMrK,gBAGlEk0D,EAAiB+7C,8BAA8BZ,EAAWjxF,EAASjc,GAE5DG,KAAK4tG,OAAOJ,EAAa3rF,YAAa2rF,EAAah1D,iBAS5D,aAAau0D,EAAWltG,GACtB,MAAMguG,EAAgB,CACpB//F,MAAO9N,KAAKysG,UAAYzsG,KAAKysG,SAAS3+F,MACtCgrC,iBAAkB94C,KAAKmsG,QAAQrzD,iBAC/BhB,QAAS93C,KAAKwsG,aAGVsB,EAAcD,EAAc/0D,iBAAiBi1D,iBAEnD,OAAQhB,GACN,KAAKnC,EAAWG,gCAId,OAAOL,EACT,KAAKE,EAAWE,YAChB,KAAKF,EAAWxP,cAChB,KAAKwP,EAAWK,sBACd,OAAI4C,EAAc/0D,iBAAiBrnB,eAC1Bq8E,EAAYv1D,eAAes1D,EAAe7tG,KAAKysG,SAAS5qF,YAAahiB,GAEvE8qG,EACT,KAAKC,EAAWO,uBACd,OAAO2C,EAAYn2D,cAAck2D,EAAehuG,EAAIoI,cAAepI,EAAI+3C,SAAU/3C,EAAIg4C,OACvF,KAAK+yD,EAAWM,uBACd,OAAO4C,EAAY71D,cACjB41D,EAAehuG,EAAIoI,cAAepI,EAAIq4C,SAAUr4C,EAAIs4C,SAAUt4C,EAAIu4C,eACtE,KAAKwyD,EAAWQ,wBACd,OAAIyC,EAAc/0D,iBAAiBrnB,eAC1Bq8E,EAAYz1D,eACjBw1D,EAAehuG,EAAIoI,cAAepI,EAAIq4C,SAAUr4C,EAAIs4C,SAAUt4C,EAAIy4C,WAE/DqyD,EACT,QACE,OAAOA,GAIb,qBAAqB9qG,GACnB,IAAKA,EACH,OAAO+qG,EAAWC,KAGpB,GAAIhrG,EAAI86C,cACN,OAAI96C,EAAI+6C,kBACCgwD,EAAWG,gCAEbH,EAAWE,YAGpB,GAAIjrG,aAAepC,EAAOyV,uBACxB,OAAO03F,EAAWxP,cAGpB,GAAIv7F,aAAepC,EAAOsV,cACxB,OAAQlT,EAAI6K,MACV,KAAKwU,EAAM3P,mBAAmBK,WAC9B,KAAKsP,EAAM3P,mBAAmBM,gBAC9B,KAAKqP,EAAM3P,mBAAmBO,cAC5B,OAAO86F,EAAWK,sBACpB,KAAK/rF,EAAM3P,mBAAmBI,qBAC5B,OAAOi7F,EAAWO,uBACpB,KAAKjsF,EAAM3P,mBAAmBS,YAC5B,OAAO46F,EAAWM,uBACpB,KAAKhsF,EAAM3P,mBAAmBQ,aAC5B,OAAO66F,EAAWQ,wBACpB,KAAKlsF,EAAM3P,mBAAmBkB,WAC5B,OAAOm6F,EAAWI,sBAIxB,OAAOJ,EAAWS,iBAQpB,OAAOxpF,EAAa22B,GAClB,IAAIx4C,KAAKssG,WAAT,CAaA,GARAtsG,KAAKmsG,QAAQnnG,IAAI,OAAQ,oBACzBhF,KAAKwsG,cAEsB,iBAAhB3qF,GAA4B7hB,KAAKysG,SAAS5qF,cAAgBA,IACnE7hB,KAAKysG,SAAWzsG,KAAKysG,SAASj8C,QAC9BxwD,KAAKysG,SAAS5qF,YAAcA,IAGP,IAAnB22B,EAA0B,CAE5B,MAAMxoB,EAAWhwB,KAAKmsG,QAAQ/7E,OAAOJ,SAMrC,OAAOhwB,KAAKqsG,MAAM3uD,iBAAiB1tB,EAAUhwB,KAAK6sG,YAAa,CAAChtG,EAAKs+C,KACnE,GAAIt+C,EAIF,OAAOG,KAAKwU,QAGdxU,KAAK6sG,YAAc1uD,EACnBn+C,KAAK8sG,sBAKT9sG,KAAKwU,SASP,iBAAiBiN,GACf,MAAM08B,EAAan+C,KAAK6sG,YAExB7sG,KAAKmsG,QAAQnnG,IAAI,kBACJyc,EAAQxU,SAAS,kCACnBkxC,EAAW8B,gDAEtB,MAAM/6C,EAAOlF,KAAKmsG,QAAQ/7E,OAAOgrB,SAAS4b,gBAAgBv1C,GAE1D,IAAKvc,EACH,OAAOlF,KAAKmsG,QAAQ/4C,aAAa,IAAI31D,EAAOuV,0DACJyO,EAAQxU,SAAS,WAG3D,GAAI/H,EAAK8qB,UAAY9qB,EAAK8qB,WAAamuB,EAAWnuB,SAChD,OAAOhwB,KAAKmsG,QAAQ/4C,aAAa,IAAI9tD,wCACDJ,EAAK8qB,iCAAiCmuB,EAAWnuB,aAAa9qB,EAAK4I,WAGzG,MAAM9H,EAAOhG,KACbA,KAAK6sG,YAAYtoD,YAAYr/C,EAAK4I,MAAO,SAAUjO,GACjD,GAAIA,EAQF,OAPKA,EAAI86C,eAAiB96C,aAAepC,EAAOyV,wBAC9ClN,EAAKmmG,QAAQnnG,IAAI,sEAC6Cm5C,EAAW8B,wBAKpEj6C,EAAK4nG,YAAOtqG,GAAW,GAEhC0C,EAAK4nG,YAAOtqG,GAAW,MAK7BhI,EAAOD,QAAUu2D,G,6BCxajB,MAAMp0D,EAAO,EAAQ,GACf0hB,EAAQ,EAAQ,GAChB2E,EAAQ,EAAQ,IAChB9b,EAAQ,EAAQ,GAChB49C,EAAc,EAAQ,IACtB/zC,EAAUsN,EAAMtN,QAIhBo8F,EAAU,IAAIroD,EAAY,MAAQ,KAAQ,MAAQ,OAElDsoD,EAAU,IAAItoD,EAAY,MAAQ,MAAQ,MAAQ,OAClDuoD,EAAYvoD,EAAYpzC,WAAW,GAEnC47F,EAAU,IAAIxoD,EAAY,MAAQ,MAAQ,MAAQ,OAElDyoD,EAAU,IAAIzoD,EAAY,MAAQ,KAAQ,MAAQ,OAClD0oD,EAAU1oD,EAAYpzC,WAAW,YACjC+7F,EAAU3oD,EAAYpzC,WAAW,WAMvC,MAAMg8F,EACJ,eAUA,KAAK/xG,GACH,MAAM,IAAI8I,MAAM,wDAQlB,MAAM9I,GACJ,MAAM,IAAI8I,MAAM,yDAGlB,WACE,MAAM,IAAIA,MAAM,4DASlB,MAAMkP,EAAOmkB,EAAKE,GAChB,MAAM,IAAIvzB,MAAM,yDAclB,UAAUkP,EAAOmoB,EAAO6xE,EAASC,EAAY51E,GAC3C,MAAM61E,EAAoB98F,EAAQvG,QAAQwtB,GACpC81E,EAAUhyE,EAAM9Q,OAAO6iF,GAC7B,IAAIjd,EAAY90D,EAAMvN,OAAOs/E,GAE7B,MAAMxoF,EAAU,GAChB,IAAIysB,EAAUn+B,EACd,MAAMo6F,EAAiBD,EAAQhuG,IAAIiR,EAAQsZ,KAE3C,IAAI,IAAI3vB,EAAI,EAAGA,EAAIs9B,EAAgBt9B,IAE/Bo3C,EADE8+C,EAAUxkE,YAAYrb,EAAQU,MACtBqgC,EAAQhyC,IAAIiuG,GAEZj8D,EAAQhyC,IAAIguG,GAEpBF,GAAc97D,EAAQ1lB,YAAYuhF,KACpC77D,EAAUA,EAAQ7mB,SAAS2iF,IAE7BvoF,EAAQxhB,KAAKiuC,GACb8+C,EAAYA,EAAU3lE,SAASla,EAAQsZ,KAEzC,OAAOhF,EAOT,UAAUrC,GACR,OAAOA,EAAMgrF,WAAW5hG,YAwc5B,SAAS6hG,EAAetyG,GACtB,OAAIA,EAAQ,IACH,IAAImpD,EAAYnpD,EAAO,EAAG,EAAG,GAE/B,IAAImpD,EAAanpD,EAAQ,IAAO,MAAQ,MAAQ,MAAQ,OAGjEnB,EAAQm5D,iBAxcR,cAA+B+5C,EAE7B,cACE5sF,QAOF,KAAKnlB,GAKH,MAAMsY,EAAOtY,EACb,IAAI4P,EAAS,EACb,MAAM/M,EAASyV,EAAKzV,OAEd0vG,EAAU1vG,GAAU,EAEpB2vG,EAAK,IAAIrpD,EACTspD,EAAK,IAAItpD,EACf,IAAIupD,EAAK,IAAIvpD,EACTwpD,EAAK,IAAIxpD,EAEb,IAAK,IAAIpqD,EAAI,EAAGA,EAAIwzG,EAASxzG,IAC3B2zG,EAAKlvG,KAAKovG,SAASt6F,EAAM1I,EAAY,EAAJ7Q,GACjC4zG,EAAKnvG,KAAKovG,SAASt6F,EAAM1I,EAAY,EAAJ7Q,EAAQ,GAEzC2zG,EAAGz8F,SAASu7F,GACZhuG,KAAKqvG,OAAOH,EAAI,IAChBA,EAAGz8F,SAASw7F,GAEZe,EAAGx/E,IAAI0/E,GACPlvG,KAAKqvG,OAAOL,EAAI,IAChBA,EAAGruG,IAAIsuG,GACPD,EAAGv8F,SAASy7F,GAAWvtG,IAAI0tG,GAE3Bc,EAAG18F,SAASw7F,GACZjuG,KAAKqvG,OAAOF,EAAI,IAChBA,EAAG18F,SAASu7F,GACZiB,EAAGz/E,IAAI2/E,GACPnvG,KAAKqvG,OAAOJ,EAAI,IAChBA,EAAGtuG,IAAIquG,GACPC,EAAGx8F,SAASy7F,GAAWvtG,IAAI2tG,GAY7B,OANAliG,GAAoB,GAAV2iG,EAEVG,EAAK,IAAIvpD,EACTwpD,EAAK,IAAIxpD,EAGO,GAATtmD,GACL,KAAK,GACH8vG,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,KAAK0iB,UAAU,KACnD,KAAK,GACHqgF,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,KAAK0iB,UAAU,KACnD,KAAK,GACHqgF,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,KAAK0iB,UAAU,KACnD,KAAK,GACHqgF,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,KAAK0iB,UAAU,KACnD,KAAK,GACHqgF,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,KAAK0iB,UAAU,KACnD,KAAK,GACHqgF,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,IAClD,KAAK,EACHqgF,EAAG3/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,KAClC+iG,EAAG18F,SAASw7F,GACZjuG,KAAKqvG,OAAOF,EAAI,IAChBA,EAAG18F,SAASu7F,GACZiB,EAAGz/E,IAAI2/E,GACT,KAAK,EACHD,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,KAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,KAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,KAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,KAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,KAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,KAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,EAAO,IAAI0iB,UAAU,IAClD,KAAK,EACHogF,EAAG1/E,IAAIs/E,EAAeh6F,EAAK1I,KAC3B8iG,EAAGz8F,SAASu7F,GACZhuG,KAAKqvG,OAAOH,EAAG,IACfA,EAAGz8F,SAASw7F,GACZe,EAAGx/E,IAAI0/E,GAgBX,OAZAF,EAAGx/E,IAAIm2B,EAAYpzC,WAAWlT,IAC9B4vG,EAAGz/E,IAAIm2B,EAAYpzC,WAAWlT,IAE9B2vG,EAAGruG,IAAIsuG,GACPA,EAAGtuG,IAAIquG,GAGPhvG,KAAKsvG,KAAKN,GACVhvG,KAAKsvG,KAAKL,GAEVD,EAAGruG,IAAIsuG,GAEA,IAAIprF,EAAM8V,aAAaq1E,GAUhC,SAASlyG,EAAKsP,EAAQlK,GACpB,MACMqtG,EAAcnjG,GADTlK,GAAS,GAEpB,OAAO,IAAIyjD,EACR7oD,EAAIyyG,GAAiBzyG,EAAIyyG,EAAc,IAAM,EAC7CzyG,EAAIyyG,EAAc,GAAOzyG,EAAIyyG,EAAc,IAAM,EACjDzyG,EAAIyyG,EAAc,GAAOzyG,EAAIyyG,EAAc,IAAM,EACjDzyG,EAAIyyG,EAAc,GAAOzyG,EAAIyyG,EAAc,IAAM,GAQtD,OAAOttC,EAAGjlE,GACR,MAAM8jE,EAAOmB,EAAEzR,QAAQ1hC,UAAU9xB,GACjCilE,EAAEryC,mBAAmB,GAAK5yB,GAAGuyB,GAAGuxC,GAIlC,KAAK1/D,GACHA,EAAEouB,IAAI,IAAIm2B,EAAYvkD,EAAEivD,UAAU,KAAO,EAAMjvD,EAAEivD,UAAU,IAAM,GAAM,MAASjvD,EAAEivD,UAAU,KAAO,EAAG,EAAG,IACzGjvD,EAAEqR,SAAS07F,GACX,MAAM3hF,EAAQ,IAAIm5B,EACfvkD,EAAEivD,UAAU,KAAO,EAAOjvD,EAAEivD,UAAU,IAAM,GAAM,MACnDjvD,EAAEivD,UAAU,KAAO,EACnB,EACA,GAEFjvD,EAAEouB,IAAIhD,GACNprB,EAAEqR,SAAS27F,GACXhtG,EAAEouB,IAAI,IAAIm2B,EAAYvkD,EAAEivD,UAAU,KAAO,EAAKjvD,EAAEivD,UAAU,IAAM,GAAK,MAASjvD,EAAEivD,UAAU,KAAO,EAAG,EAAG,IAQzG,MAAM7zD,GACJ,OAAO,IAAIqnB,EAAM8V,aAAagsB,EAAYj7B,WAAWluB,IAGvD,WAKE,OAJKwD,KAAKwvG,YAERxvG,KAAKwvG,UAAYxvG,KAAKie,MAAM,yBAEvBje,KAAKwvG,UAGd,WAIE,OAHKxvG,KAAKyvG,YACRzvG,KAAKyvG,UAAYzvG,KAAKie,MAAM,wBAEvBje,KAAKyvG,UAGd,WAIE,OAHKzvG,KAAK0vG,YACR1vG,KAAK0vG,UAAY99F,EAAQ8Y,WAAW,wBAE/B1qB,KAAK0vG,UAGd,WAIE,OAHK1vG,KAAK2vG,YACR3vG,KAAK2vG,UAAY/9F,EAAQ8Y,WAAW,yBAE/B1qB,KAAK2vG,UAGd,aAIE,OAHK3vG,KAAK4vG,cACR5vG,KAAK4vG,YAAc5vG,KAAK6vG,WAAW/jF,SAAS9rB,KAAK8vG,aAE5C9vG,KAAK4vG,YAGd,MAAMp7F,EAAOmkB,EAAKE,GAEZrkB,EAAMkX,OAAOiN,IAAQnkB,EAAMkX,OAAO1rB,KAAKq5B,cACzCV,EAAM34B,KAAK+vG,YAGb,MAAMC,EAAWp+F,EAAQ8Y,WAAWlW,EAAMq6F,WAAW5hG,YAGrD,IAAI0vB,EAFW/qB,EAAQ8Y,WAAWiO,EAAIk2E,WAAW5hG,YAE9B6e,SAASkkF,GAM5B,OALIrzE,EAAMlR,eACRkR,EAAQA,EAAMh8B,IAAIX,KAAKyuG,eAGVzuG,KAAKiwG,UAAUD,EAAUrzE,EAAO38B,KAAK6vG,WAAY7vG,KAAKyuG,aAAc51E,GACrEtzB,IAAI08D,GAAKjiE,KAAKie,MAAMgkD,EAAEh1D,aAGtC,UAAU4W,GAER,MAAMrnB,EAAQqnB,EAAMgrF,WAGpB,OAAOryG,EAAM6zD,UAAU,GAAK,IAAM7zD,EAAM6zD,UAAU,GAAK,IAAM7zD,EAAM6zD,UAAU,GAAK,IAAM7zD,EAAM6zD,UAAU,KAyO5Gh1D,EAAQi5D,gBAlOR,cAA8Bi6C,EAC5B,cACE5sF,QAEA3hB,KAAKkwG,QAAU,EAAQ,IAOzB,KAAK1zG,GACCgB,EAAKwB,QAAQxC,KACfA,EAAQuL,EAAMlJ,qBAAqBrC,IAErC,MAAM2zG,EAAcnwG,KAAKkwG,QAAQv+D,WAAW,OAAOC,OAAOp1C,GAAOq1C,SACjE,OAAO,IAAIhuB,EAAM+V,YAAYhoB,EAAQzF,WAAWgkG,GAAa1qF,OAM/D,MAAMjpB,GACJ,OAAO,IAAIqnB,EAAM+V,YAAYhoB,EAAQ8Y,WAAWluB,IAGlD,WAIE,OAHKwD,KAAKwvG,YACRxvG,KAAKwvG,UAAYxvG,KAAKie,MAAM,OAEvBje,KAAKwvG,UAGd,WAIE,OAHKxvG,KAAK0vG,YACR1vG,KAAK0vG,UAAY99F,EAAQW,WAAW7L,KAAK2e,IAAI,EAAG,OAE3CrlB,KAAK0vG,UAGd,WAIE,OAHK1vG,KAAKyvG,YACRzvG,KAAKyvG,UAAY,IAAI5rF,EAAM+V,YAAY55B,KAAK6vG,aAEvC7vG,KAAKyvG,UAGd,aAIE,OAHKzvG,KAAK4vG,cACR5vG,KAAK4vG,YAAc5vG,KAAK6vG,WAAWlvG,IAAIiR,EAAQsZ,MAE1ClrB,KAAK4vG,YAGd,MAAMp7F,EAAOmkB,EAAKE,GAEZrkB,EAAMkX,OAAOiN,IAAQnkB,EAAMkX,OAAO1rB,KAAKq5B,cACzCV,EAAM34B,KAAK+vG,YAGb,MAAMC,EAAWx7F,EAAMq6F,WAGvB,IAAIlyE,EAFWhE,EAAIk2E,WAEA/iF,SAASkkF,GAM5B,OALIrzE,EAAM/P,SAAShb,EAAQU,QACzBqqB,EAAQA,EAAMh8B,IAAIX,KAAKyuG,eAGVzuG,KAAKiwG,UAAUD,EAAUrzE,EAAO38B,KAAK6vG,WAAY7vG,KAAKyuG,aAAc51E,GACrEtzB,IAAI08D,GAAK,IAAIp+C,EAAM+V,YAAYqoC,MA8JjD5mE,EAAQk5D,qBA1JR,cAAmCg6C,EACjC,cACE5sF,QAOF,KAAKnlB,GAGCgB,EAAKwB,QAAQxC,KACfA,EAAQuL,EAAMlJ,qBAAqBrC,IAErC,IAAI4zG,EAAY5zG,EAAM6C,OACtB,IAAI,IAAI9D,EAAIiB,EAAM6C,OAAS,EAAG9D,EAAI,GAChB,IAAbiB,EAAMjB,GAD0BA,IAEjC60G,EAAY70G,EAKhB,OAAO,IAAIsoB,EAAM6V,iBAAiBl9B,EAAMkG,MAAM,EAAG0tG,IAGnD,UAAUvsF,GACR,OAAOA,EAAMgrF,WAAW5hG,SAAS,OAGnC,MAAMzQ,GACJ,OAAOwD,KAAK6V,KAAK9N,EAAMzJ,sBAAsB9B,EAAO,QAGtD,WAIE,OAHKwD,KAAKwvG,YACRxvG,KAAKwvG,UAAYxvG,KAAK6V,KAAK,KAEtB7V,KAAKwvG,UAGd,UAAUtjG,EAAQmkG,GAKhB,IAAI5tG,EAASyJ,EACVA,EAAO7M,SAAWgxG,IACnB5tG,EAAS3E,OAAOC,MAAMsyG,GACtBnkG,EAAO3J,KAAKE,IAId,MAAMmzC,EAAO,IAAI72C,MAAM2H,KAAKsoB,KAAKvsB,EAAOpD,OAAS,IACjD,IAAK,IAAI9D,EAAI,EAAGA,EAAIq6C,EAAKv2C,OAAQ9D,IAAK,CACpC,IACIiB,EADA4P,EAAS3J,EAAOpD,OAAoB,GAAT9D,EAAI,GAEnC,GAAI6Q,EAAS,EAAG,CAEdA,GAAkB,EAClB5P,EAAQ,EACR,IAAK,IAAIiK,EAAI,EAAGA,EAAI2F,EAAQ3F,IAAK,CAE/BjK,GADaiG,EAAOgE,IACwB,GAAlB2F,EAAS3F,EAAI,SAIzCjK,EAAQiG,EAAOqK,YAAYV,GAE7BwpC,EAAKr6C,GAAKiB,EAEZ,OAAO,IAAIoV,EAAQgkC,EAAM,GAG3B,UAAU06D,EAAQD,GAEhB,MAAMnkG,EAAS0F,EAAQnF,SAAS6jG,GAChC,GAAIpkG,EAAO7M,SAAWgxG,EACpB,OAAOnkG,EAIT,IAAIsI,EAAOnV,EACO,IAAd6M,EAAO,IACTsI,EAAQ,EACRnV,EAAS6M,EAAO7M,OAAS,IAEzBmV,EAAQ,EACRnV,EAAS6M,EAAO7M,QAGlB,MAAMoD,EAAS3E,OAAOC,MAAMsyG,GAE5B,OADAnkG,EAAO3J,KAAKE,EAAQ4tG,EAAmBhxG,EAAQmV,EAAOnV,EAASmV,GACxD/R,EAGT,MAAM+R,EAAOmkB,EAAKE,GAChB,MAAM03E,EAAa/7F,EAAMqY,QAAQ8L,GAEjC,GAAmB,IAAf43E,GAAoB/7F,EAAMkX,OAAO1rB,KAAKq5B,YACxC,MAAM,IAAI/zB,MAAM,oDAGlB,IAAI0qG,EAAUQ,EAAQ7zE,EAAO8xE,EAAYD,EACzC,MAAMiC,EAAoB7+F,EAAQW,WAAWsmB,GAG7C,IAAIw3E,EAAmB3pG,KAAK8T,IAAIhG,EAAMq6F,WAAWxvG,OAAQs5B,EAAIk2E,WAAWxvG,QACxE,GAAIkxG,EAAa,EAAG,CAClB,IAAIG,EAAa,EACjB,KACEV,EAAWhwG,KAAK2wG,UAAUn8F,EAAMq6F,WAAYwB,GAE5C1zE,GADA6zE,EAASxwG,KAAK2wG,UAAUh4E,EAAIk2E,WAAYwB,IACzBvkF,SAASkkF,KACL,IAAfU,GAAoB/zE,EAAM9P,QAAQ4jF,IAAsB,IAG5DJ,GAAoB,EACpBK,GAAc,MAEX,CACL,IAAIA,EAAa,EACjB,KACEV,EAAWhwG,KAAK2wG,UAAUn8F,EAAMq6F,WAAYwB,GAC5CG,EAASxwG,KAAK2wG,UAAUh4E,EAAIk2E,WAAYwB,GAExC7B,GADAC,EAAa78F,EAAQW,WAAW7L,KAAK2e,IAAI,EAAsB,EAAnBgrF,KACvBvkF,SAASla,EAAQsZ,KACtCyR,EAAQ6zE,EAAO1kF,SAASkkF,GAAUrvG,IAAI8tG,KACnB,IAAfiC,GAAoB/zE,EAAM9P,QAAQ4jF,IAAsB,IAG5DJ,GAAoB,EACpBK,GAAc,EAKlB,OADe1wG,KAAKiwG,UAAUD,EAAUrzE,EAAO6xE,EAASC,EAAY51E,GACtDtzB,IAAI08D,GAAK,IAAIp+C,EAAM6V,iBAAiB15B,KAAK4wG,UAAU3uC,EAAGouC,Q,6BCviBxE,MAAM7yG,EAAO,EAAQ,GACf6mB,EAAS,EAAQ,GACjBnF,EAAQ,EAAQ,GAChBnX,EAAQ,EAAQ,GAChBtK,EAAS,EAAQ,GACjBozG,EAAgB,EAAQ,KACxBC,EAAY,EAAQ,KACpBC,EAAiB,EAAQ,KACzBC,EAAQ,EAAQ,KAChBC,EAAmB,EAAQ,KAU3BC,EAAiB,iGACjBC,EAAiB,kFACjBC,EAAmB,0FACnBC,EAAmB,mFACnBC,EAAmB,mFACnBC,EAAe,oFACfC,EAAe,gFACfC,EAAqB,4FACrBC,EAAqB,4FACrBC,EAAsB,8FACtBC,EAAsB,8FAKtBC,EAAsB,4FAW5B,SAASC,EAAazsG,EAAS0sG,GAC7B/xG,KAAK+xG,GAAKA,EACV/xG,KAAKqjC,gBAAkBh+B,EAAQ3G,SAC/BsB,KAAKgyG,YAAc,KACnBhyG,KAAKiyG,cAAgB,KACrBjyG,KAAKkyG,cAAgB,KACrBlyG,KAAKmyG,UAAY,KACjBnyG,KAAKoyG,iBAAmB,KACxBpyG,KAAKqyG,gBAAkB,KACvBryG,KAAKsyG,iBAAkB,EA2VzB,SAASC,EAAeltG,EAAS0sG,GAC/BD,EAAap2G,KAAKsE,KAAMqF,EAAS0sG,GACjC/xG,KAAKgyG,YAAcd,EACnBlxG,KAAKiyG,cAAgBb,EACrBpxG,KAAKmyG,UAAYZ,EACjBvxG,KAAKoyG,iBAAmBT,EACxB3xG,KAAKqyG,gBAAkBZ,EAiRzB,SAASe,EAAentG,EAAS0sG,EAAI7jD,GACnC4jD,EAAap2G,KAAKsE,KAAMqF,EAAS0sG,GACjC/xG,KAAKkuD,YAAcA,EACnBluD,KAAKgyG,YAAcb,EACnBnxG,KAAKiyG,cAAgBZ,EACrBrxG,KAAKmyG,UAAYX,EACjBxxG,KAAKoyG,iBAAmBR,EACxB5xG,KAAKqyG,gBAAkBX,EACvB1xG,KAAKkyG,cAAgBZ,EAuYvB,SAASmB,EAAeptG,EAAS0sG,EAAI7jD,GACnCskD,EAAe92G,KAAKsE,KAAMqF,EAAS0sG,EAAI7jD,GACvCluD,KAAKsyG,iBAAkB,EA8PzB,SAASI,EAAgBC,EAAMC,EAAYC,EAAeC,GACxD,IAAIv3G,EACJ,IAAKA,EAAI,EAAGA,EAAIo3G,EAAOC,GAAcr3G,EAAIu3G,EAAazzG,OAAQ9D,IAC5Ds3G,EAAcnuG,KAAKouG,EAAav3G,IAElC,OAAOA,EAGT,SAASw3G,EAAeC,EAAoBn+C,EAAao+C,GACvD,MAAMnyG,EAAO7E,OAAO6E,KAAKkyG,GACzB,IAAK,IAAIz3G,EAAI,EAAGA,EAAIuF,EAAKzB,OAAQ9D,IAAK,CACpC,MAAM23G,EAASpyG,EAAKvF,GACd05D,EAAKJ,EAAYq+C,GACvB,IAAKj+C,EAEH,SAEF,MAAMk+C,EAAKzsG,KAAKS,IAAIgf,SAAS6sF,EAAmBE,GAAS,IAAKj+C,EAAGC,YACjE,GAAIi+C,EAAK,KAAOF,EAAaC,IAAWD,EAAaC,GAAUC,GAC7D,OAAO,EAGX,OAAO,EA3wCTrB,EAAa30G,UAAUi2G,gBAAkB,SAAUt3G,EAAMu3G,EAAeC,EAAUC,EAAiB97C,GACjG,MAAM/B,EAAS,CACb55D,KAAMA,EACNu3G,cAAeA,EACfC,SAAUA,EACVC,gBAAiBA,EACjBp9C,eAAgB,KAChBsB,SAAqB,IAAZA,EACTH,KAAM,GACNI,OAAQ,GACRgB,UAAW,GACXD,WAAY,GACZF,MAAO,IAGT,OADA7C,EAAOS,eAgmCT,SAAiCm9C,EAAUC,GACzC,GAAI,kBAAkB9gF,KAAK6gF,GAAW,CACpC,MAAMH,EAAKhtF,SAASotF,EAAoC,mBAAG,IAC3D,GAAIJ,EAAK,EACP,OAuBiCK,EAvBIL,EAwBlC,SAA8Bv6E,EAAWy8B,EAAqBV,GACnE,MAAM85C,EAAap5C,EAAoBh2D,OACjC8zG,EAAKzsG,KAAKS,IAAIqsG,EAAmB/E,GACjCv4C,EAAW,GACjB,IAAK,IAAI36D,EAAI,EAAGA,EAAIkzG,EAAYlzG,IAAK,CACnC,MAAMuB,EAAMu4D,EAAoB95D,GAC1Bs3G,EAAgB,CAACl+C,EAAgB73D,IACvC,IAAK,IAAI2J,EAAI,EAAGA,EAAIgoG,GAAcoE,EAAcxzG,OAAS8zG,EAAI1sG,IAAK,CAChE,IAAIgtG,EAAmBl4G,EAAIkL,EACvBgtG,GAAoBhF,IAEtBgF,GAAsChF,GAExC,MAAMiF,EAAc/+C,EAAgBU,EAAoBo+C,KAEZ,IAAxCZ,EAAc7uG,QAAQ0vG,IACxBb,EAAcnuG,KAAKgvG,GAGvBx9C,EAASp5D,GAAO+1G,EAElB,OAAO38C,GAtBX,IAAuCs9C,EApBrC,GAAI,2BAA2B/gF,KAAK6gF,GAClC,OAkDoCN,EAlDEO,EA4DjC,SAA+B36E,EAAWy8B,EAAqBV,EAAiBE,GACrF,MAAMqB,EAAW,GACXu4C,EAAap5C,EAAoBh2D,OAEvC,IAAK,IAAI9D,EAAI,EAAGA,EAAIkzG,EAAYlzG,IAAK,CACnC,MAAMuB,EAAMu4D,EAAoB95D,GAC1Bs3G,EAAgB,GAChBI,EAAe,GACfU,EAAc,GACdb,EAAe,GACrB,IAAK,IAAIrsG,EAAI,EAAGA,EAAIgoG,EAAYhoG,IAAK,CACnC,IAAIgtG,EAAmBl4G,EAAIkL,EACvBgtG,GAAoBhF,IAEtBgF,GAAsChF,GAExC,MAAMzvD,EAAI2V,EAAgBU,EAAoBo+C,IAE9C,IAAkC,IAA9BZ,EAAc7uG,QAAQg7C,GACxB,SAEF,MAAMiW,EAAKjW,EAAErD,WAEb,IAAIg3D,EAAOxsF,SAAS6sF,EAAmB/9C,GAAK,IAC5C,IAAK09C,EACH,SAEFA,EAAOjsG,KAAKS,IAAIwrG,EAAM99C,EAAYI,GAAIC,YACtC,IAAI09C,EAAaK,EAAah+C,IAAO,EAErC,GAAI29C,GAAcD,EAChB,SAEF,IAAIiB,EAAkBD,EAAY1+C,GAIlC,GAHK2+C,IACHA,EAAkBD,EAAY1+C,GAAM,IAAIltD,EAAMhI,SAE5Ci/C,EAAEpD,MACFg4D,EAAgBhzG,SAASo+C,EAAEpD,OAC3Bg4D,EAAgBv0G,OAASw1D,EAAYI,GAAIE,MAAM91D,OAG7CyzG,EAAazzG,OAASszG,EAAOC,GAC/BE,EAAapuG,KAAKs6C,QAWtB,GAPAi0D,EAAaj0D,EAAErD,cAAgBi3D,EAC/BC,EAAcnuG,KAAKs6C,GACfA,EAAEpD,MAAQg4D,EAAgBjzG,IAAIq+C,EAAEpD,OAASg4D,EAAgBv0G,SAAWw1D,EAAYI,GAAIE,MAAM91D,SAG5F4zG,EAAah+C,IAAOy9C,EAAgBC,EAAMC,EAAYC,EAAeC,IAEnEC,EAAeC,EAAoBn+C,EAAao+C,GAClD,MAGJ/8C,EAASp5D,GAAO+1G,EAElB,OAAO38C,GAtEX,IAAwC88C,EA/CtC,OAAO,SAAqBp6E,EAAWw8B,EAAMT,GAC3C,MAAMuB,EAAW,GACjB,IAAK,MAAMp5D,KAAO63D,EACXA,EAAgBv3D,eAAeN,KAGpCo5D,EAASp5D,GAAO,CAAC63D,EAAgB73D,KAEnC,OAAOo5D,GAnnCe29C,CAAwBP,EAAUC,GACnD79C,GAQTo8C,EAAa30G,UAAUs4D,YAAc,SAAU35D,EAAMuE,KAQrDyxG,EAAa30G,UAAU64D,aAAe,SAAUJ,EAAev1D,KAU/DyxG,EAAa30G,UAAUo6D,SAAW,SAAUlB,EAAcv6D,EAAMu7D,EAAOI,EAASp3D,GAC9E,IAiBIyzG,EAAUC,EAAYC,EAjBtBjW,EAAY1mC,GAASA,EAAMv7D,GAO/B,GANKiiG,IACHA,EAAY,IAAI8S,EAAc/0G,GAC1Bu7D,IACFA,EAAMv7D,GAAQiiG,IAGdA,EAAUkW,OACZ,OAAO5zG,EAAS,KAAM09F,GAGxB,GADAA,EAAU37C,KAAK,OAAQ/hD,GACnB09F,EAAUmW,QAEZ,OAGFnW,EAAUmW,SAAU,EAEpB,MAAMluG,EAAOhG,KACb,IAAIm0G,EAAe18C,EACnB1vD,EAAM5B,OAAO,CACX,SAAqB1F,GACnB,MAAMuxG,EAAcmC,EAAetC,EAAsB7rG,EAAKgsG,YACxDlkG,EAAQtQ,EAAKgE,OAAOwwG,EAAa37C,EAAcv6D,GACrDkK,EAAK+rG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EACF,OAAOY,EAAKZ,GAEdi0G,EAAWlxD,EAAShyC,KAAK,GACzBnQ,OAGJ,SAA4BA,GAE1B,GAAKqzG,IAAY9tG,EAAKssG,sBAAoChvG,IAAjB6wG,EAiBvC,OAAO1zG,IAjB4D,CACnE,MAAMqN,EAAQtQ,EAAKgE,OAAOqwG,EAAqBx7C,EAAcv6D,GAC7DkK,EAAK+rG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EAIF,OAAOY,KAETqzG,EAAWlxD,EAAShyC,KAAK,MAGvBujG,GAAe,GAEjB1zG,QAMN,SAAwBA,GACtB,IAAKqzG,EACH,OAAOrzG,IAET,MAAMwxG,EAAgBkC,EAnIE,6FAmIqCnuG,EAAKisG,cAC5DnkG,EAAQtQ,EAAKgE,OAAOywG,EAAe57C,EAAcv6D,GACvDkK,EAAK+rG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EACF,OAAOY,EAAKZ,GAEdk0G,EAAanxD,EAAShyC,KACtBnQ,OAGJ,SAAoBA,GAClB,IAAKqzG,IAAa9tG,EAAKksG,eAAiBiC,EAEtC,OAAO1zG,IAET,MAAMqN,EAAQtQ,EAAKgE,OAAOwE,EAAKksG,cAAe77C,EAAcv6D,GAC5DkK,EAAK+rG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EACF,OAAOY,EAAKZ,GAEdm0G,EAAYpxD,EAAShyC,KACrBnQ,QAGH,SAAqBZ,GACtB,GAAIA,IAAQi0G,EAEV,OADA/V,EAAUmW,SAAU,EACbnW,EAAUllF,KAAK,OAAQhZ,EAAK,MAErCmG,EAAKouG,kBAAkBrW,EAAW+V,EAAUC,EAAYC,EAAWG,EAAc,SAAUt0G,GACzFk+F,EAAUmW,SAAU,EACpBnW,EAAUkW,QAAUp0G,EACpBk+F,EAAUllF,KAAK,OAAQhZ,EAAKk+F,QAWlC+T,EAAa30G,UAAUw2D,OAAS,SAAU0C,EAAcv6D,EAAMu7D,EAAOh3D,GACnE,IAAImqD,EAAU6M,GAASA,EAAMv7D,GAW7B,GAVK0uD,IACHA,EAAU,IAAInmC,EAAO6hB,aACjBmxB,IACFA,EAAMv7D,GAAQ0uD,GAEhBA,EAAQxK,gBAAgB,GACxBwK,EAAQ0pD,SAAU,EAClB1pD,EAAQ1uD,KAAOA,EACf0uD,EAAQC,OAAS,MAEfD,EAAQC,OACV,OAAOpqD,EAAS,KAAMmqD,GAGxB,GADAA,EAAQpI,KAAK,OAAQ/hD,GACjBmqD,EAAQ0pD,QAEV,OAEF1pD,EAAQ0pD,SAAU,EAElB,MAAMpmG,EAAQtQ,EAAKgE,OAAOxB,KAAKmyG,UAAW97C,EAAcv6D,GAClDkK,EAAOhG,KACbA,KAAK+xG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EACF,OAAO2qD,EAAQ3xC,KAAK,OAAQhZ,GAE9B,MAAMmmC,EAAM4c,EAAShyC,KAAK,GAC1B,IAAKo1B,EAEH,OADAwkB,EAAQ0pD,SAAU,EACX1pD,EAAQ3xC,KAAK,OAAQ,KAAM,MAEpC7S,EAAKquG,UAAU7pD,EAASxkB,EAAK,SAAUnmC,GAErC,OADA2qD,EAAQ0pD,SAAU,EACdr0G,EACK2qD,EAAQ3xC,KAAK,OAAQhZ,GAEvB2qD,EAAQ3xC,KAAK,OAAQ,KAAM2xC,QAYxCsnD,EAAa30G,UAAUk3G,UAAY,SAAU7pD,EAASxkB,EAAK3lC,KAc3DyxG,EAAa30G,UAAUi3G,kBAAoB,SAAUrW,EAAW+V,EAAUC,EAAYC,EAAWv8C,EAASp3D,KAW1GyxG,EAAa30G,UAAUk7D,oBAAsB,SAAUhC,EAAcv6D,EAAMu7D,EAAOh3D,KAWlFyxG,EAAa30G,UAAUw6D,aAAe,SAAUtB,EAAcv6D,EAAM08D,EAAWnB,EAAOh3D,GAEpF,IAAIyN,EAAQ9N,KAAKqyG,gBACbjxD,EAASphD,KAAKs0G,eAAev3G,KAAKiD,MAClCw4D,IACF1qD,EAAQ9N,KAAKoyG,iBACbhxD,EAASphD,KAAKu0G,gBAAgBx3G,KAAKiD,OAKrC,IAAIw0G,EAAgBn9C,GAASA,EAAMv7D,GAQnC,GAPK04G,IACHA,EAAgB,IAAInwF,EAAO6hB,aACvBmxB,IACFA,EAAMv7D,GAAQ04G,GAEhBA,EAAcx0D,gBAAgB,IAE5Bw0D,EAAczvG,OAChB,OAAO1E,EAAS,KAAMm0G,EAAczvG,QAEtCyvG,EAAcpyD,KAAK,OAAQ/hD,GACvBm0G,EAAcN,UAIlBM,EAAcN,SAAU,EAExBpmG,EAAQtQ,EAAKgE,OAAOsM,EAAOuoD,EAAcv6D,GACzCkE,KAAK+xG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAElC,GADA4xD,EAAcN,SAAU,EACpBr0G,GAAgC,IAAzB+iD,EAAShyC,KAAKvR,OACvB,OAAOm1G,EAAc37F,KAAK,OAAQhZ,EAAK,MAErC+iD,EAAShyC,KAAKvR,OAAS,IACzBm1G,EAAczvG,OAAS,IAEzBgD,EAAM5E,KAAKy/C,EAAShyC,KAAM,SAAUo1B,EAAKvlC,GACvC2gD,EAAOpb,EAAK,SAAUnmC,EAAKi0B,GACzB,GAAIj0B,EACF,OAAOY,EAAKZ,GAEd20G,EAAczvG,OAAO,IAAM+uB,EAAKkkC,UAAUzxD,KAAK,KAAO,KAAOutB,EAC7DrzB,OAED,SAAUZ,GACX,GAAIA,EACF,OAAO20G,EAAc37F,KAAK,OAAQhZ,GAEpC20G,EAAc37F,KAAK,OAAQ,KAAM27F,EAAczvG,cAUrD+sG,EAAa30G,UAAUo3G,gBAAkB,SAAUvuE,EAAK3lC,KAQxDyxG,EAAa30G,UAAUm3G,eAAiB,SAAUtuE,EAAK3lC,KAIvDyxG,EAAa30G,UAAUs3G,OAAS,SAAUtzG,GACxC,OAAKA,EAIDnB,KAAKqjC,gBAAgB99B,KAAOpE,aAAenB,KAAKqjC,gBAAgB99B,IAE3DpE,EAGF,IAAIgc,IAAIlhB,OAAO6E,KAAKK,GAAKoE,IAAInE,GAAK,CAAEA,EAAGD,EAAIC,MARzC,IAAI+b,KAWf20F,EAAa30G,UAAUu3G,aAAe,SAAUnvG,GAC9C,IAAKA,EACH,OAAOA,EAGT,GAAIvF,KAAKqjC,gBAAgB99B,KAAOA,aAAevF,KAAKqjC,gBAAgB99B,IAAK,CACvE,MAAMzF,EAAS,GAEf,OADAyF,EAAI3C,QAAQ,CAACpG,EAAOM,IAAQgD,EAAOhD,GAAON,GACnCsD,EAGT,OAAOyF,GAmBT/H,EAAK2P,SAASolG,EAAgBT,GAG9BS,EAAep1G,UAAU64D,aAAe,SAAUJ,EAAev1D,GAC/D,MAAM2F,EAAOhG,KACPuzD,EAAY,GAClBvzD,KAAK+xG,GAAGjkG,MAjZoB,wCAiZS8nD,EAAe,SAAU/1D,EAAKC,GACjE,GAAID,EACF,OAAOQ,EAASR,GAElB,IAAK,IAAItE,EAAI,EAAGA,EAAIuE,EAAO8Q,KAAKvR,OAAQ9D,IAAK,CAC3C,MAAMyqC,EAAMlmC,EAAO8Q,KAAKrV,GAClBm6D,EAAS1vD,EAAKotG,gBAClBptE,EAAmB,cACnBA,EAAoB,eACpBA,EAAoB,eACpBoG,KAAKnuB,MAAM+nB,EAAsB,kBAAK,OACxCutB,EAAUmC,EAAO55D,MAAQ45D,EAE3Br1D,EAAS,KAAMkzD,MAKnBg/C,EAAep1G,UAAUs4D,YAAc,SAAU35D,EAAMuE,GACrD,MAAM2F,EAAOhG,KACbA,KAAK+xG,GAAGjkG,MAAMtQ,EAAKgE,OApaW,mEAoaqB1F,GAAO,SAAU+D,EAAKC,GACvE,GAAID,EACF,OAAOQ,EAASR,GAElB,MAAMmmC,EAAMlmC,EAAO8Q,KAAK,GACxB,IAAKo1B,EACH,OAAO3lC,EAAS,KAAM,MAExBA,EAAS,KAAM2F,EAAKotG,gBAClBptE,EAAmB,cACnBA,EAAoB,eACpBA,EAAoB,eACpBoG,KAAKnuB,MAAM+nB,EAAsB,uBAKvCusE,EAAep1G,UAAUi3G,kBAAoB,SAAUrW,EAAW+V,EAAUC,EAAYC,EAAWv8C,EAASp3D,GAC1G,IAAI9E,EAAGK,EAAGE,EAAMojB,EAChB,MAAMmC,EAAUrhB,KAAK+xG,GAAGhqE,aAClB4sE,EAAe,GACrB,IAAIr5C,EAAgB,GAChBC,EAAiB,GACrBwiC,EAAUxjC,+BAAiCu5C,EAAiC,uBAC5E/V,EAAUvjC,QAAUs5C,EAAkB,QACtC/V,EAAUtjC,QAAUq5C,EAAkB,QACtC/V,EAAUpjC,gBAAkBm5C,EAAoC,0BAChE/V,EAAUnjC,kBAAoBxuB,KAAKnuB,MAAM61F,EAAsC,6BAC/E/V,EAAUhvF,YAAcq9B,KAAKnuB,MAAM61F,EAAiC,wBACpE/V,EAAUrjC,eAAiBo5C,EAA2B,iBACtD/V,EAAUljC,sBAAwBi5C,EAAmC,yBACrE/V,EAAUjjC,iBAAmBg5C,EAA6B,mBAC1D/V,EAAU/iC,qBAAuB84C,EAAqC,4BAAK/V,EAAU/iC,qBACrF+iC,EAAU6W,oBAAsBd,EAAsC,6BAAK/V,EAAU6W,oBACrF7W,EAAU9iC,WAAa64C,EAA+B,sBAAK/V,EAAU9iC,WACrE8iC,EAAU7iC,iBAAmB44C,EAA4B,mBAAK/V,EAAU7iC,iBACxE6iC,EAAU8W,cAAgBf,EAAyB,gBAAK/V,EAAU8W,mBACpB,IAAnCf,EAA6B,oBAEtC/V,EAAU5iC,iBAAmB24C,EAA6B,oBAAK/V,EAAU5iC,iBACzE4iC,EAAU3iC,iBAAmB04C,EAA6B,oBAAK/V,EAAU3iC,mBAIzE2iC,EAAU5iC,iBAAmB,KAC7B4iC,EAAU3iC,iBAAmB,WAEe,IAAnC04C,EAA6B,qBAEtC/V,EAAU+W,iBAAmBhB,EAA6B,oBAE5D/V,EAAU98F,QAAU,GACpB,KACE,WAEE,IAAK1F,EAAI,EAAGA,EAAIw4G,EAAW10G,OAAQ9D,IAAK,CACtC,MAAMyqC,EAAM+tE,EAAWx4G,GACjB0J,EAAOoc,EAAQutC,gBAAgB5oB,EAAe,WAOpD,OANApqC,EAAI,CACFE,KAAMkqC,EAAiB,YACvB/gC,KAAMA,GAER84F,EAAU98F,QAAQyD,KAAK9I,GACvB+4G,EAAa/4G,EAAEE,MAAQF,EACfoqC,EAAU,MAChB,IAAK,gBACHs1B,EAAc52D,KAAK,CAAC9I,EAAGA,EAAGsG,MAAQ8jC,EAAqB,iBAAK,IAC5D,MACF,IAAK,iBACHu1B,EAAe72D,KAAK,CAClB9I,EAAGA,EACHsG,MAAQ8jC,EAAqB,iBAAK,EAClC+uE,MAAOn5G,EAAEqJ,KAAKI,QAAQshD,SAAW,OAAS,UAnBpD,GAyBI2U,EAAcj8D,OAAS,IACzB0+F,EAAUziC,cAAgBA,EAAc9+C,KAAKzU,EAAM9B,YAAY,UAAUV,IAAI,SAAUd,GACrF,OAAOA,EAAK7I,IAEd2/D,EAAe/+C,KAAKzU,EAAM9B,YAAY,UACtC83F,EAAUxiC,eAAiBA,EAAeh2D,IAAI,SAAUd,GACtD,OAAOA,EAAK7I,IAEdmiG,EAAUviC,gBAAkBD,EAAeh2D,IAAI,SAAUd,GACvD,OAAOA,EAAKswG,SAIhB,MAAMC,EAA2D,IAAnCjX,EAAUziC,cAAcj8D,OACtD,GAAI21G,GAAwBlB,EAAsB,YAIhD,IAFAx4C,EAAgBlvB,KAAKnuB,MAAM61F,EAAsB,aACjD50F,EAAQmC,EAAQytC,cAAcglD,EAAwB,eAAG50F,MACpD3jB,EAAI,EAAGA,EAAI+/D,EAAcj8D,OAAQ9D,IACpCO,EAAOw/D,EAAc//D,IACrBK,EAAI+4G,EAAa74G,MAEfF,EAAI,CACFE,KAAMA,EACNmJ,KAAMia,EAAM3jB,IAEdwiG,EAAU98F,QAAQyD,KAAK9I,IAEzBmiG,EAAUziC,cAAc52D,KAAK9I,GAGjC,MAAMq5G,EAAa5zF,EAAQytC,cAAcglD,EAAqB,YAC9D,GAAIkB,GAAwBlB,EAAyB,eAEnD,IADAv4C,EAAiBnvB,KAAKnuB,MAAM61F,EAAyB,gBAChDv4G,EAAI,EAAGA,EAAIggE,EAAel8D,OAAQ9D,IACrCO,EAAOy/D,EAAehgE,IACtBK,EAAI+4G,EAAa74G,MAEfF,EAAI,CACFE,KAAMA,EACNmJ,KAAMgwG,EAAW/1F,MAAM3jB,IAEzBwiG,EAAU98F,QAAQyD,KAAK9I,IAEzBmiG,EAAUxiC,eAAe72D,KAAK9I,GAC9BmiG,EAAUviC,gBAAgB92D,KAAK9I,EAAEqJ,KAAKI,QAAQshD,SAAW,OAAS,OAGtEo3C,EAAUmX,YAAcpB,EAAmB,SACtC/V,EAAUmX,YAKbnX,EAAUmX,WAEPD,EAAWjmD,cAEVimD,EAAW9lD,gBAAkB4uC,EAAUxiC,eAAel8D,SAAW41G,EAAW/1F,MAAM7f,OAAS,GAGjGvD,EAAOg4G,EAAsB,YACzB/V,EAAUmX,WAAap5G,IAAS64G,EAAa74G,KAE/CF,EAAI,CACFE,KAAMA,EACNmJ,KAAMoc,EAAQutC,gBAAgBklD,EAA4B,oBAE5D/V,EAAU98F,QAAQyD,KAAK9I,GACvB+4G,EAAa74G,GAAQF,GAEvBmiG,EAAU1iC,cAAgBs5C,EAC1B5W,EAAUoX,QAAUnE,EAAMoE,eAAerB,EAAYhW,EAAU1iC,eAEjE,MAAOx7D,GACL,OAAOQ,EAASR,GAIlBQ,KAIFkyG,EAAep1G,UAAUk7D,oBAAsB,SAAUhC,EAAcv6D,EAAMu7D,EAAOh3D,GAClFA,EAAS,IAAI5C,EAAO0V,kBAAkB,0EAIxCo/F,EAAep1G,UAAUo3G,gBAAkB,SAAUvuE,EAAK3lC,GACxD,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClBywB,EAAY,IAAIs4C,EACtBt4C,EAAU18D,KAAOkqC,EAAoB,eACrCwyB,EAAUnC,aAAerwB,EAAmB,cAC5CwyB,EAAUR,UAAYhyB,EAAe,WAAKj+B,EAAMtE,WAChD+0D,EAAU68C,cAAgBrvE,EAAgB,WAC1CwyB,EAAU88C,cAAgBtvE,EAAgB,WAC1CwyB,EAAU+8C,iBAAmBvvE,EAAc,SAC3C,IACEwyB,EAAUg9C,eAAiBxvE,EAAoB,gBAAKj+B,EAAMtE,YAAY8B,IAAI,SAAUzJ,GAClF,OAAOulB,EAAQutC,gBAAgB9yD,KAEjC08D,EAAUi9C,UAAYp0F,EAAQutC,gBAAgB5oB,EAAgB,YAC9D,MAAM0vE,EAAqBr0F,EAAQ2U,OAAOwiC,EAAU+8C,iBAAkB/8C,EAAUi9C,WAC5EC,UACFl9C,EAAUm9C,cAAgBD,EAAmBzoG,YAE/CurD,EAAUo9C,WAAav0F,EAAQutC,gBAAgB5oB,EAAiB,aAElE,MAAOnmC,GACL,OAAOQ,EAASR,GAElBQ,EAAS,KAAMm4D,IAIjB+5C,EAAep1G,UAAUm3G,eAAiB,SAAUtuE,EAAK3lC,GACvD,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClBjU,EAAO,IAAIi9E,EACjBj9E,EAAKh4B,KAAOkqC,EAAmB,cAC/BlS,EAAKuiC,aAAerwB,EAAmB,cACvClS,EAAKkkC,UAAYhyB,EAAe,WAAKj+B,EAAMtE,WAC3CqwB,EAAK+hF,cAAgB7vE,EAAoB,gBAAKj+B,EAAMtE,WACpDqwB,EAAKhW,KAAOkoB,EAAU,KACtBlS,EAAKgiF,kBAAoB9vE,EAA0B,qBACnDlS,EAAK0vD,SAAWx9C,EAAc,SAC9B,IACElS,EAAK0hF,eAAiBxvE,EAAoB,gBAAKj+B,EAAMtE,YAAY8B,IAAI,SAAUzJ,GAC7E,OAAOulB,EAAQutC,gBAAgB9yD,KAEjCg4B,EAAK8hF,WAAav0F,EAAQutC,gBAAgB5oB,EAAiB,aAE7D,MAAOnmC,GACL,OAAOQ,EAASR,GAElBQ,EAAS,KAAMyzB,IAIjBy+E,EAAep1G,UAAUk3G,UAAY,SAAU7pD,EAASxkB,EAAK3lC,GAC3D,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClBguE,EAAa/vE,EAAiB,YAC9BgwE,EAAahwE,EAAiB,YAC9BykB,EAAS,IAAI1rD,MAAMg3G,EAAW12G,QACpC,IACE,IAAK,IAAI9D,EAAI,EAAGA,EAAIw6G,EAAW12G,OAAQ9D,IACrCkvD,EAAOlvD,GAAK,CACVO,KAAMi6G,EAAWx6G,GACjB0J,KAAMoc,EAAQutC,gBAAgBonD,EAAWz6G,KAI/C,MAAOsE,GACL,OAAOQ,EAASR,GAElB2qD,EAAQC,OAASA,EACjBpqD,EAAS,KAAMmqD,IAsBjBhtD,EAAK2P,SAASqlG,EAAgBV,GAG9BU,EAAer1G,UAAU64D,aAAe,SAAUJ,EAAev1D,GAC/D,MAAM2F,EAAOhG,KACPuzD,EAAY,GAClBvzD,KAAK+xG,GAAGjkG,MAxqBoB,wCAwqBS8nD,EAAe,SAAU/1D,EAAKC,GACjE,GAAID,EACF,OAAOQ,EAASR,GAElB,IAAK,IAAItE,EAAI,EAAGA,EAAIuE,EAAO8Q,KAAKvR,OAAQ9D,IAAK,CAC3C,MAAMm6D,EAAS1vD,EAAKiwG,eAAen2G,EAAO8Q,KAAKrV,IAC/Cg4D,EAAUmC,EAAO55D,MAAQ45D,EAE3Br1D,EAAS,KAAMkzD,MAKnBi/C,EAAer1G,UAAUs4D,YAAc,SAAU35D,EAAMuE,GACrD,MAAM2F,EAAOhG,KACbA,KAAK+xG,GAAGjkG,MAAMtQ,EAAKgE,OAtrBW,mEAsrBqB1F,GAAO,SAAU+D,EAAKC,GACvE,GAAID,EACF,OAAOQ,EAASR,GAElB,MAAMmmC,EAAMlmC,EAAO8Q,KAAK,GACxB,IAAKo1B,EACH,OAAO3lC,EAAS,KAAM,MAExBA,EAAS,KAAM2F,EAAKiwG,eAAejwE,OAKvCwsE,EAAer1G,UAAUk7D,oBAAsB,SAAUhC,EAAcv6D,EAAMu7D,EAAOh3D,GAClF,IAgBIyzG,EAAUC,EAhBVmC,EAAW7+C,GAASA,EAAMv7D,GAO9B,GANKo6G,IACHA,EAAW,IAAIjF,EAAiBn1G,GAC5Bu7D,IACFA,EAAMv7D,GAAQo6G,IAGdA,EAASjC,OACX,OAAO5zG,EAAS,KAAM61G,GAGxB,GADAA,EAAS9zD,KAAK,OAAQ/hD,GAClB61G,EAAShC,QAEX,OAEFgC,EAAShC,SAAU,EAGnB,MAAMluG,EAAOhG,KACb+H,EAAM5B,OAAO,CACX,SAAqB1F,GACnB,MAAMqN,EAAQtQ,EAAKgE,OA7sBS,oFA6sByB60D,EAAcv6D,GACnEkK,EAAK+rG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EACF,OAAOY,EAAKZ,GAEdi0G,EAAWlxD,EAAShyC,KAAK,GACzBnQ,OAGJ,SAAwBA,GACtB,IAAKqzG,EACH,OAAOrzG,IAET,MAAMqN,EAAQtQ,EAAKgE,OAAOwE,EAAKisG,cAAe57C,EAAcv6D,GAC5DkK,EAAK+rG,GAAGjkG,MAAMA,EAAO,SAAUjO,EAAK+iD,GAClC,GAAI/iD,EACF,OAAOY,EAAKZ,GAEdk0G,EAAanxD,EAAShyC,KACtBnQ,QAGH,SAAqBZ,GAEtB,GADAq2G,EAAShC,SAAU,EACfr0G,IAAQi0G,EACV,OAAOoC,EAASr9F,KAAK,OAAQhZ,EAAK,MAEpCmG,EAAKouG,kBAAkB8B,EAAUpC,EAAUC,EAAY,MAAM,EAAO,SAAUl0G,GAC5Eq2G,EAAShC,SAAU,EACnBgC,EAASjC,QAAUp0G,EACnBq2G,EAASr9F,KAAK,OAAQhZ,EAAKq2G,QAMjC1D,EAAer1G,UAAU84G,eAAiB,SAAUjwE,EAAKyxB,GACvD,MAAM0+C,EAAcnwE,EAAiB,YACrC,IAAIstE,EACAC,EACJ,GAAI4C,EAAa,CACf7C,EAAW6C,EAAmB,MAC9B5C,EAAkB,GAClB,IAAK,MAAMz2G,KAAOq5G,EACXA,EAAY/4G,eAAeN,IAAgB,UAARA,IAGxCy2G,EAAgBz2G,GAAOq5G,EAAYr5G,IAGvC,OAAOkD,KAAKozG,gBACVptE,EAAmB,cACnBA,EAAoB,eACpBstE,EACAC,EACA97C,IAIJ+6C,EAAer1G,UAAUi3G,kBAAoB,SAAUrW,EAAW+V,EAAUC,EAAYC,EAAWv8C,EAASp3D,GAC1G,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClB4sE,EAAe,GACfr5C,EAAgB,GAChBC,EAAiB,GACjBv1D,EAAOhG,KAGPo2G,EAAkB,CAACpwE,EAAKvlC,KAC5B4gB,EAAQ2sC,cAAc8lD,EAAwB,cAAG9tE,EAAU,KAAG,EAAG,KAAMhgC,EAAKkoD,YAAa,SAAUruD,EAAKoF,GACtG,GAAIpF,EACF,OAAOY,EAAKZ,GAEd,MAAMjE,EAAI,CACRE,KAAMkqC,EAAiB,YACvB/gC,KAAMA,EACNoxG,UAAU,GAGZ,OADA1B,EAAa/4G,EAAEE,MAAQF,EACfoqC,EAAU,MAChB,IAAK,gBACHs1B,EAAc52D,KAAK,CAAE9I,EAAGA,EAAGsG,MAAQ8jC,EAAc,UAAK,IACtD,MACF,IAAK,aACHu1B,EAAe72D,KAAK,CAAE9I,EAAGA,EAAGsG,MAAQ8jC,EAAc,UAAK,EAAI+uE,MAAmC,SAA5B/uE,EAAsB,iBAAe,OAAS,QAChH,MACF,IAAK,SACHpqC,EAAEy6G,UAAW,EAGjB51G,EAAK,KAAM7E,MAKf,GAAI67D,EAoBF,OAnBAsmC,EAAUtmC,SAAU,OACpB1vD,EAAMxC,IAAIwuG,EAAYqC,EAAiB,SAAUv2G,EAAKoB,GACpD,GAAIpB,EACF,OAAOQ,EAASR,GAElBk+F,EAAU98F,QAAUA,EACpB88F,EAAU1iC,cAAgBs5C,EAC1B5W,EAAUziC,cAAgBA,EAAc9+C,KAAKzU,EAAM9B,YAAY,UAAUV,IAAI,SAAUd,GACrF,OAAOA,EAAK7I,IAEd2/D,EAAe/+C,KAAKzU,EAAM9B,YAAY,UACtC83F,EAAUxiC,eAAiBA,EAAeh2D,IAAI,SAAUd,GACtD,OAAOA,EAAK7I,IAEdmiG,EAAUviC,gBAAkBD,EAAeh2D,IAAI,SAAUd,GACvD,OAAOA,EAAKswG,QAEd10G,MAKJ,MAAMi2G,EAASvY,aAAqBkT,EACpClT,EAAUxjC,+BAAiCu5C,EAAiC,uBAC5E/V,EAAUvjC,QAAUpuB,KAAKlS,UAAU45E,EAAkB,SACrD/V,EAAUtjC,QAAUq5C,EAAkB,QAGtC,MAAMyC,EAAav2G,KAAKy0G,OAAOX,EAAqB,YA0BpD,GAzBIyC,IAEFxY,EAAUnjC,kBAAoB,GAC9BmjC,EAAUpjC,gBAAkB47C,EAAWn6G,IAAI,SAC3Cm6G,EAAW3zG,QAAQ,CAACpG,EAAOM,KACb,UAARA,IAGJihG,EAAUnjC,kBAAkB99D,GAAOy5G,EAAWn6G,IAAIU,OAKtDihG,EAAUhvF,YAAc/O,KAAK00G,aAAaZ,EAAsB,aAEhE/V,EAAUrjC,eAAiBo5C,EAA2B,iBACtD/V,EAAUljC,sBAAwBi5C,EAAqC,2BACvE/V,EAAUjjC,iBAAmBg5C,EAA6B,mBAC1D/V,EAAUjiE,WAAa97B,KAAK00G,aAAaZ,EAAqB,YAC9D/V,EAAUhjC,eAAiB+4C,EAA2B,iBACtD/V,EAAU6W,oBAAsBd,EAAsC,6BAAK/V,EAAU6W,oBACrF7W,EAAU9iC,WAAa64C,EAA+B,sBAAK/V,EAAU9iC,WACrE8iC,EAAU7iC,iBAAmB44C,EAA4B,mBAAK/V,EAAU7iC,iBACxE6iC,EAAU5iC,iBAAmB24C,EAA6B,oBAAK/V,EAAU5iC,iBACzE4iC,EAAU3iC,iBAAmB04C,EAA6B,oBAAK/V,EAAU3iC,kBACpEk7C,EAAQ,CACX,MAAME,EAAM1C,EAAc,SACdxwG,IAARkzG,IACFzY,EAAUyY,IAAMA,GAKpBzuG,EAAMxC,IAAIwuG,EAAYqC,EAAiB,CAACv2G,EAAKoB,KAC3C,GAAIpB,EACF,OAAOQ,EAASR,GAelB,GAbAk+F,EAAU98F,QAAUA,EACpB88F,EAAU1iC,cAAgBs5C,EAC1B5W,EAAUziC,cAAgBA,EAAc9+C,KAAKzU,EAAM9B,YAAY,UAAUV,IAAI,SAAUd,GACrF,OAAOA,EAAK7I,IAEd2/D,EAAe/+C,KAAKzU,EAAM9B,YAAY,UACtC83F,EAAUxiC,eAAiBA,EAAeh2D,IAAI,SAAUd,GACtD,OAAOA,EAAK7I,IAEdmiG,EAAUviC,gBAAkBD,EAAeh2D,IAAI,SAAUd,GACvD,OAAOA,EAAKswG,QAGVuB,EAIF,OAHAvY,EAAU0Y,UAAY3C,EAA0B,gBAChD/V,EAAU2Y,YAAc5C,EAAuB,aAC/C/V,EAAU4Y,kBAAoB7C,EAA8B,oBACrDzzG,IAGT09F,EAAUoX,QAAUn1G,KAAK42G,YAAY5C,GAGrC,IAAIvoG,EAAQqoG,EAAgB,MACxB/0G,MAAMC,QAAQyM,KAChBA,EAAQ,IAAI87C,IAAI97C,IAGlB,MAAMorG,EAAUprG,EAAM2R,IAAI,SACpB05F,EAAUrrG,EAAM2R,IAAI,SACpB25F,EAAatrG,EAAM2R,IAAI,YAE7B2gF,EAAUmX,UAAY4B,GAAWD,IAAYE,GAEpBD,IAAYD,IAAYE,EAqNrD,SAAwChZ,GACtC,IAAIxiG,EACAK,EAEJ,IAAKL,EAAI,EAAGA,EAAIwiG,EAAUxiC,eAAel8D,OAAQ9D,IAAK,CACpDK,EAAImiG,EAAUxiC,eAAehgE,GAC7B,MAAM2G,EAAQ67F,EAAU98F,QAAQ+C,QAAQpI,GACxCmiG,EAAU98F,QAAQ2D,OAAO1C,EAAO,UACzB67F,EAAU1iC,cAAcz/D,EAAEE,MAEnCiiG,EAAUxiC,eAAiBxzD,EAAMtE,WACjCs6F,EAAUviC,gBAAkBzzD,EAAMtE,WAElClI,EAAIwiG,EAAU98F,QAAQ5B,OACtB,KAAO9D,MACLK,EAAImiG,EAAU98F,QAAQ1F,IACf86G,WAAoD,IAAxCtY,EAAUziC,cAAct3D,QAAQpI,GAMnDA,EAAEy6G,UAAW,GAJXtY,EAAU98F,QAAQ2D,OAAOrJ,EAAG,UACrBwiG,EAAU1iC,cAAcz/D,EAAEE,OAtOjCk7G,CAA+BjZ,GAExB8Y,GAgPb,SAAgC9Y,GAC9B,IAAIxiG,EAAIwiG,EAAU98F,QAAQ5B,OAC1B,KAAO9D,KAAK,CACV,MAAMK,EAAImiG,EAAU98F,QAAQ1F,GACvBK,EAAEy6G,UAAYz6G,EAAEqJ,KAAKyF,OAASwU,EAAMpW,UAAUC,QAA0B,UAAhBnN,EAAEqJ,KAAKC,KAMpEtJ,EAAEy6G,UAAW,GAJXtY,EAAU98F,QAAQ2D,OAAOrJ,EAAG,UACrBwiG,EAAU1iC,cAAcz/D,EAAEE,QAtPjCm7G,CAAuBlZ,GAEzB19F,OAIJmyG,EAAer1G,UAAUy5G,YAAc,SAAU5C,GAC/C,OAAKA,GAAkC,IAArBA,EAAU30G,OAIrB20G,EAAUzuG,IAAKygC,IACpB,MAAM3gC,EAAUrF,KAAK00G,aAAa1uE,EAAa,SAC/C,OAAO,IAAIgrE,EAAMhrE,EAAgB,WAAG3gC,EAAgB,OAAG2gC,EAAU,KAAG3gC,KAL7D0C,EAAMtE,YAUjB+uG,EAAer1G,UAAUo3G,gBAAkB,SAAUvuE,EAAK3lC,GACxD,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClBywB,EAAY,IAAIs4C,EACtBt4C,EAAU18D,KAAOkqC,EAAoB,eACrCwyB,EAAUnC,aAAerwB,EAAmB,cAC5CwyB,EAAUR,UAAYhyB,EAAoB,gBAAKj+B,EAAMtE,WACrD+0D,EAAU68C,cAAgBrvE,EAAgB,WAC1CwyB,EAAU88C,cAAgBtvE,EAAgB,WAC1CwyB,EAAU+8C,iBAAmBvvE,EAAc,SAC3CwyB,EAAUm9C,cAAgBn9C,EAAU+8C,iBACpC,MAAMvvG,EAAOhG,KACb+H,EAAM5B,OAAO,CACX,SAAwB1F,GACtBsH,EAAMxC,IAAIygC,EAAoB,gBAAKj+B,EAAMtE,WAAY,SAAU3H,EAAMo7G,GACnE71F,EAAQ2sC,cAAchoB,EAAmB,cAAGlqC,EAAM,EAAG,KAAMkK,EAAKkoD,YAAagpD,IAC5E,SAAUr3G,EAAKC,GAChB04D,EAAUg9C,cAAgB11G,EAC1BW,EAAKZ,MAGT,SAAwBY,GACtB4gB,EAAQ2sC,cAAchoB,EAAmB,cAAGA,EAAgB,WAAG,EAAG,KAAMhgC,EAAKkoD,YAAa,SAAUruD,EAAKoF,GACvGuzD,EAAUi9C,UAAYxwG,EACtBxE,EAAKZ,MAGT,SAAyBY,GACvB4gB,EAAQ2sC,cAAchoB,EAAmB,cAAGA,EAAiB,YAAG,EAAG,KAAMhgC,EAAKkoD,YAAa,SAAUruD,EAAKoF,GACxGuzD,EAAUo9C,WAAa3wG,EACvBxE,EAAKZ,OAGR,SAAUA,GACX,GAAIA,EACF,OAAOQ,EAASR,GAElBQ,EAAS,KAAMm4D,MAKnBg6C,EAAer1G,UAAUm3G,eAAiB,SAAUtuE,EAAK3lC,GACvD,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClBjU,EAAO,IAAIi9E,EACjBj9E,EAAKh4B,KAAOkqC,EAAmB,cAC/BlS,EAAKuiC,aAAerwB,EAAmB,cACvClS,EAAKkkC,UAAYhyB,EAAoB,gBAAKj+B,EAAMtE,WAChDqwB,EAAK+hF,cAAgB7vE,EAAoB,gBAAKj+B,EAAMtE,WACpDqwB,EAAKhW,KAAOkoB,EAAU,KACtBlS,EAAKgiF,kBAAoB9vE,EAA0B,qBACnDlS,EAAK0vD,SAAWx9C,EAAc,SAC9B,MAAMhgC,EAAOhG,KACb+H,EAAM5B,OAAO,CACX,SAAwB1F,GACtBsH,EAAMxC,IAAIygC,EAAoB,gBAAKj+B,EAAMtE,WAAY,SAAU3H,EAAMo7G,GACnE71F,EAAQ2sC,cAAchoB,EAAmB,cAAGlqC,EAAM,EAAG,KAAMkK,EAAKkoD,YAAagpD,IAC5E,SAAUr3G,EAAKC,GAChBg0B,EAAK0hF,cAAgB11G,EACrBW,EAAKZ,MAGT,SAAyBY,GACvB4gB,EAAQ2sC,cAAchoB,EAAmB,cAAGA,EAAiB,YAAG,EAAG,KAAMhgC,EAAKkoD,YAAa,SAAUruD,EAAKoF,GACxG6uB,EAAK8hF,WAAa3wG,EAClBxE,EAAKZ,OAGR,SAAUA,GACX,GAAIA,EACF,OAAOQ,EAASR,GAElBQ,EAAS,KAAMyzB,MAKnB0+E,EAAer1G,UAAUk3G,UAAY,SAAU7pD,EAASxkB,EAAK3lC,GAC3D,MAAMghB,EAAUrhB,KAAK+xG,GAAGhqE,aAClBiuE,EAAahwE,EAAiB,YAC9BhW,EAAWgW,EAAmB,cAC9BykB,EAAS,IAAI1rD,MAAMi3G,EAAW32G,QAC9B2G,EAAOhG,KACb+H,EAAM9D,UAAU+hC,EAAiB,YAAG,SAAUlqC,EAAMP,EAAGkF,GACrD4gB,EAAQ2sC,cAAch+B,EAAUgmF,EAAWz6G,GAAI,EAAG,KAAMyK,EAAKkoD,YAAa,SAAUruD,EAAKoF,GACvF,GAAIpF,EACF,OAAOY,EAAKZ,GAEd4qD,EAAOlvD,GAAK,CACVO,KAAMA,EACNmJ,KAAMA,GAERxE,OAED,SAAUZ,GACX,GAAIA,EACF,OAAOQ,EAASR,GAElB2qD,EAAQC,OAASA,EACjBpqD,EAAS,KAAMmqD,MAqBnBhtD,EAAK2P,SAASslG,EAAgBD,GAG9BC,EAAet1G,UAAU64D,aAAe,SAAUJ,EAAev1D,GAC/D,MAAM2F,EAAOhG,KACPuzD,EAAY,GACZjwC,EAAU,CACd,CAAExV,MAljCwB,wCAkjCM2pD,SAAS,GACzC,CAAE3pD,MApiC6B,gDAoiCM2pD,SAAS,IAEhD1vD,EAAM5E,KAAKmgB,EAAS,CAAC8gB,EAAG1jC,KACtBsF,EAAK+rG,GAAGjkG,MAAMs2B,EAAEt2B,MAAO8nD,EAAe,CAAC/1D,EAAKC,KAC1C,GAAID,EAIF,OAAKukC,EAAEqzB,QAGA/2D,IAFEA,EAAGb,GAId,IAAK,IAAItE,EAAI,EAAGA,EAAIuE,EAAO8Q,KAAKvR,OAAQ9D,IAAK,CAC3C,MAAMm6D,EAAS1vD,EAAKiwG,eAAen2G,EAAO8Q,KAAKrV,GAAI6oC,EAAEqzB,SACrDlE,EAAUmC,EAAO55D,MAAQ45D,EAE3Bh1D,OAEAb,IACFQ,EAASR,EAAK0zD,MAKlBk/C,EAAet1G,UAAUs4D,YAAc,SAAU35D,EAAMuE,GACrDL,KAAKm3G,aA5kCyB,mEA4kCar7G,GAAM,EAAO,CAAC+D,EAAKu3G,IACxDv3G,EACKQ,EAASR,GAEbu3G,EAIE/2G,EAAS,KAAM+2G,GAFbp3G,KAAKm3G,aAnkCmB,2EAmkCwBr7G,GAAM,EAAMuE,KAMzEoyG,EAAet1G,UAAUg6G,aAAe,SAAUrpG,EAAOhS,EAAM27D,EAASp3D,GACtEL,KAAK+xG,GAAGjkG,MAAMtQ,EAAKgE,OAAOsM,EAAOhS,GAAO,CAAC+D,EAAKC,KAC5C,GAAID,EAIF,OAAK43D,EAGEp3D,EAAS,KAAM,MAFbA,EAASR,GAIpB,MAAMmmC,EAAMlmC,EAAO8Q,KAAK,GACxB,IAAKo1B,EACH,OAAO3lC,EAAS,KAAM,MAExBA,EAAS,KAAML,KAAKi2G,eAAejwE,EAAKyxB,OA6O5Cp8D,EAAQq4D,aAbR,SAAsBruD,EAAS0sG,EAAI7jD,EAAa1iD,EAAS6rG,GACvD,IAAIC,EAAoB/E,EAMxB,OALI/mG,GAA0B,IAAfA,EAAQ,GACrB8rG,EAAoB9E,EACXhnG,GAAWA,EAAQ,IAAM,IAClC8rG,EAAoB7E,GAEjB4E,GAAqBA,aAA2BC,EAG9CD,EAFE,IAAIC,EAAkBjyG,EAAS0sG,EAAI7jD,K,6BCh2C9C,MAAM1wD,EAAO,EAAQ,GACf88D,EAAiB,EAAQ,IAU/B,SAASu2C,EAAc/0G,GACrBw+D,EAAe5+D,KAAKsE,KAAMlE,GAO1BkE,KAAK80G,kBAAmB,EAKxB90G,KAAK40G,oBAAsB,EAS3B50G,KAAK60G,cAAgB,KAKrB70G,KAAKk1G,WAAY,EAKjBl1G,KAAKm1G,QAAU,KAMfn1G,KAAKw2G,IAAM,KAMXx2G,KAAKy3D,SAAU,EAGjBj6D,EAAK2P,SAAS0jG,EAAev2C,GAE7Bh/D,EAAOD,QAAUw1G,G,6BCNjBv1G,EAAOD,QAhDP,WAKE2E,KAAKlE,KAAO,KAIZkE,KAAKq2D,aAAe,KAKpBr2D,KAAKg4D,UAAY,KAKjBh4D,KAAKw1G,cAAgB,KAKrBx1G,KAAKq1G,cAAgB,KAKrBr1G,KAAKy1G,UAAY,KAKjBz1G,KAAKs1G,cAAgB,KACrBt1G,KAAKu1G,iBAAmB,KAKxBv1G,KAAK21G,cAAgB,KAKrB31G,KAAK41G,WAAa,O,6BCEpBt6G,EAAOD,QA/CP,WAKE2E,KAAKlE,KAAO,KAIZkE,KAAKq2D,aAAe,KAKpBr2D,KAAKg4D,UAAY,KAKjBh4D,KAAK61G,cAAgB,KAKrB71G,KAAKw1G,cAAgB,KAKrBx1G,KAAK8d,KAAO,KAKZ9d,KAAK81G,kBAAoB,KAKzB91G,KAAKwjF,SAAW,KAKhBxjF,KAAK41G,WAAa,O,6BCnDpB,MAAMp4G,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAChBmX,EAAQ,EAAQ,GAGhB80B,EAAO,CACXjrC,OAAQ,EACRjI,KAAM,EACNy2G,WAAY,GAYd,SAASvG,EAAMl1G,EAAM2G,EAAQuxC,EAAM3uC,GAKjCrF,KAAKlE,KAAOA,EAKZkE,KAAKyC,OAASA,EAKdzC,KAAKg0C,KAAuB,iBAATA,EAAoBwjE,EAAcxjE,GAAQA,EAK7Dh0C,KAAKqF,QAAUA,EAqFjB,SAASmyG,EAAc17G,GACrB,OAAKA,EAGEk4C,EAAKl4C,EAAKuF,eAFR2yC,EAAKjrC,OAhFhBioG,EAAM7zG,UAAUs6G,iBAAmB,WACjC,OAAOz3G,KAAKg0C,OAASA,EAAKujE,YAO5BvG,EAAM7zG,UAAUu6G,WAAa,WAC3B,OAAO13G,KAAKg0C,OAASA,EAAKlzC,MAO5BkwG,EAAM7zG,UAAUw6G,aAAe,WAC7B,OAAO33G,KAAKg0C,OAASA,EAAKjrC,QAS5BioG,EAAM4G,SAAW,SAAU5D,GACzB,OAAKA,GAAkC,IAArBA,EAAU30G,OAGrB20G,EAAUzuG,IAAI,SAAUygC,GAC7B,MAAM3gC,EAAU2gC,EAAa,QAC7B,OAAO,IAAIgrE,EAAMhrE,EAAgB,WAAG3gC,EAAgB,OAAGmyG,EAAcxxE,EAAU,MAAI3gC,KAJ5E0C,EAAMtE,YAejButG,EAAMoE,eAAiB,SAAUrB,EAAY14C,GAC3C,MAAMv7D,EAAS,GACf,IAAK,IAAIvE,EAAI,EAAGA,EAAIw4G,EAAW10G,OAAQ9D,IAAK,CAC1C,MAAMyqC,EAAM+tE,EAAWx4G,GACjBs8G,EAAY7xE,EAAgB,WAClC,IAAK6xE,EACH,SAEF,MAAMj8G,EAAIy/D,EAAcr1B,EAAiB,aACzC,IAAIvjC,EACJ,MAAM4C,EAAU+mC,KAAKnuB,MAAM+nB,EAAmB,eAE5CvjC,EADc,OAAZ4C,QAA8C/B,IAA1B+B,EAAoB,WACjC7H,EAAKgE,OAAO,WAAY5F,EAAEE,MAEhB,OAAZuJ,QAAyD/B,IAArC+B,EAA+B,sBACjD7H,EAAKgE,OAAO,cAAe5F,EAAEE,OAE/BF,EAAEqJ,KAAKI,QAAQqhD,QAAW9qD,EAAEqJ,KAAKyF,OAASwU,EAAMpW,UAAUvD,KAAO3J,EAAEqJ,KAAKyF,OAASwU,EAAMpW,UAAUqB,MACxGvO,EAAEqJ,KAAKyF,OAASwU,EAAMpW,UAAUsB,IAIvBxO,EAAEE,KAHF0B,EAAKgE,OAAO,WAAY5F,EAAEE,MAKrCgE,EAAO4E,KAAK,IAAIssG,EAAM6G,EAAWp1G,EAAQ+0G,EAAcxxE,EAAgB,YAAI3gC,IAE7E,OAAOvF,GAgBTxE,EAAOD,QAAU21G,G,6BCpIjB,MAAMxzG,EAAO,EAAQ,GACf88D,EAAiB,EAAQ,IAS/B,SAAS22C,EAAiBn1G,GACxBw+D,EAAe5+D,KAAKsE,KAAMlE,GAK1BkE,KAAKy2G,UAAY,KAKjBz2G,KAAK02G,YAAc,KAKnB12G,KAAK22G,mBAAoB,EAG3Bn5G,EAAK2P,SAAS8jG,EAAkB32C,GAEhCh/D,EAAOD,QAAU41G,G,6BC9BjB,MAAMzzG,EAAO,EAAQ,GACfuK,EAAQ,EAAQ,GAWtB,SAASy2F,EAAezrC,EAAOe,GAC7B9zD,KAAKq4F,OAAStlC,EACd/yD,KAAKk0D,QAAUJ,EACf9zD,KAAK83G,OAAS,KACd93G,KAAKgqG,SAAW,KASlBxL,EAAerhG,UAAU+kG,cAAgB,SAAUh0F,EAAO0zF,GACxD1zF,EAAM7N,SAAW6N,EAAM7N,UAAY0H,EAAMnK,KACzCoC,KAAK83G,OAAS93G,KAAK83G,QAAU,CAAEtpE,UAAW,GAAI+kB,UAAW,IACzD,MAAMR,EAAS6uC,EAA2B,EAAd5hG,KAAKq4F,OAWjC,GAVInqF,EAAM3F,MAGRvI,KAAK83G,OAAOC,UAAY7pG,GA7BI,MA+B1BlO,KAAK83G,OAAOtpE,UAAUnvC,QAExBW,KAAKk0D,QAAQ,OAAQ12D,EAAKgE,OAAO,2CAjCL,MAmC9BxB,KAAK83G,OAAOtpE,UAAU9pC,KAAKwJ,EAAM7N,UAC7BL,KAAK83G,OAAOC,UAEd,OAAO/3G,KAAKg4G,YAAYjlD,GAG1B,IAAIklD,EAAiBj4G,KAAK83G,OAAOvkD,UAAUrlD,EAAM8hB,UAC5CioF,IACHA,EAAiBj4G,KAAK83G,OAAOvkD,UAAUrlD,EAAM8hB,UAAY,CAAE3L,OAAQ,UAE7C/gB,IAApB4K,EAAM2zF,YAERoW,EAAeF,UAAY7pG,GAE7B+pG,EAAe5zF,OAAO3f,KAAKwJ,GAC3BlO,KAAKg4G,YAAYjlD,IAOnByrC,EAAerhG,UAAU66G,YAAc,SAAUjlD,GAC/C,MAAM/sD,EAAOhG,KACb,SAASuD,IACP,MAAM6gC,EAAIp+B,EAAK8xG,OACf9xG,EAAK8xG,OAAS,KACd9xG,EAAKgkG,SAAW,KAqCpB,SAAuB5lE,GACrB,GAAIA,EAAE2zE,UAEJ,OAAO3zE,EAAE2zE,UAAUt4G,QAAQ,SAAyBI,GAClD,IAAK,IAAItE,EAAI,EAAGA,EAAI6oC,EAAEoK,UAAUnvC,OAAQ9D,IACtC6oC,EAAEoK,UAAUjzC,GAAGsE,KAIrBkI,EAAM5E,KAAKlH,OAAO6E,KAAKsjC,EAAEmvB,WAAY,SAAsBz3D,EAAM2E,GAC/D,MAAMw3G,EAAiB7zE,EAAEmvB,UAAUz3D,GACnC,GAAIm8G,EAAeF,UAEjB,OAAOE,EAAeF,UAAUt4G,QAAQ,SAA2BI,GACjE,IAAK,IAAItE,EAAI,EAAGA,EAAI08G,EAAe5zF,OAAOhlB,OAAQ9D,IAChD08G,EAAe5zF,OAAO9oB,GAAG8E,SAASR,GAEpCY,MAIJw3G,EAAe5zF,OAAOzhB,QAAQ,SAAmBsL,GAE/CA,EAAMzO,UACNyO,EAAM7N,aAERI,MA9DAy3G,CAAa9zE,GAEf,GAAc,IAAV2uB,EAKF,OAHI/yD,KAAKgqG,UACPvmD,aAAazjD,KAAKgqG,UAEbzmG,IAET,MAAMyhD,EAAkBhlD,KAAKgqG,SAE7BhqG,KAAKgqG,SAAW1nD,WAAW/+C,EAASwvD,GAChC/N,GACFvB,aAAauB,IAOjBw5C,EAAerhG,UAAU6/C,SAAW,WAC7Bh9C,KAAK83G,SAGV93G,KAAK83G,OAAOtpE,UAAU5rC,QAAQ,SAAUlC,GACtCA,MAEFV,KAAK83G,OAAS,KACdr0D,aAAazjD,KAAKgqG,UAClBhqG,KAAKgqG,SAAW,OAqClB1uG,EAAOD,QAAUmjG,G,6BCjIjB,MAAM2Z,EAAe,EAAQ,IAC7B98G,EAAQogE,aAAe08C,EAAa18C,aACpCpgE,EAAQqgE,cAAgBy8C,EAAaz8C,cACrCrgE,EAAQ+8G,sBAAwB,EAAQ,M,6BCPxC,MAAM56G,EAAO,EAAQ,GAEf66G,EAAW,EAAQ,IACnBtwG,EAAQ,EAAQ,GAChB0zD,EAAe48C,EAAS58C,aACxBC,EAAgB28C,EAAS38C,cAe/B,SAAS08C,EAAsBr0F,EAAUC,GACvChkB,KAAK+jB,SAAWA,EAChB/jB,KAAKgkB,SAAWA,EAiBlB,SAASs0F,EAAuBv0F,EAAUC,GACxChkB,KAAK+jB,SAAWA,EAChB/jB,KAAKgkB,SAAWA,EAhBlBxmB,EAAK2P,SAASirG,EAAuB38C,GAOrC28C,EAAsBj7G,UAAU2mD,iBAAmB,WACjD,OAAO,IAAIw0D,EAAuBt4G,KAAK+jB,SAAU/jB,KAAKgkB,WAWxDxmB,EAAK2P,SAASmrG,EAAwB58C,GAEtC48C,EAAuBn7G,UAAU4mD,gBAAkB,SAAU1jD,GAO3DA,EAAS,KANYvC,OAAOwe,OAAO,CACjCvU,EAAMlJ,qBAAqB,CAAC,IAC5BkJ,EAAMzJ,sBAAsB0B,KAAK+jB,SAAU,QAC3Chc,EAAMlJ,qBAAqB,CAAC,IAC5BkJ,EAAMzJ,sBAAsB0B,KAAKgkB,SAAU,YAK/Cs0F,EAAuBn7G,UAAUinD,kBAAoB,SAAUuX,EAAWt7D,GAExEA,KAGF/E,EAAOD,QAAU+8G,G,6BCvDjB/8G,EAAQk9G,OAAS,EAAQ,KACzBl9G,EAAQm9G,YAAc,EAAQ,IAC9Bn9G,EAAQugE,iBAAmB,EAAQ,IACnCvgE,EAAQohE,eAAiB,EAAQ,IACjCphE,EAAQo9G,OAAS,EAAQ,IACzB,MAAMC,EAAsB,EAAQ,IACpCr9G,EAAQskE,cAAgB+4C,EAAoB/4C,cAC5CtkE,EAAQwkE,qBAAuB64C,EAAoB74C,qBACnDxkE,EAAQukE,iCAAmC84C,EAAoB94C,iCAC/DvkE,EAAQ+oC,EAAI,EAAQ,IAAOA,G,6BCd3B,MAAMo0E,EAAc,EAAQ,IACtBG,EAAiB,EAAQ,KACzBC,EAAiB,EAAQ,IACzBn7G,EAAS,EAAQ,GACjBg7G,EAAS,EAAQ,IACjB75C,EAAe,EAAQ,IACvBi6C,EAAmB,EAAQ,KAC3Bp8C,EAAiB,EAAQ,IAiK/BnhE,EAAOD,QAhIP,MAOE,YAAY+0B,EAAQ/qB,GAClB,IAAK+qB,EACH,MAAM,IAAI9qB,MAAM,0BAOlBtF,KAAKowB,OAASA,EAEdpwB,KAAK84G,mBAAqBD,EAAiB56F,MAAM5Y,EAAS+qB,EAAOJ,UACjEhwB,KAAK+4G,cAAgB,IAAI57F,IAS3B,SAASrhB,GACP,IAAIk9G,EAAch5G,KAAK+4G,cAAc38G,IAAIN,GAEzC,QAAoBwH,IAAhB01G,EAA2B,CAC7B,IAAIj0E,EAAc/kC,KAAK84G,mBAAmB18G,IAAIN,GAE9C,QAAoBwH,IAAhByhC,EAA2B,CAC7B,IAAK/kC,KAAKowB,OAAOJ,SACf,MAAM,IAAI1qB,MACR,+FAGJy/B,EAAc8zE,EAAiBI,cAAcn9G,EAAMkE,KAAKowB,OAAOJ,UAGjEgpF,EAAc,IAAIR,EAAY18G,EAAM,IAAI68G,EAAe34G,KAAKowB,OAAQ2U,IACpE/kC,KAAK+4G,cAAc3uG,IAAItO,EAAMk9G,GAG/B,OAAOA,EAyBT,MAAM/4G,EAAO64C,GACX,KAAK/5C,MAAMC,QAAQiB,IAAYA,EAAMZ,OAAS,GAC5C,OAAOK,QAAQE,OACb,IAAInC,EAAO8D,cAAc,qFAG7B,MAAM+hB,EAAU,GAChB,IACI8hB,EADA3T,GAAe,EAGnB,OAAO/xB,QACJ6I,IAAItI,EACFsF,IAAId,GACGA,aAAgBg4D,EAKfh4D,EAAKy0G,YAAY51F,GACrB+hB,KAAKhgC,IAEJosB,EAAeA,GAAgBpsB,EAAQosB,aAGvC2T,EAAY//B,EAAQ+/B,YAVf1lC,QAAQE,OAAO,IAAI0F,MACxB,2GAYP+/B,KAAK,IACJrlC,KAAKowB,OAAOjiB,MAAMmV,EAASs1F,EAAeO,kBAAkBrgE,EAAkBrnB,EAAc2T,KAC7FC,KAAKG,IAEJ,MAAMtgC,EAAOjF,EAAM,GAAGm5G,iBACtB,OAAO,IAAIX,EAAOjzE,EAAItgC,EAAM05D,EAAay6C,mBAAmB7zE,S,6BChJpE,MAAMz9B,EAAQ,EAAQ,GAChBuxG,EAAiB,EAAQ,KACzB16C,EAAe,EAAQ,IACvB65C,EAAS,EAAQ,IACjBl8C,EAAQ,EAAQ,IAChBC,EAAO,EAAQ,IACf+8C,EAAiB,EAAQ,KACzBX,EAAiB,EAAQ,IAEzBY,EAAqB,IAgY3Bl+G,EAAOD,QA3XP,MAKE,YAAY+0B,EAAQ2U,GAClB/kC,KAAK+wB,QAAUX,EACfpwB,KAAK08D,OAAS,CACZ+8C,QAAQ,IAAIj9C,GAAOvlC,GAAG,MAAO53B,GAAUW,KAAK05G,qBAAqBr6G,IACjEs6G,WAAW,IAAIn9C,GAAOvlC,GAAG,MAAO53B,GAAUW,KAAK05G,qBAAqBr6G,IACpEs9D,QAAQ,IAAIH,GAAOvlC,GAAG,MAAO53B,GAAUW,KAAK05G,qBAAqBr6G,IACjEuyC,QAAQ,IAAI4qB,GAAOvlC,GAAG,MAAO53B,GAAUW,KAAK05G,qBAAqBr6G,IACjEwlC,QAAQ,IAAI23B,GAAOvlC,GAAG,MAAO53B,GAAUW,KAAK05G,qBAAqBr6G,IACjEu6G,cAAe,IAAIz8F,KAOrBnd,KAAKkF,KAAO6/B,EAWd,kBAAkBxH,EAAKuH,EAAS+0E,GAC9B,MAAMj9C,EAAU3gE,OAAO6E,KAAKy8B,GAC5B,GAAuB,IAAnBq/B,EAAQv9D,OACV,OAAOK,QAAQE,OAAO,IAAI0F,MAAM,8BAGlC,MAAMu3D,EAAWN,EAAMu9C,aAAal9C,EAASr/B,EAAKuH,GAG5Ci4B,EAAY/8D,KAAK08D,OAAO+8C,OAAOz8C,YAAYH,EAAU,KAAM,CAAGb,SAAU,KAAM+9C,cAAe,QAEnG,GAA2B,OAAvBh9C,EAAUf,SACZ,OAAOt8D,QAAQC,QAAQo9D,EAAUf,UAGnC,MAAMg+C,EAAiBpB,EAAeqB,kBAAkBr9C,EAAS,KAAMr/B,EAAKv9B,KAAKkF,MAC3Eg1G,EAAatB,EAAeqB,kBAAkBlyG,EAAMtE,WAAYqhC,EAASvH,EAAKv9B,KAAKkF,MACnFi1G,EAAiBvB,EAAewB,aAAat1E,EAAS9kC,KAAKkF,MAC3DgC,EAAQ49B,GAAWA,EAAQ59B,MAEjC,OAAOlH,KAAK+wB,QAAQixB,UACjB3c,KAAK,IACJk0E,EAAec,aAAar6G,KAAK+wB,QAAS/wB,KAAKkF,KAAM20G,EAAeG,EAAgBE,EAAYC,IACjG90E,KAAKoxE,IAEJ,MAAM3oG,EAAQwrG,EAAegB,UAAU7D,EAAWz2G,KAAKkF,KAAK8qB,SAAUgqF,EAAgBE,EACpFC,EAAgBjzG,GACZo+B,EAAeg0E,EAAeiB,mBAAmBP,EAAgB9yG,GACjElB,EAAOhG,KAMb,OAJA+8D,EAAUf,SAAW,SAAwBz+B,EAAKuH,EAASgU,GACzD,OAAO9yC,EAAKw0G,eAAe1sG,EAAOw3B,EAAc/H,EAAKuH,EAASgU,EAAkBikB,IAG3EA,EAAUf,WAIvB,qBAAqBl3B,GACnB,MAAM+3B,EAAWN,EAAMk+C,gBAAgB31E,GACjCi4B,EAAY/8D,KAAK08D,OAAOi9C,UAAU38C,YAAYH,EAAU,KAAM,CAAGb,SAAU,KAAM+9C,cAAe,QAEtG,GAA2B,OAAvBh9C,EAAUf,SACZ,OAAOe,EAAUf,SAGnB,MAAMk+C,EAAatB,EAAeqB,kBAAkBlyG,EAAMtE,WAAYqhC,EAAS/8B,EAAMrK,YAAasC,KAAKkF,MACjGi1G,EAAiBvB,EAAewB,aAAat1E,EAAS9kC,KAAKkF,MAC3DgC,EAAQ49B,GAAWA,EAAQ59B,MAE3BuvG,EAAY8C,EAAemB,gBAAgB16G,KAAKkF,MAGhD4I,EAAQwrG,EAAegB,UAC3B7D,EAAWz2G,KAAKkF,KAAK8qB,SAAUjoB,EAAMtE,WAAYy2G,EAAYC,EAAgBjzG,GACzEo+B,EAAeg0E,EAAeiB,mBAAmBxyG,EAAMtE,WAAYyD,GACnElB,EAAOhG,KAMb,OAJA+8D,EAAUf,SAAW,SAA2Bl3B,EAASgU,GACvD,OAAO9yC,EAAKw0G,eAAe1sG,EAAOw3B,EAAc,KAAMR,EAASgU,EAAkBikB,IAG5EA,EAAUf,SAQnB,eAAeluD,EAAOw3B,EAAc/H,EAAKuH,EAASgU,EAAkBikB,GAClE,MAAM13D,EAAUuzG,EAAe+B,gBAAgB7hE,GAAkB,GAEjE,OAAO94C,KAAK+wB,QAAQ/iB,QAAQF,EAAOw3B,EAAa/H,EAAKuH,GAAUz/B,GAC5DggC,KAAKG,IAC4B,OAA5Bu3B,EAAUg9C,gBACZh9C,EAAUg9C,cAAgBn7C,EAAaQ,iBAAiBp/D,KAAKkF,KAAMsgC,IAE9D,IAAIizE,EAAOjzE,EAAIxlC,KAAKkF,KAAM63D,EAAUg9C,iBAUjD,kBAAkBx8E,EAAKuH,GACrB,MAAM83B,EAAU3gE,OAAO6E,KAAKy8B,GAC5B,GAAuB,IAAnBq/B,EAAQv9D,OACV,OAAOK,QAAQE,OAAO,IAAI0F,MAAM,8BAGlC,MAAMu3D,EAAWN,EAAMO,aAAaF,EAAS93B,GACvCi4B,EAAY/8D,KAAK08D,OAAOC,OAAOK,YAAYH,EAAU,KAAM,CAAGb,SAAU,QAE9E,OAA2B,OAAvBe,EAAUf,SACLt8D,QAAQC,QAAQo9D,EAAUf,UAG5Bh8D,KAAKi9D,oBAAoBL,EAASr/B,EAAKuH,GAC3CO,KAAK/hB,GACmB,IAAnBA,EAAQjkB,OACHW,KAAK46G,mBAAmB79C,EAAWz5C,EAAQ,IAG7CtjB,KAAK66G,kBAAkB99C,EAAWz5C,IAW/C,oBAAoBs5C,EAASr/B,EAAKuH,GAChC,MAAMk1E,EAAiBpB,EAAeqB,kBAAkBr9C,EAAS93B,EAASvH,EAAKv9B,KAAKkF,MAC9Ey4D,EAAc74B,GAAWA,EAAQ64B,YAGvC,OAAO39D,KAAK+wB,QAAQixB,UACjB3c,KAAK,IAAMk0E,EAAeuB,aAAa96G,KAAK+wB,QAAS/wB,KAAKkF,KAAM80G,IAChE30E,KAAKqyB,IAEJ,GAAIA,EAAOr4D,OAAS,GAAKs+D,EACvB,MAAM,IAAIr4D,MAAM,iEAIlB,OAAOoyD,EAAOnyD,IAAI0gE,GAChBqzC,EAAeyB,UAAU90C,EAAOjmE,KAAKkF,KAAK8qB,SAAUgqF,EAAgBl1E,EAAQ64B,MAUpF,kBAAkBpgC,EAAKuH,GACrB,MAAM83B,EAAU3gE,OAAO6E,KAAKy8B,GAC5B,GAAuB,IAAnBq/B,EAAQv9D,OACV,OAAOK,QAAQE,OAAO,IAAI0F,MAAM,8BAGlC,MAAMu3D,EAAWN,EAAMW,aAAaN,EAASr/B,EAAKuH,GAC5Ci4B,EAAY/8D,KAAK08D,OAAO9qB,OAAOorB,YAAYH,EAAU,KAAM,CAAGb,SAAU,QAE9E,OAA2B,OAAvBe,EAAUf,SACLt8D,QAAQC,QAAQo9D,EAAUf,UAG5Bh8D,KAAKm9D,oBAAoBP,EAASr/B,EAAKuH,GAC3CO,KAAK/hB,GACmB,IAAnBA,EAAQjkB,OACHW,KAAK46G,mBAAmB79C,EAAWz5C,EAAQ,IAG7CtjB,KAAK66G,kBAAkB99C,EAAWz5C,IAW/C,oBAAoBs5C,EAASr/B,EAAKuH,GAChC,MAAMk1E,EAAiBpB,EAAeqB,kBAAkBr9C,EAAS93B,EAASvH,EAAKv9B,KAAKkF,MAC9E24D,EAAW/4B,GAAWA,EAAQ+4B,SAC9BC,EAAOh5B,GAAWA,EAAQg5B,KAC5B86C,EAAeqB,kBAAkBh+G,OAAO6E,KAAKgkC,EAAQg5B,MAAO,KAAMh5B,EAAQg5B,KAAM99D,KAAKkF,MACrF6C,EAAMtE,WAEV,GAAIq6D,EAAKz+D,OAAS,GAAKw+D,EACrB,MAAM,IAAIv4D,MAAM,8EAIlB,OAAOtF,KAAK+wB,QAAQixB,UACjB3c,KAAK,IAAMk0E,EAAeyB,aAAah7G,KAAK+wB,QAAS/wB,KAAKkF,KAAM80G,EAAgBl8C,IAChFz4B,KAAKqyB,IAEJ,GAAIA,EAAOr4D,OAAS,IAAMy+D,EAAKz+D,OAAS,GAAKw+D,GAC3C,MAAM,IAAIv4D,MAAM,sEAIlB,OAAOoyD,EAAOnyD,IAAI0gE,GAChBqzC,EAAe2B,UAAUh1C,EAAOjmE,KAAKkF,KAAK8qB,SAAUgqF,EAAgBl1E,EAASg5B,EAAMD,MAU3F,kBAAkBtgC,EAAKuH,GACrB,MAAM83B,EAAU3gE,OAAO6E,KAAKy8B,GAC5B,GAAuB,IAAnBq/B,EAAQv9D,OACV,OAAOK,QAAQE,OAAO,IAAI0F,MAAM,8BAGlC,MAAMu3D,EAAWN,EAAMa,aAAaR,EAASr/B,EAAKuH,GAC5Ci4B,EAAY/8D,KAAK08D,OAAO73B,OAAOm4B,YAAYH,EAAU,KAAM,CAAGb,SAAU,QAE9E,OAA2B,OAAvBe,EAAUf,SACLt8D,QAAQC,QAAQo9D,EAAUf,UAG5Bh8D,KAAKq9D,oBAAoBT,EAASr/B,EAAKuH,GAC3CO,KAAK/hB,GACmB,IAAnBA,EAAQjkB,OACHW,KAAK46G,mBAAmB79C,EAAWz5C,EAAQ,IAG7CtjB,KAAK66G,kBAAkB99C,EAAWz5C,IAW/C,oBAAoBs5C,EAASr/B,EAAKuH,GAChC,MAAMk1E,EAAiBpB,EAAeqB,kBAAkBr9C,EAAS93B,EAASvH,EAAKv9B,KAAKkF,MAC9E24D,EAAW/4B,GAAWA,EAAQ+4B,SAC9BC,EAAOh5B,GAAWA,EAAQg5B,KAC5B86C,EAAeqB,kBAAkBh+G,OAAO6E,KAAKgkC,EAAQg5B,MAAO,KAAMh5B,EAAQg5B,KAAM99D,KAAKkF,MACrF6C,EAAMtE,WAEV,GAAIq6D,EAAKz+D,OAAS,GAAKw+D,EACrB,MAAM,IAAIv4D,MAAM,8EAIlB,OAAOtF,KAAK+wB,QAAQixB,UACjB3c,KAAK,IAAMk0E,EAAe2B,aAAal7G,KAAK+wB,QAAS/wB,KAAKkF,KAAM80G,EAAgBl8C,IAChFz4B,KAAKqyB,IAEJ,GAAIA,EAAOr4D,OAAS,IAAMy+D,EAAKz+D,OAAS,GAAKw+D,GAC3C,MAAM,IAAIv4D,MAAM,sEAIlB,OAAOoyD,EAAOnyD,IAAI0gE,GAChBqzC,EAAe6B,UAAUl1C,EAAOjmE,KAAKkF,KAAK8qB,SAAUgqF,EAAgBl1E,EAASg5B,EAAMD,MAI3F,qBAAqB/vD,EAAOuuD,EAAe++C,GAGzC,MAAMp1G,EAAOhG,KACPq7G,EAAgBD,EAAyBxC,EAAe+B,gBAAgBS,GAA0B,KAExG,OAAO,SAA8B79E,EAAKub,GAGxC,MAAMzzC,EAAUg2G,GAEZzC,EAAe+B,gBAAgB7hE,GAEnC,OAAO9yC,EAAK+qB,QAAQ/iB,QAAQF,EAAOuuD,EAAc9+B,GAAMl4B,GAASggC,KAAKG,IAEnE,IAAIu0E,EAAgB/zG,EAAK02D,OAAOk9C,cAAcx9G,IAAI0R,GAElD,QAAsBxK,IAAlBy2G,EAA6B,CAC/B,MAAMuB,EAAoB18C,EAAa28C,sBAAsBv1G,EAAKd,KAAMsgC,GACxEu0E,EAAgBuB,EAAkBn7G,GAC9Bm7G,EAAkBn8C,WAGpBn5D,EAAK02D,OAAOk9C,cAAcxvG,IAAI0D,EAAOisG,GAEjC/zG,EAAK02D,OAAOk9C,cAAc57G,OAASw7G,GACrCxzG,EAAK+qB,QAAQ/rB,IAAI,0CACiBw0G,oCAChC,2EAKR,OAAO,IAAIf,EAAOjzE,EAAIx/B,EAAKd,KAAM60G,MAKvC,mBAAmBh9C,EAAWw7B,GAE5B,MAAMvyF,EAAOhG,KAUb,OAPA+8D,EAAUf,SAAW,SAAwBz+B,EAAKuH,EAASgU,GACzD,MAAMzzC,EAAUuzG,EAAe4C,aAAa1iE,EAAkBy/C,EAAU9mE,cAExE,OAAOzrB,EAAK+qB,QAAQ/iB,QAAQuqF,EAAUzqF,MAAOyqF,EAAUjzD,aAAa/H,EAAKuH,GAAUz/B,GAChFggC,KAAKG,GAAM,IAAIizE,EAAOjzE,EAAIx/B,EAAKd,KAAM05D,EAAay6C,mBAAmB7zE,MAGnEu3B,EAAUf,SAGnB,kBAAkBe,EAAWz5C,GAE3B,MAAMtd,EAAOhG,KACPyxB,EAAenO,EAAQnH,OAAO,CAACC,EAAKgoB,IAAMhoB,GAAOgoB,EAAE3S,cAAc,GAiBvE,OAdAsrC,EAAUf,SAAW,SAAuBz+B,EAAKuH,EAASgU,GAExD,MAAM2iE,EAAiBn4F,EAAQ/d,IAAI6+B,IAAK,CACtCt2B,MAAOs2B,EAAEt2B,MACT9M,OAAQojC,EAAEkB,aAAa/H,EAAKuH,MAGxBz/B,EAAUuzG,EAAe4C,aAAa1iE,EAAkBrnB,GAG9D,OAAOzrB,EAAK+qB,QAAQ5iB,MAAMstG,EAAgBp2G,GACvCggC,KAAKG,GAAM,IAAIizE,EAAOjzE,EAAIx/B,EAAKd,KAAM05D,EAAay6C,mBAAmB7zE,MAGnEu3B,EAAUf,SAGnB,qBAAqB38D,GACfA,IAAWm6G,GAIfx5G,KAAK+wB,QAAQ/rB,IAAI,uCAAwCw0G,oCACvD,iM,6BCpYN,MAAM76C,EAAK,EAAQ,IACbrB,EAAU,EAAQ,IAClBv5B,EAAgBu5B,EAAQv5B,cACxBE,EAAkBq5B,EAAQr5B,gBAE1Bn7B,EADQ,EAAQ,GACEA,UAElB4yG,EAAa,sBAMnB,MAAMpC,EAWJ,iBAAiB7C,EAAWzmF,EAAUgqF,EAAgBE,EAAYC,EAAgBjzG,GAChF,IAAI4G,EAAQ,UAkBZ,OAjBAA,GAASosG,EAAW76G,OAAS,EAAI66G,EAAW30G,IAAIlI,GAAKA,EAAEkiE,YAAYh5D,KAAK,MAAQ,IAChFuH,YAAkBkiB,KAAYymF,IAE1BuD,EAAe36G,OAAS,IAC1ByO,GAAS,UACTA,GAASwrG,EAAeqC,2BAA2B3B,IAGjDG,EAAe96G,OAAS,IAC1ByO,GAAS,aACTA,GAASqsG,EAAe50G,IAAIwvG,GAASA,EAAM,GAAK,IAAMA,EAAM,IAAIxuG,KAAK,OAGlD,iBAAVW,IACT4G,GAAS,YAGJA,EAGT,0BAA0BksG,EAAgB9yG,GACxC,IAAI23D,EAAa,kDAgBjB,OAfAA,GAAc,aAEdA,GAAcy6C,EAAesC,uBAAuB5B,GAE/B,iBAAV9yG,IACL8yG,EAAe36G,OAAS,IAC1Bw/D,GAAc,MAEhBA,GAAc,oBAIhBA,GAAc,SAEC,IAAIF,EAAGI,OAAOF,GACfG,iBAAiB,CAAErvB,SAAU+rE,IAY7C,iBAAiBz1C,EAAOj2C,EAAUgqF,EAAgBl1E,EAAS64B,GACzD,MAAMD,EAAM54B,GAAWA,EAAQ44B,IAGzBm+C,EAAyB7B,EAC5BjgE,OAAO+hE,QAAmDx4G,IAA1C2iE,EAAM5K,cAAcygD,EAAMv8C,aAE7C,MAAO,CACLzxD,MAAOwrG,EAAeyC,gBAAgB91C,EAAMnqE,KAAMk0B,EAAU6rF,EAAwBl+C,EAAaD,GACjGp4B,aAAcg0E,EAAe0C,oBAAoBH,EAAwB/2E,GACzErT,cAAeksC,GAanB,uBAAuB84C,EAAWzmF,EAAUgqF,EAAgBr8C,EAAaD,GACvE,IAAI5vD,iBAAuBkiB,KAAYymF,MAavC,OAZA3oG,GAASksG,EAAez0G,IAAIu2G,GAASA,EAAMv8C,YAAYh5D,KAAK,MAC5DuH,GAAS,aACTA,GAASksG,EAAez0G,IAAI,IAAM,KAAKgB,KAAK,MAC5CuH,GAAS,KAEW,IAAhB6vD,IACF7vD,GAAS,kBAGQ,iBAAR4vD,IACT5vD,GAAS,gBAEJA,EAGT,2BAA2BksG,EAAgBl1E,GACzC,IAAI+5B,EAAa,kDAajB,OAZAA,GAAc,aAEdA,GAAcy6C,EAAesC,uBAAuB5B,GAEhDl1E,GAAkC,iBAAhBA,EAAQ44B,MAC5BmB,GAAc,oBAIhBA,GAAc,SAEC,IAAIF,EAAGI,OAAOF,GACfG,iBAAiB,CAAErvB,SAAU+rE,IAa7C,iBAAiBz1C,EAAOj2C,EAAUgqF,EAAgBl1E,EAASg5B,EAAMD,GAC/D,MAAMH,EAAM54B,GAAWA,EAAQ44B,IACzBu+C,EAAc,IAAI10D,IAAI0e,EAAM3K,cAAch/C,OAAO2pD,EAAM1K,gBAAgBh2D,IAAI3J,GAAKA,EAAEE,OACxF,IAAI21B,GAAe,EACf2T,GAAY,EAGhB,MAAMy2E,EAAyB7B,EAAejgE,OAAO+hE,IACnD,MAAMI,EAASj2C,EAAM5K,cAAcygD,EAAMv8C,YACzC,YAAej8D,IAAX44G,IAIAA,EAAOj3G,KAAKyF,OAAS5B,EAAUqB,MAAQ2xG,EAAMt/G,iBAAiBynC,EAEhExS,GAAe,EACNyqF,EAAOj3G,KAAKyF,OAAS5B,EAAUM,UAExCqoB,GAAe,EACf2T,GAAY,IAGP,KAGT,GAAIy2E,EAAuBx8G,QAAU48G,EAAYj+G,KAC/C,MAAM,IAAIsH,MAAM,oDAGlB,MAAO,CACLwI,MAAOwrG,EAAe6C,gBACpBl2C,EAAMnqE,KAAMk0B,EAAUisF,EAAaJ,EAAwB/9C,EAAMD,EAAUH,GAC7EjsC,aAAcA,GAAgC,IAAhBqsC,EAAKz+D,SAAiBw+D,EACpDv4B,aAAcg0E,EAAe8C,oBAAoBH,EAAaJ,EAAwB/9C,EAAMJ,GAC5Ft4B,aAcJ,uBAAuBqxE,EAAWzmF,EAAUisF,EAAajC,EAAgBl8C,EAAMD,EAAUH,GACvF,IAAI5vD,YAAkBkiB,KAAYymF,SAgClC,OA9BA3oG,GAASksG,EACNjgE,OAAO18C,IAAM4+G,EAAY7+F,IAAI/f,EAAEkiE,aAC/Bh6D,IAAIlI,GACCA,EAAEb,iBAAiBynC,EACjB5mC,EAAEb,MAAM2nC,YAEA9mC,EAAEkiE,kBAAkBliE,EAAEb,MAAM0nC,QAAQ7mC,EAAEkiE,gBAGxCliE,EAAEkiE,gBAAgBliE,EAAEkiE,cAAcliE,EAAEb,MAAM0nC,SAG/C7mC,EAAEkiE,WAAa,QAEvBh5D,KAAK,MAERuH,GAAS,UACTA,GAASksG,EAAejgE,OAAO18C,GAAK4+G,EAAY7+F,IAAI/f,EAAEkiE,aAAah6D,IAAIlI,GAAKA,EAAEkiE,WAAa,QAAQh5D,KAAK,UAEvF,IAAbs3D,EACF/vD,GAAS,aAEFgwD,EAAKz+D,OAAS,IACrByO,GAAS,OAASwrG,EAAeqC,2BAA2B79C,IAG3C,iBAARJ,IACT5vD,GAAS,gBAGJA,EAWT,2BAA2BmuG,EAAajC,EAAgBl8C,EAAMJ,GAC5D,IAAImB,EAAa,kDAsBjB,OArBAA,GAAc,aAGdA,GAAcy6C,EAAe+C,4BAA4BrC,EAAejgE,OAAO18C,IAAM4+G,EAAY7+F,IAAI/f,EAAEkiE,cACvGV,GAAc,KAEdA,GAAcy6C,EAAesC,uBAAuB5B,EAAejgE,OAAO18C,GAAK4+G,EAAY7+F,IAAI/f,EAAEkiE,cAG7FzB,EAAKz+D,OAAS,IAChBw/D,GAAc,KAAOy6C,EAAesC,uBAAuB99C,EAAM,iBAGhD,iBAARJ,IACTmB,GAAc,oBAIhBA,GAAc,SAEC,IAAIF,EAAGI,OAAOF,GACfG,iBAAiB,CAAErvB,SAAU+rE,IAa7C,iBAAiBz1C,EAAOj2C,EAAUgqF,EAAgBl1E,EAASg5B,EAAMD,GAC/D,MAAME,EAAoBj5B,GAAWA,EAAQi5B,kBACvCk+C,EAAc,IAAI10D,IAAI0e,EAAM3K,cAAch/C,OAAO2pD,EAAM1K,gBAAgBh2D,IAAI3J,GAAKA,EAAEE,OAElF+/G,EAAyB7B,EAC5BjgE,OAAO+hE,QAAmDx4G,IAA1C2iE,EAAM5K,cAAcygD,EAAMv8C,aAG7C,MAAO,CACLzxD,MAAOwrG,EAAegD,gBACpBr2C,EAAMnqE,KAAMk0B,EAAUisF,EAAaJ,EAAwB/9C,EAAMD,EAAUE,GAC7Ez4B,aAAcg0E,EAAeiD,oBAAoBN,EAAaJ,EAAwB/9C,GACtFrsC,aAA8B,IAAhBqsC,EAAKz+D,SAAiBw+D,GAgBxC,uBAAuB44C,EAAWzmF,EAAUisF,EAAajC,EAAgBl8C,EAAMD,EAAUE,GACvF,IAAIjwD,EAAQ,SAEZ,GAAIiwD,EAAmB,CACrB,MAAMy+C,EAAkBxC,EAAejgE,OAAO18C,IAAM4+G,EAAY7+F,IAAI/f,EAAEkiE,aACnEh6D,IAAIlI,GAAKA,EAAEkiE,YACXh5D,KAAK,MAEgB,KAApBi2G,IACF1uG,GAAS,IAAM0uG,GAcnB,OAVA1uG,YAAkBkiB,KAAYymF,WAC9B3oG,GAASksG,EAAejgE,OAAO18C,GAAK4+G,EAAY7+F,IAAI/f,EAAEkiE,aAAah6D,IAAIlI,GAAKA,EAAEkiE,WAAa,QAAQh5D,KAAK,UAEvF,IAAbs3D,EACF/vD,GAAS,aAEFgwD,EAAKz+D,OAAS,IACrByO,GAAS,OAASwrG,EAAeqC,2BAA2B79C,IAGvDhwD,EAST,2BAA2BmuG,EAAajC,EAAgBl8C,GACtD,IAAIe,EAAa,kDAejB,OAdAA,GAAc,aAGdA,GAAcy6C,EAAesC,uBAAuB5B,EAAejgE,OAAO18C,GAAK4+G,EAAY7+F,IAAI/f,EAAEkiE,cAG7FzB,EAAKz+D,OAAS,IAChBw/D,GAAc,KAAOy6C,EAAesC,uBAAuB99C,EAAM,iBAInEe,GAAc,SAEC,IAAIF,EAAGI,OAAOF,GACfG,iBAAiB,CAAErvB,SAAU+rE,IAU7C,8BAA8B1B,EAAgByC,GAG5C,OAFAA,EAAaA,GAAc,MAEpBzC,EACJz0G,IAAIlI,GAAKi8G,EAAeoD,sBAAsBD,MAAep/G,EAAEiiE,iBAAkBjiE,EAAEb,QACnF+J,KAAK,MAGV,0BAA0BwgE,EAAQvqE,GAChC,OAAIA,aAAiBunC,EACfvnC,EAAMwnC,kBACEs1E,EAAeoD,sBAAsB31C,aAAmBvqE,EAAMA,MAAM,WACvE88G,EAAeoD,sBAAsB31C,aAAmBvqE,EAAMA,MAAM,SAEnEuqE,UAGLA,EAUT,mCAAmCizC,EAAgBjzC,GAGjD,OAFAA,EAASA,GAAU,MAEZizC,EACJz0G,IAAIlI,MAAQ0pE,MAAW1pE,EAAEiiE,iBAAiBjiE,EAAEb,iBAAiBynC,EAAkB,SAAW,MAC1F19B,KAAK,MAGV,kCAAkCyzG,GAChC,OAAOA,EACJz0G,IAAIlI,GAAKi8G,EAAeqD,oBAAoBt/G,EAAEkiE,WAAYliE,EAAEb,QAC5D+J,KAAK,SAGV,2BAA2Bg5D,EAAY/iE,GACrC,OAAIA,aAAiBunC,EACfvnC,EAAMwnC,kBACEs1E,EAAeqD,oBAAoBp9C,EAAY/iE,EAAMA,MAAM,UAC/DA,EAAMM,OAAOw8G,EAAeqD,oBAAoBp9C,EAAY/iE,EAAMA,MAAM,SAEtE+iE,KAAc/iE,EAAMM,WAEtByiE,SAIdjkE,EAAOD,QAAUi+G,G,6BC1KjB,SAAS14G,EAAS9B,EAAKqB,GACrB,OAAOrB,EAAIi7C,OAAO55C,GAAId,OAAS,EAGjC/D,EAAOD,QA/OP,MAWE,oBAAoB+0B,EAAQlrB,EAAM20G,EAAeG,EAAgBE,EAAYC,GAC3E,OAAOz6G,QAAQ6I,IACbrD,EAAKwyD,OAAOnyD,IAAI9I,GACVA,EAAE65G,OACGlmF,EAAOgrB,SAASid,oBAAoBnzD,EAAK8qB,SAAUvzB,EAAEX,MAEvDs0B,EAAOgrB,SAASmc,SAASryD,EAAK8qB,SAAUvzB,EAAEX,QAElDupC,KAAKqyB,IACJ,IAAK,IAAIn8D,EAAI,EAAGA,EAAIm8D,EAAOr4D,OAAQ9D,IAAK,CACtC,MAAM0qE,EAAQvO,EAAOn8D,GACrB,GAAc,OAAV0qE,EACF,MAAM,IAAI3gE,gBAAgBJ,EAAKwyD,OAAOn8D,GAAGO,gCAM3C,GAHoCmqE,EAAM3K,cACvCn/C,OAAO,CAACC,EAAKxgB,IAAMwgB,GAAOxb,EAASo5G,EAAgB38G,GAAKA,EAAEkiE,aAAe3jE,EAAEE,OAAO,GAErF,CAKA,GAAI+9G,EAAe,CAGjB,IAFqC5zC,EAAM1K,eACxCp/C,OAAO,CAACC,EAAKxgB,IAAMwgB,GAAOxb,EAASo5G,EAAgB38G,GAAKA,EAAEkiE,aAAe3jE,EAAEE,OAAO,GAGnF,SAIJ,GAAIk+G,EAAe36G,OAAS4mE,EAAM3K,cAAcj8D,OAAQ,CAUtD,IARoC26G,EACjC79F,OACC,CAACC,EAAK/e,IAAM+e,IACVxb,EAASqlE,EAAM3K,cAAe1/D,GAAKA,EAAEE,OAASuB,EAAEkiE,aAChD3+D,EAASqlE,EAAM1K,eAAgB3/D,GAAKA,EAAEE,OAASuB,EAAEkiE,cAEnD,GAGF,SAQJ,GAH0B26C,EACvB/9F,OAAO,CAACC,EAAK/e,IAAM+e,QAA6C9Y,IAAtC2iE,EAAM5K,cAAch+D,EAAEkiE,aAA2B,IAQ5C46C,EAC/Bh+F,OAAO,CAACC,EAAK24F,IAAU34F,QAAyC9Y,IAAlC2iE,EAAM5K,cAAc05C,EAAM,KAAmB,GAM9E,OAAO9uC,EAAMnqE,MAGf,IAAIgQ,kCAA0C+tG,EAAgB,+BAAiC,YAC7FG,EAAez0G,IAAIlI,GAAKA,EAAEkiE,eAS5B,MAPI26C,EAAW76G,OAAS,IACtByM,iBAAyBouG,EAAW30G,IAAIlI,GAAKA,EAAEkiE,gBAE7C46C,EAAe96G,OAAS,IAC1ByM,kBAA0BquG,EAAe50G,IAAId,GAAQA,EAAK,QAGtD,IAAIa,MAAMwG,KAKtB,uBAAuB5G,GACrB,OAAOA,EAAKwyD,OAAO,GAAG57D,KAUxB,oBAAoBs0B,EAAQlrB,EAAM80G,GAChC,OAAOt6G,QAAQ6I,IAAIrD,EAAKwyD,OAAO3d,OAAOt9C,IAAMA,EAAE65G,QAAQ/wG,IAAI9I,GAAK2zB,EAAOgrB,SAASmc,SAASryD,EAAK8qB,SAAUvzB,EAAEX,QACtGupC,KAAKqyB,IACJ,MAAMklD,EAAiBllD,EACpB3d,OAAO,CAACksB,EAAO1qE,KACd,GAAc,OAAV0qE,EACF,MAAM,IAAI3gE,gBAAgBJ,EAAKwyD,OAAOn8D,GAAGO,gCAI3C,MAAM+gH,EAAW52C,EAAM3K,cAAch/C,OAAO2pD,EAAM1K,gBAAgBh2D,IAAInE,GAAKA,EAAEtF,MACvEmF,EAAU+4G,EAAez0G,IAAI5J,GAAKA,EAAE4jE,YAE1C,IAAK,IAAIhkE,EAAI,EAAGA,EAAIshH,EAASx9G,OAAQ9D,IACnC,IAAsC,IAAlC0F,EAAQ+C,QAAQ64G,EAASthH,IAC3B,OAAO,EAIX,OAAO,IAGX,GAA8B,IAA1BqhH,EAAev9G,OACjB,MAAM,IAAIiG,kEACR00G,EAAez0G,IAAIlI,GAAKA,EAAEkiE,gBAG9B,OAAOq9C,IAYb,oBAAoBxsF,EAAQlrB,EAAM80G,EAAgBl8C,GAChD,OAAOp+D,QAAQ6I,IAAIrD,EAAKwyD,OAAO3d,OAAOt9C,IAAMA,EAAE65G,QAAQ/wG,IAAI9I,GAAK2zB,EAAOgrB,SAASmc,SAASryD,EAAK8qB,SAAUvzB,EAAEX,QACtGupC,KAAKqyB,IACJ,MAAMklD,EAAiBllD,EACpB3d,OAAO,CAACksB,EAAO1qE,KACd,GAAc,OAAV0qE,EACF,MAAM,IAAI3gE,gBAAgBJ,EAAKwyD,OAAOn8D,GAAGO,gCAI3C,MAAM+gH,EAAW52C,EAAM3K,cAAch/C,OAAO2pD,EAAM1K,gBAAgBh2D,IAAInE,GAAKA,EAAEtF,MACvEmF,EAAU,IAAIsmD,IAAIyyD,EAAez0G,IAAIlI,GAAKA,EAAEkiE,aAGlD,QAFmCs9C,EAAS1gG,OAAO,CAACC,EAAKtf,IAAQsf,GAAOnb,EAAQmc,IAAItgB,IAAM,OAMhEk9G,EACvB79F,OAAO,CAACC,EAAK/e,IAAM+e,QAA6C9Y,IAAtC2iE,EAAM5K,cAAch+D,EAAEkiE,YAA4B,EAAI,GAAI,IAE9Ds9C,EAASx9G,SAM3By+D,EAAK3hD,OAAO,CAACC,EAAK/e,IAAM+e,QAA6C9Y,IAAtC2iE,EAAM5K,cAAch+D,EAAEkiE,aAA2B,MAG3F,GAA8B,IAA1Bq9C,EAAev9G,OAAc,CAC/B,IAAIyM,iFACFkuG,EAAez0G,IAAIlI,GAAKA,EAAEkiE,eAM5B,MAJIzB,EAAKz+D,OAAS,IAChByM,oBAA4BgyD,EAAKv4D,IAAIlI,GAAKA,EAAEkiE,gBAGxC,IAAIj6D,MAAMwG,GAGlB,OAAO8wG,IAYb,oBAAoBxsF,EAAQlrB,EAAM80G,EAAgBl8C,GAChD,OAAOp+D,QAAQ6I,IAAIrD,EAAKwyD,OAAO3d,OAAOt9C,IAAMA,EAAE65G,QAAQ/wG,IAAI9I,GAAK2zB,EAAOgrB,SAASmc,SAASryD,EAAK8qB,SAAUvzB,EAAEX,QACtGupC,KAAKqyB,IACJ,MAAMklD,EAAiBllD,EACpB3d,OAAO,CAACksB,EAAO1qE,KACd,GAAc,OAAV0qE,EACF,MAAM,IAAI3gE,gBAAgBJ,EAAKwyD,OAAOn8D,GAAGO,gCAI3C,MAAM+gH,EAAW52C,EAAM3K,cAAch/C,OAAO2pD,EAAM1K,gBAAgBh2D,IAAInE,GAAKA,EAAEtF,MACvEmF,EAAU+4G,EAAez0G,IAAIlI,GAAKA,EAAEkiE,YAE1C,IAAK,IAAIhkE,EAAI,EAAGA,EAAIshH,EAASx9G,OAAQ9D,IACnC,IAAsC,IAAlC0F,EAAQ+C,QAAQ64G,EAASthH,IAC3B,OAAO,EAKX,OAAOuiE,EAAK3hD,OAAO,CAACC,EAAK/e,IAAM+e,QAA6C9Y,IAAtC2iE,EAAM5K,cAAch+D,EAAEkiE,aAA2B,KAG3F,GAA8B,IAA1Bq9C,EAAev9G,OAAc,CAC/B,IAAIyM,8DACFkuG,EAAez0G,IAAIlI,GAAKA,EAAEkiE,eAM5B,MAJIzB,EAAKz+D,OAAS,IAChByM,oBAA4BgyD,EAAKv4D,IAAIlI,GAAKA,EAAEkiE,gBAGxC,IAAIj6D,MAAMwG,GAGlB,OAAO8wG,O,6BC1Of,MAAMlE,EAAsB,EAAQ,IAC9B/4C,EAAgB+4C,EAAoB/4C,cACpCE,EAAuB64C,EAAoB74C,qBAMjD,MAAMg5C,EAOJ,YAAY7oF,EAAU0nC,EAAQolD,EAAU77G,GACtCjB,KAAKgwB,SAAWA,EAChBhwB,KAAK03D,OAASA,EACd13D,KAAK+8G,UAAYD,EACjB98G,KAAKg9G,SAAW/7G,EAChBjB,KAAKi9G,oBAAsB,IAAI9/F,IAC/Blc,EAAQ2B,QAAQ,CAACsD,EAAUq5D,IAAev/D,KAAKi9G,oBAAoB7yG,IAAIlE,EAAUq5D,IAGnF,cAAcr5D,GACZ,MAAMq5D,EAAav/D,KAAKi9G,oBAAoB7gH,IAAI8J,GAChD,YAAmB5C,IAAfi8D,EAEKA,EAGFv/D,KAAK+8G,UAAUv9C,cAAct5D,GAGtC,gBAAgBq5D,GACd,MAAMr5D,EAAWlG,KAAKg9G,SAAS5gH,IAAImjE,GACnC,YAAiBj8D,IAAb4C,EAEKA,EAGFlG,KAAK+8G,UAAUj+C,gBAAgBS,GAGxC,cACE,OAAOv/D,KAAK+8G,UAAUj9C,oBASxB,aAAaz6D,EAAS63G,GACpB,MAAMp9G,EAAS,IAAIqd,IACnB,OAAK9X,GAAYA,EAAQ83G,QAIzBlhH,OAAO6E,KAAKuE,EAAQ83G,QAAQv6G,QAAQw6G,IAClC,MAAMC,EAAeh4G,EAAQ83G,OAAOC,GACpCt9G,EAAOsK,IAAIgzG,EAAWvE,EAAiByE,QAAQF,EAAWF,EAAiBG,MAGtEv9G,GAREA,EAWX,eAAes9G,EAAWF,EAAiBG,GACzC,KAAKH,GAAqBG,GAAiBA,EAAartF,UACtD,MAAM,IAAI1qB,MACR,8GAGJ,IAAK+3G,EACH,OAAOxE,EAAiBI,cAAcmE,EAAWF,GAGnD,IAAIxlD,EAsBJ,GAnBEA,EADE2lD,EAAa3lD,QAAU2lD,EAAa3lD,OAAOr4D,OAAS,EAC7Cg+G,EAAa3lD,OAAOnyD,IAAId,IAC/B,MAAMwhE,EAAQ,CAAEnqE,KAAM,KAAMw6G,QAAQ,GAQpC,GAPoB,iBAAT7xG,EACTwhE,EAAMnqE,KAAO2I,EACJA,IACTwhE,EAAMnqE,KAAO2I,EAAK3I,KAClBmqE,EAAMqwC,SAAW7xG,EAAK6xG,SAGnBrwC,EAAMnqE,KACT,MAAM,IAAIwJ,6CAA6C83G,MAGzD,OAAOn3C,IAGA,CAAE,CAAEnqE,KAAMshH,EAAW9G,QAAQ,IAGpC+G,EAAaP,YAAcO,EAAaP,oBAAoBn9C,GAC9D,MAAM,IAAIr6D,MAAM,mDAGlB,MAAMrE,EAAU,IAAIkc,IAOpB,OAN6B,OAAzBkgG,EAAap8G,SAAoD,iBAAzBo8G,EAAap8G,SACvDhF,OAAO6E,KAAKu8G,EAAap8G,SAAS2B,QAAQ28D,IACxCt+D,EAAQmJ,IAAIm1D,EAAY89C,EAAap8G,QAAQs+D,MAI1C,IAAIs5C,EACTwE,EAAartF,UAAYktF,EACzBxlD,EACA2lD,EAAaP,UAAY,IAAIj9C,EAC7B5+D,GAIJ,qBAAqBm8G,EAAWF,GAC9B,OAAO,IAAIrE,EACTqE,EACA,CAAE,CAAEphH,KAAMshH,EAAW9G,QAAQ,IAC7B,IAAIz2C,EACJ,IAAI1iD,MAIV7hB,EAAOD,QAAUw9G,G,6BChIjB,MAAMh+E,EAAS,EAAQ,IAAUA,OAC3B9yB,EAAQ,EAAQ,GA4EtB,MAAMw1G,EASJ,YAAYntF,EAAQtiB,EAAO4R,EAAYra,GACrCrF,KAAK+wB,QAAUX,EACfpwB,KAAKw9G,OAAS1vG,EACd9N,KAAKy9G,YAAc/9F,EACnBra,EAAUA,GAAW0C,EAAMrK,YAC3BsC,KAAK09G,oBAAmD,IAA9Br4G,EAAQs4G,kBAClC39G,KAAK49G,kBAAoBl3G,KAAKS,IAAI9B,EAAQw4G,kBAAoB,IAAK79G,KAAKy9G,YAAYp+G,QACpFW,KAAKswB,cAAgB,CAAEviB,SAAS,EAAMqjB,iBAAkB/rB,EAAQ+rB,kBAChEpxB,KAAK89G,QAAU,IAAIC,EAAe14G,GAClCrF,KAAKg+G,OAAQ,EAGf,UACE,MAAMC,EAAW,IAAIl/G,MAAMiB,KAAK49G,mBAEhC,IAAK,IAAIriH,EAAI,EAAGA,EAAIyE,KAAK49G,kBAAmBriH,IAC1C0iH,EAAS1iH,GAAKyE,KAAKk+G,mBAAmB3iH,EAAG,GAG3C,OAAOmE,QAAQ6I,IAAI01G,GAAU54E,KAAK,IAAMrlC,KAAK89G,SAG/C,mBAAmBK,EAAcC,GAC/B,MAAMl8G,EAAQi8G,EAAen+G,KAAK49G,kBAAoBQ,EAEtD,GAAIl8G,GAASlC,KAAKy9G,YAAYp+G,QAAUW,KAAKg+G,MAC3C,OAAOt+G,QAAQC,UAGjB,MAAM8E,EAAOzE,KAAKy9G,YAAYv7G,GAC9B,IAAI4L,EACA9M,EAUJ,OARoB,OAAhBhB,KAAKw9G,QACP1vG,EAAQrJ,EAAKqJ,MACb9M,EAASyD,EAAKzD,SAEd8M,EAAQ9N,KAAKw9G,OACbx8G,EAASyD,GAGJzE,KAAK+wB,QAAQ/iB,QAAQF,EAAO9M,EAAQhB,KAAKswB,eAC7C+U,KAAKG,GAAMxlC,KAAK89G,QAAQO,cAAcn8G,EAAOsjC,IAC7C84E,MAAMz+G,GAAOG,KAAKu+G,UAAUr8G,EAAOrC,IACnCwlC,KAAK,IAAMrlC,KAAKk+G,mBAAmBC,EAAcC,EAAY,IAGlE,UAAUl8G,EAAOrC,GAGf,GAFAG,KAAK89G,QAAQU,SAASt8G,EAAOrC,GAEzBG,KAAK09G,mBAEP,MADA19G,KAAKg+G,OAAQ,EACPn+G,GASZ,MAAM4+G,EASJ,YAAYruF,EAAQtiB,EAAOsnB,EAAQ/vB,GACjCrF,KAAK+wB,QAAUX,EACfpwB,KAAKw9G,OAAS1vG,EACd9N,KAAK0+G,QAAUtpF,EACf/vB,EAAUA,GAAW0C,EAAMrK,YAC3BsC,KAAK09G,oBAAmD,IAA9Br4G,EAAQs4G,kBAClC39G,KAAK49G,kBAAoBv4G,EAAQw4G,kBAAoB,IACrD79G,KAAKswB,cAAgB,CAAEviB,SAAS,EAAMqjB,iBAAkB/rB,EAAQ+rB,kBAChEpxB,KAAK2+G,UAAY,EACjB3+G,KAAKk8B,OAAS,EACdl8B,KAAK89G,QAAU,IAAIC,EAAe14G,GAClCrF,KAAK4+G,iBAAmB,KACxB5+G,KAAK6+G,gBAAkB,KACvB7+G,KAAK8+G,YAAa,EAGpB,UACE,OAAO,IAAIp/G,QAAQ,CAACC,EAASC,KAC3BI,KAAK4+G,iBAAmBj/G,EACxBK,KAAK6+G,gBAAkBj/G,EAEvBI,KAAK0+G,QACFznF,GAAG,OAAQj2B,GAAUhB,KAAK++G,YAAY/9G,IACtCi2B,GAAG,QAASp3B,GAAOG,KAAKg/G,cAAcn/G,IACtCo3B,GAAG,MAAO,IAAMj3B,KAAKg/G,mBAI5B,YAAYh+G,GACV,IAAKjC,MAAMC,QAAQgC,GACjB,OAAOhB,KAAKg/G,cAAc,IAAIrgH,UAAU,mEAG1C,GAAIqB,KAAK8+G,WAGP,OAGF,MAAM58G,EAAQlC,KAAKk8B,SACnBl8B,KAAK2+G,YAEL3+G,KAAK+wB,QAAQ/iB,QAAQhO,KAAKw9G,OAAQx8G,EAAQhB,KAAKswB,eAC5C+U,KAAKG,IACJxlC,KAAK89G,QAAQO,cAAcn8G,EAAOsjC,GAClCxlC,KAAK2+G,cAENL,MAAMz+G,IACLG,KAAK2+G,YACL3+G,KAAKu+G,UAAUr8G,EAAOrC,KAEvBwlC,KAAK,KACArlC,KAAK0+G,QAAQO,YACfj/G,KAAK0+G,QAAQ3oF,SAGX/1B,KAAK8+G,YAAiC,IAAnB9+G,KAAK2+G,WAM1B3+G,KAAK4+G,iBAAiB5+G,KAAK89G,WAI7B99G,KAAK2+G,WAAa3+G,KAAK49G,mBACzB59G,KAAK0+G,QAAQn2C,QASjB,cAAc1oE,GACPG,KAAK8+G,aACR9+G,KAAK8+G,YAAa,EAEdj/G,EAGFG,KAAK6+G,gBAAgBh/G,GACO,IAAnBG,KAAK2+G,WAEd3+G,KAAK4+G,iBAAiB5+G,KAAK89G,UAKjC,UAAU57G,EAAOrC,GACfG,KAAK89G,QAAQU,SAASt8G,EAAOrC,GAEzBG,KAAK09G,qBACP19G,KAAK8+G,YAAa,EAClB9+G,KAAK6+G,gBAAgBh/G,KAQ3B,MAAMk+G,EAMJ,YAAY14G,GACVrF,KAAKk/G,gBAAkB75G,EAAQ85G,eAC/Bn/G,KAAKo/G,WAAa/5G,EAAQg6G,WAAa,IACvCr/G,KAAKs/G,cAAgB,EACrBt/G,KAAKvC,OAAS,GAEVuC,KAAKk/G,gBASPl/G,KAAKu/G,YAAc,GAEnBtjH,OAAOC,eAAe8D,KAAM,cAAe,CAAE7D,YAAY,EAAOC,IAAK,KACnE,MAAM,IAAIkJ,MAAM,mFAMtB,cAAcpD,EAAOsjC,GACnBxlC,KAAKs/G,gBAEDt/G,KAAKk/G,kBACPl/G,KAAKu/G,YAAYr9G,GAASsjC,GAQ9B,SAAStjC,EAAOrC,GACdG,KAAKs/G,gBAEDt/G,KAAKvC,OAAO4B,OAASW,KAAKo/G,YAC5Bp/G,KAAKvC,OAAOiH,KAAK7E,GAGfG,KAAKk/G,kBACPl/G,KAAKu/G,YAAYr9G,GAASrC,IAKhCxE,EAAQmkH,kBA3QR,SAA2BpvF,EAAQtiB,EAAO4R,EAAYra,GACpD,IAAK+qB,EACH,MAAM,IAAIzxB,UAAU,kCAGtB,GAAqB,iBAAVmP,EAAoB,CAC7B,GAAI/O,MAAMC,QAAQ0gB,GAChB,OAAO,IAAI69F,EAAmBntF,EAAQtiB,EAAO4R,EAAYra,GAAS2I,UAGpE,GAAI0R,aAAsBmb,EACxB,OAAO,IAAI4jF,EAAoBruF,EAAQtiB,EAAO4R,EAAYra,GAAS2I,UAGrE,MAAM,IAAIrP,UAAU,sDAGtB,GAAII,MAAMC,QAAQ8O,GAEhB,OAAO,IAAIyvG,EAAmBntF,EAAQ,KAAMtiB,EAD5CzI,EAAUqa,GACkD1R,UAG9D,MAAM,IAAIrP,UAAU,oEAsPtBtD,EAAQ0iH,eAAiBA,G,6BCvTzB1iH,EAAQ4S,SAAW,EAAQ,GAAkBuF,eAC7CnY,EAAQ8f,SAAW,EAAQ,GAC3B9f,EAAQiiB,YAAc,EAAQ,GAAkB9J,eAAe8J,YAC/DjiB,EAAQ2Y,mBAAqB,EAAQ,IAAoBA,mBAEzD3Y,EAAQokH,QAAU,EAAQ,IAC1BpkH,EAAQqkH,MAAQ,EAAQ,GACxBrkH,EAAQskH,UAAY,EAAQ,KAC5BtkH,EAAQukH,QAAU,EAAQ,KAC1BvkH,EAAQwkH,YAAc,EAAQ,KAE9BxkH,EAAQ+lE,cAAgB,EAAQ,IAA0BA,cAC1D/lE,EAAQkmE,mBAAqB,EAAQ,IAA0BA,mBAE/DlmE,EAAQykH,sBAAwB,EAAQ,KAExCzkH,EAAQ0mE,YAAc,EAAQ,KAA2BA,YACzD1mE,EAAQ0kH,mBAAqB,EAAQ,M,6BCnBrC,MAAMviH,EAAO,EAAQ,GACfgW,EAAiB,EAAQ,GAAcA,eACvCvO,EAAO,aACP,qBACLyO,EAAoB,UACpBC,EAAS,WACTC,EAAU,SACVC,EAAQ,kCACRC,EAAiC,aACjCC,GACG,EAAQ,KACN,mBACLC,EAAkB,cAClBC,EAAa,kBACbC,GACG,EAAQ,IA2IZ,SAASI,EAAWC,GACnB,MAAO,KACN,MAAMC,EAAQjR,QAAQkR,SACtB,OAAOC,IACN,MAAMC,EAAQpR,QAAQkR,OAAOD,GAC7BxU,KAAKggH,QACJ/jH,OAAO2Y,OAAO,GAAIL,EAAaG,GAC/BC,EAAM,GAAKA,EAAM,GAAK,OA4B1B,SAASsrG,EAAqBC,GAc7B,MAAO,GAAG5jG,OAAO4jG,GAbM,CACtB,KACA,IACA,KACA,IACA,GACA,IACA,GACA,EACA,IACA,EACA,KAEqD1jG,KAAK2jG,GAG5D,SAASA,EAAcp1G,EAAGy7D,GACzB,OAAOz7D,EAAIy7D,EAGZ,SAAS45C,EAAahsG,EAAQ5X,EAAOof,GACpC,MAAO,CACNxH,SACA5X,QACAof,cAcF,SAASokG,EAAQ5rG,GAChB,OAAO5X,IACN,MAAM6jH,EAwCR,SAAgCjsG,EAAQ5X,GACvC,IAAKqX,EAASO,GACb,MAAO,CACN5X,MAAO4X,EACPA,OAAQ,IAGV,MAAO,CACNA,SACA5X,SAjDuBuY,CAAuBX,EAAQ5X,GAGtD,GADAyX,EAAcjU,KAAKoV,WAAYirG,EAAejsG,SACzCc,OAAOC,SAASkrG,EAAe7jH,OACnC,MAAM,IAAImC,0CACuBnB,EAAKgE,OAAO6+G,EAAe7jH,UAI7D,MAAMqZ,EAAOjC,EAAWysG,EAAejsG,QACvC,IAAIksG,EAAetgH,KAAKqV,QAAQQ,GAC3ByqG,IACJA,EAAeC,EACdF,EAAejsG,OACfnY,OAAO2Y,OAAO,GAAI5U,KAAKwgH,gBAIzB,MAAMviH,EA9BR,SAAmBwiH,EAAajkH,GAC/B,IAAK,IAAIjB,EAAI,EAAGA,EAAIklH,EAAYphH,OAAQ9D,IAAK,CAC5C,MAAMmlH,EAAQD,EAAYllH,GAC1B,GAAIiB,GAASkkH,EACZ,OAAOA,EAGT,OAAQ,EAuBGC,CAAU3gH,KAAKygH,YAAaJ,EAAe7jH,OAErD8jH,EAAat+C,KAAOq+C,EAAe7jH,MACnC8jH,EAAax5G,OAAS,EAElBw5G,EAAaE,aAAapjH,eAAea,KAC5CqiH,EAAaE,aAAaviH,IAAM,GAGjC+B,KAAKqV,QAAQQ,GAAQyqG,GAIvB,SAASC,EAAiBnsG,EAAQosG,GACjC,MAAO,CACNpsG,SACAosG,eACAx+C,IAAK,EACLl7D,MAAO,GAmDTxL,EAAOD,QA5SP,MAQC,YAAYS,EAAMwZ,EAAMsrG,EAAcplG,GACrC,IAAIjG,EAEJ,GAAI1B,EAAS/X,IACZyZ,EAAStZ,OAAO2Y,OACf,CACC0sD,QAAS,CAAC,KAAO,IAAM,KAAO,IAAM,GAAK,IAAM,GAAK,EAAG,IAAK,EAAG,IAC/DlsD,WAAY,IAEbtZ,IAGW0Z,YACXD,EAAOC,UAAY,CAAChC,QAEf,CACN,IAAIrS,EACAiT,EAAS,GAETrV,MAAMC,QAAQ4hH,IACjBz/G,EAAMqa,GAAQ,GACdpH,EAASwsG,GAETz/G,EAAMy/G,GAAgB,GAGvB9sG,IAEAyB,EAAS,CACRzZ,OACAsZ,WAAYhB,EACZkB,OACAgsD,QAAS2+C,EAAqB9+G,EAAImgE,SAClC9rD,UAAW,CAAChC,KA4GhB,SAAuB1X,EAAMwZ,EAAMlB,GAClC,IAAKkB,EACJ,MAAM,IAAIhQ,MAAM,oCAEjB,IAAKxJ,EACJ,MAAM,IAAIwJ,MAAM,oCAGjB,IAAK0O,EAAmBlY,GACvB,MAAM,IAAIwJ,MAAM,uBAGjB,IAAK4O,EAAkBE,GACtB,MAAM,IAAI9O,MAAM,sBAGjB8O,EAAOxR,QAAQma,IACd,GAAc,OAAVA,EACH,MAAM,IAAIzX,MAAM,oCA3HjBu7G,CAActrG,EAAOzZ,KAAMyZ,EAAOD,KAAMC,EAAOH,YAE/CpV,KAAKlE,KAAOyZ,EAAOzZ,KACnBkE,KAAKsV,KAAOC,EAAOD,KACnBtV,KAAK0V,WAAaH,EAAOG,YAAc,MAEvC1V,KAAKygH,YAAclrG,EAAO+rD,QAC1BthE,KAAKwgH,aAAexgH,KAAKygH,YAAYtkG,OAAO,CAACC,EAAKykD,KACjDzkD,EAAIykD,GAAc,EACXzkD,GACL,IAEHngB,OAAO0B,OAAOqC,KAAKwgH,cACnBvkH,OAAO0B,OAAOqC,KAAKygH,aACnBzgH,KAAKgiE,IAAM,EACXhiE,KAAK8G,MAAQ,EAEb9G,KAAKqV,QAAU,GACfrV,KAAKoV,WAAaG,EAAOH,YAAc,GAER,IAA3BpV,KAAKoV,WAAW/V,SACnBW,KAAKqV,QAAU,CACd,CAACzB,EAAW,KAAM2sG,EACjB,GACAtkH,OAAO2Y,OAAO,GAAI5U,KAAKwgH,iBAK1BjrG,EAAOC,UAAU5S,QAAQ+S,GACxBA,EAAiBC,eAAe5V,OAUlC,QAAQoU,EAAQ5X,GACfwjH,EAAQtkH,KAAKsE,KAAiB,IAAXoU,EAAe,EAAIA,GAAU,GAAhD4rG,CAAoDxjH,GAGrD,MACC,MACMuI,EADO2O,EAAqB1T,KAAKqV,SAErC9P,KA+KkCu7G,EA/KD9gH,KAgL7B+gH,IACN,MAAMz/C,EAAU,GACV0/C,EAAmB/kH,OAAO6E,KAAKigH,EAAW3sG,QAChD,IAAIgI,EAAM,EACV,IAAK,MAAMykD,KAAcigD,EAAUL,YAAa,CAC/CrkG,GAAO2kG,EAAWP,aAAa3/C,GAC/B,MAAMogD,EAAO,CAAEC,GAAIrgD,GACnB,IAAK,MAAMllD,KAAaqlG,EACvBC,EAAKtlG,GAAaolG,EAAW3sG,OAAOuH,GAErC2lD,EAAQ58D,KAAK07G,EAAaa,EAAM7kG,KAAQ0kG,EAAUhlH,gBAEnD,MAAO,CAAEwlE,UAASxsD,KAAMisG,MA3LtB5kG,OA+LJ,SAAiC2kG,GAChC,MAAO,CAAC1kG,EAAKvgB,KACZugB,EAAI1X,QAAQ7I,EAAEylE,SAEd,MAAM6/C,EAAW,CAAED,GAAI,QACvB,IAAK,MAAMnkG,KAAS9gB,OAAO6E,KAAKjF,EAAEiZ,KAAKV,QACtC+sG,EAASpkG,GAASlhB,EAAEiZ,KAAKV,OAAO2I,GAOjC,OALAX,EAAI1X,KACH07G,EAAae,EAAUtlH,EAAEiZ,KAAKhO,SAAUg6G,EAAUhlH,eAClDskH,EAAavkH,EAAEiZ,KAAKV,OAAQvY,EAAEiZ,KAAKktD,OAAQ8+C,EAAUhlH,YACrDskH,EAAavkH,EAAEiZ,KAAKV,OAAQvY,EAAEiZ,KAAKhO,SAAUg6G,EAAUhlH,eAEjDsgB,GA5MEglG,CAAwBphH,MAAO,IA8K1C,IAAsC8gH,EA5KpC,MAAO,CACNhlH,KAAMkE,KAAKlE,KACXwZ,KAAMtV,KAAKsV,KACXrQ,OACAF,SACA2Q,WAAY1V,KAAK0V,YAInB,QACC1V,KAAKgiE,IAAM,EACXhiE,KAAK8G,MAAQ,EACb9G,KAAKqV,QAAU,GAahB,WAAWjB,GACV,OAAOE,EAAW5Y,KAAKsE,KAAMoU,EAAtBE,GAGR,SACC,MAAMF,EAAST,EAAU3T,KAAKoV,WAAYzS,WAC1C,MAAO,CACNq9G,QAASA,EAAQtkH,KAAKsE,KAAMoU,GAC5BE,WAAYA,EAAW5Y,KAAKsE,KAAMoU,IAIpC,SACC,MAAMA,EAAST,EAAU3T,KAAKoV,WAAYzS,WAC1CoR,EAAarY,KAAKsE,KAAMA,KAAKqV,QAASjB,M,6BCtJxC,MAAM5W,EAAO,EAAQ,IACf,eAAEgW,GAAmB,EAAQ,GAC7BvO,EAAO,WACP,qBACLyO,EAAoB,UACpBC,EAAS,WACTC,EAAU,SACVC,EAAQ,kCACRC,EAAiC,aACjCC,GACG,EAAQ,KACN,cACLE,EAAa,mBACbD,EAAkB,kBAClBE,GACG,EAAQ,IACNmtG,EAAsB,EAAQ,KAE9BC,EAAyB,IA8K/B,SAAShtG,EAAWC,GACnB,MAAO,KACN,MAAMC,EAAQjR,QAAQkR,SACtB,OAAOC,IACN,MAAMC,EAAQpR,QAAQkR,OAAOD,GAC7BxU,KAAKggH,QACJ/jH,OAAO2Y,OAAO,GAAIL,EAAaG,GAC/BC,EAAM,GAAKA,EAAM,GAAK,OA6B1B,SAAS4sG,EAAqBC,GAE7B,MAAO,GACLllG,OAAOklG,GAFkB,CAAC,IAAM,IAAM,GAAK,GAAK,IAAM,IAAM,OAG5DhlG,KAAK2jG,GAGR,SAASA,EAAcp1G,EAAGy7D,GACzB,OAAOz7D,EAAIy7D,EAGZ,SAASw5C,EAAQ5rG,GAChB,OAAO5X,IACN,MAAM6jH,EA8BR,SAAgCjsG,EAAQ5X,GACvC,QAAc8G,IAAV9G,EACH,MAAO,CACNA,MAAO4X,EACPA,OAAQ,IAIV,MAAO,CACNA,SACA5X,SAxCuBuY,CAAuBX,EAAQ5X,GAGtD,GADAyX,EAAcjU,KAAKoV,WAAYpV,KAAKoU,SAC/Bc,OAAOC,SAASkrG,EAAe7jH,OACnC,MAAM,IAAImC,0CACuBnB,EAAKgE,OAAO6+G,EAAe7jH,UAI7D,MAAMqZ,EAAOjC,EAAWysG,EAAejsG,QACvC,IAAIqtG,EAAiBzhH,KAAKqV,QAAQQ,GAC7B4rG,IACJA,EAAiB,CAChBrtG,OAAQisG,EAAejsG,OACvBstG,GAAI,IAAIL,EAAoBrhH,KAAK2hH,cAAe3hH,KAAK4hH,YACrD96G,MAAO,EACPk7D,IAAK,IAIPy/C,EAAeC,GAAGh9G,KAAK27G,EAAe7jH,OACtCilH,EAAe36G,QACX26G,EAAe36G,MAAQ9G,KAAK6hH,eAAkB,GACjDJ,EAAeC,GAAGI,WAEnBL,EAAez/C,KAAOq+C,EAAe7jH,MACrCwD,KAAKqV,QAAQQ,GAAQ4rG,GAkBvBnmH,EAAOD,QAzQP,MAQC,YAAYS,EAAMwZ,EAAMsrG,EAAcplG,GACrC,IAAIjG,EACJ,GAAI1B,EAAS/X,IACZyZ,EAAStZ,OAAO2Y,OACf,CACCmtG,YAAa,CAAC,IAAM,IAAM,GAAK,GAAK,IAAM,IAAM,MAChD3sG,WAAY,IAEbtZ,IAGW0Z,YACXD,EAAOC,UAAY,CAAChC,QAEf,CACN,IAAIrS,EACAiT,EAAS,GAETrV,MAAMC,QAAQ4hH,IACjBz/G,EAAMqa,GAAQ,GACdpH,EAASwsG,GAETz/G,EAAMy/G,GAAgB,GAGvB9sG,IAEAyB,EAAS,CACRzZ,OACAwZ,OACAF,WAAYhB,EACZ2tG,YAAaR,EAAqBpgH,EAAI4gH,aACtCvsG,UAAW,CAAChC,GACZmuG,cAAexgH,EAAIwgH,cACnBC,WAAYzgH,EAAIygH,aA+IpB,SAAuB9lH,EAAMwZ,EAAMlB,GAClC,IAAKkB,EACJ,MAAM,IAAIhQ,MAAM,oCAEjB,IAAKxJ,EACJ,MAAM,IAAIwJ,MAAM,oCAGjB,IAAK0O,EAAmBlY,GACvB,MAAM,IAAIwJ,MAAM,uBAGjB,IAAK4O,EAAkBE,GACtB,MAAM,IAAI9O,MAAM,sBAGjB8O,EAAOxR,QAAQma,IACd,GAAc,aAAVA,EACH,MAAM,IAAIzX,MAAM,0CA7JjBu7G,CAActrG,EAAOzZ,KAAMyZ,EAAOD,KAAMC,EAAOH,YAE/CpV,KAAK2hH,cAAgBpsG,EAAOosG,cAC5B3hH,KAAK4hH,WAAarsG,EAAOqsG,WAEzB5hH,KAAKlE,KAAOyZ,EAAOzZ,KACnBkE,KAAKsV,KAAOC,EAAOD,KACnBtV,KAAK0V,WAAaH,EAAOG,YAAc,MAEvC1V,KAAK+hH,YAAcxsG,EAAOwsG,YAC1B/hH,KAAKqV,QAAU,GACfrV,KAAKoV,WAAaG,EAAOH,YAAc,GAEvCpV,KAAK6hH,cAAgBtsG,EAAOssG,eAAiBP,EAEd,IAA3BthH,KAAKoV,WAAW/V,SACnBW,KAAKqV,QAAU,CACd,CAACzB,EAAW,KAAM,CACjBQ,OAAQ,GACRstG,GAAI,IAAIL,EAAoBrhH,KAAK2hH,cAAe3hH,KAAK4hH,YACrD96G,MAAO,EACPk7D,IAAK,KAKRzsD,EAAOC,UAAU5S,QAAQ+S,GACxBA,EAAiBC,eAAe5V,OAUlC,QAAQoU,EAAQ5X,GACfwjH,EAAQtkH,KAAKsE,KAAiB,IAAXoU,EAAe,EAAIA,GAAU,GAAhD4rG,CAAoDxjH,GAGrD,MACC,MAAMsY,EAAOpB,EAAqB1T,KAAKqV,SACjCtQ,EAAS,GASf,OARA+P,EAAKlS,QAAQtF,KAsDf,SAAmC0kH,EAAiBD,GAGnD,OAFAC,EAAgBN,GAAGI,WAEZC,EAAYx8G,IAAI08G,IACtB,MAAMC,EAAkBF,EAAgBN,GAAGO,WAAWA,GACtD,MAAO,CACN7tG,OAAQnY,OAAO2Y,OAAO,CAAEutG,SAAUF,GAAcD,EAAgB5tG,QAChE5X,MAAO0lH,GAAoC,MA5D3CE,CAA0B9kH,EAAG0C,KAAK+hH,aAAan/G,QAAQq/D,IACtDl9D,EAAOL,KAAKu9D,KAEbl9D,EAAOL,KAsEV,SAAyBlI,EAAO6lH,GAC/B,MAAO,CACNzmG,cAAeymG,EAAQvmH,WACvBsY,OAAQ5X,EAAM4X,OACd5X,MAAOA,EAAMwlE,KA1EAsgD,CAAgBhlH,EAAG0C,OAC/B+E,EAAOL,KA6DV,SAA2BlI,EAAO6lH,GACjC,MAAO,CACNzmG,cAAeymG,EAAQvmH,aACvBsY,OAAQ5X,EAAM4X,OACd5X,MAAOA,EAAMsK,OAjEAy7G,CAAkBjlH,EAAG0C,SAG3B,CACNlE,KAAMkE,KAAKlE,KACXwZ,KAAMtV,KAAKsV,KACXrQ,OACAF,SACA2Q,WAAY1V,KAAK0V,YAInB,QACchC,EAAqB1T,KAAKqV,SAClCzS,QAAQtF,IACZA,EAAEokH,GAAGjsG,QACLnY,EAAEwJ,MAAQ,EACVxJ,EAAE0kE,IAAM,IAcV,WAAW5tD,GACV,OAAOE,EAAW5Y,KAAKsE,KAAMoU,EAAtBE,GAGR,SACC,MAAMF,EAAST,EAAU3T,KAAKoV,WAAYzS,WAC1C,MAAO,CACNq9G,QAASA,EAAQtkH,KAAKsE,KAAMoU,GAC5BE,WAAYA,EAAW5Y,KAAKsE,KAAMoU,IAIpC,SACC,MAAMA,EAAST,EAAU3T,KAAKoV,WAAYzS,WAC1CoR,EAAarY,KAAKsE,KAAMA,KAAKqV,QAASjB,M,6BCnKxC,MAAM,QAAEouG,GAAY,EAAQ,KA0C5B,SAASC,IACR,IAAIC,EAA4BvxG,KAAKkD,MAAQrU,KAAK2iH,0BAClD,KACCD,EAA4B1iH,KAAK4iH,8BACjC5iH,KAAK6iH,cAEL7iH,KAAK8iH,WAAW9iH,KAAK+iH,eAAiB,IAAIP,IAEpCxiH,KAAK+iH,eAAiB/iH,KAAK8iH,WAAWzjH,SAC3CW,KAAK+iH,cAAgB,GAEtBL,GAA6B1iH,KAAK4iH,6BAClC5iH,KAAK2iH,2BAA6B3iH,KAAK4iH,6BAExC,OAAO5iH,KAAK8iH,WAAW9iH,KAAK+iH,eAG7BznH,EAAOD,QAzDP,MACC,YAAYsmH,EAAeC,GAC1B5hH,KAAK2hH,cAAgBA,GAAiB,EACtC3hH,KAAK4hH,WAAaA,GAAc,EAEhC5hH,KAAK6iH,aAAelB,GAAiBC,EAErC5hH,KAAK8iH,WAAa/jH,MAAM6iH,GAAYzjH,KAAK,IAAIqkH,GAC7CxiH,KAAK+iH,cAAgB,EAErB/iH,KAAK2iH,0BAA4BxxG,KAAKkD,MACtCrU,KAAK4iH,6BACa,IAAhBjB,EAAwBC,GAAcx/C,IAGzC,WAAW+/C,GAEV,OADeM,EAAO/mH,KAAKsE,MACbiiH,WAAWE,GAG1B,KAAK3lH,GACJimH,EAAO/mH,KAAKsE,MACZA,KAAK8iH,WAAWlgH,QAAQqtE,IACvBA,EAAOvrE,KAAKlI,KAId,QACCwD,KAAK8iH,WAAWlgH,QAAQqtE,IACvBA,EAAOx6D,UAIT,WACCzV,KAAK8iH,WAAWlgH,QAAQqtE,IACvBA,EAAO6xC,gB,gBClCV,IAAIkB,EAAS,EAAQ,KAAYA,OAEjC,SAASR,EAAQ7tG,EAAOsuG,EAAGC,GAgBvBljH,KAAKmjH,UAAsB,IAAVxuG,EACjB3U,KAAK2U,MAAQA,GAAS,IACtB3U,KAAKijH,OAAW3/G,IAAN2/G,EAAmB,GAAKA,EAClCjjH,KAAKkjH,QAAa5/G,IAAP4/G,EAAoB,IAAMA,EACrCljH,KAAKojH,UAAY,IAAIJ,EAAOK,GAC5BrjH,KAAKsjH,OAAS,EACdtjH,KAAKyV,QAwCT,SAAS4tG,EAAuBj/G,EAAGnG,GAG/B,OAAQmG,EAAEm/G,KAAOtlH,EAAEslH,KAAQ,EAAKn/G,EAAEm/G,KAAOtlH,EAAEslH,MAAS,EAAI,EAG5D,SAASC,EAA4Bp/G,EAAGnG,GAGpC,OAAQmG,EAAEq/G,UAAYxlH,EAAEwlH,UAuQ5B,SAASC,EAAOnuG,GAMZvV,KAAKuV,OAASA,GAAU,GACxBvV,KAAKtD,KAAOsD,KAAKuV,OAAO7Y,MAAQ,OAChC8lH,EAAQ9mH,KAAKsE,KAAoB,SAAdA,KAAKtD,MAAkB6Y,EAAOZ,OACjD3U,KAAK2jH,aAAe3jH,KAAKuV,OAAOquG,OAAS,GACzC5jH,KAAK6jH,cAAgB7jH,KAAKuV,OAAOuuG,QAAU,IAC3C9jH,KAAK+jH,SAAW,EAhUpBvB,EAAQrlH,UAAUsY,MAAQ,WAGtBzV,KAAKojH,UAAU/jE,QACfr/C,KAAKhD,EAAI,EACTgD,KAAKsjH,QAAU,EACftjH,KAAKgkH,cAAgB,GAGzBxB,EAAQrlH,UAAUa,KAAO,WACrB,OAAOgC,KAAKojH,UAAUplH,MAG1BwkH,EAAQrlH,UAAU0D,QAAU,SAASojH,GAGjC,IAAInkH,EAAS,GAOb,OANImkH,GACAjkH,KAAKkkH,WAAU,GACflkH,KAAKojH,UAAUjgH,KAAK,SAASvH,GAAKkE,EAAO4E,KAAK9I,MAE9CoE,KAAKojH,UAAUjgH,KAAK,SAASvH,GAAKkE,EAAO4E,KAAK,CAAC6+G,KAAK3nH,EAAE2nH,KAAMvmH,EAAEpB,EAAEoB,MAE7D8C,GAGX0iH,EAAQrlH,UAAUklH,QAAU,WAQxB,MANQ,EADMriH,KAAa,SAAI,SAAW,kBACxBA,KAAKhD,EAAI,kBAAoBgD,KAAKhC,OAAS,aACpD,SAASgC,KAAKiiH,WAAW,GACzB,SAASjiH,KAAKiiH,WAAW,KACzB,SAASjiH,KAAKiiH,WAAW,IACzB,SAASjiH,KAAKiiH,WAAW,KACzB,SAASjiH,KAAKiiH,WAAW,IACzB17G,KAAK,OAelBi8G,EAAQrlH,UAAUuH,KAAO,SAASqG,EAAG/N,GAIjCA,EAAIA,GAAK,EACT+N,EAAIhM,MAAMC,QAAQ+L,GAAKA,EAAI,CAACA,GAC5B,IAAK,IAAIxP,EAAI,EAAIA,EAAIwP,EAAE1L,OAAS9D,IAC5ByE,KAAKmkH,QAAQp5G,EAAExP,GAAIyB,IAI3BwlH,EAAQrlH,UAAUinH,cAAgB,SAASxoH,GAGvCA,EAAImD,MAAMC,QAAQpD,GAAKA,EAAI,CAACA,GAC5B,IAAK,IAAIL,EAAI,EAAIA,EAAIK,EAAEyD,OAAS9D,IAC5ByE,KAAKmkH,QAAQvoH,EAAEL,GAAGgoH,KAAM3nH,EAAEL,GAAGyB,IAIrCwlH,EAAQrlH,UAAU+mH,UAAY,SAASG,GASnC,KAAIrkH,KAAKhD,IAAMgD,KAAKgkH,gBACfK,GAASrkH,KAAKkjH,IAAMljH,KAAKkjH,GAAMljH,KAAKhD,EAAIgD,KAAKgkH,eADlD,CAIA,IAAIM,EAAO,EAEXtkH,KAAKojH,UAAUjgH,KAAK,SAASvH,GACzBA,EAAE6nH,UAAYa,EAAO1oH,EAAEoB,EAAI,EAC3BsnH,EAAO1oH,EAAE0oH,KAAOA,EAAO1oH,EAAEoB,IAE7BgD,KAAKhD,EAAIgD,KAAKgkH,cAAgBM,IAGlC9B,EAAQrlH,UAAUonH,aAAe,SAASx5G,GAKtC,GAAoB,IAAhB/K,KAAKhC,OACL,OAAO,KAEX,IAAI0iE,EAAO1gE,KAAKojH,UAAUziD,WAAW,CAAC4iD,KAAKx4G,IACvCnP,EAAqB,OAAhB8kE,EAAK5rD,OAAmB4rD,EAAKj6B,OAASi6B,EAAK5rD,OACpD,GAAIlZ,EAAE2nH,OAASx4G,GAAK/K,KAAKmjH,SACrB,OAAOvnH,EAEX,IAAI6qC,EAAOi6B,EAAKj6B,OAChB,OAAIA,GAAQ//B,KAAK+e,IAAIghB,EAAK88E,KAAOx4G,GAAKrE,KAAK+e,IAAI7pB,EAAE2nH,KAAOx4G,GAC7C07B,EAEA7qC,GAIf4mH,EAAQrlH,UAAUqnH,cAAgB,SAASz5G,EAAG/N,EAAGsnH,GAI7C,IAAI1oH,EAAI,CAAC2nH,KAAKx4G,EAAG/N,EAAEA,EAAGsnH,KAAKA,GAG3B,OAFAtkH,KAAKojH,UAAUzmD,OAAO/gE,GACtBoE,KAAKhD,GAAKA,EACHpB,GAGX4mH,EAAQrlH,UAAUsnH,WAAa,SAASC,EAAS35G,EAAG/N,GAK5C+N,IAAM25G,EAAQnB,OACdmB,EAAQnB,MAAQvmH,GAAK+N,EAAI25G,EAAQnB,OAASmB,EAAQ1nH,EAAIA,IAE1D0nH,EAAQJ,MAAQtnH,EAChB0nH,EAAQjB,WAAazmH,EAAI,EACzB0nH,EAAQ1nH,GAAKA,EACbgD,KAAKhD,GAAKA,GAGdwlH,EAAQrlH,UAAUgnH,QAAU,SAASp5G,EAAG/N,GAGpC,IAAImK,EAAMnH,KAAKojH,UAAUj8G,MACrBqT,EAAMxa,KAAKojH,UAAU5oG,MACrBkqG,EAAU1kH,KAAKukH,aAAax5G,GAChC,GAAI25G,GAAWA,EAAQnB,OAASx4G,EAI5B/K,KAAKykH,WAAWC,EAAS35G,EAAG/N,QACzB,GAAI0nH,IAAYv9G,EACnBnH,KAAKwkH,cAAcz5G,EAAG/N,EAAG,QACtB,GAAI0nH,IAAYlqG,EACnBxa,KAAKwkH,cAAcz5G,EAAG/N,EAAGgD,KAAKhD,QAC3B,GAAIgD,KAAKmjH,SACZnjH,KAAKwkH,cAAcz5G,EAAG/N,EAAG0nH,EAAQJ,UAC9B,CAKH,IAAIjnH,EAAIqnH,EAAQjB,UAAYzjH,KAAKhD,EACrB0J,KAAKC,MAAM,EAAI3G,KAAKhD,EAAIgD,KAAK2U,MAAQtX,GAAK,EAAIA,IAC9CqnH,EAAQ1nH,GAAKA,EACrBgD,KAAKykH,WAAWC,EAAS35G,EAAG/N,GAE5BgD,KAAKwkH,cAAcz5G,EAAG/N,EAAG0nH,EAAQJ,MAGzCtkH,KAAKkkH,WAAU,IACVlkH,KAAKmjH,UAAYnjH,KAAKijH,GAAKjjH,KAAKhC,OAASgC,KAAKijH,EAAIjjH,KAAK2U,OAExD3U,KAAK8hH,YAIbU,EAAQrlH,UAAUwnH,WAAa,SAAS55G,GAKpC,IAAI21D,EAAO1gE,KAAKojH,UAAUviD,WAAW,CAAC0iD,KAAKx4G,IACvC65G,EAAQlkD,EAAKj6B,OAEjB,MAAO,CAACm+E,EADKA,EAAMrB,OAASx4G,EAAK65G,EAAQlkD,EAAKjgE,SAIlD+hH,EAAQrlH,UAAU0nH,OAAS,SAASC,GAYhC,IACIC,GADKhmH,MAAMC,QAAQ8lH,GAAcA,EAAa,CAACA,IACvCv/G,IAAIvF,KAAKglH,QAAShlH,MAC9B,OAAOjB,MAAMC,QAAQ8lH,GAAcC,EAAKA,EAAG,IAG/CvC,EAAQrlH,UAAU6nH,QAAU,SAASj6G,GACjC,GAAoB,IAAhB/K,KAAKhC,OAAT,CAEO,GAAI+M,EAAI/K,KAAKojH,UAAUj8G,MAAMo8G,KAChC,OAAO,EACJ,GAAIx4G,EAAI/K,KAAKojH,UAAU5oG,MAAM+oG,KAChC,OAAO,EAIXvjH,KAAKkkH,WAAU,GACf,IAAIxD,EAAQ1gH,KAAK2kH,WAAW55G,GACxB65G,EAAQlE,EAAM,GAAIuE,EAAQvE,EAAM,GACpC,GAAI1gH,KAAKmjH,SACL,OAAOyB,EAAMN,KAAOtkH,KAAKhD,EAEzB,IAAIsnH,EAAOM,EAAMnB,UAIjB,OAHImB,IAAUK,IACVX,IAASv5G,EAAI65G,EAAMrB,OAAS0B,EAAMxB,UAAYmB,EAAMnB,YAAcwB,EAAM1B,KAAOqB,EAAMrB,OAElFe,EAAOtkH,KAAKhD,IAI3BwlH,EAAQrlH,UAAU+nH,gBAAkB,SAASZ,GAOzCtkH,KAAKojH,UAAU7iD,YAAcijD,EAC7B,IAAI9iD,EAAO1gE,KAAKojH,UAAUviD,WAAW,CAAC4iD,UAAUa,IAChDtkH,KAAKojH,UAAU7iD,YAAc8iD,EAC7B,IAAIuB,EAAQlkD,EAAKj6B,OAEjB,MAAO,CAACm+E,EADKA,GAASA,EAAMnB,YAAca,EAAQM,EAAQlkD,EAAKjgE,SAInE+hH,EAAQrlH,UAAU8kH,WAAa,SAASkD,GAepC,IACIxnG,GADK5e,MAAMC,QAAQmmH,GAAcA,EAAa,CAACA,IACvC5/G,IAAIvF,KAAKolH,YAAaplH,MAClC,OAAOjB,MAAMC,QAAQmmH,GAAcxnG,EAAKA,EAAG,IAG/C6kG,EAAQrlH,UAAUioH,YAAc,SAAS/nH,GACrC,GAAoB,IAAhB2C,KAAKhC,OAAT,CAGAgC,KAAKkkH,WAAU,GACLlkH,KAAKojH,UAAUj8G,MACfnH,KAAKojH,UAAU5oG,MADzB,IAEIwkC,EAAIh/C,KAAKhD,EAAIK,EACbqjH,EAAQ1gH,KAAKklH,gBAAgBlmE,GAC7B4lE,EAAQlE,EAAM,GAAIuE,EAAQvE,EAAM,GAEpC,OAAIuE,IAAUL,GAAmB,OAAVA,GAA4B,OAAVK,GAC7BL,GAASK,GAAO1B,KAChBvjH,KAAKmjH,SAENnkE,GAAK4lE,EAAMN,KACXM,EAAMrB,KAEN0B,EAAM1B,KAJNqB,EAAMrB,MAAQvkE,EAAI4lE,EAAMnB,YAAcwB,EAAM1B,KAAOqB,EAAMrB,OAAS0B,EAAMxB,UAAYmB,EAAMnB,aAgBzGjB,EAAQrlH,UAAU2kH,SAAW,WAMzB,IAAI9hH,KAAKqlH,YAAT,CAGA,IAjBgBC,EAIZj5E,EAaAk5E,EAASvlH,KAAKa,UAGlB,IAFAb,KAAKyV,QACLzV,KAAKqlH,aAAc,EACZE,EAAOlmH,OAAS,GACnBW,KAAKokH,eArBOkB,EAqBkBC,EAjB9Bl5E,WAAM3lC,KAAKC,MAAMD,KAAKE,SAAW0+G,EAAQjmH,QACtCimH,EAAQ1gH,OAAOynC,EAAK,GAAG,KAkB9BrsC,KAAKkkH,WAAU,GACflkH,KAAKqlH,aAAc,IAgBvB3B,EAAOvmH,UAAYlB,OAAOY,OAAO2lH,EAAQrlH,WACzCumH,EAAOvmH,UAAU+F,YAAcwgH,EAE/BA,EAAOvmH,UAAUuH,KAAO,SAASogH,GAC7BtC,EAAQrlH,UAAUuH,KAAKhJ,KAAKsE,KAAM8kH,GAClC9kH,KAAKwlH,oBAGT9B,EAAOvmH,UAAUqnH,cAAgB,SAASz5G,EAAG/N,EAAGsnH,GAC5CtkH,KAAK+jH,UAAY,EACjBvB,EAAQrlH,UAAUqnH,cAAc9oH,KAAKsE,KAAM+K,EAAG/N,EAAGsnH,IAGrDZ,EAAOvmH,UAAUsnH,WAAa,SAASC,EAAS35G,EAAG/N,GAC7B,IAAd0nH,EAAQ1nH,IACRgD,KAAK+jH,UAAY,GAErBvB,EAAQrlH,UAAUsnH,WAAW/oH,KAAKsE,KAAM0kH,EAAS35G,EAAG/N,IAGxD0mH,EAAOvmH,UAAUqoH,iBAAmB,WAKhC,QAAkB,SAAdxlH,KAAKtD,MAAmBsD,KAAKhC,OAASgC,KAAK6jH,iBAG3C7jH,KAAK+jH,SAAW/jH,KAAKhC,OAASgC,KAAK2jH,eACnC3jH,KAAKtD,KAAO,OACZsD,KAAKmjH,UAAW,EAChBnjH,KAAK2U,MAAQ3U,KAAKuV,OAAOZ,OAAS,IAClC3U,KAAK8hH,YACE,KAKfxmH,EAAOD,QAAU,CACb,QAAWmnH,EACX,OAAUkB,I,gBC1YdpoH,EAAOD,QAAU,CACb2nH,OAAQ,EAAQ,KAChByC,QAAS,EAAQ,O,gBCDrB,IAAIzlD,EAAW,EAAQ,IAEvB,SAAS/B,EAAKnpD,GACV9U,KAAK8U,KAAOA,EACZ9U,KAAK8gE,KAAO,KACZ9gE,KAAK+gE,MAAQ,KACb/gE,KAAK0lH,KAAM,EAgBf,SAAS1C,EAAO/N,GACZj1G,KAAKw8B,MAAQ,KACbx8B,KAAKugE,YAAc00C,EACnBj1G,KAAKhC,KAAO,EA0KhB,SAAS2nH,EAAOv0G,GACZ,OAAgB,OAATA,GAAiBA,EAAKs0G,IAGjC,SAASE,EAAcnpF,EAAMg+C,GACzB,IAAIlzC,EAAO9K,EAAK+jC,WAAWia,GAQ3B,OANAh+C,EAAKopF,WAAWprC,EAAKlzC,EAAKi5B,UAAUia,IACpClzC,EAAKs+E,UAAUprC,EAAKh+C,GAEpBA,EAAKipF,KAAM,EACXn+E,EAAKm+E,KAAM,EAEJn+E,EAGX,SAASu+E,EAAcrpF,EAAMg+C,GAEzB,OADAh+C,EAAKopF,WAAWprC,EAAKmrC,EAAcnpF,EAAK+jC,WAAWia,IAAOA,IACnDmrC,EAAcnpF,EAAMg+C,GA5M/Bxc,EAAK9gE,UAAUqjE,UAAY,SAASia,GAChC,OAAOA,EAAMz6E,KAAK+gE,MAAQ/gE,KAAK8gE,MAGnC7C,EAAK9gE,UAAU0oH,UAAY,SAASprC,EAAKp0E,GAClCo0E,EACCz6E,KAAK+gE,MAAQ16D,EAGbrG,KAAK8gE,KAAOz6D,GAUpB28G,EAAO7lH,UAAY,IAAI6iE,EAGvBgjD,EAAO7lH,UAAUw/D,OAAS,SAAS7nD,GAC/B,IAAI4J,GAAM,EAEV,GAAkB,OAAf1e,KAAKw8B,MAEJx8B,KAAKw8B,MAAQ,IAAIyhC,EAAKnpD,GACtB4J,GAAM,EACN1e,KAAKhC,WAEJ,CACD,IAAI4wC,EAAO,IAAIqvB,OAAK36D,GAEhBm3E,EAAM,EACNsrC,EAAO,EAGPC,EAAK,KACLC,EAAMr3E,EACNvxC,EAAI,KACJ+T,EAAOpR,KAAKw8B,MAIhB,IAHAypF,EAAIllD,MAAQ/gE,KAAKw8B,QAGL,CAgBR,GAfY,OAATprB,GAECA,EAAO,IAAI6sD,EAAKnpD,GAChBzX,EAAEwoH,UAAUprC,EAAKrpE,GACjBsN,GAAM,EACN1e,KAAKhC,QAED2nH,EAAOv0G,EAAK0vD,OAAS6kD,EAAOv0G,EAAK2vD,SAErC3vD,EAAKs0G,KAAM,EACXt0G,EAAK0vD,KAAK4kD,KAAM,EAChBt0G,EAAK2vD,MAAM2kD,KAAM,GAIlBC,EAAOv0G,IAASu0G,EAAOtoH,GAAI,CAC1B,IAAI6oH,EAAOD,EAAIllD,QAAUilD,EAEtB50G,IAAS/T,EAAEmjE,UAAUulD,GACpBE,EAAIJ,UAAUK,EAAMN,EAAcI,GAAKD,IAGvCE,EAAIJ,UAAUK,EAAMJ,EAAcE,GAAKD,IAI/C,IAAIxmH,EAAMS,KAAKugE,YAAYnvD,EAAK0D,KAAMA,GAGtC,GAAW,IAARvV,EACC,MAGJwmH,EAAOtrC,EACPA,EAAMl7E,EAAM,EAGF,OAAPymH,IACCC,EAAMD,GAEVA,EAAK3oH,EACLA,EAAI+T,EACJA,EAAOA,EAAKovD,UAAUia,GAI1Bz6E,KAAKw8B,MAAQoS,EAAKmyB,MAMtB,OAFA/gE,KAAKw8B,MAAMkpF,KAAM,EAEVhnG,GAIXskG,EAAO7lH,UAAU0nC,OAAS,SAAS/vB,GAC/B,GAAkB,OAAf9U,KAAKw8B,MACJ,OAAO,EAGX,IAAIoS,EAAO,IAAIqvB,OAAK36D,GAChB8N,EAAOw9B,EACXx9B,EAAK2vD,MAAQ/gE,KAAKw8B,MAMlB,IALA,IAAIn/B,EAAI,KACJ2oH,EAAK,KACLG,EAAQ,KACR1rC,EAAM,EAEoB,OAAxBrpE,EAAKovD,UAAUia,IAAe,CAChC,IAAIsrC,EAAOtrC,EAGXurC,EAAK3oH,EACLA,EAAI+T,EACJA,EAAOA,EAAKovD,UAAUia,GAEtB,IAAIl7E,EAAMS,KAAKugE,YAAYzrD,EAAM1D,EAAK0D,MAUtC,GARA2lE,EAAMl7E,EAAM,EAGD,IAARA,IACC4mH,EAAQ/0G,IAIRu0G,EAAOv0G,KAAUu0G,EAAOv0G,EAAKovD,UAAUia,IACvC,GAAGkrC,EAAOv0G,EAAKovD,WAAWia,IAAO,CAC7B,IAAI2rC,EAAKR,EAAcx0G,EAAMqpE,GAC7Bp9E,EAAEwoH,UAAUE,EAAMK,GAClB/oH,EAAI+oH,OAEH,IAAIT,EAAOv0G,EAAKovD,WAAWia,IAAO,CACnC,IAAI4rC,EAAUhpH,EAAEmjE,WAAWulD,GAC3B,GAAe,OAAZM,EACC,GAAIV,EAAOU,EAAQ7lD,WAAWulD,KAAWJ,EAAOU,EAAQ7lD,UAAUulD,IAM7D,CACD,IAAIG,EAAOF,EAAGjlD,QAAU1jE,EAErBsoH,EAAOU,EAAQ7lD,UAAUulD,IACxBC,EAAGH,UAAUK,EAAMJ,EAAczoH,EAAG0oH,IAEhCJ,EAAOU,EAAQ7lD,WAAWulD,KAC9BC,EAAGH,UAAUK,EAAMN,EAAcvoH,EAAG0oH,IAIxC,IAAIO,EAAMN,EAAGxlD,UAAU0lD,GACvBI,EAAIZ,KAAM,EACVt0G,EAAKs0G,KAAM,EACXY,EAAIxlD,KAAK4kD,KAAM,EACfY,EAAIvlD,MAAM2kD,KAAM,OAnBhBroH,EAAEqoH,KAAM,EACRW,EAAQX,KAAM,EACdt0G,EAAKs0G,KAAM,GAqC/B,OAZa,OAAVS,IACCA,EAAMrxG,KAAO1D,EAAK0D,KAClBzX,EAAEwoH,UAAUxoH,EAAE0jE,QAAU3vD,EAAMA,EAAKovD,UAAwB,OAAdpvD,EAAK0vD,OAClD9gE,KAAKhC,QAITgC,KAAKw8B,MAAQoS,EAAKmyB,MACA,OAAf/gE,KAAKw8B,QACJx8B,KAAKw8B,MAAMkpF,KAAM,GAGJ,OAAVS,GAwBX7qH,EAAOD,QAAU2nH,G,gBCxNjB,IAAIhjD,EAAW,EAAQ,IAEvB,SAAS/B,EAAKnpD,GACV9U,KAAK8U,KAAOA,EACZ9U,KAAK8gE,KAAO,KACZ9gE,KAAK+gE,MAAQ,KAgBjB,SAAS0kD,EAAQxQ,GACbj1G,KAAKw8B,MAAQ,KACbx8B,KAAKugE,YAAc00C,EACnBj1G,KAAKhC,KAAO,EAhBhBigE,EAAK9gE,UAAUqjE,UAAY,SAASia,GAChC,OAAOA,EAAMz6E,KAAK+gE,MAAQ/gE,KAAK8gE,MAGnC7C,EAAK9gE,UAAU0oH,UAAY,SAASprC,EAAKp0E,GAClCo0E,EACCz6E,KAAK+gE,MAAQ16D,EAGbrG,KAAK8gE,KAAOz6D,GAUpBo/G,EAAQtoH,UAAY,IAAI6iE,EAGxBylD,EAAQtoH,UAAUw/D,OAAS,SAAS7nD,GAChC,GAAkB,OAAf9U,KAAKw8B,MAIJ,OAFAx8B,KAAKw8B,MAAQ,IAAIyhC,EAAKnpD,GACtB9U,KAAKhC,QACE,EAUX,IAPA,IAAIy8E,EAAM,EAGNp9E,EAAI,KACJ+T,EAAOpR,KAAKw8B,QAGJ,CACR,GAAY,OAATprB,EAMC,OAJAA,EAAO,IAAI6sD,EAAKnpD,GAChBzX,EAAEwoH,UAAUprC,EAAKrpE,GACjBsN,KAAM,EACN1e,KAAKhC,QACE,EAIX,GAAyC,IAAtCgC,KAAKugE,YAAYnvD,EAAK0D,KAAMA,GAC3B,OAAO,EAGX2lE,EAAMz6E,KAAKugE,YAAYnvD,EAAK0D,KAAMA,GAAQ,EAG1CzX,EAAI+T,EACJA,EAAOA,EAAKovD,UAAUia,KAK9BgrC,EAAQtoH,UAAU0nC,OAAS,SAAS/vB,GAChC,GAAkB,OAAf9U,KAAKw8B,MACJ,OAAO,EAGX,IAAIoS,EAAO,IAAIqvB,OAAK36D,GAChB8N,EAAOw9B,EACXx9B,EAAK2vD,MAAQ/gE,KAAKw8B,MAKlB,IAJA,IAAIn/B,EAAI,KACJ8oH,EAAQ,KACR1rC,EAAM,EAEoB,OAAxBrpE,EAAKovD,UAAUia,IAAe,CAChCp9E,EAAI+T,EACJA,EAAOA,EAAKovD,UAAUia,GACtB,IAAIl7E,EAAMS,KAAKugE,YAAYzrD,EAAM1D,EAAK0D,MACtC2lE,EAAMl7E,EAAM,EAED,IAARA,IACC4mH,EAAQ/0G,GAIhB,OAAa,OAAV+0G,IACCA,EAAMrxG,KAAO1D,EAAK0D,KAClBzX,EAAEwoH,UAAUxoH,EAAE0jE,QAAU3vD,EAAMA,EAAKovD,UAAwB,OAAdpvD,EAAK0vD,OAElD9gE,KAAKw8B,MAAQoS,EAAKmyB,MAClB/gE,KAAKhC,QACE,IAOf1C,EAAOD,QAAUoqH,G,6BCxGjB,MAAM98F,EAAM,EAAQ,IACdyR,EAAO,EAAQ,IACfmsF,EAAQ,EAAQ,MAChB,eAAE/yG,GAAmB,EAAQ,GAoCnC,SAASgzG,EAAWlsF,EAAQmsF,EAAKC,EAAWrmH,GAG3C,MAAMsmH,EAAmBh+F,EAAI1K,MAAMje,KAAK4mH,YAKlCroG,KAHLooG,EAAiBx9F,UAA0C,MAA9Bw9F,EAAiBx9F,SAC3Cw9F,EAAiBx9F,SACjB,kBAC0C+nB,mBAC7Cu1E,KAgCF,SAA2BC,GAC1B,IAAKA,EACJ,MAAO,GAER,OAAOzqH,OAAO6E,KAAK4lH,GACjBnhH,IACAzI,OAAWo0C,mBAAmBp0C,MAAQo0C,mBAAmBw1E,EAAU5pH,OAEnEyJ,KAAK,IAvCHsgH,CAAkBH,KAGhBjkH,EAASkmB,EAAIhpB,QAAQK,KAAK4mH,WAAYroG,GAEtCuoG,EAAgBn+F,EAAI1K,MAAMxb,GAC1BskH,GAqC4B,IArCPD,EAAcz9F,KAqC7BD,OAAO,UArC8Bm9F,EAAQnsF,EACzD,MAAM/0B,EAAUpJ,OAAO2Y,OAAOkyG,EAAe9mH,KAAKgnH,eAAgB,CACjE1sF,WAGKpS,EAAM6+F,EAAWtsE,QAAQp1C,EAASupB,IACvC,IAAI9Q,EAAO,GACX8Q,EAAIkkD,YAAY,QAChBlkD,EAAIqI,GAAG,OAAQ0xC,IACd7qD,GAAQ6qD,IAET/5C,EAAIqI,GAAG,MAAO,KACb52B,EAAS,KAAMuuB,EAAK9Q,OAGtBoK,EAAI+O,GAAG,QAASp3B,IACfQ,EAASR,KAGK,WAAXy6B,GACHpS,EAAI/O,MAAMnZ,KAAKinH,SAASnrG,QAAQ,CAAEZ,YAAY,KAE/CgN,EAAIyQ,MAkBLr9B,EAAOD,QA1FP,MACC,YAAYurH,EAAYvhH,EAAS4hH,GAC3BA,IACJA,EAAWzzG,GAEZxT,KAAKinH,SAAWA,EAChBjnH,KAAK4mH,WAAaA,EAClB5mH,KAAKgnH,eAAiB/qH,OAAO2Y,OAAO,GAAIvP,GAGzC,QAAQrE,EAAQX,GACf,IAAKW,IAAWA,EAAOkmH,QACtB,MAAM,IAAI5hH,MAAM,6BAGjBkhH,EAAW9qH,KAAKsE,KAAM,OAAQgB,EAAOkmH,QAASlmH,EAAO0lH,UAAWrmH,GAGjE,KAAKW,EAAQX,GACZ,IAAKW,IAAWA,EAAOkmH,QACtB,MAAM,IAAI5hH,MAAM,6BAGjBkhH,EAAW9qH,KAAKsE,KAAM,MAAOgB,EAAOkmH,QAASlmH,EAAO0lH,UAAWrmH,GAGhE,OAAOW,EAAQX,GACd,IAAKW,IAAWA,EAAOkmH,QACtB,MAAM,IAAI5hH,MAAM,6BAGjBkhH,EAAW9qH,KAAKsE,KAAM,SAAUgB,EAAOkmH,QAASlmH,EAAO0lH,UAAWrmH,M,cCtCpE/E,EAAOD,QAAUkC,QAAQ,U,6BCEzB,MAAM4pH,EAAkB,EAAQ,KAC1BC,EAAmB,EAAQ,KAC3BC,EAAe,EAAQ,KACvBC,EAA6B,EAAQ,KACrCC,EAA4B,EAAQ,KACpCC,EAAe,EAAQ,KACvBC,EAAiB,EAAQ,KACzBC,EAAkB,EAAQ,KAC1BC,EAAkB,EAAQ,KAC1BC,EAAwB,EAAQ,KAChCp8G,EAAU,EAAQ,MAClB,eAAEgI,GAAmB,EAAQ,IAC7B,4CAAEwJ,GAAgD,EAAQ,IAE1DlB,EAAU,CACfqrG,kBACAC,mBACAC,eACAC,6BACAC,4BACAC,eACAC,iBACAC,kBACAC,kBACAC,wBACAp8G,WAEKq8G,EAAc5rH,OAAO6E,KAAKgb,GAEhC,IAAIgsG,EAAmB,KAGnB3gF,GAAO,EAEX7rC,EAAOD,QAAU,SAA6Bka,GAC7C,IAAIwyG,EAAmBxyG,EACD,iBAAXA,IACVyH,EAA4CzH,GAE5CwyG,EAAmB,CAAE9qG,QAAS1H,IAG/BwyG,EAAmB9rH,OAAO2Y,OACzB,CACCsG,YAAY,EACZ+B,QAAS,KAEV8qG,GAGwB,OAArBD,GACH3qE,cAAc2qE,GAGf,MAAME,EAAqBH,EAAYtiH,IAAIgW,IAC1C,MAAM0sG,EAAgBnsG,EAAQP,GAQ9B,OAPK4rB,GACJ8gF,EAAcC,YAAY3iH,IACzBiO,EAAe20G,mBACf30G,GAIKy0G,EAAcF,EAAiB95G,SAAU85G,KAGjD,SAASK,IACRJ,EAAmBplH,QAAQ2Y,GAAUA,EAAO7f,QAY7C,OATA0sH,IAEAN,EAAmBvqE,YAClB6qE,EACAL,EAAiB9qG,SAChBwqD,QAEFtgC,GAAO,EAEA2gF,GAGRxsH,EAAOD,QAAQwsH,YAAcA,G,6BClF7B,MAAMpI,EAAU,EAAQ,IAKxBnkH,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MAEpC,GAAgC,mBAArBhS,QAAQ8kH,SAClB,MAAO,OAGR,MAAM7yG,EAAYyxG,EAAW,CAACA,QAAY3jH,EACpCglH,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CwhD,EAAsB,IAAI9I,EAAQ,CACvC3jH,KAAMwsH,EAdyB,iCAe/BhzG,KAAM,wCACNE,cAEKgzG,EAAwB,IAAI/I,EAAQ,CACzC3jH,KAAMwsH,EAlB2B,mCAmBjChzG,KAAM,0CACNE,cAEKizG,EAAkB,IAAIhJ,EAAQ,CACnC3jH,KAAMwsH,EAtBoB,4BAuB1BhzG,KAAM,mDACNE,cAGD,IAAIkzG,EAAenlH,QAAQ8kH,WAE3B,MAAO,KACN,MAAMA,EAAW9kH,QAAQ8kH,WACnBh0G,EAAMlD,KAAKkD,MAEXs0G,EAAkBN,EAASO,KAAOF,EAAaE,KAC/CC,EAAoBR,EAASS,OAASJ,EAAaI,OAEzDJ,EAAeL,EAEfE,EAAoBtzG,IAAI0zG,EAAkB,IAAKt0G,GAC/Cm0G,EAAsBvzG,IAAI4zG,EAAoB,IAAKx0G,GACnDo0G,EAAgBxzG,KAAK0zG,EAAkBE,GAAqB,IAAKx0G,KAInE/Y,EAAOD,QAAQ6sH,YAAc,CA9CI,iCACE,mCACP,8B,6BCH5B,MAAMxI,EAAQ,EAAQ,GAChBqJ,EAAeriH,KAAKigE,MAAMx1D,KAAKkD,MAAQ,IAAO9Q,QAAQylH,UAI5D1tH,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,MAAM+yG,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CkiD,EAAe,IAAIvJ,EAAM,CAC9B5jH,KAAMwsH,EANmB,6BAOzBhzG,KAAM,yDACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,EACnCoS,WAAY,SAEb,IAAIwzG,GAAQ,EAEZ,MAAO,KACFA,IAGJD,EAAa7+G,IAAI2+G,GACjBG,GAAQ,KAIV5tH,EAAOD,QAAQ6sH,YAAc,CAtBF,+B,6BCH3B,MAAMxI,EAAQ,EAAQ,GAChByJ,EAAe,EAAQ,KACvBC,EAAkB,EAAQ,KAE1BC,EAA0B,gCAqBhC/tH,EAAOD,QAAU,CAAC4rH,EAAU1xG,IACN,UAArBhS,QAAQ+lH,SACLH,EAAalC,EAAU1xG,GArB3B,SAAyB0xG,EAAU1xG,EAAS,IAC3C,MAAM+yG,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CwiD,EAAmB,IAAI7J,EAAM,CAClC5jH,KAAMwsH,EAAae,EACnB/zG,KAAM,iCACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,IAGpC,MAAO,KACN,MAAMkmH,EAAWJ,IAGbI,GACHD,EAAiBn/G,IAAIo/G,EAASC,IAAKt4G,KAAKkD,QAQvCq1G,CAAgBzC,EAAU1xG,GAE9Bja,EAAOD,QAAQ6sH,YACO,UAArB3kH,QAAQ+lH,SACLH,EAAajB,YACb,CAACmB,I,6BCjCL,MAAM3J,EAAQ,EAAQ,GAChBhlF,EAAK,EAAQ,IAEb31B,EAAS,CAAC,SAAU,QAAS,UA4BnCzJ,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,MAAMC,EAAYyxG,EAAW,CAACA,QAAY3jH,EACpCglH,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CwiD,EAAmB,IAAI7J,EAAM,CAClC5jH,KAAMwsH,EA/BwB,gCAgC9BhzG,KAAM,iCACNE,cAEKm0G,EAAkB,IAAIjK,EAAM,CACjC5jH,KAAMwsH,EAnCuB,+BAoC7BhzG,KAAM,gCACNE,cAEKo0G,EAAmB,IAAIlK,EAAM,CAClC5jH,KAAMwsH,EAvCa,qBAwCnBhzG,KAAM,8BACNE,cAGD,MAAO,KACNklB,EAAGmvF,SAAS,oBAAqB,OAAQ,CAAChqH,EAAK2mB,KAC9C,GAAI3mB,EACH,OAED,MAAMwU,EAAMlD,KAAKkD,MACXy1G,EAhDT,SAAyBn4B,GACxB,MAAMo4B,EAAc,GAkBpB,OAhBAp4B,EACE7mF,MAAM,MACNivC,OAAOz8C,GAAKyH,EAAOilH,KAAKxtH,GAA8B,IAArBc,EAAE0G,QAAQxH,KAC3CoG,QAAQywB,IACR,MAAMvoB,EAAQuoB,EAAOvoB,MAAM,KAG3B,IAAItO,EAAQsO,EAAM,GAAGE,OAErBxO,EAAQA,EAAMuH,OAAO,EAAGvH,EAAM6C,OAAS,GAEvC7C,EAAwB,KAAhB0Y,OAAO1Y,GAEfutH,EAAYj/G,EAAM,IAAMtO,IAGnButH,EA6BoBE,CAAgBzjG,GAEzC+iG,EAAiBn/G,IAAI0/G,EAAiBI,MAAO71G,GAC7Cs1G,EAAgBv/G,IAAI0/G,EAAiBK,OAAQ91G,GAC7Cu1G,EAAiBx/G,IAAI0/G,EAAiBM,OAAQ/1G,OAKjD/Y,EAAOD,QAAQ6sH,YAAc,CA7DG,gCACD,+BACV,uB,6BCPrB,MAAMxI,EAAQ,EAAQ,GAChBhlF,EAAK,EAAQ,IACbn3B,EAAU,EAAQ,KAIxBjI,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,GAAyB,UAArBhS,EAAQ+lH,SACX,MAAO,OAGR,MAAMhB,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CsjD,EAAuB,IAAI3K,EAAM,CACtC5jH,KAAMwsH,EAViB,mBAWvBhzG,KAAM,mCACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,IAGpC,MAAO,KACNo3B,EAAG4vF,QAAQ,gBAAiB,CAACzqH,EAAKsK,KAC7BtK,GAKJwqH,EAAqBjgH,IAAID,EAAK9K,OAAS,EAAG8R,KAAKkD,WAKlD/Y,EAAOD,QAAQ6sH,YAAc,CA3BJ,qB,cCNzB5sH,EAAOD,QAAUkC,QAAQ,Y,6BCEzB,MAAMmiH,EAAQ,EAAQ,GAChBhlF,EAAK,EAAQ,IAInBp/B,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,IAAI2zG,GAAQ,EAEZ,GAAyB,UAArB3lH,QAAQ+lH,SACX,MAAO,OAGR,MAAMhB,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CsjD,EAAuB,IAAI3K,EAAM,CACtC5jH,KAAMwsH,EAZgB,kBAatBhzG,KAAM,2CACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,IAGpC,MAAO,KACF4lH,GAIJxuF,EAAGmvF,SAAS,wBAAyB,OAAQ,CAAChqH,EAAK0qH,KAC9C1qH,IAIJqpH,GAAQ,EAERmB,EAAqBjgH,IAAI8K,OAAOq1G,SAKnCjvH,EAAOD,QAAQ6sH,YAAc,CAlCL,oB,6BCHxB,MAAMxI,EAAQ,EAAQ,GAItB,SAAS8K,EAAmBh2G,EAAOwlB,GAClC,MAAMrlB,EAAQpR,QAAQkR,OAAOD,GAEvB4+E,GADqB,IAAXz+E,EAAM,GAAWA,EAAM,IACb,IAE1BqlB,EAAM5vB,IAAIgpF,EAASjiF,KAAKkD,OAGzB/Y,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,MAAM+yG,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7C/sC,EAAQ,IAAI0lF,EAAM,CACvB5jH,KAAMwsH,EAdqB,+BAe3BhzG,KAAM,gCACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,EACnCoS,WAAY,YAGb,MAAO,KACN,MAAMlB,EAAQjR,QAAQkR,SACtB6iB,aAAakzF,EAAoBh2G,EAAOwlB,KAI1C1+B,EAAOD,QAAQ6sH,YAAc,CA1BA,iC,6BCF7B,MAAM,sBAAEruF,GAA0B,EAAQ,KACpC,cAAEE,GAAkB,EAAQ,IAC5B2lF,EAAQ,EAAQ,GAKtBpkH,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MAEpC,GAAyC,mBAA9BhS,QAAQknH,kBAClB,MAAO,OAGR,MAAMnC,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7C/sC,EAAQ,IAAI0lF,EAAM,CACvB5jH,KAAMwsH,EAZsB,wBAa5BhzG,KACC,8FACDF,WAAY,CAAC,QACbI,UAAWyxG,EAAW,CAACA,QAAY3jH,IAE9BonH,EAAa,IAAIhL,EAAM,CAC5B5jH,KAAMwsH,EAlB4B,8BAmBlChzG,KAAM,kCACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,IAepC,OAZgBiS,EAAO2F,WACpB,KACA,MAAM2zB,EAAUtrC,QAAQknH,oBACxB1wF,EAAcC,EAAOH,EAAsBgV,IAAU,GACrD67E,EAAWtgH,IAAIykC,EAAQxvC,OAAQ8R,KAAKkD,QAEpC,KACA,MAAMw6B,EAAUtrC,QAAQknH,oBACxB1wF,EAAcC,EAAOH,EAAsBgV,IAAU,GACrD67E,EAAWtgH,IAAIykC,EAAQxvC,UAM3B/D,EAAOD,QAAQ6sH,YAAc,CAvCC,wBACM,gC,6BCNpC,MAAMxI,EAAQ,EAAQ,IAChB,sBAAE7lF,GAA0B,EAAQ,KACpC,cAAEE,GAAkB,EAAQ,IAKlCz+B,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MAEpC,GAA0C,mBAA/BhS,QAAQonH,mBAClB,MAAO,OAGR,MAAMrC,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7C/sC,EAAQ,IAAI0lF,EAAM,CACvB5jH,KAAMwsH,EAZuB,yBAa7BhzG,KACC,iGACDF,WAAY,CAAC,QACbI,UAAWyxG,EAAW,CAACA,QAAY3jH,IAG9BonH,EAAa,IAAIhL,EAAM,CAC5B5jH,KAAMwsH,EAnB6B,+BAoBnChzG,KAAM,mCACNE,UAAWyxG,EAAW,CAACA,QAAY3jH,IAGpC,MAAO,KACN,MAAMm8C,EAAWl8C,QAAQonH,qBACzB5wF,EAAcC,EAAOH,EAAsB4lB,IAC3CirE,EAAWtgH,IAAIq1C,EAASpgD,OAAQ8R,KAAKkD,SAIvC/Y,EAAOD,QAAQ6sH,YAAc,CAhCE,yBACM,iC,6BCJrC,MAAMxI,EAAQ,EAAQ,GAChB0J,EAAkB,EAAQ,KAMhC9tH,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,GAAmC,mBAAxBhS,QAAQk+D,YAClB,MAAO,OAGR,MAAMjsD,EAAYyxG,EAAW,CAACA,QAAY3jH,EACpCglH,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7C6jD,EAAgB,IAAIlL,EAAM,CAC/B5jH,KAAMwsH,EAbuB,+BAc7BhzG,KAAM,2CACNE,cAEKq1G,EAAe,IAAInL,EAAM,CAC9B5jH,KAAMwsH,EAjBsB,8BAkB5BhzG,KAAM,gDACNE,cAED,IAAIs1G,EAEJ,MAAMC,EAAQ3B,IASd,OARI2B,GAASA,EAAMC,WAClBF,EAAkB,IAAIpL,EAAM,CAC3B5jH,KAAMwsH,EAzBsB,+BA0B5BhzG,KAAM,wCACNE,eAIK,KAEN,MAAMg0G,EAAWJ,IACjB,GAAII,EACH,GAAIj0G,EAAO2F,WAAY,CACtB,MAAM7G,EAAMlD,KAAKkD,MACjBu2G,EAAcxgH,IAAIo/G,EAASyB,UAAW52G,GACtCw2G,EAAazgH,IAAIo/G,EAAS0B,SAAU72G,GAChCm1G,EAASwB,UAAYF,GACxBA,EAAgB1gH,IAAIo/G,EAASwB,SAAU32G,QAGxCu2G,EAAcxgH,IAAIo/G,EAASyB,WAC3BJ,EAAazgH,IAAIo/G,EAAS0B,UACtB1B,EAASwB,UAAYF,GACxBA,EAAgB1gH,IAAIo/G,EAASwB,UAKhC,MAAO,CACNxjH,MAAOojH,EACPO,KAAMN,EACNG,SAAUF,KAKbxvH,EAAOD,QAAQ6sH,YAAc,CA7DE,+BACD,8BACC,iC,6BCL/B,MAAMxI,EAAQ,EAAQ,GACtB,IAAI0L,EAEJ,IACCA,EAAK,EAAQ,KACZ,MAAO/9G,IAKT,MAAMg+G,EAAU,CAAC,QAAS,OAAQ,aAE5BC,EAAmB,GAEzBD,EAAQzoH,QAAQ2oH,IACfD,EAAiBC,6BAAwCA,YAG1DjwH,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,QACe,IAAP61G,GAC8B,mBAA9BA,EAAGI,uBAEV,MAAO,OAGR,MAAMh2G,EAAYyxG,EAAW,CAACA,QAAY3jH,EACpCglH,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7C0kD,EAAS,GAWf,OATAJ,EAAQzoH,QAAQ2oH,IACfE,EAAOF,GAAc,IAAI7L,EAAM,CAC9B5jH,KAAMwsH,EAAagD,EAAiBC,GACpCj2G,gCAAiCi2G,2BACjCn2G,WAAY,CAAC,SACbI,gBAIK,KACN,MAAMV,EAAO,CACZtN,MAAO,GACP2jH,KAAM,GACNvnC,UAAW,IAENvvE,EAAMlD,KAAKkD,MAqBjB,OAnBA+2G,EAAGI,yBAAyB5oH,QAAQ8oH,IACnC,MAAMC,EAAYD,EAAME,WAAW7nH,OAClC,EACA2nH,EAAME,WAAW5nH,QAAQ,WAG1B8Q,EAAKtN,MAAMmkH,GAAaD,EAAMG,WAC9B/2G,EAAKq2G,KAAKQ,GAAaD,EAAMI,gBAC7Bh3G,EAAK8uE,UAAU+nC,GAAaD,EAAMK,qBAElCN,EAAOjkH,MAAM4C,IAAI,CAAEshH,MAAOC,GAAaD,EAAMG,WAAYx3G,GACzDo3G,EAAON,KAAK/gH,IAAI,CAAEshH,MAAOC,GAAaD,EAAMI,gBAAiBz3G,GAC7Do3G,EAAO7nC,UAAUx5E,IAChB,CAAEshH,MAAOC,GACTD,EAAMK,qBACN13G,KAIKS,IAITxZ,EAAOD,QAAQ6sH,YAAcmD,EAAQ9lH,IACpCgmH,GAAcD,EAAiBC,K,cC1EhCjwH,EAAOD,QAAUkC,QAAQ,O,6BCEzB,MAAMmiH,EAAQ,EAAQ,GAChBl0G,EAAUjI,QAAQiI,QAClBwgH,EAAkBxgH,EACtB9I,MAAM,GACNoI,MAAM,KACNvF,IAAI2P,QAIN5Z,EAAOD,QAAU,CAAC4rH,EAAU1xG,EAAS,MACpC,MAAM+yG,EAAa/yG,EAAOwxD,OAASxxD,EAAOwxD,OAAS,GAE7CklD,EAAmB,IAAIvM,EAAM,CAClC5jH,KAAMwsH,EANkB,sBAOxBhzG,KAAM,wBACNF,WAAY,CAAC,UAAW,QAAS,QAAS,SAC1CI,UAAWyxG,EAAW,CAACA,QAAY3jH,EACnCoS,WAAY,UAEb,IAAIwzG,GAAQ,EAEZ,MAAO,KACFA,IAGJ+C,EACE73G,OACA5I,EACAwgH,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,IAEhB5hH,IAAI,GACN8+G,GAAQ,KAIV5tH,EAAOD,QAAQ6sH,YAAc,CA9BH,wB,6BCC1B,MAAMgE,EAAU,EAAQ,KAClB/wG,EAAW,EAAQ,IACnB,QAAE+B,GAAY,EAAQ,KACtB,YAAE6kD,GAAgB,EAAQ,KAE1BoqD,EAAkB,4BAClBC,EAAkB,4BAExB,IAAIC,EAAa,CAAClxG,EAAS3H,gBACvB84G,EAAa,EACbC,GAAiB,EACrB,MAAM9sE,EAAW,IAAItiC,IAErB,MAAM4iG,UAA2B5kG,EAChC,cACCwG,QA8HF,WACC,GAAI4qG,EAAgB,OACpBA,GAAiB,EAEbL,EAAQM,UAEXN,EAAQj1F,GAAG,UAAW,CAACw1F,EAAQ3gH,KAC9B,GAAIA,EAAQ7G,OAASmnH,EAAiB,CACrC,MAAM3xE,EAAUgF,EAASrjD,IAAI0P,EAAQ4gH,WAIrC,GAHA5gH,EAAQgQ,QAAQlZ,QAAQqkH,GAAYxsE,EAAQ+gD,UAAU92F,KAAKuiH,IAC3DxsE,EAAQkyE,UAEgB,IAApBlyE,EAAQkyE,QAAe,CAK1B,GAHAltE,EAAS+4B,OAAO1sE,EAAQ4gH,WACxBjpE,aAAahJ,EAAQmyE,cAEjBnyE,EAAQoyE,OAAQ,OAEpB,MACMC,EADW/M,EAAmBvnD,UAAU/d,EAAQ+gD,WAC1B1/E,UAC5B2+B,EAAQt4C,KAAK,KAAM2qH,OAlJtBC,GAUD,eAAe1sH,GACd,MAAMqsH,EAAYJ,IAElB,OAAO,IAAI5sH,QAAQ,CAACC,EAASC,KAC5B,SAASuC,EAAKtC,EAAKC,GAEM,mBAAbO,EACVA,EAASR,EAAKC,GAEVD,EAAKD,EAAOC,GACXF,EAAQG,GAIf,MAAM26C,EAAU,CACf+gD,UAAW,GACXmxB,QAAS,EACTxqH,OACAyqH,aAActqE,WAAW,KACxB7H,EAAQoyE,QAAS,EACjB,MAAMhtH,EAAM,IAAIyF,MAAM,wBACtBm1C,EAAQt4C,KAAKtC,IACX,KACHgtH,QAAQ,GAETptE,EAASr1C,IAAIsiH,EAAWjyE,GAExB,MAAM3uC,EAAU,CACf7G,KAAMknH,EACNO,aAGD,IAAK,MAAM37D,KAAMm7D,EAAQc,QAGpBd,EAAQc,QAAQj8D,GAAIk8D,gBACvBf,EAAQc,QAAQj8D,GAAI3xB,KAAKtzB,GACzB2uC,EAAQkyE,WAIc,IAApBlyE,EAAQkyE,UAEXlpE,aAAahJ,EAAQmyE,cACrBrpH,QAAQC,SAAS,IAAMrB,EAAK,KAAM,QAcrC,iBAAiB+qH,GAChB,MAAMC,EAAqB,IAAIhyG,EACzBiyG,EAAgB,IAAIlwG,EA6B1B,OA1BAgwG,EAAWtqH,QAAQkZ,IAClBA,EAAQlZ,QAAQ2Y,IACf6xG,EAAczsH,IAAI4a,EAAOzf,KAAMyf,OAKjC6xG,EAAcxqH,QAAQkZ,IACrB,MAAMuxG,EAAiBvxG,EAAQ,GAAGpG,WAC5BksD,EAAeG,EAAYsrD,GACjC,GAA4B,mBAAjBzrD,EACV,MAAM,IAAIt8D,UAAU+nH,mCAErB,MAAMC,EAAmB1rD,EAAa9lD,GAEtC,GAAIwxG,EAAkB,CACrB,MAAMC,EAA0BtxH,OAAO2Y,OACtC,CACCxY,IAAK,IAAMkxH,GAEZA,GAEDH,EAAmBv3G,eAAe23G,MAI7BJ,EAUR,qBAAqBK,GACfzuH,MAAMC,QAAQwuH,KAAOA,EAAO,CAACA,IAClCA,EAAK5qH,QAAQyZ,IACZ,KAAMA,aAAelB,GACpB,MAAM,IAAIxc,2CAA2C0d,OAGvDgwG,EAAamB,GAqCXtB,EAAQuB,UAEXlqH,QAAQ0zB,GAAG,UAAWnrB,IACjBA,EAAQ7G,OAASknH,GACpB5oH,QAAQ67B,KAAK,CACZn6B,KAAMmnH,EACNM,UAAW5gH,EAAQ4gH,UACnB5wG,QAASuwG,EAAW9mH,IAAIlJ,GAAKA,EAAEqxH,wBAMnCpyH,EAAOD,QAAU0kH,G,cChMjBzkH,EAAOD,QAAUkC,QAAQ,Y,gBCAzB,MAAMglE,EAAO,EAAQ,KACforD,EAAS,EAAQ,KACjBC,EAAkB,EAAQ,IAAUA,gBAI1C,SAASC,EAAYC,EAAW3lC,GAC5B,MAAM4lC,EAAkBjwH,OAAO8/B,WAAWkwF,GACpCE,EAAelwH,OAAO8/B,WAAWuqD,GAEjC8lC,EAAkBnwH,OAAOC,MAAMgwH,EAAiB,EAAG,QACzDE,EAAgB90G,MAAM20G,GACtB,MAAMI,EAAepwH,OAAOC,MAAMgwH,EAAiB,EAAG,QAGtD,OAFAG,EAAa/0G,MAAMgvE,MAETylC,EAAgBK,EAAiBC,GAAgBH,IAAoBC,GAGnF,SAASG,EAAeC,EAAQ5rC,GAC5B,OAAal/E,MAAV8qH,EACQ,WAAa,OAAO5rC,GAEX,mBAAV4rC,EACC,WAAa,OAAOA,GAExBA,EAGX,SAASC,EAAgBhpH,GACrB,IAAIs2D,EAAiCr4D,MAArB+B,EAAQs2D,aAA2Bt2D,EAAQs2D,UACvD2yD,EAAQjpH,EAAQipH,OAAS,GACzBC,EAAalpH,EAAQkpH,YAQzB,SAA+BxqG,EAAUC,GACrC,IAAI,IAAIzoB,KAAK+yH,EACT,GAAGT,EAAY9pG,EAAUxoB,GAAKsyH,EAAY7pG,EAAUsqG,EAAM/yH,IACtD,OAAO,EAEf,OAAO,GAZPizH,EAAoClrH,MAA1B+B,EAAQopH,kBAAgCppH,EAAQopH,eAC1DC,EAAkBP,EAAe9oH,EAAQspH,qBAAsB,IAC/DC,EAAQT,EAAe9oH,EAAQupH,OAanC,OAXAjB,EAAuB,iBAATW,EAAmB,6DAA+DA,EAAQ,YACxGX,EAA4B,mBAAdY,EAA0B,mEAAqEA,EAAa,YAUnH,SAAwBrmG,EAAK0G,EAAKnuB,GACrC,IAAI06F,EAAiB54B,EAAKr6C,GAE1B,OAAIizE,GAGJjzE,EAAIq6C,KAAO,CACPqmD,KAAMztB,EAAer/F,KACrBkoB,SAAUm3E,EAAepyB,MAG1BylD,EACQD,EAAWpzB,EAAer/F,KAAMq/F,EAAepyB,KA0B1D,SAA4BlpE,EAAKgvH,GAG7B,OAFAlB,EAAOmB,QAAQjvH,GAEZgvH,EACQpuH,IAEJ4P,MA/BFk+G,EAAWpzB,EAAer/F,KAAMq/F,EAAepyB,MAGjDtoE,IAFI4P,KAVAA,IAcX,SAASA,IACL,GAAGsrD,EAAW,CACV,IAAIozD,EAAkB,QAClBC,EAAYJ,EAAM1mG,GAEnB8mG,IACCD,GAAmB,WAAaC,EAAY,KAEhDpgG,EAAIxkB,IAAI,mBAAoB2kH,GAIhC,MAAMnsE,EAAW8rE,EAAgBxmG,GAEjC,MAAsB,iBAAZ06B,EACCh0B,EAAIpI,OAAO,KAAK4Y,KAAKwjB,GAEzBh0B,EAAIpI,OAAO,KAAKs8C,KAAKlgB,KAcxCyrE,EAAgBR,YAAcA,EAC9BvyH,EAAOD,QAAUgzH,G;;;;;;;GClFjB,IAAIvwH,EAAS,EAAQ,KAAeA,OAOpCxC,EAAOD,QAiCP,SAAe6sB,GACb,IAAKA,EACH,MAAM,IAAIvpB,UAAU,4BAGtB,GAAmB,iBAARupB,EACT,MAAM,IAAIvpB,UAAU,4CAOtB,OAAOsf,EAiBT,SAA2BiK,GACzB,IAAKA,EAAIC,SAAkC,iBAAhBD,EAAIC,QAC7B,MAAM,IAAIxpB,UAAU,qDAGtB,OAAOupB,EAAIC,QAAQ8mG,cAzBNC,CAAiBhnG,KA1ChC5sB,EAAOD,QAAQ4iB,MAAQA,EAWvB,IAAIkxG,EAAqB,0DAWrBC,EAAmB,iBAwDvB,SAASnxG,EAAOoV,GACd,GAAsB,iBAAXA,EAAX,CAKA,IAAI3K,EAAQymG,EAAmB1kH,KAAK4oB,GAEpC,GAAK3K,EAAL,CAKA,IAtCqBrS,EAsCjBg5G,EAAWD,EAAiB3kH,MAtCX4L,EAsC6BqS,EAAM,GArCjD5qB,EAAOU,KAAK6X,EAAK,UAAUpJ,aAuClC,GAAKoiH,EAKL,OAAO,IAAIC,EAAYD,EAAS,GAAIA,EAAS,MAQ/C,SAASC,EAAaxzH,EAAMitE,GAC1B/oE,KAAKlE,KAAOA,EACZkE,KAAK+oE,KAAOA,I,gBClId,IAAI78D,EAAS,EAAQ,IACjBpO,EAASoO,EAAOpO,OAGpB,SAASuxC,EAAWC,EAAKC,GACvB,IAAK,IAAIzyC,KAAOwyC,EACdC,EAAIzyC,GAAOwyC,EAAIxyC,GAWnB,SAAS0yC,EAAYtb,EAAKpU,EAAkBzgB,GAC1C,OAAOvB,EAAOo2B,EAAKpU,EAAkBzgB,GATnCvB,EAAOU,MAAQV,EAAOC,OAASD,EAAOO,aAAeP,EAAO2xC,gBAC9Dn0C,EAAOD,QAAU6Q,GAGjBmjC,EAAUnjC,EAAQ7Q,GAClBA,EAAQyC,OAAS0xC,GAQnBH,EAAUvxC,EAAQ0xC,GAElBA,EAAWhxC,KAAO,SAAU01B,EAAKpU,EAAkBzgB,GACjD,GAAmB,iBAAR60B,EACT,MAAM,IAAIv1B,UAAU,iCAEtB,OAAOb,EAAOo2B,EAAKpU,EAAkBzgB,IAGvCmwC,EAAWzxC,MAAQ,SAAUC,EAAMG,EAAMO,GACvC,GAAoB,iBAATV,EACT,MAAM,IAAIW,UAAU,6BAEtB,IAAI0D,EAAMvE,EAAOE,GAUjB,YATasF,IAATnF,EACsB,iBAAbO,EACT2D,EAAIlE,KAAKA,EAAMO,GAEf2D,EAAIlE,KAAKA,GAGXkE,EAAIlE,KAAK,GAEJkE,GAGTmtC,EAAWnxC,YAAc,SAAUL,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAIW,UAAU,6BAEtB,OAAOb,EAAOE,IAGhBwxC,EAAWC,gBAAkB,SAAUzxC,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAIW,UAAU,6BAEtB,OAAOuN,EAAOwjC,WAAW1xC,K,cC5D3B1C,EAAOD,QAAUkC,QAAQ,W;;;;;;;;;;;;;;;ACgBzB,IAAIgyH,EAAgB,SAAS1zH,EAAGoC,GAI5B,OAHAsxH,EAAgBtzH,OAAOmqB,gBAClB,CAAEC,UAAW,cAAgBtnB,OAAS,SAAUlD,EAAGoC,GAAKpC,EAAEwqB,UAAYpoB,IACvE,SAAUpC,EAAGoC,GAAK,IAAK,IAAIZ,KAAKY,EAAOA,EAAEb,eAAeC,KAAIxB,EAAEwB,GAAKY,EAAEZ,MACpDxB,EAAGoC,IAGrB,SAASuxH,EAAU3zH,EAAGoC,GAEzB,SAASwxH,IAAOzvH,KAAKkD,YAAcrH,EADnC0zH,EAAc1zH,EAAGoC,GAEjBpC,EAAEsB,UAAkB,OAANc,EAAahC,OAAOY,OAAOoB,IAAMwxH,EAAGtyH,UAAYc,EAAEd,UAAW,IAAIsyH,GCzB5E,SAASC,EAAW3kH,GACvB,MAAoB,mBAANA,ECDlB,IAAI4kH,GAAsD,EAC/Cp6G,EAAS,CAChB7V,aAAS4D,EACT,0CAA0C9G,GAClCA,IAC0B,IAAI8I,OACqGxB,MAKvI6rH,EAAsDnzH,GAE1D,4CACI,OAAOmzH,ICdR,SAASC,EAAgB/vH,GAC5ByiD,WAAW,WAAc,MAAMziD,GAAQ,GCCpC,IAAI+hB,EAAQ,CACfiuG,QAAQ,EACRpvH,KAAM,SAAUjE,KAChBqH,MAAO,SAAUhE,GACb,GAAI0V,EAAOu6G,sCACP,MAAMjwH,EAGN+vH,EAAgB/vH,IAGxB03B,SAAU,cCbHv4B,EAAUD,MAAMC,SAAW,SAAW+L,GAAK,OAAOA,GAAyB,iBAAbA,EAAE1L,QCApE,SAASwU,EAAS9I,GACrB,OAAa,OAANA,GAA2B,iBAANA,ECDhC,SAASglH,EAAwBtyH,GAM7B,OALA6H,MAAM5J,KAAKsE,MACXA,KAAK8L,QAAUrO,EACXA,EAAO4B,OAAS,4CAA8C5B,EAAO8H,IAAI,SAAU1F,EAAKtE,GAAK,OAAOA,EAAI,EAAI,KAAOsE,EAAIoN,aAAe1G,KAAK,QAAU,GACzJvG,KAAKlE,KAAO,sBACZkE,KAAKvC,OAASA,EACPuC,KAEX+vH,EAAwB5yH,UAA0BlB,OAAOY,OAAOyI,MAAMnI,WAC/D,IAAI6yH,EAAsBD,ECL7B,EAA8B,WAC9B,SAASE,EAAaC,GAClBlwH,KAAK6vH,QAAS,EACd7vH,KAAKmwH,iBAAmB,KACxBnwH,KAAKowH,eAAiB,KAClBF,IACAlwH,KAAKqwH,aAAeH,GAsH5B,OAnHAD,EAAa9yH,UAAU+yH,YAAc,WACjC,IAAIzyH,EACJ,IAAIuC,KAAK6vH,OAAT,CAGA,IAAeM,EAANnwH,KAA4BmwH,iBAAkBE,EAA9CrwH,KAAgEqwH,aAAcD,EAA9EpwH,KAAkGowH,eAI3G,GAHApwH,KAAK6vH,QAAS,EACd7vH,KAAKmwH,iBAAmB,KACxBnwH,KAAKowH,eAAiB,KAClBD,aAA4BF,EAC5BE,EAAiBtrF,OAAO7kC,WAEvB,GAAyB,OAArBmwH,EACL,IAAK,IAAIjuH,EAAQ,EAAGA,EAAQiuH,EAAiB9wH,SAAU6C,EAAO,CAC3CiuH,EAAiBjuH,GACvB2iC,OAAO7kC,MAGxB,GAAI0vH,EAAWW,GACX,IACIA,EAAa30H,KAAKsE,MAEtB,MAAOqN,GACH5P,EAAS4P,aAAa2iH,EAAsBM,EAA4BjjH,EAAE5P,QAAU,CAAC4P,GAG7F,GAAIrO,EAAQoxH,GACR,CAAIluH,GAAS,EAEb,IAFA,IACI87B,EAAMoyF,EAAe/wH,SAChB6C,EAAQ87B,GAAK,CAClB,IAAI1P,EAAM8hG,EAAeluH,GACzB,GAAI2R,EAASya,GACT,IACIA,EAAI4hG,cAER,MAAO7iH,GACH5P,EAASA,GAAU,GACf4P,aAAa2iH,EACbvyH,EAASA,EAAO6e,OAAOg0G,EAA4BjjH,EAAE5P,SAGrDA,EAAOiH,KAAK2I,KAMhC,GAAI5P,EACA,MAAM,IAAIuyH,EAAoBvyH,KAGtCwyH,EAAa9yH,UAAUwD,IAAM,SAAU4vH,GACnC,IAAIC,EAAeD,EACnB,IAAKA,EACD,OAAON,EAAaQ,MAExB,cAAeF,GACX,IAAK,WACDC,EAAe,IAAIP,EAAaM,GACpC,IAAK,SACD,GAAIC,IAAiBxwH,MAAQwwH,EAAaX,QAA8C,mBAA7BW,EAAaN,YACpE,OAAOM,EAEN,GAAIxwH,KAAK6vH,OAEV,OADAW,EAAaN,cACNM,EAEN,KAAMA,aAAwBP,GAAe,CAC9C,IAAI7kD,EAAMolD,GACVA,EAAe,IAAIP,GACNG,eAAiB,CAAChlD,GAEnC,MACJ,QACI,MAAM,IAAI9lE,MAAM,yBAA2BirH,EAAW,2BAG9D,IAAIJ,EAAmBK,EAAaL,iBACpC,GAAyB,OAArBA,EACAK,EAAaL,iBAAmBnwH,UAE/B,GAAImwH,aAA4BF,EAAc,CAC/C,GAAIE,IAAqBnwH,KACrB,OAAOwwH,EAEXA,EAAaL,iBAAmB,CAACA,EAAkBnwH,UAElD,KAAwC,IAApCmwH,EAAiBnsH,QAAQhE,MAI9B,OAAOwwH,EAHPL,EAAiBzrH,KAAK1E,MAK1B,IAAI0wH,EAAgB1wH,KAAKowH,eAOzB,OANsB,OAAlBM,EACA1wH,KAAKowH,eAAiB,CAACI,GAGvBE,EAAchsH,KAAK8rH,GAEhBA,GAEXP,EAAa9yH,UAAU0nC,OAAS,SAAU2rF,GACtC,IAAIE,EAAgB1wH,KAAKowH,eACzB,GAAIM,EAAe,CACf,IAAIC,EAAoBD,EAAc1sH,QAAQwsH,IACnB,IAAvBG,GACAD,EAAc9rH,OAAO+rH,EAAmB,KAIpDV,EAAaQ,MAAS,SAAU7uG,GAE5B,OADAA,EAAMiuG,QAAS,EACRjuG,EAFU,CAGnB,IAAIquG,GACCA,EA5HsB,GA+HjC,SAASK,EAA4B7yH,GACjC,OAAOA,EAAO0e,OAAO,SAAUy0G,EAAM/wH,GAAO,OAAO+wH,EAAKt0G,OAAQzc,aAAemwH,EAAuBnwH,EAAIpC,OAASoC,IAAS,ICpIzH,IAAIgxH,EAAiC,mBAAXv0H,OACbA,OAAO,gBACrB,kBAAkCoK,KAAKE,SCKzC,EAA4B,SAAUkqH,GAEtC,SAASC,EAAWC,EAAmBntH,EAAO0zB,GAC1C,IAAI05F,EAAQH,EAAOp1H,KAAKsE,OAASA,KAKjC,OAJAixH,EAAMC,eAAiB,KACvBD,EAAME,iBAAkB,EACxBF,EAAMG,oBAAqB,EAC3BH,EAAMI,WAAY,EACV1uH,UAAUtD,QACd,KAAK,EACD4xH,EAAMK,YAAc1vG,EACpB,MACJ,KAAK,EACD,IAAKovG,EAAmB,CACpBC,EAAMK,YAAc1vG,EACpB,MAEJ,GAAiC,iBAAtBovG,EAAgC,CACnCA,aAA6BD,GAC7BE,EAAMG,mBAAqBJ,EAAkBI,mBAC7CH,EAAMK,YAAcN,EACpBA,EAAkBrwH,IAAIswH,KAGtBA,EAAMG,oBAAqB,EAC3BH,EAAMK,YAAc,IAAI,EAAeL,EAAOD,IAElD,MAER,QACIC,EAAMG,oBAAqB,EAC3BH,EAAMK,YAAc,IAAI,EAAeL,EAAOD,EAAmBntH,EAAO0zB,GAGhF,OAAO05F,EAoDX,OArFA,EAAkBF,EAAYD,GAmC9BC,EAAW5zH,UAAU0zH,GAAsB,WAAc,OAAO7wH,MAChE+wH,EAAWl0H,OAAS,SAAU4D,EAAMoD,EAAO0zB,GACvC,IAAIg6F,EAAa,IAAIR,EAAWtwH,EAAMoD,EAAO0zB,GAE7C,OADAg6F,EAAWH,oBAAqB,EACzBG,GAEXR,EAAW5zH,UAAUsD,KAAO,SAAUjE,GAC7BwD,KAAKqxH,WACNrxH,KAAKwxH,MAAMh1H,IAGnBu0H,EAAW5zH,UAAU0G,MAAQ,SAAUhE,GAC9BG,KAAKqxH,YACNrxH,KAAKqxH,WAAY,EACjBrxH,KAAK81B,OAAOj2B,KAGpBkxH,EAAW5zH,UAAUo6B,SAAW,WACvBv3B,KAAKqxH,YACNrxH,KAAKqxH,WAAY,EACjBrxH,KAAKyxH,cAGbV,EAAW5zH,UAAU+yH,YAAc,WAC3BlwH,KAAK6vH,SAGT7vH,KAAKqxH,WAAY,EACjBP,EAAO3zH,UAAU+yH,YAAYx0H,KAAKsE,QAEtC+wH,EAAW5zH,UAAUq0H,MAAQ,SAAUh1H,GACnCwD,KAAKsxH,YAAY7wH,KAAKjE,IAE1Bu0H,EAAW5zH,UAAU24B,OAAS,SAAUj2B,GACpCG,KAAKsxH,YAAYztH,MAAMhE,GACvBG,KAAKkwH,eAETa,EAAW5zH,UAAUs0H,UAAY,WAC7BzxH,KAAKsxH,YAAY/5F,WACjBv3B,KAAKkwH,eAETa,EAAW5zH,UAAUu0H,uBAAyB,WAC1C,IAAIvB,EAAmBnwH,KAAKmwH,iBAM5B,OALAnwH,KAAKmwH,iBAAmB,KACxBnwH,KAAKkwH,cACLlwH,KAAK6vH,QAAS,EACd7vH,KAAKqxH,WAAY,EACjBrxH,KAAKmwH,iBAAmBA,EACjBnwH,MAEJ+wH,EAtFoB,CAuF7B,GAEE,EAAgC,SAAUD,GAE1C,SAASa,EAAeC,EAAmBC,EAAgBhuH,EAAO0zB,GAC9D,IAEI92B,EAFAwwH,EAAQH,EAAOp1H,KAAKsE,OAASA,KACjCixH,EAAMW,kBAAoBA,EAE1B,IAAI93G,EAAUm3G,EAoBd,OAnBIvB,EAAWmC,GACXpxH,EAAOoxH,EAEFA,IACLpxH,EAAOoxH,EAAepxH,KACtBoD,EAAQguH,EAAehuH,MACvB0zB,EAAWs6F,EAAet6F,SACtBs6F,IAAmBjwG,IAEf8tG,GADJ51G,EAAU7d,OAAOY,OAAOg1H,IACD3B,cACnBe,EAAMtwH,IAAImZ,EAAQo2G,YAAYnzH,KAAK+c,IAEvCA,EAAQo2G,YAAce,EAAMf,YAAYnzH,KAAKk0H,KAGrDA,EAAMa,SAAWh4G,EACjBm3G,EAAMO,MAAQ/wH,EACdwwH,EAAMn7F,OAASjyB,EACfotH,EAAMQ,UAAYl6F,EACX05F,EA0GX,OAnIA,EAAkBU,EAAgBb,GA2BlCa,EAAex0H,UAAUsD,KAAO,SAAUjE,GACtC,IAAKwD,KAAKqxH,WAAarxH,KAAKwxH,MAAO,CAC/B,IAAII,EAAoB5xH,KAAK4xH,kBACxBr8G,EAAOu6G,uCAA0C8B,EAAkBR,mBAG/DpxH,KAAK+xH,gBAAgBH,EAAmB5xH,KAAKwxH,MAAOh1H,IACzDwD,KAAKkwH,cAHLlwH,KAAKgyH,aAAahyH,KAAKwxH,MAAOh1H,KAO1Cm1H,EAAex0H,UAAU0G,MAAQ,SAAUhE,GACvC,IAAKG,KAAKqxH,UAAW,CACjB,IAAIO,EAAoB5xH,KAAK4xH,kBACzB9B,EAAwCv6G,EAAOu6G,sCACnD,GAAI9vH,KAAK81B,OACAg6F,GAA0C8B,EAAkBR,oBAK7DpxH,KAAK+xH,gBAAgBH,EAAmB5xH,KAAK81B,OAAQj2B,GACrDG,KAAKkwH,gBALLlwH,KAAKgyH,aAAahyH,KAAK81B,OAAQj2B,GAC/BG,KAAKkwH,oBAOR,GAAK0B,EAAkBR,mBAQpBtB,GACA8B,EAAkBV,eAAiBrxH,EACnC+xH,EAAkBT,iBAAkB,GAGpCvB,EAAgB/vH,GAEpBG,KAAKkwH,kBAfuC,CAE5C,GADAlwH,KAAKkwH,cACDJ,EACA,MAAMjwH,EAEV+vH,EAAgB/vH,MAc5B8xH,EAAex0H,UAAUo6B,SAAW,WAChC,IAAI05F,EAAQjxH,KACZ,IAAKA,KAAKqxH,UAAW,CACjB,IAAIO,EAAoB5xH,KAAK4xH,kBAC7B,GAAI5xH,KAAKyxH,UAAW,CAChB,IAAIQ,EAAkB,WAAc,OAAOhB,EAAMQ,UAAU/1H,KAAKu1H,EAAMa,WACjEv8G,EAAOu6G,uCAA0C8B,EAAkBR,oBAKpEpxH,KAAK+xH,gBAAgBH,EAAmBK,GACxCjyH,KAAKkwH,gBALLlwH,KAAKgyH,aAAaC,GAClBjyH,KAAKkwH,oBAQTlwH,KAAKkwH,gBAIjByB,EAAex0H,UAAU60H,aAAe,SAAU7xH,EAAI3D,GAClD,IACI2D,EAAGzE,KAAKsE,KAAK8xH,SAAUt1H,GAE3B,MAAOqD,GAEH,GADAG,KAAKkwH,cACD36G,EAAOu6G,sCACP,MAAMjwH,EAGN+vH,EAAgB/vH,KAI5B8xH,EAAex0H,UAAU40H,gBAAkB,SAAUvkF,EAAQrtC,EAAI3D,GAC7D,IAAK+Y,EAAOu6G,sCACR,MAAM,IAAIxqH,MAAM,YAEpB,IACInF,EAAGzE,KAAKsE,KAAK8xH,SAAUt1H,GAE3B,MAAOqD,GACH,OAAI0V,EAAOu6G,uCACPtiF,EAAO0jF,eAAiBrxH,EACxB2tC,EAAO2jF,iBAAkB,GAClB,IAGPvB,EAAgB/vH,IACT,GAGf,OAAO,GAEX8xH,EAAex0H,UAAUkzH,aAAe,WACpC,IAAIuB,EAAoB5xH,KAAK4xH,kBAC7B5xH,KAAK8xH,SAAW,KAChB9xH,KAAK4xH,kBAAoB,KACzBA,EAAkB1B,eAEfyB,EApIwB,CAqIjC,GCrOK,IAAI,EAA+B,mBAAXr1H,QAAyBA,OAAO41H,YAAc,eCAtE,SAASt0H,KCCT,SAAS63B,IAEZ,IADA,IAAIwiD,EAAM,GACDk6C,EAAK,EAAGA,EAAKxvH,UAAUtD,OAAQ8yH,IACpCl6C,EAAIk6C,GAAMxvH,UAAUwvH,GAExB,OAAOC,EAAcn6C,GAElB,SAASm6C,EAAcn6C,GAC1B,OAAKA,EAGc,IAAfA,EAAI54E,OACG44E,EAAI,GAER,SAAe0Z,GAClB,OAAO1Z,EAAI97D,OAAO,SAAUsqB,EAAMtmC,GAAM,OAAOA,EAAGsmC,IAAUkrD,IANrD/zF,ECLf,IAAI,EAA4B,WAC5B,SAASy0H,EAAWC,GAChBtyH,KAAKuyH,WAAY,EACbD,IACAtyH,KAAKwyH,WAAaF,GA6F1B,OA1FAD,EAAWl1H,UAAUs1H,KAAO,SAAUC,GAClC,IAAIR,EAAa,IAAIG,EAGrB,OAFAH,EAAWrvH,OAAS7C,KACpBkyH,EAAWQ,SAAWA,EACfR,GAEXG,EAAWl1H,UAAUm1H,UAAY,SAAUT,EAAgBhuH,EAAO0zB,GAC9D,IAAIm7F,EAAW1yH,KAAK0yH,SAChBC,ECjBL,SAAsBC,EAAgB/uH,EAAO0zB,GAChD,GAAIq7F,EAAgB,CAChB,GAAIA,aAA0B,EAC1B,OAAOA,EAEX,GAAIA,EAAe/B,GACf,OAAO+B,EAAe/B,KAG9B,OAAK+B,GAAmB/uH,GAAU0zB,EAG3B,IAAI,EAAWq7F,EAAgB/uH,EAAO0zB,GAFlC,IAAI,EAAW3V,GDOXixG,CAAahB,EAAgBhuH,EAAO0zB,GAS/C,GARIm7F,EACAC,EAAKhyH,IAAI+xH,EAASh3H,KAAKi3H,EAAM3yH,KAAK6C,SAGlC8vH,EAAKhyH,IAAIX,KAAK6C,QAAW0S,EAAOu6G,wCAA0C6C,EAAKvB,mBAC3EpxH,KAAKwyH,WAAWG,GAChB3yH,KAAK8yH,cAAcH,IAEvBp9G,EAAOu6G,uCACH6C,EAAKvB,qBACLuB,EAAKvB,oBAAqB,EACtBuB,EAAKxB,iBACL,MAAMwB,EAAKzB,eAIvB,OAAOyB,GAEXN,EAAWl1H,UAAU21H,cAAgB,SAAUH,GAC3C,IACI,OAAO3yH,KAAKwyH,WAAWG,GAE3B,MAAO9yH,GACC0V,EAAOu6G,wCACP6C,EAAKxB,iBAAkB,EACvBwB,EAAKzB,eAAiBrxH,IE7C/B,SAAwBkzH,GAC3B,KAAOA,GAAU,CACb,IAAIC,EAAKD,EAAUE,EAAWD,EAAGnD,OAAQyB,EAAc0B,EAAG1B,YAAaD,EAAY2B,EAAG3B,UACtF,GAAI4B,GAAY5B,EACZ,OAAO,EAGP0B,EADKzB,GAAeA,aAAuB,EAChCA,EAGA,KAGnB,OAAO,EFkCK4B,CAAeP,GAIf/1G,QAAQC,KAAKhd,GAHb8yH,EAAK9uH,MAAMhE,KAOvBwyH,EAAWl1H,UAAUyF,QAAU,SAAUnC,EAAM0yH,GAC3C,IAAIlC,EAAQjxH,KAEZ,OAAO,IADPmzH,EAAcC,EAAeD,IACN,SAAUxzH,EAASC,GACtC,IAAI4wH,EACJA,EAAeS,EAAMqB,UAAU,SAAU91H,GACrC,IACIiE,EAAKjE,GAET,MAAOqD,GACHD,EAAOC,GACH2wH,GACAA,EAAaN,gBAGtBtwH,EAAQD,MAGnB0yH,EAAWl1H,UAAUq1H,WAAa,SAAUjB,GACxC,IAAI1uH,EAAS7C,KAAK6C,OAClB,OAAOA,GAAUA,EAAOyvH,UAAUf,IAEtCc,EAAWl1H,UAAU,GAAqB,WACtC,OAAO6C,MAEXqyH,EAAWl1H,UAAUs4B,KAAO,WAExB,IADA,IAAIiuB,EAAa,GACRyuE,EAAK,EAAGA,EAAKxvH,UAAUtD,OAAQ8yH,IACpCzuE,EAAWyuE,GAAMxvH,UAAUwvH,GAE/B,OAA0B,IAAtBzuE,EAAWrkD,OACJW,KAEJoyH,EAAc1uE,EAAd0uE,CAA0BpyH,OAErCqyH,EAAWl1H,UAAUk2H,UAAY,SAAUF,GACvC,IAAIlC,EAAQjxH,KAEZ,OAAO,IADPmzH,EAAcC,EAAeD,IACN,SAAUxzH,EAASC,GACtC,IAAIpD,EACJy0H,EAAMqB,UAAU,SAAUvnH,GAAK,OAAOvO,EAAQuO,GAAM,SAAUlL,GAAO,OAAOD,EAAOC,IAAS,WAAc,OAAOF,EAAQnD,QAGjI61H,EAAWx1H,OAAS,SAAUy1H,GAC1B,OAAO,IAAID,EAAWC,IAEnBD,EAjGoB,GAoG/B,SAASe,EAAeD,GAIpB,GAHKA,IACDA,EAAc59G,EAAO7V,SAAWA,UAE/ByzH,EACD,MAAM,IAAI7tH,MAAM,yBAEpB,OAAO6tH,EGhHJ,SAASG,IACZ,MAAsB,mBAAXh3H,QAA0BA,OAAOwI,SAGrCxI,OAAOwI,SAFH,aAIR,IAAI,EAAyBwuH,ICNzBC,EAAc,SAAWxoH,GAAK,OAAOA,GAAyB,iBAAbA,EAAE1L,QAAoC,mBAAN0L,GCArF,SAASyoH,EAAUh3H,GACtB,QAASA,GAAoC,mBAApBA,EAAM81H,WAAkD,mBAAf91H,EAAM6oC,KCQrE,IAAIouF,EAAc,SAAU3zH,GAC/B,GAAMA,GAA+C,mBAA9BA,EAAO,GAC1B,OCVqCqB,EDURrB,ECT1B,SAAUyxH,GACb,IAAImC,EAAMvyH,EAAI,KACd,GAA6B,mBAAlBuyH,EAAIpB,UACX,MAAM,IAAI3zH,UAAU,kEAGpB,OAAO+0H,EAAIpB,UAAUf,IDKxB,GAAIgC,EAAYzzH,GACjB,OEdgCm4B,EFcRn4B,EEbrB,SAAUyxH,GACb,IAAK,IAAIh2H,EAAI,EAAGyiC,EAAM/F,EAAM54B,OAAQ9D,EAAIyiC,IAAQuzF,EAAW1B,OAAQt0H,IAC/Dg2H,EAAW9wH,KAAKw3B,EAAM18B,IAE1Bg2H,EAAWh6F,YFWV,GAAIi8F,EAAU1zH,GACf,OGhBkC6zH,EHgBR7zH,EGfvB,SAAUyxH,GAQb,OAPAoC,EAAQtuF,KAAK,SAAU7oC,GACd+0H,EAAW1B,SACZ0B,EAAW9wH,KAAKjE,GAChB+0H,EAAWh6F,aAEhB,SAAU13B,GAAO,OAAO0xH,EAAW1tH,MAAMhE,KACvCwlC,KAAK,KAAMuqF,GACT2B,GHSN,GAAMzxH,GAA6C,mBAA5BA,EAAO,GAC/B,OInBmC8zH,EJmBR9zH,EIlBxB,SAAUyxH,GAEb,IADA,IAAIzsH,EAAW8uH,EAAS,OACrB,CACC,IAAInvH,EAAOK,EAASrE,OACpB,GAAIgE,EAAKtC,KAAM,CACXovH,EAAWh6F,WACX,MAGJ,GADAg6F,EAAW9wH,KAAKgE,EAAKjI,OACjB+0H,EAAW1B,OACX,MAUR,MAP+B,mBAApB/qH,EAAS+uH,QAChBtC,EAAW5wH,IAAI,WACPmE,EAAS+uH,QACT/uH,EAAS+uH,WAIdtC,GJCP,IItBmCqC,EDADD,EDDF17F,EDCK92B,EDsBjC3E,EAAQqX,EAAS/T,GAAU,oBAAsB,IAAMA,EAAS,IAGpE,MAAM,IAAInB,UAFA,gBAAkBnC,EAAQ,8FKhBrC,SAASs3H,EAAUniC,EAAOoiC,GAC7B,GAAa,MAATpiC,EAAe,CACf,GCTD,SAA6BA,GAChC,OAAOA,GAA6C,mBAA7BA,EAAM,GDQrBqiC,CAAoBriC,GACpB,OERL,SAA4BA,EAAOoiC,GACtC,OAAO,IAAI,EAAW,SAAUxC,GAC5B,IAAIjjG,EAAM,IAAI,EASd,OARAA,EAAI3tB,IAAIozH,EAAUE,SAAS,WACvB,IAAI/B,EAAavgC,EAAM,KACvBrjE,EAAI3tB,IAAIuxH,EAAWI,UAAU,CACzB7xH,KAAM,SAAUjE,GAAS8xB,EAAI3tB,IAAIozH,EAAUE,SAAS,WAAc,OAAO1C,EAAW9wH,KAAKjE,OACzFqH,MAAO,SAAUhE,GAAOyuB,EAAI3tB,IAAIozH,EAAUE,SAAS,WAAc,OAAO1C,EAAW1tH,MAAMhE,OACzF03B,SAAU,WAAcjJ,EAAI3tB,IAAIozH,EAAUE,SAAS,WAAc,OAAO1C,EAAWh6F,qBAGpFjJ,IFHI4lG,CAAmBviC,EAAOoiC,GAEhC,GAAIP,EAAU7hC,GACf,OGZL,SAAyBA,EAAOoiC,GACnC,OAAO,IAAI,EAAW,SAAUxC,GAC5B,IAAIjjG,EAAM,IAAI,EAWd,OAVAA,EAAI3tB,IAAIozH,EAAUE,SAAS,WACvB,OAAOtiC,EAAMtsD,KAAK,SAAU7oC,GACxB8xB,EAAI3tB,IAAIozH,EAAUE,SAAS,WACvB1C,EAAW9wH,KAAKjE,GAChB8xB,EAAI3tB,IAAIozH,EAAUE,SAAS,WAAc,OAAO1C,EAAWh6F,kBAEhE,SAAU13B,GACTyuB,EAAI3tB,IAAIozH,EAAUE,SAAS,WAAc,OAAO1C,EAAW1tH,MAAMhE,WAGlEyuB,IHDI6lG,CAAgBxiC,EAAOoiC,GAE7B,GAAIR,EAAY5hC,GACjB,OIfL,SAAuBA,EAAOoiC,GACjC,OAAO,IAAI,EAAW,SAAUxC,GAC5B,IAAIjjG,EAAM,IAAI,EACV/yB,EAAI,EAWR,OAVA+yB,EAAI3tB,IAAIozH,EAAUE,SAAS,WACnB14H,IAAMo2F,EAAMtyF,QAIhBkyH,EAAW9wH,KAAKkxF,EAAMp2F,MACjBg2H,EAAW1B,QACZvhG,EAAI3tB,IAAIX,KAAKi0H,aALb1C,EAAWh6F,cAQZjJ,IJCI8lG,CAAcziC,EAAOoiC,GAE3B,GKlBN,SAAoBpiC,GACvB,OAAOA,GAA2C,mBAA3BA,EAAM,GLiBhB0iC,CAAW1iC,IAA2B,iBAAVA,EACjC,OMjBL,SAA0BA,EAAOoiC,GACpC,IAAKpiC,EACD,MAAM,IAAIrsF,MAAM,2BAEpB,OAAO,IAAI,EAAW,SAAUisH,GAC5B,IACIzsH,EADAwpB,EAAM,IAAI,EAiCd,OA/BAA,EAAI3tB,IAAI,WACAmE,GAAuC,mBAApBA,EAAS+uH,QAC5B/uH,EAAS+uH,WAGjBvlG,EAAI3tB,IAAIozH,EAAUE,SAAS,WACvBnvH,EAAW6sF,EAAM,KACjBrjE,EAAI3tB,IAAIozH,EAAUE,SAAS,WACvB,IAAI1C,EAAW1B,OAAf,CAGA,IAAIrzH,EACA2F,EACJ,IACI,IAAIrC,EAASgF,EAASrE,OACtBjE,EAAQsD,EAAOtD,MACf2F,EAAOrC,EAAOqC,KAElB,MAAOtC,GAEH,YADA0xH,EAAW1tH,MAAMhE,GAGjBsC,EACAovH,EAAWh6F,YAGXg6F,EAAW9wH,KAAKjE,GAChBwD,KAAKi0H,mBAIV3lG,INrBIgmG,CAAiB3iC,EAAOoiC,GAGvC,MAAM,IAAIp1H,WAAqB,OAAVgzF,UAAyBA,GAASA,GAAS,sBOpB7D,SAASnzF,EAAKmzF,EAAOoiC,GACxB,OAAKA,EAOMD,EAAUniC,EAAOoiC,GANpBpiC,aAAiB,EACVA,EAEJ,IAAI,EAAW8hC,EAAY9hC,ICNnC,SAASpsF,EAAIgvH,EAAStuF,GACzB,OAAO,SAAsBpjC,GACzB,GAAuB,mBAAZ0xH,EACP,MAAM,IAAI51H,UAAU,8DAExB,OAAOkE,EAAO4vH,KAAK,IAAI+B,EAAYD,EAAStuF,KAGpD,IAAIuuF,EAA6B,WAC7B,SAASA,EAAYD,EAAStuF,GAC1BjmC,KAAKu0H,QAAUA,EACfv0H,KAAKimC,QAAUA,EAKnB,OAHAuuF,EAAYr3H,UAAUzB,KAAO,SAAU61H,EAAY1uH,GAC/C,OAAOA,EAAOyvH,UAAU,IAAI,EAAcf,EAAYvxH,KAAKu0H,QAASv0H,KAAKimC,WAEtEuuF,EARqB,GAW5B,EAA+B,SAAU1D,GAEzC,SAAS2D,EAAcnD,EAAaiD,EAAStuF,GACzC,IAAIgrF,EAAQH,EAAOp1H,KAAKsE,KAAMsxH,IAAgBtxH,KAI9C,OAHAixH,EAAMsD,QAAUA,EAChBtD,EAAMnqH,MAAQ,EACdmqH,EAAMhrF,QAAUA,GAAWgrF,EACpBA,EAaX,OAnBA,EAAkBwD,EAAe3D,GAQjC2D,EAAct3H,UAAUq0H,MAAQ,SAAUh1H,GACtC,IAAIsD,EACJ,IACIA,EAASE,KAAKu0H,QAAQ74H,KAAKsE,KAAKimC,QAASzpC,EAAOwD,KAAK8G,SAEzD,MAAOjH,GAEH,YADAG,KAAKsxH,YAAYztH,MAAMhE,GAG3BG,KAAKsxH,YAAY7wH,KAAKX,IAEnB20H,EApBuB,CAqBhC,GCtCax4H,OAAOkB,UAAU8P,SACzB,SAASynH,EAAUjyH,EAAQkyH,EAAWtvH,EAASuvH,GAKlD,OAJIlF,EAAWrqH,KACXuvH,EAAiBvvH,EACjBA,OAAU/B,GAEVsxH,EACOF,EAAUjyH,EAAQkyH,EAAWtvH,GAASowB,KAAKlwB,EAAI,SAAUkV,GAAQ,OAAOzb,EAAQyb,GAAQm6G,EAAetwH,WAAM,EAAQmW,GAAQm6G,EAAen6G,MAEhJ,IAAI,EAAW,SAAU82G,IAYpC,SAASsD,EAAkBC,EAAWH,EAAWl1H,EAAS8xH,EAAYlsH,GAClE,IAAI6qH,EACJ,GA+BJ,SAAuB4E,GACnB,OAAOA,GAAmD,mBAA/BA,EAAUC,kBAA4E,mBAAlCD,EAAUE,oBAhCrFC,CAAcH,GAAY,CAC1B,IAAII,EAAWJ,EACfA,EAAUC,iBAAiBJ,EAAWl1H,EAAS4F,GAC/C6qH,EAAc,WAAc,OAAOgF,EAASF,oBAAoBL,EAAWl1H,EAAS4F,SAEnF,GAuBT,SAAmCyvH,GAC/B,OAAOA,GAAqC,mBAAjBA,EAAU79F,IAA8C,mBAAlB69F,EAAUK,IAxBlEC,CAA0BN,GAAY,CAC3C,IAAIO,EAAWP,EACfA,EAAU79F,GAAG09F,EAAWl1H,GACxBywH,EAAc,WAAc,OAAOmF,EAASF,IAAIR,EAAWl1H,SAE1D,GAeT,SAAiCq1H,GAC7B,OAAOA,GAA8C,mBAA1BA,EAAUQ,aAAkE,mBAA7BR,EAAU/9F,eAhB3Ew+F,CAAwBT,GAAY,CACzC,IAAIU,EAAWV,EACfA,EAAUQ,YAAYX,EAAWl1H,GACjCywH,EAAc,WAAc,OAAOsF,EAASz+F,eAAe49F,EAAWl1H,QAErE,KAAIq1H,IAAaA,EAAUz1H,OAM5B,MAAM,IAAIV,UAAU,wBALpB,IAAK,IAAIpD,EAAI,EAAGyiC,EAAM82F,EAAUz1H,OAAQ9D,EAAIyiC,EAAKziC,IAC7Cs5H,EAAkBC,EAAUv5H,GAAIo5H,EAAWl1H,EAAS8xH,EAAYlsH,GAMxEksH,EAAW5wH,IAAIuvH,GA5BX2E,CAAkBpyH,EAAQkyH,EAR1B,SAAiBtnH,GACT1K,UAAUtD,OAAS,EACnBkyH,EAAW9wH,KAAK1B,MAAM5B,UAAUuF,MAAMhH,KAAKiH,YAG3C4uH,EAAW9wH,KAAK4M,IAGsBkkH,EAAYlsH,K,aCpB9D,EAAiC,SAAUyrH,GAE3C,SAAS2E,EAAgBjoF,EAAQkoF,EAAYC,GACzC,IAAI1E,EAAQH,EAAOp1H,KAAKsE,OAASA,KAKjC,OAJAixH,EAAMzjF,OAASA,EACfyjF,EAAMyE,WAAaA,EACnBzE,EAAM0E,WAAaA,EACnB1E,EAAM/uH,MAAQ,EACP+uH,EAaX,OApBA,EAAkBwE,EAAiB3E,GASnC2E,EAAgBt4H,UAAUq0H,MAAQ,SAAUh1H,GACxCwD,KAAKwtC,OAAOooF,WAAW51H,KAAK01H,WAAYl5H,EAAOwD,KAAK21H,WAAY31H,KAAKkC,QAASlC,OAElFy1H,EAAgBt4H,UAAU24B,OAAS,SAAUjyB,GACzC7D,KAAKwtC,OAAOqoF,YAAYhyH,EAAO7D,MAC/BA,KAAKkwH,eAETuF,EAAgBt4H,UAAUs0H,UAAY,WAClCzxH,KAAKwtC,OAAOsoF,eAAe91H,MAC3BA,KAAKkwH,eAEFuF,EArByB,CAsBlC,GCtBF,IAAI,EAAiC,SAAU3E,GAE3C,SAASiF,IACL,OAAkB,OAAXjF,GAAmBA,EAAOxsH,MAAMtE,KAAM2C,YAAc3C,KAW/D,OAbA,EAAkB+1H,EAAiBjF,GAInCiF,EAAgB54H,UAAUy4H,WAAa,SAAUF,EAAYM,EAAYL,EAAYM,EAAYC,GAC7Fl2H,KAAKsxH,YAAY7wH,KAAKu1H,IAE1BD,EAAgB54H,UAAU04H,YAAc,SAAUhyH,EAAOqyH,GACrDl2H,KAAKsxH,YAAYztH,MAAMA,IAE3BkyH,EAAgB54H,UAAU24H,eAAiB,SAAUI,GACjDl2H,KAAKsxH,YAAY/5F,YAEdw+F,EAdyB,CAelC,GCXK,SAASI,EAAS5B,EAASK,EAAgBnyD,GAI9C,YAHmB,IAAfA,IACAA,EAAavtD,OAAOkhH,mBAEM,mBAAnBxB,EACA,SAAU/xH,GAAU,OAAOA,EAAO4yB,KAAK0gG,EAAS,SAAU/xH,EAAG7I,GAAK,OAAOiD,EAAK+1H,EAAQnwH,EAAG7I,IAAIk6B,KAAKlwB,EAAI,SAAUtH,EAAG21F,GAAM,OAAOghC,EAAexwH,EAAGnG,EAAG1C,EAAGq4F,OAAanxB,MAE7I,iBAAnBmyD,IACZnyD,EAAamyD,GAEV,SAAU/xH,GAAU,OAAOA,EAAO4vH,KAAK,IAAI4D,EAAiB9B,EAAS9xD,MAEhF,IAAI4zD,EAAkC,WAClC,SAASA,EAAiB9B,EAAS9xD,QACZ,IAAfA,IACAA,EAAavtD,OAAOkhH,mBAExBp2H,KAAKu0H,QAAUA,EACfv0H,KAAKyiE,WAAaA,EAKtB,OAHA4zD,EAAiBl5H,UAAUzB,KAAO,SAAUq3H,EAAUlwH,GAClD,OAAOA,EAAOyvH,UAAU,IAAI,EAAmBS,EAAU/yH,KAAKu0H,QAASv0H,KAAKyiE,cAEzE4zD,EAX0B,GAcjC,EAAoC,SAAUvF,GAE9C,SAASwF,EAAmBhF,EAAaiD,EAAS9xD,QAC3B,IAAfA,IACAA,EAAavtD,OAAOkhH,mBAExB,IAAInF,EAAQH,EAAOp1H,KAAKsE,KAAMsxH,IAAgBtxH,KAO9C,OANAixH,EAAMsD,QAAUA,EAChBtD,EAAMxuD,WAAaA,EACnBwuD,EAAMsF,cAAe,EACrBtF,EAAM/kH,OAAS,GACf+kH,EAAMuF,OAAS,EACfvF,EAAM/uH,MAAQ,EACP+uH,EAkDX,OA9DA,EAAkBqF,EAAoBxF,GActCwF,EAAmBn5H,UAAUq0H,MAAQ,SAAUh1H,GACvCwD,KAAKw2H,OAASx2H,KAAKyiE,WACnBziE,KAAKy2H,SAASj6H,GAGdwD,KAAKkM,OAAOxH,KAAKlI,IAGzB85H,EAAmBn5H,UAAUs5H,SAAW,SAAUj6H,GAC9C,IAAIsD,EACAoC,EAAQlC,KAAKkC,QACjB,IACIpC,EAASE,KAAKu0H,QAAQ/3H,EAAO0F,GAEjC,MAAOrC,GAEH,YADAG,KAAKsxH,YAAYztH,MAAMhE,GAG3BG,KAAKw2H,SACLx2H,KAAK02H,UAAU52H,EAAQtD,EAAO0F,IAElCo0H,EAAmBn5H,UAAUu5H,UAAY,SAAUC,EAAKn6H,EAAO0F,GAC3D,IAAI00H,EAAkB,IAAI,EAAgB52H,UAAMsD,OAAWA,GACzCtD,KAAKsxH,YACX3wH,IAAIi2H,GCpEjB,SAA2BC,EAAiB/2H,EAAQ41H,EAAYC,EAAYrE,GAI/E,QAHoB,IAAhBA,IACAA,EAAc,IAAI,EAAgBuF,EAAiBnB,EAAYC,KAE/DrE,EAAYzB,OAGZ/vH,aAAkB,EACXA,EAAOwyH,UAAUhB,GAErBmC,EAAY3zH,EAAZ2zH,CAAoBnC,GD2DvBwF,CAAkB92H,KAAM22H,EAAKn6H,EAAO0F,EAAO00H,IAE/CN,EAAmBn5H,UAAUs0H,UAAY,WACrCzxH,KAAKu2H,cAAe,EACA,IAAhBv2H,KAAKw2H,QAAuC,IAAvBx2H,KAAKkM,OAAO7M,QACjCW,KAAKsxH,YAAY/5F,WAErBv3B,KAAKkwH,eAEToG,EAAmBn5H,UAAUy4H,WAAa,SAAUF,EAAYM,EAAYL,EAAYM,EAAYC,GAChGl2H,KAAKsxH,YAAY7wH,KAAKu1H,IAE1BM,EAAmBn5H,UAAU24H,eAAiB,SAAUI,GACpD,IAAIhqH,EAASlM,KAAKkM,OAClBlM,KAAK6kC,OAAOqxF,GACZl2H,KAAKw2H,SACDtqH,EAAO7M,OAAS,EAChBW,KAAKwxH,MAAMtlH,EAAOquC,SAEG,IAAhBv6C,KAAKw2H,QAAgBx2H,KAAKu2H,cAC/Bv2H,KAAKsxH,YAAY/5F,YAGlB++F,EA/D4B,CAgErC,GE9FK,SAASS,EAAKC,EAAaC,GAC9B,IAAIC,GAAU,EAId,OAHIv0H,UAAUtD,QAAU,IACpB63H,GAAU,GAEP,SAA8Br0H,GACjC,OAAOA,EAAO4vH,KAAK,IAAI0E,EAAaH,EAAaC,EAAMC,KAG/D,IAAIC,EAA8B,WAC9B,SAASA,EAAaH,EAAaC,EAAMC,QACrB,IAAZA,IACAA,GAAU,GAEdl3H,KAAKg3H,YAAcA,EACnBh3H,KAAKi3H,KAAOA,EACZj3H,KAAKk3H,QAAUA,EAKnB,OAHAC,EAAah6H,UAAUzB,KAAO,SAAU61H,EAAY1uH,GAChD,OAAOA,EAAOyvH,UAAU,IAAI,EAAef,EAAYvxH,KAAKg3H,YAAah3H,KAAKi3H,KAAMj3H,KAAKk3H,WAEtFC,EAZsB,GAc7B,EAAgC,SAAUrG,GAE1C,SAASsG,EAAe9F,EAAa0F,EAAaK,EAAOH,GACrD,IAAIjG,EAAQH,EAAOp1H,KAAKsE,KAAMsxH,IAAgBtxH,KAK9C,OAJAixH,EAAM+F,YAAcA,EACpB/F,EAAMoG,MAAQA,EACdpG,EAAMiG,QAAUA,EAChBjG,EAAM/uH,MAAQ,EACP+uH,EAkCX,OAzCA,EAAkBmG,EAAgBtG,GASlC70H,OAAOC,eAAek7H,EAAej6H,UAAW,OAAQ,CACpDf,IAAK,WACD,OAAO4D,KAAKq3H,OAEhBjtH,IAAK,SAAU5N,GACXwD,KAAKk3H,SAAU,EACfl3H,KAAKq3H,MAAQ76H,GAEjBL,YAAY,EACZye,cAAc,IAElBw8G,EAAej6H,UAAUq0H,MAAQ,SAAUh1H,GACvC,GAAKwD,KAAKk3H,QAKN,OAAOl3H,KAAKy2H,SAASj6H,GAJrBwD,KAAKi3H,KAAOz6H,EACZwD,KAAKsxH,YAAY7wH,KAAKjE,IAM9B46H,EAAej6H,UAAUs5H,SAAW,SAAUj6H,GAC1C,IACIsD,EADAoC,EAAQlC,KAAKkC,QAEjB,IACIpC,EAASE,KAAKg3H,YAAYh3H,KAAKi3H,KAAMz6H,EAAO0F,GAEhD,MAAOrC,GACHG,KAAKsxH,YAAYztH,MAAMhE,GAE3BG,KAAKi3H,KAAOn3H,EACZE,KAAKsxH,YAAY7wH,KAAKX,IAEnBs3H,EA1CwB,CA2CjC,GCpEF,SAASE,IAIL,OAHAhyH,MAAM5J,KAAKsE,MACXA,KAAK8L,QAAU,wBACf9L,KAAKlE,KAAO,0BACLkE,KAEXs3H,EAA4Bn6H,UAA0BlB,OAAOY,OAAOyI,MAAMnI,WACnE,IAAIo6H,EAA0BD,ECN1B7G,EAAsB,IAAI,EAAW,SAAUc,GAAc,OAAOA,EAAWh6F,aACnF,SAAS,EAAMw8F,GAClB,OAAOA,EAEX,SAAwBA,GACpB,OAAO,IAAI,EAAW,SAAUxC,GAAc,OAAOwC,EAAUE,SAAS,WAAc,OAAO1C,EAAWh6F,eAHrFigG,CAAezD,GAAatD,ECC5C,SAASgH,EAAS3wH,GACrB,OAAO,SAAkCjE,GACrC,OAAc,IAAViE,EACO,IAGAjE,EAAO4vH,KAAK,IAAI,EAAiB3rH,KAIpD,IAAI,EAAkC,WAClC,SAAS4wH,EAAiBlwH,GAEtB,GADAxH,KAAKwH,MAAQA,EACTxH,KAAKwH,MAAQ,EACb,MAAM,IAAI+vH,EAMlB,OAHAG,EAAiBv6H,UAAUzB,KAAO,SAAU61H,EAAY1uH,GACpD,OAAOA,EAAOyvH,UAAU,IAAI,EAAmBf,EAAYvxH,KAAKwH,SAE7DkwH,EAV0B,GAYjC,EAAoC,SAAU5G,GAE9C,SAAS6G,EAAmBrG,EAAa9pH,GACrC,IAAIypH,EAAQH,EAAOp1H,KAAKsE,KAAMsxH,IAAgBtxH,KAI9C,OAHAixH,EAAMzpH,MAAQA,EACdypH,EAAM77D,KAAO,IAAIr2D,MACjBkyH,EAAMnqH,MAAQ,EACPmqH,EA2BX,OAjCA,EAAkB0G,EAAoB7G,GAQtC6G,EAAmBx6H,UAAUq0H,MAAQ,SAAUh1H,GAC3C,IAAI44D,EAAOp1D,KAAKo1D,KACZ5tD,EAAQxH,KAAKwH,MACbV,EAAQ9G,KAAK8G,QACbsuD,EAAK/1D,OAASmI,EACd4tD,EAAK1wD,KAAKlI,GAIV44D,EADYtuD,EAAQU,GACNhL,GAGtBm7H,EAAmBx6H,UAAUs0H,UAAY,WACrC,IAAIH,EAActxH,KAAKsxH,YACnBxqH,EAAQ9G,KAAK8G,MACjB,GAAIA,EAAQ,EAGR,IAFA,IAAIU,EAAQxH,KAAK8G,OAAS9G,KAAKwH,MAAQxH,KAAKwH,MAAQxH,KAAK8G,MACrDsuD,EAAOp1D,KAAKo1D,KACP75D,EAAI,EAAGA,EAAIiM,EAAOjM,IAAK,CAC5B,IAAI8wC,EAAOvlC,IAAWU,EACtB8pH,EAAY7wH,KAAK20D,EAAK/oB,IAG9BilF,EAAY/5F,YAETogG,EAlC4B,CAmCrC,GCrDF,IAAIC,EAAwC,WACxC,SAASA,EAAuBp1C,GAC5BxiF,KAAKwiF,aAAeA,EAKxB,OAHAo1C,EAAuBz6H,UAAUzB,KAAO,SAAU61H,EAAY1uH,GAC1D,OAAOA,EAAOyvH,UAAU,IAAI,EAAyBf,EAAYvxH,KAAKwiF,gBAEnEo1C,EAPgC,GASvC,EAA0C,SAAU9G,GAEpD,SAAS+G,EAAyBvG,EAAa9uC,GAC3C,IAAIyuC,EAAQH,EAAOp1H,KAAKsE,KAAMsxH,IAAgBtxH,KAG9C,OAFAixH,EAAMzuC,aAAeA,EACrByuC,EAAMn4F,SAAU,EACTm4F,EAYX,OAjBA,EAAkB4G,EAA0B/G,GAO5C+G,EAAyB16H,UAAUq0H,MAAQ,SAAUh1H,GACjDwD,KAAK84B,SAAU,EACf94B,KAAKsxH,YAAY7wH,KAAKjE,IAE1Bq7H,EAAyB16H,UAAUs0H,UAAY,WACvCzxH,KAAK84B,SACL94B,KAAKsxH,YAAY7wH,KAAKT,KAAKwiF,cAE/BxiF,KAAKsxH,YAAY/5F,YAEdsgG,EAlBkC,CAmB3C,GChCK,SAAS17G,GAAO66G,EAAaC,GAChC,OAAIt0H,UAAUtD,QAAU,EACb,SAAwCwD,GAC3C,OAAO4yB,EAAKshG,EAAKC,EAAaC,GAAOQ,EAAS,SDJjC,KADMj1C,ECK8Cy0C,KDHrEz0C,EAAe,MAEZ,SAAU3/E,GAAU,OAAOA,EAAO4vH,KAAK,IAAImF,EAAuBp1C,MCC1D/sD,CAAiE5yB,GDL7E,IAAwB2/E,GCQpB,SAAgC3/E,GACnC,OAAO4yB,EAAKshG,EAAK,SAAU36G,EAAK5f,EAAO0F,GAAS,OAAO80H,EAAY56G,EAAK5f,EAAO0F,EAAQ,KAAQu1H,EAAS,GAAjGhiG,CAAqG5yB,ICGpH,IAAI,GAA8B,WAC9B,SAASi1H,EAAatwH,GAElB,GADAxH,KAAKwH,MAAQA,EACTxH,KAAKwH,MAAQ,EACb,MAAM,IAAI+vH,EAMlB,OAHAO,EAAa36H,UAAUzB,KAAO,SAAU61H,EAAY1uH,GAChD,OAAOA,EAAOyvH,UAAU,IAAI,GAAef,EAAYvxH,KAAKwH,SAEzDswH,EAVsB,GAY7B,GAAgC,SAAUhH,GAE1C,SAASiH,EAAezG,EAAa9pH,GACjC,IAAIypH,EAAQH,EAAOp1H,KAAKsE,KAAMsxH,IAAgBtxH,KAG9C,OAFAixH,EAAMzpH,MAAQA,EACdypH,EAAMnqH,MAAQ,EACPmqH,EAaX,OAlBA,EAAkB8G,EAAgBjH,GAOlCiH,EAAe56H,UAAUq0H,MAAQ,SAAUh1H,GACvC,IAAIgL,EAAQxH,KAAKwH,MACbV,IAAU9G,KAAK8G,MACfA,GAASU,IACTxH,KAAKsxH,YAAY7wH,KAAKjE,GAClBsK,IAAUU,IACVxH,KAAKsxH,YAAY/5F,WACjBv3B,KAAKkwH,iBAIV6H,EAnBwB,CAoBjC,G,UC1CF,MAAMC,GAAa,EAAQ,KAIrBC,IAHY,EAAQ,KAGX,CAACn8H,EAAco8H,IACrB30H,QAAQwU,IAAIjc,GAAQyH,QAAQwU,IAAIjc,GAAQo8H,GAI3CC,GAAcF,GAAO,OAAQ,aAC7BG,GAAaH,GAAO,KAAM,eAC1BI,GAAWJ,GAAO,WAAY,SAC9BhyD,GAAQgyD,GAAO,QAAS,OACxBj3F,GAAOi3F,GAAO,OAAQ,MAI5Bz5H,EAAK,CAAC,SAAU,YAAYi3B,KAC1B0gG,EAAS74H,GAAKo3H,EAAUnxH,QAASjG,KACjCg1H,UAAWz2H,IACX0H,QAAQ+0H,KAAKz8H,EAAE,MAKjB,MAAMoS,GAAW,IAAI+pH,GAAW78G,SAG1BiV,GAAS,IAAI,UAAY,CAAEmS,cAAe41F,GAAYrtH,MAAM,KAAMigF,gBAAiBqtC,GAAYpoG,SAAUqoG,KACzGvqH,oCAAyCm4D,KAC/CznE,EAAK4xB,GAAOpiB,QAAQF,GAAO,KAAK2nB,KAC9B0gG,EAASl0D,GAAKzjE,EAAKyjE,EAAErxD,QACrB0hH,UAAU,CACV7xH,KAAMsK,IACJ6R,QAAQ1X,KAAK6F,EAAEjK,WAKnB,MAAM8hE,GAAM21D,IAQZ31D,GAAIxmE,IAAI,mBAAoB,CAAC8rB,EAAK0G,KAChCA,EAAIxkB,IAAI,CAAC,eAAgB,aACzB5L,EAAK4xB,GAAOpiB,QAAQF,GAAO,KAAK2nB,KAC9B0gG,EAASl0D,GAAKzjE,EAAKyjE,EAAErxD,OACrBuL,GAAO,CAACq8G,EAAIh8H,IACHg8H,KAAOh8H,EAAMi8H,QAAQj8H,EAAMk8H,MAAMl8H,EAAMm8H,cAC7C,yBDrDA,SAAc7xH,GACjB,OAAO,SAAUjE,GACb,OAAc,IAAViE,EACO,IAGAjE,EAAO4vH,KAAK,IAAI,GAAa3rH,KCgD5C8xH,CAAK,IACLtG,UAAU,CACV7xH,KAAMsK,IACJ6jB,EAAIwQ,KAAKr0B,QAMf,MAAMnP,GAAI,IAAIo8H,GAAWvY,QAAQ,CAChC3jH,KAAM,eACNwZ,KAAM,uBACLF,WAAY,CAAC,QACbI,UAAW,CAACvH,MAGd20D,GAAIxmE,IAAI,WAAY,CAAC8rB,EAAK0G,KACxBhzB,GAAEqZ,IAAI,CAACvK,KAAM,MACbkkB,EAAIxkB,IAAI,eAAgB6D,GAASqP,aACjCsR,EAAI+J,IAAI1qB,GAAS6N,aAEnB8mD,GAAIoW,OAAOh4C,GAAM,IAAMpkB,QAAQ5X,6BAA6Bg8B","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 252);\n","module.exports = require(\"util\");","\"use strict\";\nconst util = require('util');\nconst errors = require('./errors');\n\n/**\n * Max int that can be accurately represented with 64-bit Number (2^53)\n * @type {number}\n * @const\n */\nconst maxInt = 9007199254740992;\n\nconst emptyObject = Object.freeze({});\n\nfunction noop() {}\n\n/**\n * Forward-compatible allocation of buffer, filled with zeros.\n * @type {Function}\n */\nconst allocBuffer = Buffer.alloc || allocBufferFillDeprecated;\n\n/**\n * Forward-compatible unsafe allocation of buffer.\n * @type {Function}\n */\nconst allocBufferUnsafe = Buffer.allocUnsafe || allocBufferDeprecated;\n\n/**\n * Forward-compatible allocation of buffer to contain a string.\n * @type {Function}\n */\nconst allocBufferFromString = (Int8Array.from !== Buffer.from && Buffer.from) || allocBufferFromStringDeprecated;\n\n/**\n * Forward-compatible allocation of buffer from an array of bytes\n * @type {Function}\n */\nconst allocBufferFromArray = (Int8Array.from !== Buffer.from && Buffer.from) || allocBufferFromArrayDeprecated;\n\nfunction allocBufferDeprecated(size) {\n  // eslint-disable-next-line\n  return new Buffer(size);\n}\n\nfunction allocBufferFillDeprecated(size) {\n  const b = allocBufferDeprecated(size);\n  b.fill(0);\n  return b;\n}\n\nfunction allocBufferFromStringDeprecated(text, encoding) {\n  if (typeof text !== 'string') {\n    throw new TypeError('Expected string, obtained ' + util.inspect(text));\n  }\n  // eslint-disable-next-line\n  return new Buffer(text, encoding);\n}\n\nfunction allocBufferFromArrayDeprecated(arr) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('Expected Array, obtained ' + util.inspect(arr));\n  }\n  // eslint-disable-next-line\n  return new Buffer(arr);\n}\n\n/**\n * Creates a copy of a buffer\n */\nfunction copyBuffer(buf) {\n  const targetBuffer = allocBufferUnsafe(buf.length);\n  buf.copy(targetBuffer);\n  return targetBuffer;\n}\n\n/**\n * Appends the original stack trace to the error after a tick of the event loop\n */\nfunction fixStack(stackTrace, error) {\n  if (stackTrace) {\n    error.stack += '\\n  (event loop)\\n' + stackTrace.substr(stackTrace.indexOf(\"\\n\") + 1);\n  }\n  return error;\n}\n\n/**\n * Uses the logEmitter to emit log events\n * @param {String} type\n * @param {String} info\n * @param [furtherInfo]\n */\nfunction log(type, info, furtherInfo) {\n  if (!this.logEmitter) {\n    if (!this.options || !this.options.logEmitter) {\n      throw new Error('Log emitter not defined');\n    }\n    this.logEmitter = this.options.logEmitter;\n  }\n  this.logEmitter('log', type, this.constructor.name, info, furtherInfo || '');\n}\n\n/**\n * Gets the sum of the length of the items of an array\n */\nfunction totalLength (arr) {\n  if (arr.length === 1) {\n    return arr[0].length;\n  }\n  let total = 0;\n  arr.forEach(function (item) {\n    let length = item.length;\n    length = length ? length : 0;\n    total += length;\n  });\n  return total;\n}\n\n/**\n * Merge the contents of two or more objects together into the first object. Similar to jQuery.extend / Object.assign.\n * The main difference between this method is that declared properties with an <code>undefined</code> value are not set\n * to the target.\n */\nfunction extend(target) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n    const keys = Object.keys(source);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const value = source[key];\n      if (value === undefined) {\n        continue;\n      }\n      target[key] = value;\n    }\n  });\n  return target;\n}\n\n/**\n * Returns a new object with the property names set to lowercase.\n */\nfunction toLowerCaseProperties(obj) {\n  const keys = Object.keys(obj);\n  const result = {};\n  for (let i = 0; i < keys.length; i++) {\n    const k = keys[i];\n    result[k.toLowerCase()] = obj[k];\n  }\n  return result;\n}\n\n/**\n * Extends the target by the most inner props of sources\n * @param {Object} target\n * @returns {Object}\n */\nfunction deepExtend(target) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    for (const prop in source) {\n      if (!source.hasOwnProperty(prop)) {\n        continue;\n      }\n      const targetProp = target[prop];\n      const targetType = (typeof targetProp);\n      //target prop is\n      // a native single type\n      // or not existent\n      // or is not an anonymous object (not class instance)\n      if (!targetProp ||\n        targetType === 'number' ||\n        targetType === 'string' ||\n        util.isArray(targetProp) ||\n        util.isDate(targetProp) ||\n        targetProp.constructor.name !== 'Object') {\n        target[prop] = source[prop];\n      }\n      else {\n        //inner extend\n        target[prop] = deepExtend({}, targetProp, source[prop]);\n      }\n    }\n  });\n  return target;\n}\n\nfunction propCompare(propName) {\n  return function (a, b) {\n    if (a[propName] > b[propName]) {\n      return 1;\n    }\n    if (a[propName] < b[propName]) {\n      return -1;\n    }\n    return 0;\n  };\n}\n\nfunction funcCompare(name, argArray) {\n  return (function (a, b) {\n    if (typeof a[name] === 'undefined') {\n      return 0;\n    }\n    const valA = a[name].apply(a, argArray);\n    const valB = b[name].apply(b, argArray);\n    if (valA > valB) {\n      return 1;\n    }\n    if (valA < valB) {\n      return -1;\n    }\n    return 0;\n  });\n}\n/**\n * Uses the iterator protocol to go through the items of the Array\n * @param arr\n * @returns {{next: function}}\n */\nfunction arrayIterator (arr) {\n  let index = 0;\n  return { next : function () {\n    if (index >= arr.length) {\n      return {done: true};\n    }\n    return {value: arr[index++], done: false };\n  }};\n}\n\n/**\n * Convert the iterator values into an array\n * @param iterator\n * @returns {Array}\n */\nfunction iteratorToArray(iterator) {\n  const values = [];\n  let item = iterator.next();\n  while (!item.done) {\n    values.push(item.value);\n    item = iterator.next();\n  }\n  return values;\n}\n\n/**\n * Searches the specified Array for the provided key using the binary\n * search algorithm.  The Array must be sorted.\n * @param {Array} arr\n * @param key\n * @param {function} compareFunc\n * @returns {number} The position of the key in the Array, if it is found.\n * If it is not found, it returns a negative number which is the bitwise complement of the index of the first element that is larger than key.\n */\nfunction binarySearch(arr, key, compareFunc) {\n  let low = 0;\n  let high = arr.length-1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    const cmp = compareFunc(midVal, key);\n    if (cmp < 0) {\n      low = mid + 1;\n    }\n    else if (cmp > 0) {\n      high = mid - 1;\n    }\n    else\n    {\n      //The key was found in the Array\n      return mid;\n    }\n  }\n  // key not found\n  return ~low;\n}\n\n/**\n * Inserts the value in the position determined by its natural order determined by the compare func\n * @param {Array} arr\n * @param item\n * @param {function} compareFunc\n */\nfunction insertSorted(arr, item, compareFunc) {\n  if (arr.length === 0) {\n    return arr.push(item);\n  }\n  let position = binarySearch(arr, item, compareFunc);\n  if (position < 0) {\n    position = ~position;\n  }\n  arr.splice(position, 0, item);\n}\n\n/**\n * Validates the provided parameter is of type function.\n * @param {Function} fn The instance to validate.\n * @param {String} [name] Name of the function to use in the error message. Defaults to 'callback'.\n * @returns {Function}\n */\nfunction validateFn(fn, name) {\n  if (typeof fn !== 'function') {\n    throw new errors.ArgumentError(util.format('%s is not a function', name || 'callback'));\n  }\n  return fn;\n}\n\n/**\n * Adapts the parameters based on the prepared metadata.\n * If the params are passed as an associative array (Object),\n * it adapts the object into an array with the same order as columns\n * @param {Array|Object} params\n * @param {Array} columns\n * @returns {Array} Returns an array of parameters.\n * @throws {Error} In case a parameter with a specific name is not defined\n */\nfunction adaptNamedParamsPrepared(params, columns) {\n  if (!params || util.isArray(params) || !columns || columns.length === 0) {\n    // params is an array or there aren't parameters\n    return params;\n  }\n  const paramsArray = new Array(columns.length);\n  params = toLowerCaseProperties(params);\n  const keys = {};\n  for (let i = 0; i < columns.length; i++) {\n    const name = columns[i].name;\n    if (!params.hasOwnProperty(name)) {\n      throw new errors.ArgumentError(util.format('Parameter \"%s\" not defined', name));\n    }\n    paramsArray[i] = params[name];\n    keys[name] = i;\n  }\n  return paramsArray;\n}\n\n/**\n * Adapts the associative-array of parameters and hints for simple statements\n * into Arrays based on the (arbitrary) position of the keys.\n * @param {Array|Object} params\n * @param {ExecutionOptions} execOptions\n * @returns {{ params: Array<{name, value}>, namedParameters: boolean, keyIndexes: object }} Returns an array of\n * parameters and the keys as an associative array.\n */\nfunction adaptNamedParamsWithHints(params, execOptions) {\n  if (!params || util.isArray(params)) {\n    //The parameters is an Array or there isn't parameter\n    return { params: params, namedParameters: false, keyIndexes: null };\n  }\n\n  const keys = Object.keys(params);\n  const paramsArray = new Array(keys.length);\n  const hints = new Array(keys.length);\n  const userHints = execOptions.getHints() || emptyObject;\n  const keyIndexes = {};\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    // As lower cased identifiers\n    paramsArray[i] = { name: key.toLowerCase(), value: params[key]};\n    hints[i] = userHints[key];\n    keyIndexes[key] = i;\n  }\n\n  execOptions.setHints(hints);\n\n  return { params: paramsArray, namedParameters: true, keyIndexes };\n}\n\n/**\n * Returns a string with a value repeated n times\n * @param {String} val\n * @param {Number} times\n * @returns {String}\n */\nfunction stringRepeat(val, times) {\n  if (!times || times < 0) {\n    return null;\n  }\n  if (times === 1) {\n    return val;\n  }\n  return new Array(times + 1).join(val);\n}\n\n/**\n * Returns an array containing the values of the Object, similar to Object.values().\n * If obj is null or undefined, it will return an empty array.\n * @param {Object} obj\n * @returns {Array}\n */\nfunction objectValues(obj) {\n  if (!obj) {\n    return exports.emptyArray;\n  }\n  const keys = Object.keys(obj);\n  const values = new Array(keys.length);\n  for (let i = 0; i < keys.length; i++) {\n    values[i] = obj[keys[i]];\n  }\n  return values;\n}\n\n/**\n * Wraps the callback-based method. When no originalCallback is not defined, it returns a Promise.\n * @param {ClientOptions} options\n * @param {Function} originalCallback\n * @param {Function} handler\n * @returns {Promise|undefined}\n */\nfunction promiseWrapper(options, originalCallback, handler) {\n  if (typeof originalCallback === 'function') {\n    // Callback-based invocation\n    handler.call(this, originalCallback);\n    return undefined;\n  }\n  const factory = options.promiseFactory || defaultPromiseFactory;\n  const self = this;\n  return factory(function handlerWrapper(callback) {\n    handler.call(self, callback);\n  });\n}\n\n/**\n * @param {Function} handler\n * @returns {Promise}\n */\nfunction defaultPromiseFactory(handler) {\n  return new Promise(function executor(resolve, reject) {\n    handler(function handlerCallback(err, result) {\n      if (err) {\n        return reject(err);\n      }\n      resolve(result);\n    });\n  });\n}\n\n/**\n * Shuffles an Array in-place.\n * @param {Array} arr\n * @private\n */\nfunction shuffleArray(arr) {\n  // Fisher–Yates algorithm\n  for (let i = arr.length - 1; i > 0; i--) {\n    // Math.random() has an extremely short permutation cycle length but we don't care about collisions\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\n\n// Classes\n\n/**\n * Represents a unique set of values.\n * @constructor\n */\nfunction HashSet() {\n  this.length = 0;\n  this.items = {};\n}\n\n/**\n * Adds a new item to the set.\n * @param {Object} key\n * @returns {boolean} Returns true if it was added to the set; false if the key is already present.\n */\nHashSet.prototype.add = function (key) {\n  if (this.items[key]) {\n    return false;\n  }\n  this.items[key] = true;\n  this.length++;\n  return true;\n};\n\n/**\n * @returns {boolean} Returns true if the key is present in the set.\n */\nHashSet.prototype.contains = function (key) {\n  return this.items[key] === true;\n};\n\n/**\n * Returns an array containing the set items.\n * @returns {Array}\n */\nHashSet.prototype.toArray = function () {\n  return Object.keys(this.items);\n};\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction each(arr, fn, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter is not an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback();\n  }\n  let completed = 0;\n  for (let i = 0; i < length; i++) {\n    fn(arr[i], next);\n  }\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      cb(err);\n      return;\n    }\n    if (++completed !== length) {\n      return;\n    }\n    callback();\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction eachSeries(arr, fn, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter is not an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback();\n  }\n  let sync;\n  let index = 1;\n  fn(arr[0], next);\n  if (sync === undefined) {\n    sync = false;\n  }\n\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (index >= length) {\n      return callback();\n    }\n    if (sync === undefined) {\n      sync = true;\n    }\n    if (sync) {\n      return process.nextTick(function () {\n        fn(arr[index++], next);\n      });\n    }\n    fn(arr[index++], next);\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction forEachOf(arr, fn, callback) {\n  return mapEach(arr, fn, true, callback);\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction map(arr, fn, callback) {\n  return mapEach(arr, fn, false, callback);\n}\n\nfunction mapEach(arr, fn, useIndex, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback(null, []);\n  }\n  const result = new Array(length);\n  let completed = 0;\n  const invoke = useIndex ? invokeWithIndex : invokeWithoutIndex;\n  for (let i = 0; i < length; i++) {\n    invoke(i);\n  }\n\n  function invokeWithoutIndex(i) {\n    fn(arr[i], function mapItemCallback(err, transformed) {\n      result[i] = transformed;\n      next(err);\n    });\n  }\n\n  function invokeWithIndex(i) {\n    fn(arr[i], i, function mapItemCallback(err, transformed) {\n      result[i] = transformed;\n      next(err);\n    });\n  }\n\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      cb(err);\n      return;\n    }\n    if (++completed !== length) {\n      return;\n    }\n    callback(null, result);\n  }\n}\n\n/**\n * @param {Array} arr\n * @param {Function} fn\n * @param {Function} [callback]\n */\nfunction mapSeries(arr, fn, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  if (length === 0) {\n    return callback(null, []);\n  }\n  const result = new Array(length);\n  let index = 0;\n  let sync;\n  invoke(0);\n  if (sync === undefined) {\n    sync = false;\n  }\n\n  function invoke(i) {\n    fn(arr[i], function mapItemCallback(err, transformed) {\n      result[i] = transformed;\n      next(err);\n    });\n  }\n\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (++index === length) {\n      return callback(null, result);\n    }\n    if (sync === undefined) {\n      sync = true;\n    }\n    const i = index;\n    if (sync) {\n      return process.nextTick(function () {\n        invoke(i);\n      });\n    }\n    invoke(index);\n  }\n}\n\n/**\n * @param {Array.<Function>} arr\n * @param {Function} [callback]\n */\nfunction parallel(arr, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  const length = arr.length;\n  let completed = 0;\n  for (let i = 0; i < length; i++) {\n    arr[i](next);\n  }\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      return cb(err);\n    }\n    if (++completed !== length) {\n      return;\n    }\n    callback();\n  }\n}\n\n/**\n * Similar to async.series(), but instead accumulating the result in an Array, it callbacks with the result of the last\n * function in the array.\n * @param {Array.<Function>} arr\n * @param {Function} [callback]\n */\nfunction series(arr, callback) {\n  if (!Array.isArray(arr)) {\n    throw new TypeError('First parameter must be an Array');\n  }\n  callback = callback || noop;\n  let index = 0;\n  let sync;\n  next();\n  function next(err, result) {\n    if (err) {\n      return callback(err);\n    }\n    if (index === arr.length) {\n      return callback(null, result);\n    }\n    if (sync) {\n      return process.nextTick(function () {\n        sync = true;\n        arr[index++](next);\n        sync = false;\n      });\n    }\n    sync = true;\n    arr[index++](next);\n    sync = false;\n  }\n}\n\n/**\n * @param {Number} count\n * @param {Function} iteratorFunc\n * @param {Function} [callback]\n */\nfunction times(count, iteratorFunc, callback) {\n  callback = callback || noop;\n  count = +count;\n  if (isNaN(count) || count === 0) {\n    return callback();\n  }\n  let completed = 0;\n  for (let i = 0; i < count; i++) {\n    iteratorFunc(i, next);\n  }\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      return cb(err);\n    }\n    if (++completed !== count) {\n      return;\n    }\n    callback();\n  }\n}\n\n/**\n * @param {Number} count\n * @param {Number} limit\n * @param {Function} iteratorFunc\n * @param {Function} [callback]\n */\nfunction timesLimit(count, limit, iteratorFunc, callback) {\n  let sync = undefined;\n  callback = callback || noop;\n  limit = Math.min(limit, count);\n  let index = limit - 1;\n  let i;\n  let completed = 0;\n  for (i = 0; i < limit; i++) {\n    iteratorFunc(i, next);\n  }\n  i = -1;\n  function next(err) {\n    if (err) {\n      const cb = callback;\n      callback = noop;\n      cb(err);\n      return;\n    }\n    if (++completed === count) {\n      return callback();\n    }\n    index++;\n    if (index >= count) {\n      return;\n    }\n    if (sync === undefined) {\n      sync = (i >= 0);\n    }\n    if (sync) {\n      const captureIndex = index;\n      return process.nextTick(function () {\n        iteratorFunc(captureIndex, next);\n      });\n    }\n    iteratorFunc(index, next);\n  }\n}\n\n/**\n * @param {Number} count\n * @param {Function} iteratorFunction\n * @param {Function} callback\n */\nfunction timesSeries(count, iteratorFunction, callback) {\n  count = +count;\n  if (isNaN(count) || count < 1) {\n    return callback();\n  }\n  let index = 1;\n  let sync;\n  iteratorFunction(0, next);\n  if (sync === undefined) {\n    sync = false;\n  }\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (index === count) {\n      return callback();\n    }\n    if (sync === undefined) {\n      sync = true;\n    }\n    const i = index++;\n    if (sync) {\n      //Prevent \"Maximum call stack size exceeded\"\n      return process.nextTick(function () {\n        iteratorFunction(i, next);\n      });\n    }\n    //do a sync call as the callback is going to call on a future tick\n    iteratorFunction(i, next);\n  }\n}\n\n/**\n * @param {Function} condition\n * @param {Function} fn\n * @param {Function} callback\n */\nfunction whilst(condition, fn, callback) {\n  let sync = 0;\n  next();\n  function next(err) {\n    if (err) {\n      return callback(err);\n    }\n    if (!condition()) {\n      return callback();\n    }\n    if (sync === 0) {\n      sync = 1;\n      fn(function (err) {\n        if (sync === 1) {\n          //sync function\n          sync = 4;\n        }\n        next(err);\n      });\n      if (sync === 1) {\n        //async function\n        sync = 2;\n      }\n      return;\n    }\n    if (sync === 4) {\n      //Prevent \"Maximum call stack size exceeded\"\n      return process.nextTick(function () {\n        fn(next);\n      });\n    }\n    //do a sync call as the callback is going to call on a future tick\n    fn(next);\n  }\n}\n\nexports.adaptNamedParamsPrepared = adaptNamedParamsPrepared;\nexports.adaptNamedParamsWithHints = adaptNamedParamsWithHints;\nexports.allocBuffer = allocBuffer;\nexports.allocBufferUnsafe = allocBufferUnsafe;\nexports.allocBufferFromArray = allocBufferFromArray;\nexports.allocBufferFromString = allocBufferFromString;\nexports.arrayIterator = arrayIterator;\nexports.binarySearch = binarySearch;\nexports.copyBuffer = copyBuffer;\nexports.deepExtend = deepExtend;\nexports.each = each;\nexports.eachSeries = eachSeries;\n/** @const */\nexports.emptyArray = Object.freeze([]);\n/** @const */\nexports.emptyObject = emptyObject;\nexports.extend = extend;\nexports.fixStack = fixStack;\nexports.forEachOf = forEachOf;\nexports.funcCompare = funcCompare;\nexports.insertSorted = insertSorted;\nexports.iteratorToArray = iteratorToArray;\nexports.log = log;\nexports.map = map;\nexports.mapSeries = mapSeries;\nexports.maxInt = maxInt;\nexports.noop = noop;\nexports.objectValues = objectValues;\nexports.parallel = parallel;\nexports.promiseWrapper = promiseWrapper;\nexports.propCompare = propCompare;\nexports.series = series;\nexports.stringRepeat = stringRepeat;\nexports.shuffleArray = shuffleArray;\nexports.times = times;\nexports.timesLimit = timesLimit;\nexports.timesSeries = timesSeries;\nexports.totalLength = totalLength;\nexports.validateFn = validateFn;\nexports.whilst = whilst;\nexports.HashSet = HashSet;","'use strict';\nconst util = require('util');\n\nconst errors = require('../errors');\nconst TimeUuid = require('./time-uuid');\nconst Uuid = require('./uuid');\nconst protocolVersion = require('./protocol-version');\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Long constructor, wrapper of the internal library used: {@link https://github.com/dcodeIO/long.js Long.js}.\n * @constructor\n */\nconst Long = require('long');\n\n\n/**\n * Consistency levels\n * @type {Object}\n * @property {Number} any Writing: A write must be written to at least one node. If all replica nodes for the given row key are down, the write can still succeed after a hinted handoff has been written. If all replica nodes are down at write time, an ANY write is not readable until the replica nodes for that row have recovered.\n * @property {Number} one Returns a response from the closest replica, as determined by the snitch.\n * @property {Number} two Returns the most recent data from two of the closest replicas.\n * @property {Number} three Returns the most recent data from three of the closest replicas.\n * @property {Number} quorum Reading: Returns the record with the most recent timestamp after a quorum of replicas has responded regardless of data center. Writing: A write must be written to the commit log and memory table on a quorum of replica nodes.\n * @property {Number} all Reading: Returns the record with the most recent timestamp after all replicas have responded. The read operation will fail if a replica does not respond. Writing: A write must be written to the commit log and memory table on all replica nodes in the cluster for that row.\n * @property {Number} localQuorum Reading: Returns the record with the most recent timestamp once a quorum of replicas in the current data center as the coordinator node has reported. Writing: A write must be written to the commit log and memory table on a quorum of replica nodes in the same data center as the coordinator node. Avoids latency of inter-data center communication.\n * @property {Number} eachQuorum Reading: Returns the record once a quorum of replicas in each data center of the cluster has responded. Writing: Strong consistency. A write must be written to the commit log and memtable on a quorum of replica nodes in all data centers.\n * @property {Number} serial Achieves linearizable consistency for lightweight transactions by preventing unconditional updates.\n * @property {Number} localSerial Same as serial but confined to the data center. A write must be written conditionally to the commit log and memtable on a quorum of replica nodes in the same data center.\n * @property {Number} localOne Similar to One but only within the DC the coordinator is in.\n */\nconst consistencies = {\n  any:          0x00,\n  one:          0x01,\n  two:          0x02,\n  three:        0x03,\n  quorum:       0x04,\n  all:          0x05,\n  localQuorum:  0x06,\n  eachQuorum:   0x07,\n  serial:       0x08,\n  localSerial:  0x09,\n  localOne:     0x0a\n};\n\n/**\n * Mapping of consistency level codes to their string representation.\n * @type {Object}\n */\nconst consistencyToString = {};\nconsistencyToString[consistencies.any] = 'ANY';\nconsistencyToString[consistencies.one] = 'ONE';\nconsistencyToString[consistencies.two] = 'TWO';\nconsistencyToString[consistencies.three] = 'THREE';\nconsistencyToString[consistencies.quorum] = 'QUORUM';\nconsistencyToString[consistencies.all] = 'ALL';\nconsistencyToString[consistencies.localQuorum] = 'LOCAL_QUORUM';\nconsistencyToString[consistencies.eachQuorum] = 'EACH_QUORUM';\nconsistencyToString[consistencies.serial] = 'SERIAL';\nconsistencyToString[consistencies.localSerial] = 'LOCAL_SERIAL';\nconsistencyToString[consistencies.localOne] = 'LOCAL_ONE';\n\n/**\n * CQL data types\n * @type {Object}\n * @property {Number} custom A custom type.\n * @property {Number} ascii ASCII character string.\n * @property {Number} bigint 64-bit signed long.\n * @property {Number} blob Arbitrary bytes (no validation).\n * @property {Number} boolean true or false.\n * @property {Number} counter Counter column (64-bit signed value).\n * @property {Number} decimal Variable-precision decimal.\n * @property {Number} double 64-bit IEEE-754 floating point.\n * @property {Number} float 32-bit IEEE-754 floating point.\n * @property {Number} int 32-bit signed integer.\n * @property {Number} text UTF8 encoded string.\n * @property {Number} timestamp A timestamp.\n * @property {Number} uuid Type 1 or type 4 UUID.\n * @property {Number} varchar UTF8 encoded string.\n * @property {Number} varint Arbitrary-precision integer.\n * @property {Number} timeuuid  Type 1 UUID.\n * @property {Number} inet An IP address. It can be either 4 bytes long (IPv4) or 16 bytes long (IPv6).\n * @property {Number} date A date without a time-zone in the ISO-8601 calendar system.\n * @property {Number} time A value representing the time portion of the day.\n * @property {Number} smallint 16-bit two's complement integer.\n * @property {Number} tinyint 8-bit two's complement integer.\n * @property {Number} list A collection of elements.\n * @property {Number} map Key/value pairs.\n * @property {Number} set A collection that contains no duplicate elements.\n * @property {Number} udt User-defined type.\n * @property {Number} tuple A sequence of values.\n */\nconst dataTypes = {\n  custom:     0x0000,\n  ascii:      0x0001,\n  bigint:     0x0002,\n  blob:       0x0003,\n  boolean:    0x0004,\n  counter:    0x0005,\n  decimal:    0x0006,\n  double:     0x0007,\n  float:      0x0008,\n  int:        0x0009,\n  text:       0x000a,\n  timestamp:  0x000b,\n  uuid:       0x000c,\n  varchar:    0x000d,\n  varint:     0x000e,\n  timeuuid:   0x000f,\n  inet:       0x0010,\n  date:       0x0011,\n  time:       0x0012,\n  smallint:   0x0013,\n  tinyint:    0x0014,\n  list:       0x0020,\n  map:        0x0021,\n  set:        0x0022,\n  udt:        0x0030,\n  tuple:      0x0031,\n  /**\n   * Returns the typeInfo of a given type name\n   * @param name\n   * @returns {{code: number, info: *|Object}}\n   */\n  getByName:  function(name) {\n    name = name.toLowerCase();\n    if (name.indexOf('<') > 0) {\n      const listMatches = /^(list|set)<(.+)>$/.exec(name);\n      if (listMatches) {\n        return { code: this[listMatches[1]], info: this.getByName(listMatches[2])};\n      }\n      const mapMatches = /^(map)< *(.+) *, *(.+)>$/.exec(name);\n      if (mapMatches) {\n        return { code: this[mapMatches[1]], info: [this.getByName(mapMatches[2]), this.getByName(mapMatches[3])]};\n      }\n      const udtMatches = /^(udt)<(.+)>$/.exec(name);\n      if (udtMatches) {\n        //udt name as raw string\n        return { code: this[udtMatches[1]], info: udtMatches[2]};\n      }\n      const tupleMatches = /^(tuple)<(.+)>$/.exec(name);\n      if (tupleMatches) {\n        //tuple info as an array of types\n        return { code: this[tupleMatches[1]], info: tupleMatches[2].split(',').map(function (x) {\n          return this.getByName(x.trim());\n        }, this)};\n      }\n    }\n    const typeInfo = { code: this[name], info: null};\n    if (typeof typeInfo.code !== 'number') {\n      throw new TypeError('Data type with name ' + name + ' not valid');\n    }\n    return typeInfo;\n  }\n};\n\n/**\n * Map of Data types by code\n * @internal\n * @private\n */\nconst _dataTypesByCode = (function () {\n  const result = {};\n  for (const key in dataTypes) {\n    if (!dataTypes.hasOwnProperty(key)) {\n      continue;\n    }\n    const val = dataTypes[key];\n    if (typeof val !== 'number') {\n      continue;\n    }\n    result[val] = key;\n  }\n  return result;\n})();\n\n/**\n * Represents the distance of Cassandra node as assigned by a LoadBalancingPolicy relatively to the driver instance.\n * @type {Object}\n * @property {Number} local A local node.\n * @property {Number} remote A remote node.\n * @property {Number} ignored A node that is meant to be ignored.\n */\nconst distance = {\n  local:    0,\n  remote:   1,\n  ignored:  2\n};\n\n/**\n * An integer byte that distinguish the actual message from and to Cassandra\n * @internal\n * @ignore\n */\nconst opcodes = {\n  error:          0x00,\n  startup:        0x01,\n  ready:          0x02,\n  authenticate:   0x03,\n  credentials:    0x04,\n  options:        0x05,\n  supported:      0x06,\n  query:          0x07,\n  result:         0x08,\n  prepare:        0x09,\n  execute:        0x0a,\n  register:       0x0b,\n  event:          0x0c,\n  batch:          0x0d,\n  authChallenge:  0x0e,\n  authResponse:   0x0f,\n  authSuccess:    0x10,\n\n  /**\n   * Determines if the code is a valid opcode\n   */\n  isInRange: function (code) {\n    return code > this.error && code > this.event;\n  }\n};\n\n/**\n * Event types from Cassandra\n * @type {{topologyChange: string, statusChange: string, schemaChange: string}}\n * @internal\n * @ignore\n */\nconst protocolEvents = {\n  topologyChange: 'TOPOLOGY_CHANGE',\n  statusChange: 'STATUS_CHANGE',\n  schemaChange: 'SCHEMA_CHANGE'\n};\n\n/**\n * Server error codes returned by Cassandra\n * @type {Object}\n * @property {Number} serverError Something unexpected happened.\n * @property {Number} protocolError Some client message triggered a protocol violation.\n * @property {Number} badCredentials Authentication was required and failed.\n * @property {Number} unavailableException Raised when coordinator knows there is not enough replicas alive to perform a query with the requested consistency level.\n * @property {Number} overloaded The request cannot be processed because the coordinator is overloaded.\n * @property {Number} isBootstrapping The request was a read request but the coordinator node is bootstrapping.\n * @property {Number} truncateError Error encountered during a truncate request.\n * @property {Number} writeTimeout Timeout encountered on write query on coordinator waiting for response(s) from replicas.\n * @property {Number} readTimeout Timeout encountered on read query on coordinator waitign for response(s) from replicas.\n * @property {Number} readFailure A non-timeout error encountered during a read request.\n * @property {Number} functionFailure A (user defined) function encountered during execution.\n * @property {Number} writeFailure A non-timeout error encountered during a write request.\n * @property {Number} syntaxError The submitted query has a syntax error.\n * @property {Number} unauthorized The logged user doesn't have the right to perform the query.\n * @property {Number} invalid The query is syntactically correct but invalid.\n * @property {Number} configError The query is invalid because of some configuration issue.\n * @property {Number} alreadyExists The query attempted to create a schema element (i.e. keyspace, table) that already exists.\n * @property {Number} unprepared Can be thrown while a prepared statement tries to be executed if the provided statement is not known by the coordinator.\n */\nconst responseErrorCodes = {\n  serverError:            0x0000,\n  protocolError:          0x000A,\n  badCredentials:         0x0100,\n  unavailableException:   0x1000,\n  overloaded:             0x1001,\n  isBootstrapping:        0x1002,\n  truncateError:          0x1003,\n  writeTimeout:           0x1100,\n  readTimeout:            0x1200,\n  readFailure:            0x1300,\n  functionFailure:        0x1400,\n  writeFailure:           0x1500,\n  syntaxError:            0x2000,\n  unauthorized:           0x2100,\n  invalid:                0x2200,\n  configError:            0x2300,\n  alreadyExists:          0x2400,\n  unprepared:             0x2500\n};\n\n/**\n * Type of result included in a response\n * @internal\n * @ignore\n */\nconst resultKind = {\n  voidResult:      0x0001,\n  rows:            0x0002,\n  setKeyspace:     0x0003,\n  prepared:        0x0004,\n  schemaChange:    0x0005\n};\n\n/**\n * Message frame flags\n * @internal\n * @ignore\n */\nconst frameFlags = {\n  compression:    0x01,\n  tracing:        0x02,\n  customPayload:  0x04,\n  warning:        0x08\n};\n\n/**\n * Unset representation.\n * <p>\n *   Use this field if you want to set a parameter to <code>unset</code>. Valid for Cassandra 2.2 and above.\n * </p>\n */\nconst unset = Object.freeze({'unset': true});\n\n/**\n * A long representing the value 1000\n * @const\n * @private\n */\nconst _longOneThousand = Long.fromInt(1000);\n\n/**\n * Counter used to generate up to 1000 different timestamp values with the same Date\n * @private\n */\nlet _timestampTicks = 0;\n\n/**\n * <p><strong>Backward compatibility only, use [TimeUuid]{@link module:types~TimeUuid} instead</strong>.</p>\n * Generates and returns a RFC4122 v1 (timestamp based) UUID in a string representation.\n * @param {{msecs, node, clockseq, nsecs}} [options]\n * @param {Buffer} [buffer]\n * @param {Number} [offset]\n * @deprecated Use [TimeUuid]{@link module:types~TimeUuid} instead\n */\nfunction timeuuid(options, buffer, offset) {\n  let date;\n  let ticks;\n  let nodeId;\n  let clockId;\n  if (options) {\n    if (typeof options.msecs === 'number') {\n      date = new Date(options.msecs);\n    }\n    if (options.msecs instanceof Date) {\n      date = options.msecs;\n    }\n    if (util.isArray(options.node)) {\n      nodeId = utils.allocBufferFromArray(options.node);\n    }\n    if (typeof options.clockseq === 'number') {\n      clockId = utils.allocBufferUnsafe(2);\n      clockId.writeUInt16BE(options.clockseq, 0);\n    }\n    if (typeof options.nsecs === 'number') {\n      ticks = options.nsecs;\n    }\n  }\n  const uuid = new TimeUuid(date, ticks, nodeId, clockId);\n  if (buffer instanceof Buffer) {\n    //copy the values into the buffer\n    uuid.getBuffer().copy(buffer, offset || 0);\n    return buffer;\n  }\n  return uuid.toString();\n}\n\n/**\n * <p><strong>Backward compatibility only, use [Uuid]{@link module:types~Uuid} class instead</strong>.</p>\n * Generate and return a RFC4122 v4 UUID in a string representation.\n * @deprecated Use [Uuid]{@link module:types~Uuid} class instead\n */\nfunction uuid(options, buffer, offset) {\n  let uuid;\n  if (options) {\n    if (util.isArray(options.random)) {\n      uuid = new Uuid(utils.allocBufferFromArray(options.random));\n    }\n  }\n  if (!uuid) {\n    uuid = Uuid.random();\n  }\n  if (buffer instanceof Buffer) {\n    //copy the values into the buffer\n    uuid.getBuffer().copy(buffer, offset || 0);\n    return buffer;\n  }\n  return uuid.toString();\n}\n\n/**\n * Gets the data type name for a given type definition\n * @internal\n * @ignore\n * @throws {ArgumentError}\n */\nfunction getDataTypeNameByCode(item) {\n  if (!item || typeof item.code !== 'number') {\n    throw new errors.ArgumentError('Invalid signature type definition');\n  }\n  const typeName = _dataTypesByCode[item.code];\n  if (!typeName) {\n    throw new errors.ArgumentError(util.format('Type with code %d not found', item.code));\n  }\n  if (!item.info) {\n    return typeName;\n  }\n  if (util.isArray(item.info)) {\n    return (typeName +\n      '<' +\n      item.info.map(function (t) {\n        return getDataTypeNameByCode(t);\n      }).join(', ') +\n      '>');\n  }\n  if (typeof item.info.code === 'number') {\n    return typeName + '<' + getDataTypeNameByCode(item.info) + '>';\n  }\n  return typeName;\n}\n\n//classes\n\n/**\n * Represents a frame header that could be used to read from a Buffer or to write to a Buffer\n * @ignore\n * @param {Number} version Protocol version\n * @param {Number} flags\n * @param {Number} streamId\n * @param {Number} opcode\n * @param {Number} bodyLength\n * @constructor\n */\nfunction FrameHeader(version, flags, streamId, opcode, bodyLength) {\n  this.version = version;\n  this.flags = flags;\n  this.streamId = streamId;\n  this.opcode = opcode;\n  this.bodyLength = bodyLength;\n}\n\n/**\n * The length of the header of the frame based on the protocol version\n * @returns {Number}\n */\nFrameHeader.size = function (version) {\n  if (protocolVersion.uses2BytesStreamIds(version)) {\n    return 9;\n  }\n  return 8;\n};\n\n/**\n * Gets the protocol version based on the first byte of the header\n * @param {Buffer} buffer\n * @returns {Number}\n */\nFrameHeader.getProtocolVersion = function (buffer) {\n  return buffer[0] & 0x7F;\n};\n\n/**\n * @param {Buffer} buf\n * @param {Number} [offset]\n * @returns {FrameHeader}\n */\nFrameHeader.fromBuffer = function (buf, offset) {\n  let streamId = 0;\n  if (!offset) {\n    offset = 0;\n  }\n  const version = buf[offset++] & 0x7F;\n  const flags = buf.readUInt8(offset++);\n  if (!protocolVersion.uses2BytesStreamIds(version)) {\n    streamId = buf.readInt8(offset++);\n  }\n  else {\n    streamId = buf.readInt16BE(offset);\n    offset += 2;\n  }\n  return new FrameHeader(version, flags, streamId, buf.readUInt8(offset++), buf.readUInt32BE(offset));\n};\n\n/** @returns {Buffer} */\nFrameHeader.prototype.toBuffer = function () {\n  const buf = utils.allocBufferUnsafe(FrameHeader.size(this.version));\n  buf.writeUInt8(this.version, 0);\n  buf.writeUInt8(this.flags, 1);\n  let offset = 3;\n  if (!protocolVersion.uses2BytesStreamIds(this.version)) {\n    buf.writeInt8(this.streamId, 2);\n  }\n  else {\n    buf.writeInt16BE(this.streamId, 2);\n    offset = 4;\n  }\n  buf.writeUInt8(this.opcode, offset++);\n  buf.writeUInt32BE(this.bodyLength, offset);\n  return buf;\n};\n/**\n * Returns a long representation.\n * Used internally for deserialization\n */\nLong.fromBuffer = function (value) {\n  if (!(value instanceof Buffer)) {\n    throw new TypeError('Expected Buffer, obtained ' + util.inspect(value));\n  }\n  return new Long(value.readInt32BE(4), value.readInt32BE(0));\n};\n\n/**\n * Returns a big-endian buffer representation of the Long instance\n * @param {Long} value\n */\nLong.toBuffer = function (value) {\n  if (!(value instanceof Long)) {\n    throw new TypeError('Expected Long, obtained ' + util.inspect(value));\n  }\n  const buffer = utils.allocBufferUnsafe(8);\n  buffer.writeUInt32BE(value.getHighBitsUnsigned(), 0);\n  buffer.writeUInt32BE(value.getLowBitsUnsigned(), 4);\n  return buffer;\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nLong.prototype.inspect = function () {\n  return 'Long: ' + this.toString();\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance\n */\nLong.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * Generates a value representing the timestamp for the query in microseconds based on the date and the microseconds provided\n * @param {Date} [date] The date to generate the value, if not provided it will use the current date.\n * @param {Number} [microseconds] A number from 0 to 999 used to build the microseconds part of the date.\n * @returns {Long}\n */\nfunction generateTimestamp(date, microseconds) {\n  if (!date) {\n    date = new Date();\n  }\n  let longMicro = Long.ZERO;\n  if (typeof microseconds === 'number' && microseconds >= 0 && microseconds < 1000) {\n    longMicro = Long.fromInt(microseconds);\n  }\n  else {\n    if (_timestampTicks > 999) {\n      _timestampTicks = 0;\n    }\n    longMicro = Long.fromInt(_timestampTicks);\n    _timestampTicks++;\n  }\n  return Long\n    .fromNumber(date.getTime())\n    .multiply(_longOneThousand)\n    .add(longMicro);\n}\n\n//error classes\n\n/** @private */\nfunction QueryParserError(e) {\n  QueryParserError.super_.call(this, e.message, this.constructor);\n  this.internalError = e;\n}\nutil.inherits(QueryParserError, errors.DriverError);\n\n/** @private */\nfunction TimeoutError (message) {\n  TimeoutError.super_.call(this, message, this.constructor);\n  this.info = 'Represents an error that happens when the maximum amount of time for an operation passed.';\n}\nutil.inherits(TimeoutError, errors.DriverError);\n\nexports.opcodes = opcodes;\nexports.consistencies = consistencies;\nexports.consistencyToString = consistencyToString;\nexports.dataTypes = dataTypes;\nexports.getDataTypeNameByCode = getDataTypeNameByCode;\nexports.distance = distance;\nexports.frameFlags = frameFlags;\nexports.protocolEvents = protocolEvents;\nexports.protocolVersion = protocolVersion;\nexports.responseErrorCodes = responseErrorCodes;\nexports.resultKind = resultKind;\nexports.timeuuid = timeuuid;\nexports.uuid = uuid;\nexports.BigDecimal = require('./big-decimal');\nexports.Duration = require('./duration');\nexports.FrameHeader = FrameHeader;\nexports.InetAddress = require('./inet-address');\nexports.Integer = require('./integer');\nexports.LocalDate = require('./local-date');\nexports.LocalTime = require('./local-time');\nexports.Long = Long;\nexports.ResultSet = require('./result-set');\nexports.ResultStream = require('./result-stream');\nexports.Row = require('./row');\n//export DriverError for backward-compatibility\nexports.DriverError = errors.DriverError;\nexports.TimeoutError = TimeoutError;\nexports.TimeUuid = TimeUuid;\nexports.Tuple = require('./tuple');\nexports.Uuid = Uuid;\nexports.unset = unset;\nexports.generateTimestamp = generateTimestamp;\n","\"use strict\";\nconst util = require('util');\n\n/**\n * Contains the error classes exposed by the driver.\n * @module errors\n */\n\n/**\n * Base Error\n * @private\n */\nfunction DriverError (message) {\n  Error.call(this, message);\n  Error.captureStackTrace(this, this.constructor);\n  this.name = this.constructor.name;\n  this.info = 'Cassandra Driver Error';\n  // Explicitly set the message property as the Error.call() doesn't set the property on v8\n  this.message = message;\n}\n\nutil.inherits(DriverError, Error);\n\n/**\n * Represents an error when a query cannot be performed because no host is available or could be reached by the driver.\n * @param {Object} innerErrors An object map containing the error per host tried\n * @param {String} [message]\n * @constructor\n */\nfunction NoHostAvailableError(innerErrors, message) {\n  DriverError.call(this, message);\n  this.innerErrors = innerErrors;\n  this.info = 'Represents an error when a query cannot be performed because no host is available or could be reached by the driver.';\n  if (!message) {\n    this.message = 'All host(s) tried for query failed.';\n    if (innerErrors) {\n      const hostList = Object.keys(innerErrors);\n      if (hostList.length > 0) {\n        const host = hostList[0];\n        this.message += util.format(' First host tried, %s: %s. See innerErrors.', host, innerErrors[host]);\n      }\n    }\n  }\n}\n\nutil.inherits(NoHostAvailableError, DriverError);\n\n/**\n * Represents an error message from the server\n * @param {Number} code Cassandra exception code\n * @param {String} message\n * @constructor\n */\nfunction ResponseError(code, message) {\n  DriverError.call(this, message);\n  /**\n   * The error code as defined in [responseErrorCodes]{@link module:types~responseErrorCodes}.\n   * @type {Number}\n   */\n  this.code = code;\n  this.info = 'Represents an error message from the server';\n}\n\nutil.inherits(ResponseError, DriverError);\n\n/**\n * Represents a bug inside the driver or in a Cassandra host.\n * @param {String} message\n * @constructor\n */\nfunction DriverInternalError(message) {\n  DriverError.call(this, message);\n  this.info = 'Represents a bug inside the driver or in a Cassandra host.';\n}\n\nutil.inherits(DriverInternalError, DriverError);\n\n/**\n * Represents an error when trying to authenticate with auth-enabled host\n * @param {String} message\n * @constructor\n */\nfunction AuthenticationError(message) {\n  DriverError.call(this, message);\n  this.info = 'Represents an authentication error from the driver or from a Cassandra node.';\n}\n\nutil.inherits(AuthenticationError, DriverError);\n\n/**\n * Represents an error that is raised when one of the arguments provided to a method is not valid\n * @param {String} message\n * @constructor\n */\nfunction ArgumentError(message) {\n  DriverError.call(this, message);\n  this.info = 'Represents an error that is raised when one of the arguments provided to a method is not valid.';\n}\n\nutil.inherits(ArgumentError, DriverError);\n\n/**\n * Represents a client-side error that is raised when the client didn't hear back from the server within\n * {@link ClientOptions.socketOptions.readTimeout}.\n * @param {String} message The error message.\n * @param {String} [host] Address of the server host that caused the operation to time out.\n * @constructor\n */\nfunction OperationTimedOutError(message, host) {\n  DriverError.call(this, message, this.constructor);\n  this.info = 'Represents a client-side error that is raised when the client did not hear back from the server ' +\n    'within socketOptions.readTimeout';\n\n  /**\n   * When defined, it gets the address of the host that caused the operation to time out.\n   * @type {String|undefined}\n   */\n  this.host = host;\n}\n\nutil.inherits(OperationTimedOutError, DriverError);\n\n/**\n * Represents an error that is raised when a feature is not supported in the driver or in the current Cassandra version.\n * @param message\n * @constructor\n */\nfunction NotSupportedError(message) {\n  DriverError.call(this, message, this.constructor);\n  this.info = 'Represents a feature that is not supported in the driver or in the Cassandra version.';\n}\n\nutil.inherits(NotSupportedError, DriverError);\n\n/**\n * Represents a client-side error indicating that all connections to a certain host have reached\n * the maximum amount of in-flight requests supported.\n * @param {String} address\n * @param {Number} maxRequestsPerConnection\n * @param {Number} connectionLength\n * @constructor\n */\nfunction BusyConnectionError(address, maxRequestsPerConnection, connectionLength) {\n  const message = util.format('All connections to host %s are busy, %d requests are in-flight on %s',\n    address, maxRequestsPerConnection, connectionLength === 1 ? 'a single connection': 'each connection');\n  DriverError.call(this, message, this.constructor);\n  this.info = 'Represents a client-side error indicating that all connections to a certain host have reached ' +\n    'the maximum amount of in-flight requests supported (pooling.maxRequestsPerConnection)';\n}\n\nutil.inherits(BusyConnectionError, DriverError);\n\nexports.ArgumentError = ArgumentError;\nexports.AuthenticationError = AuthenticationError;\nexports.BusyConnectionError = BusyConnectionError;\nexports.DriverError = DriverError;\nexports.OperationTimedOutError = OperationTimedOutError;\nexports.DriverInternalError = DriverInternalError;\nexports.NoHostAvailableError = NoHostAvailableError;\nexports.NotSupportedError = NotSupportedError;\nexports.ResponseError = ResponseError;","module.exports = require(\"events\");","/**\n * Gauge metric\n */\n'use strict';\n\nconst util = require('util');\nconst { globalRegistry } = require('./registry');\nconst type = 'gauge';\n\nconst {\n\tisDate,\n\tsetValue,\n\tgetPropertiesFromObj,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tprintDeprecationObjectConstructor,\n\tremoveLabels\n} = require('./util');\nconst {\n\tvalidateMetricName,\n\tvalidateLabel,\n\tvalidateLabelName\n} = require('./validation');\n\nclass Gauge {\n\t/**\n\t * Gauge\n\t * @param {string} name - Name of the metric\n\t * @param {string} help - Help for the metric\n\t * @param {Array.<string>} labels - Array with strings, all label keywords supported\n\t */\n\tconstructor(name, help, labels) {\n\t\tlet config;\n\t\tif (isObject(name)) {\n\t\t\tconfig = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tlabelNames: []\n\t\t\t\t},\n\t\t\t\tname\n\t\t\t);\n\n\t\t\tif (!config.registers) {\n\t\t\t\tconfig.registers = [globalRegistry];\n\t\t\t}\n\t\t} else {\n\t\t\tprintDeprecationObjectConstructor();\n\t\t\tconfig = {\n\t\t\t\tname,\n\t\t\t\thelp,\n\t\t\t\tlabelNames: labels,\n\t\t\t\tregisters: [globalRegistry]\n\t\t\t};\n\t\t}\n\n\t\tif (!config.help) {\n\t\t\tthrow new Error('Missing mandatory help parameter');\n\t\t}\n\t\tif (!config.name) {\n\t\t\tthrow new Error('Missing mandatory name parameter');\n\t\t}\n\t\tif (!validateMetricName(config.name)) {\n\t\t\tthrow new Error('Invalid metric name');\n\t\t}\n\t\tif (!validateLabelName(config.labelNames)) {\n\t\t\tthrow new Error('Invalid label name');\n\t\t}\n\n\t\tthis.name = config.name;\n\t\tthis.labelNames = config.labelNames || [];\n\t\tthis.reset();\n\t\tthis.help = config.help;\n\t\tthis.aggregator = config.aggregator || 'sum';\n\n\t\tconfig.registers.forEach(registryInstance =>\n\t\t\tregistryInstance.registerMetric(this)\n\t\t);\n\t}\n\n\t/**\n\t * Set a gauge to a value\n\t * @param {object} labels - Object with labels and their values\n\t * @param {Number} value - Value to set the gauge to, must be positive\n\t * @param {(Number|Date)} timestamp - Timestamp to set the gauge to\n\t * @returns {void}\n\t */\n\tset(labels, value, timestamp) {\n\t\tif (!isObject(labels)) {\n\t\t\treturn set.call(this, null)(labels, value);\n\t\t}\n\t\treturn set.call(this, labels)(value, timestamp);\n\t}\n\n\t/**\n\t * Reset gauge\n\t * @returns {void}\n\t */\n\treset() {\n\t\treturn reset.call(this);\n\t}\n\n\t/**\n\t * Increment a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to increment - if omitted, increment with 1\n\t * @param {(Number|Date)} timestamp - Timestamp to set the gauge to\n\t * @returns {void}\n\t */\n\tinc(labels, value, timestamp) {\n\t\tinc.call(this, labels)(value, timestamp);\n\t}\n\n\t/**\n\t * Decrement a gauge value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to decrement - if omitted, decrement with 1\n\t * @param {(Number|Date)} timestamp - Timestamp to set the gauge to\n\t * @returns {void}\n\t */\n\tdec(labels, value, timestamp) {\n\t\tdec.call(this, labels)(value, timestamp);\n\t}\n\n\t/**\n\t * Set the gauge to current unix epoch\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {void}\n\t */\n\tsetToCurrentTime(labels) {\n\t\treturn setToCurrentTime.call(this, labels)();\n\t}\n\n\t/**\n\t * Start a timer\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Invoke this function to set the duration in seconds since you started the timer.\n\t * @example\n\t * var done = gauge.startTimer();\n\t * makeXHRRequest(function(err, response) {\n\t *\tdone(); //Duration of the request will be saved\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tget() {\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype,\n\t\t\tvalues: getPropertiesFromObj(this.hashMap),\n\t\t\taggregator: this.aggregator\n\t\t};\n\t}\n\n\t_getValue(labels) {\n\t\tconst hash = hashObject(labels || {});\n\t\treturn this.hashMap[hash] ? this.hashMap[hash].value : 0;\n\t}\n\n\tlabels() {\n\t\tconst labels = getLabels(this.labelNames, arguments);\n\t\treturn {\n\t\t\tinc: inc.call(this, labels),\n\t\t\tdec: dec.call(this, labels),\n\t\t\tset: set.call(this, labels),\n\t\t\tsetToCurrentTime: setToCurrentTime.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels)\n\t\t};\n\t}\n\n\tremove() {\n\t\tconst labels = getLabels(this.labelNames, arguments);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction setToCurrentTime(labels) {\n\treturn () => {\n\t\tconst now = Date.now() / 1000;\n\t\tif (labels === undefined) {\n\t\t\tthis.set(now);\n\t\t} else {\n\t\t\tthis.set(labels, now);\n\t\t}\n\t};\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tthis.set(\n\t\t\t\tObject.assign({}, startLabels, endLabels),\n\t\t\t\tdelta[0] + delta[1] / 1e9\n\t\t\t);\n\t\t};\n\t};\n}\n\nfunction dec(labels) {\n\treturn (value, timestamp) => {\n\t\tconst data = convertLabelsAndValues(labels, value);\n\t\tthis.set(\n\t\t\tdata.labels,\n\t\t\tthis._getValue(data.labels) - (data.value || 1),\n\t\t\ttimestamp\n\t\t);\n\t};\n}\n\nfunction inc(labels) {\n\treturn (value, timestamp) => {\n\t\tconst data = convertLabelsAndValues(labels, value);\n\t\tthis.set(\n\t\t\tdata.labels,\n\t\t\tthis._getValue(data.labels) + (data.value || 1),\n\t\t\ttimestamp\n\t\t);\n\t};\n}\n\nfunction set(labels) {\n\treturn (value, timestamp) => {\n\t\tif (typeof value !== 'number') {\n\t\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t\t}\n\t\tif (timestamp && !isDate(timestamp) && !Number.isFinite(timestamp)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Timestamp is not a valid date or number: ${util.format(timestamp)}`\n\t\t\t);\n\t\t}\n\n\t\tlabels = labels || {};\n\n\t\tvalidateLabel(this.labelNames, labels);\n\t\tthis.hashMap = setValue(this.hashMap, value, labels, timestamp);\n\t};\n}\n\nfunction reset() {\n\tthis.hashMap = {};\n\n\tif (this.labelNames.length === 0) {\n\t\tthis.hashMap = setValue({}, 0, {});\n\t}\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (!isObject(labels)) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {}\n\t\t};\n\t}\n\treturn {\n\t\tlabels,\n\t\tvalue\n\t};\n}\n\nmodule.exports = Gauge;\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/*!\n * depd\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar callSiteToString = require('./lib/compat').callSiteToString\nvar eventListenerCount = require('./lib/compat').eventListenerCount\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + callSiteToString(stack[i])\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eventListenerCount(process, 'deprecation') !== 0\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + callSiteToString(stack[i])\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var deprecate = this // eslint-disable-line no-unused-vars\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n   // eslint-disable-next-line no-eval\n  var deprecatedfn = eval('(function (' + args + ') {\\n' +\n    '\"use strict\"\\n' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '})')\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n","'use strict';\nconst { getValueAsString } = require('./util');\n\nfunction escapeString(str) {\n\treturn str.replace(/\\n/g, '\\\\n').replace(/\\\\(?!n)/g, '\\\\\\\\');\n}\nfunction escapeLabelValue(str) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\treturn escapeString(str).replace(/\"/g, '\\\\\"');\n}\n\nconst defaultMetricsOpts = {\n\ttimestamps: true\n};\n\nclass Registry {\n\tconstructor() {\n\t\tthis._metrics = {};\n\t\tthis._defaultLabels = {};\n\t}\n\n\tgetMetricsAsArray() {\n\t\treturn Object.keys(this._metrics).map(this.getSingleMetric, this);\n\t}\n\n\tgetMetricAsPrometheusString(metric, conf) {\n\t\tconst opts = Object.assign({}, defaultMetricsOpts, conf);\n\t\tconst item = metric.get();\n\t\tconst name = escapeString(item.name);\n\t\tconst help = `# HELP ${name} ${escapeString(item.help)}`;\n\t\tconst type = `# TYPE ${name} ${item.type}`;\n\t\tconst defaultLabelNames = Object.keys(this._defaultLabels);\n\n\t\tlet values = '';\n\t\tfor (const val of item.values || []) {\n\t\t\tval.labels = val.labels || {};\n\n\t\t\tif (defaultLabelNames.length > 0) {\n\t\t\t\t// Make a copy before mutating\n\t\t\t\tval.labels = Object.assign({}, val.labels);\n\t\t\t}\n\n\t\t\tfor (const labelName of defaultLabelNames) {\n\t\t\t\tval.labels[labelName] =\n\t\t\t\t\tval.labels[labelName] || this._defaultLabels[labelName];\n\t\t\t}\n\n\t\t\tlet labels = '';\n\t\t\tfor (const key of Object.keys(val.labels)) {\n\t\t\t\tlabels += `${key}=\"${escapeLabelValue(val.labels[key])}\",`;\n\t\t\t}\n\n\t\t\tlet metricName = val.metricName || item.name;\n\t\t\tif (labels) {\n\t\t\t\tmetricName += `{${labels.substring(0, labels.length - 1)}}`;\n\t\t\t}\n\n\t\t\tlet line = `${metricName} ${getValueAsString(val.value)}`;\n\t\t\tif (opts.timestamps && val.timestamp) {\n\t\t\t\tline += ` ${val.timestamp}`;\n\t\t\t}\n\t\t\tvalues += `${line.trim()}\\n`;\n\t\t}\n\n\t\treturn `${help}\\n${type}\\n${values}`.trim();\n\t}\n\n\tmetrics(opts) {\n\t\tlet metrics = '';\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tmetrics += `${this.getMetricAsPrometheusString(metric, opts)}\\n\\n`;\n\t\t}\n\n\t\treturn metrics.substring(0, metrics.length - 1);\n\t}\n\n\tregisterMetric(metricFn) {\n\t\tif (\n\t\t\tthis._metrics[metricFn.name] &&\n\t\t\tthis._metrics[metricFn.name] !== metricFn\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`A metric with the name ${metricFn.name} has already been registered.`\n\t\t\t);\n\t\t}\n\n\t\tthis._metrics[metricFn.name] = metricFn;\n\t}\n\n\tclear() {\n\t\tthis._metrics = {};\n\t\tthis._defaultLabels = {};\n\t}\n\n\tgetMetricsAsJSON() {\n\t\tconst metrics = [];\n\t\tconst defaultLabelNames = Object.keys(this._defaultLabels);\n\n\t\tfor (const metric of this.getMetricsAsArray()) {\n\t\t\tconst item = metric.get();\n\n\t\t\tif (item.values) {\n\t\t\t\tfor (const val of item.values) {\n\t\t\t\t\tfor (const labelName of defaultLabelNames) {\n\t\t\t\t\t\tval.labels[labelName] =\n\t\t\t\t\t\t\tval.labels[labelName] || this._defaultLabels[labelName];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmetrics.push(item);\n\t\t}\n\n\t\treturn metrics;\n\t}\n\n\tremoveSingleMetric(name) {\n\t\tdelete this._metrics[name];\n\t}\n\n\tgetSingleMetricAsString(name) {\n\t\treturn this.getMetricAsPrometheusString(this._metrics[name]);\n\t}\n\n\tgetSingleMetric(name) {\n\t\treturn this._metrics[name];\n\t}\n\n\tsetDefaultLabels(labels) {\n\t\tthis._defaultLabels = labels;\n\t}\n\n\tresetMetrics() {\n\t\tfor (const metric in this._metrics) {\n\t\t\tthis._metrics[metric].reset();\n\t\t}\n\t}\n\n\tget contentType() {\n\t\treturn 'text/plain; version=0.0.4; charset=utf-8';\n\t}\n\n\tstatic merge(registers) {\n\t\tconst mergedRegistry = new Registry();\n\n\t\tconst metricsToMerge = registers.reduce(\n\t\t\t(acc, reg) => acc.concat(reg.getMetricsAsArray()),\n\t\t\t[]\n\t\t);\n\n\t\tmetricsToMerge.forEach(mergedRegistry.registerMetric, mergedRegistry);\n\t\treturn mergedRegistry;\n\t}\n}\n\nmodule.exports = Registry;\nmodule.exports.globalRegistry = new Registry();\n","module.exports = require(\"path\");","module.exports = require(\"fs\");","module.exports = require(\"buffer\");","module.exports = require(\"stream\");","'use strict';\n\nconst deprecationsEmitted = {};\n\nexports.isDate = isDate;\n\nexports.getPropertiesFromObj = function(hashMap) {\n\tconst obj = Object.keys(hashMap).map(x => hashMap[x]);\n\treturn obj;\n};\n\nexports.getValueAsString = function getValueString(value) {\n\tif (Number.isNaN(value)) {\n\t\treturn 'Nan';\n\t} else if (!Number.isFinite(value)) {\n\t\tif (value < 0) {\n\t\t\treturn '-Inf';\n\t\t} else {\n\t\t\treturn '+Inf';\n\t\t}\n\t} else {\n\t\treturn `${value}`;\n\t}\n};\n\nexports.removeLabels = function removeLabels(hashMap, labels) {\n\tconst hash = hashObject(labels);\n\tdelete hashMap[hash];\n};\n\nexports.setValue = function setValue(hashMap, value, labels, timestamp) {\n\tconst hash = hashObject(labels);\n\thashMap[hash] = {\n\t\tvalue: typeof value === 'number' ? value : 0,\n\t\tlabels: labels || {},\n\t\ttimestamp: isDate(timestamp)\n\t\t\t? timestamp.valueOf()\n\t\t\t: Number.isFinite(timestamp)\n\t\t\t? timestamp\n\t\t\t: undefined\n\t};\n\treturn hashMap;\n};\n\n// TODO: For node 6, use rest params\nexports.getLabels = function(labelNames, args) {\n\tif (labelNames.length !== args.length) {\n\t\tthrow new Error('Invalid number of arguments');\n\t}\n\n\tconst argsAsArray = Array.prototype.slice.call(args);\n\treturn labelNames.reduce((acc, label, index) => {\n\t\tacc[label] = argsAsArray[index];\n\t\treturn acc;\n\t}, {});\n};\n\nfunction hashObject(labels) {\n\t// We don't actually need a hash here. We just need a string that\n\t// is unique for each possible labels object and consistent across\n\t// calls with equivalent labels objects.\n\tlet keys = Object.keys(labels);\n\tif (keys.length === 0) {\n\t\treturn '';\n\t}\n\t// else\n\tif (keys.length > 1) {\n\t\tkeys = keys.sort(); // need consistency across calls\n\t}\n\n\tlet hash = '';\n\tlet i = 0;\n\tconst size = keys.length;\n\tfor (; i < size - 1; i++) {\n\t\thash += `${keys[i]}:${labels[keys[i]]},`;\n\t}\n\thash += `${keys[i]}:${labels[keys[i]]}`;\n\treturn hash;\n}\nexports.hashObject = hashObject;\n\nfunction isDate(obj) {\n\treturn obj instanceof Date && !isNaN(obj.valueOf());\n}\nexports.isObject = function isObject(obj) {\n\treturn obj === Object(obj);\n};\n\nfunction printDeprecation(msg) {\n\tif (deprecationsEmitted[msg]) {\n\t\treturn;\n\t}\n\n\tdeprecationsEmitted[msg] = true;\n\n\tif (process.emitWarning) {\n\t\tprocess.emitWarning(msg, 'DeprecationWarning');\n\t} else {\n\t\t// Check can be removed when we only support node@>=6\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.warn(new Error(msg));\n\t}\n}\n\nexports.printDeprecationObjectConstructor = () => {\n\tprintDeprecation(\n\t\t'prom-client - Passing a non-object to metrics constructor is deprecated'\n\t);\n};\n\nexports.printDeprecationCollectDefaultMetricsNumber = timeout => {\n\tprintDeprecation(\n\t\t`prom-client - A number to defaultMetrics is deprecated, please use \\`collectDefaultMetrics({ timeout: ${timeout} })\\`.`\n\t);\n};\n\nclass Grouper extends Map {\n\t/**\n\t * Adds the `value` to the `key`'s array of values.\n\t * @param {*} key Key to set.\n\t * @param {*} value Value to add to `key`'s array.\n\t * @returns {undefined} undefined.\n\t */\n\tadd(key, value) {\n\t\tif (this.has(key)) {\n\t\t\tthis.get(key).push(value);\n\t\t} else {\n\t\t\tthis.set(key, [value]);\n\t\t}\n\t}\n}\n\nexports.Grouper = Grouper;\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","module.exports = require(\"crypto\");","'use strict';\nconst util = require('util');\n\nconst FrameWriter = require('./writers').FrameWriter;\nconst types = require('./types');\nconst utils = require('./utils');\nconst ExecutionOptions = require('./execution-options').ExecutionOptions;\nconst packageInfo = require('../package.json');\n\n/**\n * Options for the execution of the query / prepared statement\n * @private\n */\nconst queryFlag = {\n  values:                 0x01,\n  skipMetadata:           0x02,\n  pageSize:               0x04,\n  withPagingState:        0x08,\n  withSerialConsistency:  0x10,\n  withDefaultTimestamp:   0x20,\n  withNameForValues:      0x40\n};\n\n/**\n * Options for the executing of a batch request from protocol v3 and above\n * @private\n */\nconst batchFlag = {\n  withSerialConsistency:  0x10,\n  withDefaultTimestamp:   0x20,\n  withNameForValues:      0x40\n};\n\nconst batchType = {\n  logged: 0,\n  unlogged: 1,\n  counter: 2\n};\n\n/**\n * Abstract class Request\n */\nclass Request {\n  constructor() {\n    this.length = 0;\n  }\n\n  /**\n   * @abstract\n   * @param {Encoder} encoder\n   * @param {Number} streamId\n   * @throws {TypeError}\n   * @returns {Buffer}\n   */\n  write(encoder, streamId) {\n    throw new Error('Method must be implemented');\n  }\n\n  /**\n   * Creates a new instance using the same constructor as the current instance, copying the properties.\n   * @return {Request}\n   */\n  clone() {\n    const newRequest = new (this.constructor)();\n    const keysArray = Object.keys(this);\n    for (let i = 0; i < keysArray.length; i++) {\n      const key = keysArray[i];\n      newRequest[key] = this[key];\n    }\n    return newRequest;\n  }\n}\n\n/**\n * Writes a execute query (given a prepared queryId)\n * @param {String} query\n * @param {Buffer} queryId\n * @param {Array} params\n * @param options\n */\nclass ExecuteRequest extends Request {\n  /**\n   * @param {String} query\n   * @param queryId\n   * @param params\n   * @param {ExecutionOptions} execOptions\n   * @param meta\n   */\n  constructor(query, queryId, params, execOptions, meta) {\n    super();\n\n    this.query = query;\n    this.queryId = queryId;\n    this.params = params;\n    this.meta = meta;\n    this.options = execOptions || ExecutionOptions.empty();\n    this.consistency = this.options.getConsistency() || types.consistencies.one;\n    // Only QUERY request parameters are encoded as named parameters\n    // EXECUTE request parameters are always encoded as positional parameters\n    this.namedParameters = false;\n  }\n\n  getParamType(index) {\n    const columnInfo = this.meta.columns[index];\n    return columnInfo ? columnInfo.type : null;\n  }\n\n  write(encoder, streamId) {\n    //v1: <queryId>\n    //      <n><value_1>....<value_n><consistency>\n    //v2: <queryId>\n    //      <consistency><flags>[<n><value_1>...<value_n>][<result_page_size>][<paging_state>][<serial_consistency>]\n    //v3: <queryId>\n    //      <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>][<serial_consistency>][<timestamp>]\n    const frameWriter = new FrameWriter(types.opcodes.execute);\n    let headerFlags = this.options.isQueryTracing() ? types.frameFlags.tracing : 0;\n    if (this.options.getCustomPayload()) {\n      //The body may contain the custom payload\n      headerFlags |= types.frameFlags.customPayload;\n      frameWriter.writeCustomPayload(this.options.getCustomPayload());\n    }\n    frameWriter.writeShortBytes(this.queryId);\n    this.writeQueryParameters(frameWriter, encoder);\n\n    // Record the length of the body of the request before writing it\n    this.length = frameWriter.bodyLength;\n\n    return frameWriter.write(encoder.protocolVersion, streamId, headerFlags);\n  }\n\n  /**\n   * Writes v1 and v2 execute query parameters\n   * @param {FrameWriter} frameWriter\n   * @param {Encoder} encoder\n   */\n  writeQueryParameters(frameWriter, encoder) {\n    //v1: <n><value_1>....<value_n><consistency>\n    //v2: <consistency><flags>[<n><value_1>...<value_n>][<result_page_size>][<paging_state>][<serial_consistency>]\n    //v3: <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>][<serial_consistency>][<timestamp>]\n    let flags = 0;\n\n    const timestamp = this.options.getOrGenerateTimestamp();\n\n    if (types.protocolVersion.supportsPaging(encoder.protocolVersion)) {\n      flags |= (this.params && this.params.length) ? queryFlag.values : 0;\n      flags |= (this.options.getFetchSize() > 0) ? queryFlag.pageSize : 0;\n      flags |= this.options.getPageState() ? queryFlag.withPagingState : 0;\n      flags |= this.options.getSerialConsistency() ? queryFlag.withSerialConsistency : 0;\n      flags |= timestamp !== null && timestamp !== undefined ? queryFlag.withDefaultTimestamp : 0;\n      flags |= this.namedParameters ? queryFlag.withNameForValues : 0;\n      frameWriter.writeShort(this.consistency);\n      frameWriter.writeByte(flags);\n    }\n\n    if (this.params && this.params.length) {\n      frameWriter.writeShort(this.params.length);\n      for (let i = 0; i < this.params.length; i++) {\n        let paramValue = this.params[i];\n        if (flags & queryFlag.withNameForValues) {\n          //parameter is composed by name / value\n          frameWriter.writeString(paramValue.name);\n          paramValue = paramValue.value;\n        }\n        frameWriter.writeBytes(encoder.encode(paramValue, this.getParamType(i)));\n      }\n    }\n\n    if (!types.protocolVersion.supportsPaging(encoder.protocolVersion)) {\n      if (!this.params || !this.params.length) {\n        //zero parameters\n        frameWriter.writeShort(0);\n      }\n      frameWriter.writeShort(this.consistency);\n      return;\n    }\n    if (flags & queryFlag.pageSize) {\n      frameWriter.writeInt(this.options.getFetchSize());\n    }\n    if (flags & queryFlag.withPagingState) {\n      frameWriter.writeBytes(this.options.getPageState());\n    }\n    if (flags & queryFlag.withSerialConsistency) {\n      frameWriter.writeShort(this.options.getSerialConsistency());\n    }\n    if (flags & queryFlag.withDefaultTimestamp) {\n      frameWriter.writeLong(timestamp);\n    }\n  }\n}\n\nclass QueryRequest extends ExecuteRequest {\n  /**\n   * @param {String} query\n   * @param params\n   * @param {ExecutionOptions} execOptions\n   * @param {Boolean} [namedParameters]\n   */\n  constructor(query, params, execOptions, namedParameters) {\n    super(query, null, params, execOptions, null);\n    this.hints = this.options.getHints() || utils.emptyArray;\n    this.namedParameters = namedParameters;\n  }\n\n  getParamType(index) {\n    return this.hints[index];\n  }\n\n  write(encoder, streamId) {\n    //v1: <query><consistency>\n    //v2: <query>\n    //      <consistency><flags>[<n><value_1>...<value_n>][<result_page_size>][<paging_state>][<serial_consistency>]\n    //v3: <query>\n    //      <consistency><flags>[<n>[name_1]<value_1>...[name_n]<value_n>][<result_page_size>][<paging_state>][<serial_consistency>][<timestamp>]\n    const frameWriter = new FrameWriter(types.opcodes.query);\n    let headerFlags = this.options.isQueryTracing() ? types.frameFlags.tracing : 0;\n    if (this.options.getCustomPayload()) {\n      //The body may contain the custom payload\n      headerFlags |= types.frameFlags.customPayload;\n      frameWriter.writeCustomPayload(this.options.getCustomPayload());\n    }\n\n    frameWriter.writeLString(this.query);\n\n    if (!types.protocolVersion.supportsPaging(encoder.protocolVersion)) {\n      frameWriter.writeShort(this.consistency);\n    } else {\n      //Use the same fields as the execute writer\n      this.writeQueryParameters(frameWriter, encoder);\n    }\n\n    // Record the length of the body of the request before writing it\n    this.length = frameWriter.bodyLength;\n\n    return frameWriter.write(encoder.protocolVersion, streamId, headerFlags);\n  }\n}\n\nclass PrepareRequest extends Request {\n  constructor(query) {\n    super();\n    this.query = query;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.prepare);\n    frameWriter.writeLString(this.query);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\nclass StartupRequest extends Request {\n\n  /**\n   * Creates a new instance of {@link StartupRequest}.\n   * @param {Object} [options]\n   * @param [options.cqlVersion]\n   * @param [options.noCompact]\n   */\n  constructor(options) {\n    super();\n    this.options = options || {};\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.startup);\n\n    const startupOptions = {\n      CQL_VERSION: this.options.cqlVersion || '3.0.0',\n      DRIVER_NAME: packageInfo.description,\n      DRIVER_VERSION: packageInfo.version\n    };\n\n    if(this.options.noCompact) {\n      startupOptions['NO_COMPACT'] = 'true';\n    }\n\n    frameWriter.writeStringMap(startupOptions);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\nclass RegisterRequest extends Request {\n  constructor(events) {\n    super();\n    this.events = events;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.register);\n    frameWriter.writeStringList(this.events);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\n/**\n * Represents an AUTH_RESPONSE request\n * @param {Buffer} token\n */\nclass AuthResponseRequest extends Request {\n  constructor(token) {\n    super();\n    this.token = token;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.authResponse);\n    frameWriter.writeBytes(this.token);\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\n/**\n * Represents a protocol v1 CREDENTIALS request message\n */\nclass CredentialsRequest extends Request {\n  constructor(username, password) {\n    super();\n    this.username = username;\n    this.password = password;\n  }\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.credentials);\n    frameWriter.writeStringMap({ username:this.username, password:this.password });\n    return frameWriter.write(encoder.protocolVersion, streamId);\n  }\n}\n\nclass BatchRequest extends Request {\n  /**\n   * Creates a new instance of BatchRequest.\n   * @param {Array.<{query, params, [info]}>} queries Array of objects with the properties query and params\n   * @param {ExecutionOptions} execOptions\n   */\n  constructor(queries, execOptions) {\n    super();\n    this.queries = queries;\n    this.options = execOptions;\n    this.hints = execOptions.getHints() || utils.emptyArray;\n    this.type = batchType.logged;\n\n    if (execOptions.isBatchCounter()) {\n      this.type = batchType.counter;\n    } else if (!execOptions.isBatchLogged()) {\n      this.type = batchType.unlogged;\n    }\n  }\n\n  /**\n   * Writes a batch request\n   */\n  write(encoder, streamId) {\n    //v2: <type><n><query_1>...<query_n><consistency>\n    //v3: <type><n><query_1>...<query_n><consistency><flags>[<serial_consistency>][<timestamp>]\n    if (!this.queries || !(this.queries.length > 0)) {\n      throw new TypeError(util.format('Invalid queries provided %s', this.queries));\n    }\n    const frameWriter = new FrameWriter(types.opcodes.batch);\n    let headerFlags = this.options.isQueryTracing() ? types.frameFlags.tracing : 0;\n    if (this.options.getCustomPayload()) {\n      //The body may contain the custom payload\n      headerFlags |= types.frameFlags.customPayload;\n      frameWriter.writeCustomPayload(this.options.getCustomPayload());\n    }\n    frameWriter.writeByte(this.type);\n    frameWriter.writeShort(this.queries.length);\n    const self = this;\n    this.queries.forEach(function eachQuery(item, i) {\n      const hints = self.hints[i];\n      const params = item.params || utils.emptyArray;\n      let getParamType;\n      if (item.queryId) {\n        // Contains prepared queries\n        frameWriter.writeByte(1);\n        frameWriter.writeShortBytes(item.queryId);\n        getParamType = i => item.meta.columns[i].type;\n      }\n      else {\n        // Contains string queries\n        frameWriter.writeByte(0);\n        frameWriter.writeLString(item.query);\n        getParamType = hints ? (i => hints[i]) : (() => null);\n      }\n\n      frameWriter.writeShort(params.length);\n      params.forEach((param, index) => frameWriter.writeBytes(encoder.encode(param, getParamType(index))));\n    }, this);\n\n    frameWriter.writeShort(this.options.getConsistency());\n\n    if (types.protocolVersion.supportsTimestamp(encoder.protocolVersion)) {\n      // Batch flags\n      let flags = this.options.getSerialConsistency() ? batchFlag.withSerialConsistency : 0;\n      const timestamp = this.options.getOrGenerateTimestamp();\n      flags |= timestamp !== null && timestamp !== undefined ? batchFlag.withDefaultTimestamp : 0;\n      frameWriter.writeByte(flags);\n\n      if (flags & batchFlag.withSerialConsistency) {\n        frameWriter.writeShort(this.options.getSerialConsistency());\n      }\n\n      if (flags & batchFlag.withDefaultTimestamp) {\n        frameWriter.writeLong(timestamp);\n      }\n    }\n\n    // Set the length of the body of the request before writing it\n    this.length = frameWriter.bodyLength;\n\n    return frameWriter.write(encoder.protocolVersion, streamId, headerFlags);\n  }\n\n  clone() {\n    return new BatchRequest(this.queries, this.options);\n  }\n}\n\nclass OptionsRequest extends Request {\n\n  write(encoder, streamId) {\n    const frameWriter = new FrameWriter(types.opcodes.options);\n    return frameWriter.write(encoder.protocolVersion, streamId, 0);\n  }\n\n  clone() {\n    // since options has no unique state, simply return self.\n    return this;\n  }\n}\n\nconst options = new OptionsRequest();\n\nexports.AuthResponseRequest = AuthResponseRequest;\nexports.BatchRequest = BatchRequest;\nexports.CredentialsRequest = CredentialsRequest;\nexports.ExecuteRequest = ExecuteRequest;\nexports.PrepareRequest = PrepareRequest;\nexports.QueryRequest = QueryRequest;\nexports.Request = Request;\nexports.RegisterRequest = RegisterRequest;\nexports.StartupRequest = StartupRequest;\nexports.options = options;\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict'\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  if (!value) {\n    return null\n  }\n\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n\n  if (search !== null) {\n    url.query = query\n    url.search = search\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n","module.exports = require(\"http\");","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license Long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/Long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.low = low|0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         * @expose\r\n         */\r\n        this.high = high|0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    Long.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.isLong = function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    };\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromInt = function fromInt(value, unsigned) {\r\n        var obj, cachedObj;\r\n        if (!unsigned) {\r\n            value = value | 0;\r\n            if (-128 <= value && value < 128) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = new Long(value, value < 0 ? -1 : 0, false);\r\n            if (-128 <= value && value < 128)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value = value >>> 0;\r\n            if (0 <= value && value < 256) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = new Long(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (0 <= value && value < 256)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromNumber = function fromNumber(value, unsigned) {\r\n        unsigned = !!unsigned;\r\n        if (isNaN(value) || !isFinite(value))\r\n            return Long.ZERO;\r\n        if (!unsigned && value <= -TWO_PWR_63_DBL)\r\n            return Long.MIN_VALUE;\r\n        if (!unsigned && value + 1 >= TWO_PWR_63_DBL)\r\n            return Long.MAX_VALUE;\r\n        if (unsigned && value >= TWO_PWR_64_DBL)\r\n            return Long.MAX_UNSIGNED_VALUE;\r\n        if (value < 0)\r\n            return Long.fromNumber(-value, unsigned).negate();\r\n        return new Long((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromBits = function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     * @expose\r\n     */\r\n    Long.fromString = function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('number format error: empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return Long.ZERO;\r\n        if (typeof unsigned === 'number') // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw Error('radix out of range: ' + radix);\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('number format error: interior \"-\" character: ' + str);\r\n        else if (p === 0)\r\n            return Long.fromString(str.substring(1), unsigned, radix).negate();\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = Long.fromNumber(Math.pow(radix, 8));\r\n\r\n        var result = Long.ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i);\r\n            var value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = Long.fromNumber(Math.pow(radix, size));\r\n                result = result.multiply(power).add(Long.fromNumber(value));\r\n            } else {\r\n                result = result.multiply(radixToPower);\r\n                result = result.add(Long.fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.fromValue = function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return Long.fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return Long.fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return new Long(val.low, val.high, val.unsigned);\r\n    };\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = Long.fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.ZERO = Long.fromInt(0);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.UZERO = Long.fromInt(0, true);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.ONE = Long.fromInt(1);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.UONE = Long.fromInt(1, true);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.NEG_ONE = Long.fromInt(-1);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MAX_VALUE = Long.fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = Long.fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     * @expose\r\n     */\r\n    Long.MIN_VALUE = Long.fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Long.prototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Long.prototype.toNumber = function toNumber() {\r\n        if (this.unsigned) {\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        }\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     * @expose\r\n     */\r\n    Long.prototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix out of range: ' + radix);\r\n        if (this.isZero())\r\n            return '0';\r\n        var rem;\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.equals(Long.MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = Long.fromNumber(radix);\r\n                var div = this.divide(radixLong);\r\n                rem = div.multiply(radixLong).subtract(this);\r\n                return div.toString(radix) + rem.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.negate().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = Long.fromNumber(Math.pow(radix, 6), this.unsigned);\r\n        rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.divide(radixToPower),\r\n                intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     * @expose\r\n     */\r\n    Long.prototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    Long.prototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.equals(Long.MIN_VALUE) ? 64 : this.negate().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.equals = function equals(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.eq = Long.prototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.notEquals = function notEquals(other) {\r\n        return !this.equals(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.neq = Long.prototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lessThan = function lessThan(other) {\r\n        return this.compare(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lt = Long.prototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.compare(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.lte = Long.prototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.greaterThan = function greaterThan(other) {\r\n        return this.compare(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.gt = Long.prototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.compare(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     * @expose\r\n     */\r\n    Long.prototype.gte = Long.prototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     * @expose\r\n     */\r\n    Long.prototype.compare = function compare(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        if (this.equals(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.subtract(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     * @expose\r\n     */\r\n    Long.prototype.negate = function negate() {\r\n        if (!this.unsigned && this.equals(Long.MIN_VALUE))\r\n            return Long.MIN_VALUE;\r\n        return this.not().add(Long.ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     * @expose\r\n     */\r\n    Long.prototype.neg = Long.prototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     * @expose\r\n     */\r\n    Long.prototype.add = function add(addend) {\r\n        if (!Long.isLong(addend))\r\n            addend = Long.fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     * @expose\r\n     */\r\n    Long.prototype.subtract = function subtract(subtrahend) {\r\n        if (!Long.isLong(subtrahend))\r\n            subtrahend = Long.fromValue(subtrahend);\r\n        return this.add(subtrahend.negate());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     * @expose\r\n     */\r\n    Long.prototype.sub = Long.prototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     * @expose\r\n     */\r\n    Long.prototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return Long.ZERO;\r\n        if (!Long.isLong(multiplier))\r\n            multiplier = Long.fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return Long.ZERO;\r\n        if (this.equals(Long.MIN_VALUE))\r\n            return multiplier.isOdd() ? Long.MIN_VALUE : Long.ZERO;\r\n        if (multiplier.equals(Long.MIN_VALUE))\r\n            return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.negate().multiply(multiplier.negate());\r\n            else\r\n                return this.negate().multiply(multiplier).negate();\r\n        } else if (multiplier.isNegative())\r\n            return this.multiply(multiplier.negate()).negate();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lessThan(TWO_PWR_24) && multiplier.lessThan(TWO_PWR_24))\r\n            return Long.fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     * @expose\r\n     */\r\n    Long.prototype.mul = Long.prototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     * @expose\r\n     */\r\n    Long.prototype.divide = function divide(divisor) {\r\n        if (!Long.isLong(divisor))\r\n            divisor = Long.fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw(new Error('division by zero'));\r\n        if (this.isZero())\r\n            return this.unsigned ? Long.UZERO : Long.ZERO;\r\n        var approx, rem, res;\r\n        if (this.equals(Long.MIN_VALUE)) {\r\n            if (divisor.equals(Long.ONE) || divisor.equals(Long.NEG_ONE))\r\n                return Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.equals(Long.MIN_VALUE))\r\n                return Long.ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shiftRight(1);\r\n                approx = halfThis.divide(divisor).shiftLeft(1);\r\n                if (approx.equals(Long.ZERO)) {\r\n                    return divisor.isNegative() ? Long.ONE : Long.NEG_ONE;\r\n                } else {\r\n                    rem = this.subtract(divisor.multiply(approx));\r\n                    res = approx.add(rem.divide(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.equals(Long.MIN_VALUE))\r\n            return this.unsigned ? Long.UZERO : Long.ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.negate().divide(divisor.negate());\r\n            return this.negate().divide(divisor).negate();\r\n        } else if (divisor.isNegative())\r\n            return this.divide(divisor.negate()).negate();\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        res = Long.ZERO;\r\n        rem = this;\r\n        while (rem.greaterThanOrEqual(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = Long.fromNumber(approx),\r\n                approxRem = approxRes.multiply(divisor);\r\n            while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\r\n                approx -= delta;\r\n                approxRes = Long.fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.multiply(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = Long.ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.subtract(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     * @expose\r\n     */\r\n    Long.prototype.div = Long.prototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     * @expose\r\n     */\r\n    Long.prototype.modulo = function modulo(divisor) {\r\n        if (!Long.isLong(divisor))\r\n            divisor = Long.fromValue(divisor);\r\n        return this.subtract(this.divide(divisor).multiply(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     * @expose\r\n     */\r\n    Long.prototype.mod = Long.prototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.not = function not() {\r\n        return Long.fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.and = function and(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        return Long.fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.or = function or(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        return Long.fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     * @expose\r\n     */\r\n    Long.prototype.xor = function xor(other) {\r\n        if (!Long.isLong(other))\r\n            other = Long.fromValue(other);\r\n        return Long.fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (Long.isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return Long.fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return Long.fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shl = Long.prototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shiftRight = function shiftRight(numBits) {\r\n        if (Long.isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return Long.fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return Long.fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shr = Long.prototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (Long.isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return Long.fromBits(high, 0, this.unsigned);\r\n            else\r\n                return Long.fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     * @expose\r\n     */\r\n    Long.prototype.shru = Long.prototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     * @expose\r\n     */\r\n    Long.prototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return new Long(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     * @expose\r\n     */\r\n    Long.prototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return new Long(this.low, this.high, true);\r\n    };\r\n\r\n    return Long;\r\n});\r\n","'use strict';\n\nconst utils = require('./utils');\nconst types = require('./types');\nconst errors = require('./errors');\n\n/**\n * A base class that represents a wrapper around the user provided query options with getter methods and proper\n * default values.\n * <p>\n *   Note that getter methods might return <code>undefined</code> when not set on the query options or default\n *  {@link Client} options.\n * </p>\n */\nclass ExecutionOptions {\n\n  /**\n   * Creates a new instance of {@link ExecutionOptions}.\n   */\n  constructor() {\n  }\n\n  /**\n   * Creates an empty instance, where all methods return undefined, used internally.\n   * @ignore\n   * @return {ExecutionOptions}\n   */\n  static empty() {\n    return new ExecutionOptions();\n  }\n\n  /**\n   * Determines if the stack trace before the query execution should be maintained.\n   * @abstract\n   * @returns {Boolean}\n   */\n  getCaptureStackTrace() {\n\n  }\n\n  /**\n   * Gets the [Consistency level]{@link module:types~consistencies} to be used for the execution.\n   * @abstract\n   * @returns {Number}\n   */\n  getConsistency() {\n\n  }\n\n  /**\n   * Key-value payload to be passed to the server. On the server side, implementations of QueryHandler can use\n   * this data.\n   * @abstract\n   * @returns {Object}\n   */\n  getCustomPayload() {\n\n  }\n\n  /**\n   * Gets the amount of rows to retrieve per page.\n   * @abstract\n   * @returns {Number}\n   */\n  getFetchSize() {\n\n  }\n\n  /**\n   * When a fixed host is set on the query options and the query plan for the load-balancing policy is not used, it\n   * gets the host that should handle the query.\n   * @returns {Host}\n   */\n  getFixedHost() {\n\n  }\n\n  /**\n   * Gets the type hints for parameters given in the query, ordered as for the parameters.\n   * @abstract\n   * @returns {Array|Array<Array>}\n   */\n  getHints() {\n\n  }\n\n  /**\n   * Determines whether the driver must retrieve the following result pages automatically.\n   * <p>\n   *   This setting is only considered by the [Client#eachRow()]{@link Client#eachRow} method.\n   * </p>\n   * @abstract\n   * @returns {Boolean}\n   */\n  isAutoPage() {\n\n  }\n\n  /**\n   * Determines whether its a counter batch. Only valid for [Client#batch()]{@link Client#batch}, it will be ignored by\n   * other methods.\n   * @abstract\n   * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n   */\n  isBatchCounter() {\n\n  }\n\n  /**\n   * Determines whether the batch should be written to the batchlog. Only valid for\n   * [Client#batch()]{@link Client#batch}, it will be ignored by other methods.\n   * @abstract\n   * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n   */\n  isBatchLogged() {\n\n  }\n\n  /**\n   * Determines whether the query can be applied multiple times without changing the result beyond the initial\n   * application.\n   * @abstract\n   * @returns {Boolean}\n   */\n  isIdempotent() {\n\n  }\n\n  /**\n   * Determines whether the query must be prepared beforehand.\n   * @abstract\n   * @returns {Boolean} A <code>Boolean</code> value, it can't be <code>undefined</code>.\n   */\n  isPrepared() {\n\n  }\n\n  /**\n   * Determines whether query tracing is enabled for the execution.\n   * @abstract\n   * @returns {Boolean}\n   */\n  isQueryTracing() {\n\n  }\n\n  /**\n   * Gets the keyspace for the query when set at query options level.\n   * <p>\n   *   Note that this method will return <code>undefined</code> when the keyspace is not set at query options level.\n   *   It will only return the keyspace name when the user provided a different keyspace than the current\n   *   {@link Client} keyspace.\n   * </p>\n   * @abstract\n   * @returns {String}\n   */\n  getKeyspace() {\n\n  }\n\n  /**\n   * Gets the load balancing policy used for this execution.\n   * @returns {LoadBalancingPolicy} A <code>LoadBalancingPolicy</code> instance, it can't be <code>undefined</code>.\n   */\n  getLoadBalancingPolicy() {\n\n  }\n\n  /**\n   * Gets the Buffer representing the paging state.\n   * @abstract\n   * @returns {Buffer}\n   */\n  getPageState() {\n\n  }\n\n  /**\n   * Gets the query options as provided to the execution method without setting the default values.\n   * @returns {QueryOptions}\n   */\n  getRawQueryOptions() {\n\n  }\n\n  /**\n   * Gets the timeout in milliseconds to be used for the execution per coordinator.\n   * <p>\n   *   A value of <code>0</code> disables client side read timeout for the execution. Default: <code>undefined</code>.\n   * </p>\n   * @abstract\n   * @returns {Number}\n   */\n  getReadTimeout() {\n\n  }\n\n  /**\n   * Gets the [retry policy]{@link module:policies/retry} to be used.\n   * @abstract\n   * @returns {RetryPolicy} A <code>RetryPolicy</code> instance, it can't be <code>undefined</code>.\n   */\n  getRetryPolicy() {\n\n  }\n\n  /**\n   * Internal method to obtain the row callback, for \"by row\" results.\n   * @abstract\n   * @ignore\n   */\n  getRowCallback() {\n\n  }\n\n  /**\n   * Internal method to get or generate a timestamp for the request execution.\n   * @ignore\n   * @returns {Long|null}\n   */\n  getOrGenerateTimestamp() {\n\n  }\n\n  /**\n   * Gets the index of the parameters that are part of the partition key to determine the routing.\n   * @abstract\n   * @ignore\n   * @returns {Array}\n   */\n  getRoutingIndexes() {\n\n  }\n\n  /**\n   * Gets the partition key(s) to determine which coordinator should be used for the query.\n   * @abstract\n   * @returns {Buffer|Array<Buffer>}\n   */\n  getRoutingKey() {\n\n  }\n\n  /**\n   * Gets the array of the parameters names that are part of the partition key to determine the\n   * routing. Only valid for non-prepared requests.\n   * @abstract\n   * @ignore\n   */\n  getRoutingNames() {\n\n  }\n\n  /**\n   * Gets the the consistency level to be used for the serial phase of conditional updates.\n   * @abstract\n   * @returns {Number}\n   */\n  getSerialConsistency() {\n\n  }\n\n  /**\n   * Gets the provided timestamp for the execution in microseconds from the unix epoch (00:00:00, January 1st, 1970).\n   * <p>When a timestamp generator is used, this method returns <code>undefined</code>.</p>\n   * @abstract\n   * @returns {Number|Long|undefined|null}\n   */\n  getTimestamp() {\n\n  }\n\n  /**\n   * @param {Array} hints\n   * @abstract\n   * @ignore\n   */\n  setHints(hints) {\n\n  }\n\n  /**\n   * Sets the keyspace for the execution.\n   * @ignore\n   * @abstract\n   * @param {String} keyspace\n   */\n  setKeyspace(keyspace) {\n\n  }\n\n  /**\n   * @abstract\n   * @ignore\n   */\n  setPageState() {\n\n  }\n\n  /**\n   * Sets the index of the parameters that are part of the partition key to determine the routing.\n   * @param {Array} routingIndexes\n   * @abstract\n   * @ignore\n   */\n  setRoutingIndexes(routingIndexes) {\n\n  }\n\n  /**\n   * Sets the routing key.\n   * @abstract\n   * @ignore\n   */\n  setRoutingKey(value) {\n\n  }\n}\n\n/**\n * Internal implementation of {@link ExecutionOptions} that uses the value from the client options and execution\n * profile into account.\n * @ignore\n */\nclass DefaultExecutionOptions extends ExecutionOptions {\n  /**\n   * Creates a new instance of {@link ExecutionOptions}.\n   * @param {QueryOptions} queryOptions\n   * @param {Client} client\n   * @param {Function|null} rowCallback\n   */\n  constructor(queryOptions, client, rowCallback) {\n    super();\n    this._queryOptions = queryOptions;\n    this._rowCallback = rowCallback;\n    this._routingKey = this._queryOptions.routingKey;\n    this._hints = this._queryOptions.hints;\n    this._keyspace = this._queryOptions.keyspace;\n    this._routingIndexes = this._queryOptions.routingIndexes;\n    this._pageState = typeof this._queryOptions.pageState === 'string' ?\n      utils.allocBufferFromString(this._queryOptions.pageState, 'hex') : this._queryOptions.pageState;\n\n    this._client = client;\n    this._defaultQueryOptions = client.options.queryOptions;\n    this._profile = client.profileManager.getProfile(this._queryOptions.executionProfile);\n\n    if (!this._profile) {\n      throw new errors.ArgumentError(`Execution profile \"${this._queryOptions.executionProfile}\" not found`);\n    }\n  }\n\n  /**\n   * Creates a new instance {@link ExecutionOptions}, based on the query options.\n   * @param {QueryOptions|null} queryOptions\n   * @param {Client} client\n   * @param {Function|null} [rowCallback]\n   * @ignore\n   * @return {ExecutionOptions}\n   */\n  static create(queryOptions, client, rowCallback) {\n    if (!queryOptions || typeof queryOptions === 'function') {\n      // queryOptions can be null/undefined and could be of type function when is an optional parameter\n      queryOptions = utils.emptyObject;\n    }\n    return new DefaultExecutionOptions(queryOptions, client, rowCallback);\n  }\n\n  getCaptureStackTrace() {\n    return ifUndefined(this._queryOptions.captureStackTrace, this._defaultQueryOptions.captureStackTrace);\n  }\n\n  getConsistency() {\n    return ifUndefined3(this._queryOptions.consistency, this._profile.consistency,\n      this._defaultQueryOptions.consistency);\n  }\n\n  getCustomPayload() {\n    return ifUndefined(this._queryOptions.customPayload, this._defaultQueryOptions.customPayload);\n  }\n\n  getFetchSize() {\n    return ifUndefined(this._queryOptions.fetchSize, this._defaultQueryOptions.fetchSize);\n  }\n\n  getFixedHost() {\n    return this._queryOptions.host;\n  }\n\n  getHints() {\n    return this._hints;\n  }\n\n  isAutoPage() {\n    return ifUndefined(this._queryOptions.autoPage, this._defaultQueryOptions.autoPage);\n  }\n\n  isBatchCounter() {\n    return ifUndefined(this._queryOptions.counter, false);\n  }\n\n  isBatchLogged() {\n    return ifUndefined3(this._queryOptions.logged, this._defaultQueryOptions.logged, true);\n  }\n\n  isIdempotent() {\n    return ifUndefined(this._queryOptions.isIdempotent, this._defaultQueryOptions.isIdempotent);\n  }\n\n  /**\n   * Determines if the query execution must be prepared beforehand.\n   * @return {Boolean}\n   */\n  isPrepared() {\n    return ifUndefined(this._queryOptions.prepare, this._defaultQueryOptions.prepare);\n  }\n\n  isQueryTracing() {\n    return ifUndefined(this._queryOptions.traceQuery, this._defaultQueryOptions.traceQuery);\n  }\n\n  getKeyspace() {\n    return this._keyspace;\n  }\n\n  getLoadBalancingPolicy() {\n    return this._profile.loadBalancing;\n  }\n\n  getOrGenerateTimestamp() {\n    let result = this.getTimestamp();\n\n    if (result === undefined) {\n      const generator = this._client.options.policies.timestampGeneration;\n\n      if ( types.protocolVersion.supportsTimestamp(this._client.controlConnection.protocolVersion) && generator) {\n        result = generator.next(this._client);\n      } else {\n        result = null;\n      }\n    }\n\n    return typeof result === 'number' ? types.Long.fromNumber(result) : result;\n  }\n\n  getPageState() {\n    return this._pageState;\n  }\n\n  getRawQueryOptions() {\n    return this._queryOptions;\n  }\n\n  getReadTimeout() {\n    return ifUndefined3(this._queryOptions.readTimeout, this._profile.readTimeout,\n      this._client.options.socketOptions.readTimeout);\n  }\n\n  getRetryPolicy() {\n    return ifUndefined3(this._queryOptions.retry, this._profile.retry, this._client.options.policies.retry);\n  }\n\n  getRoutingIndexes() {\n    return this._routingIndexes;\n  }\n\n  getRoutingKey() {\n    return this._routingKey;\n  }\n\n  getRoutingNames() {\n    return this._queryOptions.routingNames;\n  }\n\n  /**\n   * Internal method to obtain the row callback, for \"by row\" results.\n   * @ignore\n   */\n  getRowCallback() {\n    return this._rowCallback;\n  }\n\n  getSerialConsistency() {\n    return ifUndefined3(\n      this._queryOptions.serialConsistency, this._profile.serialConsistency, this._defaultQueryOptions.serialConsistency);\n  }\n\n  getTimestamp() {\n    return this._queryOptions.timestamp;\n  }\n\n  /**\n   * @param {Array} hints\n   */\n  setHints(hints) {\n    this._hints = hints;\n  }\n\n  /**\n   * @param {String} keyspace\n   */\n  setKeyspace(keyspace) {\n    this._keyspace = keyspace;\n  }\n\n  /**\n   * @param {Buffer} pageState\n   */\n  setPageState(pageState) {\n    this._pageState = pageState;\n  }\n\n  /**\n   * @param {Array} routingIndexes\n   */\n  setRoutingIndexes(routingIndexes) {\n    this._routingIndexes = routingIndexes;\n  }\n\n  setRoutingKey(value) {\n    this._routingKey = value;\n  }\n}\n\nfunction ifUndefined(v1, v2) {\n  return v1 !== undefined ? v1 : v2;\n}\n\nfunction ifUndefined3(v1, v2, v3) {\n  if (v1 !== undefined) {\n    return v1;\n  }\n  return v2 !== undefined ? v2 : v3;\n}\n\nmodule.exports = { ExecutionOptions, DefaultExecutionOptions };","'use strict';\n\nconst util = require('util');\n\n// These are from https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels\nconst metricRegexp = /^[a-zA-Z_:][a-zA-Z0-9_:]*$/;\nconst labelRegexp = /^[a-zA-Z_][a-zA-Z0-9_]*$/;\n\nexports.validateMetricName = function(name) {\n\treturn metricRegexp.test(name);\n};\n\nexports.validateLabelName = function(names) {\n\tlet valid = true;\n\t(names || []).forEach(name => {\n\t\tif (!labelRegexp.test(name)) {\n\t\t\tvalid = false;\n\t\t}\n\t});\n\treturn valid;\n};\n\nexports.validateLabel = function validateLabel(savedLabels, labels) {\n\tObject.keys(labels).forEach(label => {\n\t\tif (savedLabels.indexOf(label) === -1) {\n\t\t\tthrow new Error(\n\t\t\t\t`Added label \"${label}\" is not included in initial labelset: ${util.inspect(\n\t\t\t\t\tsavedLabels\n\t\t\t\t)}`\n\t\t\t);\n\t\t}\n\t});\n};\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n","module.exports = require(\"net\");","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // read off entire request\n      stream.resume()\n      onFinished(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished(msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n","/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n","/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","'use strict';\n\nconst types = require('./types');\nconst util = require('util');\n\nconst _Murmur3TokenType = types.dataTypes.getByName('bigint');\nconst _RandomTokenType = types.dataTypes.getByName('varint');\nconst _OrderedTokenType = types.dataTypes.getByName('blob');\n\n/**\n * Represents a token on the Cassandra ring.\n */\nclass Token {\n  constructor(value) {\n    this._value = value;\n  }\n\n  /**\n   * @returns {{code: number, info: *|Object}} The type info for the\n   *                                           type of the value of the token.\n   */\n  getType() {\n    throw new Error('You must implement a getType function for this Token instance');\n  }\n\n  /**\n   * @returns {*} The raw value of the token.\n   */\n  getValue() {\n    return this._value;\n  }\n\n  toString() {\n    return this._value.toString();\n  }\n\n  /**\n   * Returns 0 if the values are equal, 1 if greater than other, -1\n   * otherwise.\n   *\n   * @param {Token} other \n   * @returns {Number}\n   */\n  compare(other) {\n    return this._value.compare(other._value);\n  }\n\n  equals(other) {\n    return this.compare(other) === 0;\n  }\n\n  inspect() {\n    return this.constructor.name + ' { ' + this.toString() + ' }';\n  }\n}\n\n/**\n * Represents a token from a Cassandra ring where the partitioner\n * is Murmur3Partitioner.\n * \n * The raw token type is a varint (represented by MutableLong).\n */\nclass Murmur3Token extends Token {\n  constructor(value) {\n    super(value);\n  }\n\n  getType() {\n    return _Murmur3TokenType;\n  }\n}\n\n/**\n * Represents a token from a Cassandra ring where the partitioner\n * is RandomPartitioner.\n * \n * The raw token type is a bigint (represented by Number).\n */\nclass RandomToken extends Token {\n  constructor(value) {\n    super(value);\n  }\n\n  getType() {\n    return _RandomTokenType;\n  }\n}\n\n/**\n * Represents a token from a Cassandra ring where the partitioner\n * is ByteOrderedPartitioner.\n * \n * The raw token type is a blob (represented by Buffer or Array).\n */\nclass ByteOrderedToken extends Token {\n  constructor(value) {\n    super(value);\n  }\n\n  getType() {\n    return _OrderedTokenType;\n  }\n\n  toString() {\n    return this._value.toString('hex').toUpperCase();\n  }\n}\n\n/** \n * Represents a range of tokens on a Cassandra ring.\n *\n * A range is start-exclusive and end-inclusive.  It is empty when\n * start and end are the same token, except if that is the minimum\n * token, in which case the range covers the whole ring (this is\n * consistent with the behavior of CQL range queries).\n *\n * Note that CQL does not handle wrapping.  To query all partitions\n * in a range, see {@link unwrap}.\n */\nclass TokenRange {\n  constructor(start, end, tokenizer) {\n    this.start = start;\n    this.end = end;\n    Object.defineProperty(this, '_tokenizer', { value: tokenizer, enumerable: false});\n  }\n\n  /**\n   * Splits this range into a number of smaller ranges of equal \"size\"\n   * (referring to the number of tokens, not the actual amount of data).\n   *\n   * Splitting an empty range is not permitted.  But not that, in edge\n   * cases, splitting a range might produce one or more empty ranges.\n   *\n   * @param {Number} numberOfSplits Number of splits to make.\n   * @returns {TokenRange[]} Split ranges.\n   * @throws {Error} If splitting an empty range.\n   */\n  splitEvenly(numberOfSplits) {\n    if (numberOfSplits < 1) {\n      throw new Error(util.format(\"numberOfSplits (%d) must be greater than 0.\", numberOfSplits));\n    }\n    if (this.isEmpty()) {\n      throw new Error(\"Can't split empty range \" + this.toString());\n    }\n\n    const tokenRanges = [];\n    const splitPoints = this._tokenizer.split(this.start, this.end, numberOfSplits);\n    let splitStart = this.start;\n    let splitEnd;\n    for (let splitIndex = 0; splitIndex < splitPoints.length; splitIndex++) {\n      splitEnd = splitPoints[splitIndex];\n      tokenRanges.push(new TokenRange(splitStart, splitEnd, this._tokenizer));\n      splitStart = splitEnd;\n    }\n    tokenRanges.push(new TokenRange(splitStart, this.end, this._tokenizer));\n    return tokenRanges;\n  }\n\n  /**\n   * A range is empty when start and end are the same token, except if\n   * that is the minimum token, in which case the range covers the\n   * whole ring.  This is consistent with the behavior of CQL range\n   * queries.\n   *\n   * @returns {boolean} Whether this range is empty.\n   */\n  isEmpty() {\n    return this.start.equals(this.end) && !this.start.equals(this._tokenizer.minToken());\n  }\n\n  /**\n   * A range wraps around the end of the ring when the start token\n   * is greater than the end token and the end token is not the \n   * minimum token.\n   *\n   * @returns {boolean} Whether this range wraps around.\n   */\n  isWrappedAround() {\n    return this.start.compare(this.end) > 0 && !this.end.equals(this._tokenizer.minToken());\n  }\n\n  /**\n   * Splits this range into a list of two non-wrapping ranges.\n   *\n   * This will return the range itself if it is non-wrapped, or two\n   * ranges otherwise.\n   *\n   * This is useful for CQL range queries, which do not handle\n   * wrapping.\n   *\n   * @returns {TokenRange[]} The list of non-wrapping ranges.\n   */\n  unwrap() {\n    if (this.isWrappedAround()) {\n      return [\n        new TokenRange(this.start, this._tokenizer.minToken(), this._tokenizer),\n        new TokenRange(this._tokenizer.minToken(), this.end, this._tokenizer)\n      ];\n    }\n    return [this];\n  }\n\n  /**\n   * Whether this range contains a given Token.\n   * \n   * @param {*} token Token to check for.\n   * @returns {boolean} Whether or not the Token is in this range.\n   */\n  contains(token) {\n    if (this.isEmpty()) {\n      return false;\n    }\n    const minToken = this._tokenizer.minToken();\n    if (this.end.equals(minToken)) {\n      if (this.start.equals(minToken)) {\n        return true; // ]minToken, minToken] === full ring\n      } else if (token.equals(minToken)) {\n        return true;\n      }\n      return token.compare(this.start) > 0;\n    }\n\n    const isAfterStart = token.compare(this.start) > 0;\n    const isBeforeEnd = token.compare(this.end) <= 0;\n    // if wrapped around ring, token is in ring if its after start or before end.\n    // otherwise, token is in ring if its after start and before end.\n    return this.isWrappedAround() \n      ? isAfterStart || isBeforeEnd\n      : isAfterStart && isBeforeEnd;\n  }\n\n  /**\n   * Determines if the input range is equivalent to this one.\n   * \n   * @param {TokenRange} other Range to compare with.\n   * @returns {boolean} Whether or not the ranges are equal.\n   */\n  equals(other) {\n    if (other === this) {\n      return true;\n    } else if (other instanceof TokenRange) {\n      return this.compare(other) === 0;\n    }\n    return false;\n  }\n\n  /**\n   * Returns 0 if the values are equal, otherwise compares against\n   * start, if start is equal, compares against end.\n   *  \n   * @param {TokenRange} other Range to compare with.\n   * @returns {Number} \n   */\n  compare(other) {\n    const compareStart = this.start.compare(other.start);\n    return compareStart !== 0 ? compareStart : this.end.compare(other.end);\n  }\n\n  toString() {\n    return util.format(']%s, %s]', \n      this.start.toString(),\n      this.end.toString()\n    );\n  }\n}\n\nexports.Token = Token;\nexports.TokenRange = TokenRange;\nexports.ByteOrderedToken = ByteOrderedToken;\nexports.Murmur3Token = Murmur3Token;\nexports.RandomToken = RandomToken;","'use strict';\n\nfunction aggregateByObjectName(list) {\n\tconst data = {};\n\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst listElement = list[i];\n\n\t\tif (!listElement || typeof listElement.constructor === 'undefined') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (data.hasOwnProperty(listElement.constructor.name)) {\n\t\t\tdata[listElement.constructor.name] += 1;\n\t\t} else {\n\t\t\tdata[listElement.constructor.name] = 1;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction updateMetrics(gauge, data, includeTimestamp) {\n\tgauge.reset();\n\tfor (const key in data) {\n\t\tif (includeTimestamp) {\n\t\t\tgauge.set({ type: key }, data[key], Date.now());\n\t\t} else {\n\t\t\tgauge.set({ type: key }, data[key]);\n\t\t}\n\t}\n}\n\nmodule.exports = {\n\taggregateByObjectName,\n\tupdateMetrics\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","module.exports = require(\"url\");","/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n","/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createError(status, err, {\n      expose: false\n    }))\n  }\n\n  var res = this.res\n  var msg = statuses[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip content-* header fields.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    var header = headers[i]\n    if (header.substr(0, 8) === 'content-' && header !== 'content-location') {\n      res.removeHeader(header)\n    }\n  }\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    'etag': this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  // TODO: this is all lame, refactor meeee\n  var finished = false\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // response finished, done with the fd\n  onFinished(res, function onfinished () {\n    finished = true\n    destroy(stream)\n  })\n\n  // error handling code-smell\n  stream.on('error', function onerror (err) {\n    // request already finished\n    if (finished) return\n\n    // clean up stream\n    finished = true\n    destroy(stream)\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","\"use strict\";\nconst util = require('util');\n\nconst policies = require('./policies');\nconst types = require('./types');\nconst utils = require('./utils');\nconst tracker = require('./tracker');\nconst metrics = require('./metrics');\n\n/** Core connections per host for protocol versions 1 and 2 */\nconst coreConnectionsPerHostV2 = {\n  [types.distance.local]: 2,\n  [types.distance.remote]: 1,\n  [types.distance.ignored]: 0\n};\n\n/** Core connections per host for protocol version 3 and above */\nconst coreConnectionsPerHostV3 = {\n  [types.distance.local]: 1,\n  [types.distance.remote]: 1,\n  [types.distance.ignored]: 0\n};\n\n/** Default maxRequestsPerConnection value for protocol v1 and v2 */\nconst maxRequestsPerConnectionV2 = 128;\n\n/** Default maxRequestsPerConnection value for protocol v3+ */\nconst maxRequestsPerConnectionV3 = 2048;\n\n/**\n * @returns {ClientOptions}\n */\nfunction defaultOptions () {\n  return ({\n    policies: {\n      addressResolution: policies.defaultAddressTranslator(),\n      loadBalancing: policies.defaultLoadBalancingPolicy(),\n      reconnection: policies.defaultReconnectionPolicy(),\n      retry: policies.defaultRetryPolicy(),\n      speculativeExecution: policies.defaultSpeculativeExecutionPolicy(),\n      timestampGeneration: policies.defaultTimestampGenerator()\n    },\n    queryOptions: {\n      consistency: types.consistencies.localOne,\n      fetchSize: 5000,\n      prepare: false,\n      captureStackTrace: false\n    },\n    protocolOptions: {\n      port: 9042,\n      maxSchemaAgreementWaitSeconds: 10,\n      maxVersion: 0,\n      noCompact: false\n    },\n    pooling: {\n      heartBeatInterval: 30000,\n      warmup: true\n    },\n    socketOptions: {\n      connectTimeout: 5000,\n      defunctReadTimeoutThreshold: 64,\n      keepAlive: true,\n      keepAliveDelay: 0,\n      readTimeout: 12000,\n      tcpNoDelay: true,\n      coalescingThreshold: 65536\n    },\n    authProvider: null,\n    requestTracker: null,\n    metrics: new metrics.DefaultMetrics(),\n    maxPrepared: 500,\n    refreshSchemaDelay: 1000,\n    isMetadataSyncEnabled: true,\n    prepareOnAllHosts: true,\n    rePrepareOnUp: true,\n    encoding: {\n      copyBuffer: true,\n      useUndefinedAsUnset: true\n    }\n  });\n}\n\n/**\n * Extends and validates the user options\n * @param {Object} [baseOptions] The source object instance that will be overridden\n * @param {Object} userOptions\n * @returns {Object}\n */\nfunction extend(baseOptions, userOptions) {\n  if (arguments.length === 1) {\n    userOptions = arguments[0];\n    baseOptions = {};\n  }\n  const options = utils.deepExtend(baseOptions, defaultOptions(), userOptions);\n  if (!util.isArray(options.contactPoints) || options.contactPoints.length === 0) {\n    throw new TypeError('Contacts points are not defined.');\n  }\n  for (let i = 0; i < options.contactPoints.length; i++) {\n    const hostName = options.contactPoints[i];\n    if (!hostName) {\n      throw new TypeError(util.format('Contact point %s (%s) is not a valid host name, ' +\n        'the following values are valid contact points: ipAddress, hostName or ipAddress:port', i, hostName));\n    }\n  }\n  if (!options.logEmitter) {\n    options.logEmitter = function () {};\n  }\n  if (!options.queryOptions) {\n    throw new TypeError('queryOptions not defined in options');\n  }\n\n  if (options.requestTracker !== null && !(options.requestTracker instanceof tracker.RequestTracker)) {\n    throw new TypeError('requestTracker must be an instance of RequestTracker');\n  }\n\n  if (!(options.metrics instanceof metrics.ClientMetrics)) {\n    throw new TypeError('metrics must be an instance of ClientMetrics');\n  }\n\n  validatePoliciesOptions(options.policies);\n  validateProtocolOptions(options.protocolOptions);\n  validateSocketOptions(options.socketOptions);\n  options.encoding = options.encoding || {};\n  validateEncodingOptions(options.encoding);\n  if (options.profiles && !util.isArray(options.profiles)) {\n    throw new TypeError('profiles must be an Array of ExecutionProfile instances');\n  }\n  return options;\n}\n\n/**\n * Validates the policies from the client options.\n * @param {ClientOptions.policies} policiesOptions\n * @private\n */\nfunction validatePoliciesOptions(policiesOptions) {\n  if (!policiesOptions) {\n    throw new TypeError('policies not defined in options');\n  }\n  if (!(policiesOptions.loadBalancing instanceof policies.loadBalancing.LoadBalancingPolicy)) {\n    throw new TypeError('Load balancing policy must be an instance of LoadBalancingPolicy');\n  }\n  if (!(policiesOptions.reconnection instanceof policies.reconnection.ReconnectionPolicy)) {\n    throw new TypeError('Reconnection policy must be an instance of ReconnectionPolicy');\n  }\n  if (!(policiesOptions.retry instanceof policies.retry.RetryPolicy)) {\n    throw new TypeError('Retry policy must be an instance of RetryPolicy');\n  }\n  if (!(policiesOptions.addressResolution instanceof policies.addressResolution.AddressTranslator)) {\n    throw new TypeError('Address resolution policy must be an instance of AddressTranslator');\n  }\n  if (policiesOptions.timestampGeneration !== null &&\n    !(policiesOptions.timestampGeneration instanceof policies.timestampGeneration.TimestampGenerator)) {\n    throw new TypeError('Timestamp generation policy must be an instance of TimestampGenerator');\n  }\n}\n\n/**\n * Validates the protocol options.\n * @param {ClientOptions.protocolOptions} protocolOptions\n * @private\n */\nfunction validateProtocolOptions(protocolOptions) {\n  if (!protocolOptions) {\n    throw new TypeError('protocolOptions not defined in options');\n  }\n  const version = protocolOptions.maxVersion;\n  if (version && (typeof version !== 'number' || !types.protocolVersion.isSupported(version))) {\n    throw new TypeError(util.format('protocolOptions.maxVersion provided (%s) is invalid', version));\n  }\n}\n\n/**\n * Validates the socket options.\n * @param {ClientOptions.socketOptions} socketOptions\n * @private\n */\nfunction validateSocketOptions(socketOptions) {\n  if (!socketOptions) {\n    throw new TypeError('socketOptions not defined in options');\n  }\n  if (typeof socketOptions.readTimeout !== 'number') {\n    throw new TypeError('socketOptions.readTimeout must be a Number');\n  }\n  if (typeof socketOptions.coalescingThreshold !== 'number' || socketOptions.coalescingThreshold <= 0) {\n    throw new TypeError('socketOptions.coalescingThreshold must be a positive Number');\n  }\n}\n\n/**\n * Validates the encoding options.\n * @param {ClientOptions.encoding} encodingOptions\n * @private\n */\nfunction validateEncodingOptions(encodingOptions) {\n  if (encodingOptions.map) {\n    const mapConstructor = encodingOptions.map;\n    if (typeof mapConstructor !== 'function' ||\n      typeof mapConstructor.prototype.forEach !== 'function' ||\n      typeof mapConstructor.prototype.set !== 'function') {\n      throw new TypeError('Map constructor not valid');\n    }\n  }\n\n  if (encodingOptions.set) {\n    const setConstructor = encodingOptions.set;\n    if (typeof setConstructor !== 'function' ||\n      typeof setConstructor.prototype.forEach !== 'function' ||\n      typeof setConstructor.prototype.add !== 'function') {\n      throw new TypeError('Set constructor not valid');\n    }\n  }\n\n  if ((encodingOptions.useBigIntAsLong || encodingOptions.useBigIntAsVarint) && typeof BigInt === 'undefined') {\n    throw new TypeError('BigInt is not supported by the JavaScript engine');\n  }\n}\n\n/**\n * Sets the default options that depend on the protocol version.\n * @param {ClientOptions} options\n * @param {Number} version\n */\nfunction setProtocolDependentDefaults(options, version) {\n  let coreConnectionsPerHost = coreConnectionsPerHostV3;\n  let maxRequestsPerConnection = maxRequestsPerConnectionV3;\n  if (!types.protocolVersion.uses2BytesStreamIds(version)) {\n    coreConnectionsPerHost = coreConnectionsPerHostV2;\n    maxRequestsPerConnection = maxRequestsPerConnectionV2;\n  }\n  options.pooling = utils.deepExtend({}, { coreConnectionsPerHost, maxRequestsPerConnection }, options.pooling);\n}\n\nexports.extend = extend;\nexports.defaultOptions = defaultOptions;\nexports.coreConnectionsPerHostV2 = coreConnectionsPerHostV2;\nexports.coreConnectionsPerHostV3 = coreConnectionsPerHostV3;\nexports.maxRequestsPerConnectionV2 = maxRequestsPerConnectionV2;\nexports.maxRequestsPerConnectionV3 = maxRequestsPerConnectionV3;\nexports.setProtocolDependentDefaults = setProtocolDependentDefaults;","'use strict';\n\nconst errors = require('../errors');\n\n/**\n * Represents a CQL query operator, like >=, IN, <, ...\n * @ignore\n */\nclass QueryOperator {\n  /**\n   * Creates a new instance of <code>QueryOperator</code>.\n   * @param {String} key\n   * @param value\n   * @param [hasChildValues]\n   */\n  constructor(key, value, hasChildValues) {\n    /**\n     * The CQL key representing the operator\n     * @type {string}\n     */\n    this.key = key;\n\n    /**\n     * The value to be used as parameter.\n     */\n    this.value = value;\n\n    /**\n     * Determines whether a query operator can have child values or operators (AND, OR)\n     */\n    this.hasChildValues = hasChildValues;\n  }\n}\n\n/**\n * Represents a CQL assignment operation, like col = col + x.\n * @ignore\n */\nclass QueryAssignment {\n  constructor(sign, value, inverted) {\n    /**\n     * Gets the sign of the assignment operation.\n     */\n    this.sign = sign;\n\n    /**\n     * Gets the value to be assigned.\n     */\n    this.value = value;\n\n    /**\n     * Determines whether the assignment should be inverted (prepends), e.g: col = x + col\n     * @type {boolean}\n     */\n    this.inverted = !!inverted;\n  }\n}\n\n/**\n * Contains functions that represents operators in a query.\n * @alias module:mapping~q\n * @type {Object}\n * @property {function} in_ Represents the CQL operator \"IN\".\n * @property {function} gt Represents the CQL operator greater than \">\".\n * @property {function} gte Represents the CQL operator greater than or equals to \">=\" .\n * @property {function} lt Represents the CQL operator less than \"<\" .\n * @property {function} lte Represents the CQL operator less than or equals to \"<=\" .\n * @property {function} notEq Represents the CQL operator not equals to \"!=\" .\n * @property {function} and When applied to a property, it represents two CQL conditions on the same column separated\n * by the logical AND operator, e.g: \"col1 >= x col < y\"\n * @property {function} incr Represents the CQL increment assignment used for counters, e.g: \"col = col + x\"\n * @property {function} decr Represents the CQL decrement assignment used for counters, e.g: \"col = col - x\"\n * @property {function} append Represents the CQL append assignment used for collections, e.g: \"col = col + x\"\n * @property {function} prepend Represents the CQL prepend assignment used for lists, e.g: \"col = x + col\"\n * @property {function} remove Represents the CQL remove assignment used for collections, e.g: \"col = col - x\"\n */\nconst q = {\n  in_: function in_(arr) {\n    if (!Array.isArray(arr)) {\n      throw new errors.ArgumentError('IN operator supports only Array values');\n    }\n    return new QueryOperator('IN', arr);\n  },\n\n  gt: function gt(value) {\n    return new QueryOperator('>', value);\n  },\n\n  gte: function gte(value) {\n    return new QueryOperator('>=', value);\n  },\n\n  lt: function lt(value) {\n    return new QueryOperator('<', value);\n  },\n\n  lte: function lte(value) {\n    return new QueryOperator('<=', value);\n  },\n\n  notEq: function notEq(value) {\n    return new QueryOperator('!=', value);\n  },\n\n  and: function (condition1, condition2) {\n    return new QueryOperator('AND', [ condition1, condition2 ], true);\n  },\n\n  incr: function incr(value) {\n    return new QueryAssignment('+', value);\n  },\n\n  decr: function decr(value) {\n    return new QueryAssignment('-', value);\n  },\n\n  append: function append(value) {\n    return new QueryAssignment('+', value);\n  },\n\n  prepend: function prepend(value) {\n    return new QueryAssignment('+', value, true);\n  },\n\n  remove: function remove(value) {\n    return new QueryAssignment('-', value);\n  }\n};\n\nexports.q = q;\nexports.QueryAssignment = QueryAssignment;\nexports.QueryOperator = QueryOperator;","'use strict';\n\n/**\n * Represents a query or a set of queries used to perform a mutation in a batch.\n * @alias module:mapping~ModelBatchItem\n */\nclass ModelBatchItem {\n  /**\n   * @param {Promise<Array>} queries\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @param {ModelMappingInfo} mappingInfo\n   */\n  constructor(queries, doc, docInfo, mappingInfo) {\n    this._queries = queries;\n    this._doc = doc;\n    this._docInfo = docInfo;\n    this._mappingInfo = mappingInfo;\n  }\n\n  /**\n   * Pushes the queries and parameters represented by this instance to the provided array.\n   * @internal\n   * @ignore\n   * @param {Array} arr\n   * @return {Promise<{isIdempotent, isCounter}>}\n   */\n  pushQueries(arr) {\n    let isIdempotent = true;\n    let isCounter;\n    return this._queries.then(queries => {\n      queries.forEach(q => {\n        // It's idempotent if all the queries contained are idempotent\n        isIdempotent = isIdempotent && q.isIdempotent;\n\n        // Either all queries are counter mutation or we let it fail at server level\n        isCounter = q.isCounter;\n\n        arr.push({ query: q.query, params: q.paramsGetter(this._doc, this._docInfo) });\n      });\n\n      return { isIdempotent, isCounter };\n    });\n  }\n\n  /**\n   * Gets the mapping information for this batch item.\n   * @internal\n   * @ignore\n   */\n  getMappingInfo() {\n    return this._mappingInfo;\n  }\n}\n\nmodule.exports = ModelBatchItem;","'use strict';\n\nconst util = require('util');\nconst utils = require('../utils');\nconst inspectMethod = util.inspect.custom || 'inspect';\n\n/**\n * Represents the result of an execution as an iterable of objects in the Mapper.\n * @alias module:mapping~Result\n */\nclass Result {\n  /**\n   * Creates a new instance of Result.\n   * @param {ResultSet} rs\n   * @param {ModelMappingInfo} info\n   * @param {Function} rowAdapter\n   */\n  constructor(rs, info, rowAdapter) {\n    this._rs = rs;\n    this._info = info;\n    this._rowAdapter = rowAdapter;\n\n    /**\n     * When there is a single cell containing the result of the a LWT operation, hide the result from the user.\n     * @private\n     */\n    this._isEmptyLwt = (rs.columns !== null\n      && rs.columns.length === 1 && this._rs.rowLength === 1 && rs.columns[0].name === '[applied]');\n\n    /**\n     * Gets the amount of the documents contained in this Result instance.\n     * <p>\n     *   When the results are paged, it returns the length of the current paged results not the total amount of\n     *   rows in the table matching the query.\n     * </p>\n     * @type {Number}\n     */\n    this.length = this._isEmptyLwt ? 0 : (rs.rowLength || 0);\n\n    /**\n     * A string token representing the current page state of query.\n     * <p>\n     *   When provided, it can be used in the following executions to continue paging and retrieve the remained of the\n     *   result for the query.\n     * </p>\n     * @type {String}\n     * @default null\n     */\n    this.pageState = rs.pageState;\n  }\n\n  /**\n   * When this instance is the result of a conditional update query, it returns whether it was successful.\n   * Otherwise, it returns <code>true</code>.\n   * <p>\n   *   For consistency, this method always returns <code>true</code> for non-conditional queries (although there is\n   *   no reason to call the method in that case). This is also the case for conditional DDL statements\n   *   (CREATE KEYSPACE... IF NOT EXISTS, CREATE TABLE... IF NOT EXISTS), for which the server doesn't return\n   *   information whether it was applied or not.\n   * </p>\n   */\n  wasApplied() {\n    return this._rs.wasApplied();\n  }\n\n  /**\n   * Gets the first document in this result or null when the result is empty.\n   */\n  first() {\n    if (!this._rs.rowLength || this._isEmptyLwt) {\n      return null;\n    }\n    return this._rowAdapter(this._rs.rows[0], this._info);\n  }\n\n  /**\n   * Returns a new Iterator object that contains the document values.\n   */\n  *[Symbol.iterator]() {\n    if (this._isEmptyLwt) {\n      // Empty iterator\n      return;\n    }\n\n    for (let i = 0; i < this._rs.rows.length; i++) {\n      yield this._rowAdapter(this._rs.rows[i], this._info);\n    }\n  }\n\n  /**\n   * Converts the current instance to an Array of documents.\n   * @return {Array<Object>}\n   */\n  toArray() {\n    if (this._isEmptyLwt) {\n      return utils.emptyArray;\n    }\n\n    return this._rs.rows.map(row => this._rowAdapter(row, this._info));\n  }\n\n  /**\n   * Executes a provided function once per result element.\n   * @param {Function} callback Function to execute for each element, taking two arguments: currentValue and index.\n   * @param {Object} [thisArg] Value to use as <code>this</code> when executing callback.\n   */\n  forEach(callback, thisArg) {\n    let index = 0;\n    thisArg = thisArg || this;\n    for (const doc of this) {\n      callback.call(thisArg, doc, index++);\n    }\n  }\n\n  [inspectMethod]() {\n    return this.toArray();\n  }\n}\n\nmodule.exports = Result;","/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace (obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty (obj, prop, getter) {\n  function get () {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString (obj) {\n  return obj.toString()\n}\n","/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","module.exports = require(\"querystring\");","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.substr(1)) + ', fn) instead');\n    name = name.substr(1);\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.substr(1);\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.substr(protohost.length);\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n        continue;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        return next(layerError || err);\n      }\n\n      if (route) {\n        return layer.handle_request(req, res, next);\n      }\n\n      trim_prefix(layer, layerError, layerPath, path);\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.substr(protohost.length + removed.length);\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.substr(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * content-disposition\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar basename = require('path').basename\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n * @private\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n * @private\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n * @private\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n * @private\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n * @private\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n * @private\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n * @private\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n * @private\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 6987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = Buffer.from(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @private\n */\n\nfunction pencode (char) {\n  return '%' + String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n *\n * @public\n * @param {string} type\n * @param {object} parameters\n * @constructor\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n","/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string')\n  }\n\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n","/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!IP_RANGES.hasOwnProperty(val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n","'use strict';\n\n/**\n * Contains driver tuning policies to determine [load balancing]{@link module:policies/loadBalancing},\n *  [retrying]{@link module:policies/retry} queries, [reconnecting]{@link module:policies/reconnection} to a node,\n *  [address resolution]{@link module:policies/addressResolution},\n *  [timestamp generation]{@link module:policies/timestampGeneration} and\n *  [speculative execution]{@link module:policies/speculativeExecution}.\n * @module policies\n */\nconst addressResolution = exports.addressResolution = require('./address-resolution');\nconst loadBalancing = exports.loadBalancing = require('./load-balancing');\nconst reconnection = exports.reconnection = require('./reconnection');\nconst retry = exports.retry = require('./retry');\nconst speculativeExecution = exports.speculativeExecution = require('./speculative-execution');\nconst timestampGeneration = exports.timestampGeneration = require('./timestamp-generation');\n\n/**\n * Returns a new instance of the default address translator policy used by the driver.\n * @returns {AddressTranslator}\n */\nexports.defaultAddressTranslator = function () {\n  return new addressResolution.AddressTranslator();\n};\n\n/**\n * Returns a new instance of the default load-balancing policy used by the driver.\n * @returns {LoadBalancingPolicy}\n */\nexports.defaultLoadBalancingPolicy = function () {\n  return new loadBalancing.TokenAwarePolicy(new loadBalancing.DCAwareRoundRobinPolicy());\n};\n\n/**\n * Returns a new instance of the default retry policy used by the driver.\n * @returns {RetryPolicy}\n */\nexports.defaultRetryPolicy = function () {\n  return new retry.RetryPolicy();\n};\n\n/**\n * Returns a new instance of the default reconnection policy used by the driver.\n * @returns {ReconnectionPolicy}\n */\nexports.defaultReconnectionPolicy = function () {\n  return new reconnection.ExponentialReconnectionPolicy(1000, 10 * 60 * 1000, false);\n};\n\n\n/**\n * Returns a new instance of the default speculative execution policy used by the driver.\n * @returns {SpeculativeExecutionPolicy}\n */\nexports.defaultSpeculativeExecutionPolicy = function () {\n  return new speculativeExecution.NoSpeculativeExecutionPolicy();\n};\n\n/**\n * Returns a new instance of the default timestamp generator used by the driver.\n * @returns {TimestampGenerator}\n */\nexports.defaultTimestampGenerator = function () {\n  return new timestampGeneration.MonotonicTimestampGenerator();\n};","module.exports = require(\"dns\");","'use strict';\n\nconst crypto = require('crypto');\nconst utils = require('../utils');\n\n/** @module types */\n\n/**\n * Creates a new instance of Uuid based on a Buffer\n * @class\n * @classdesc Represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.\n * @param {Buffer} buffer The 16-length buffer.\n * @constructor\n */\nfunction Uuid(buffer) {\n  if (!buffer || buffer.length !== 16) {\n    throw new Error('You must provide a buffer containing 16 bytes');\n  }\n  this.buffer = buffer;\n}\n\n/**\n * Parses a string representation of a Uuid\n * @param {String} value\n * @returns {Uuid}\n */\nUuid.fromString = function (value) {\n  //36 chars: 32 + 4 hyphens\n  if (typeof value !== 'string' || value.length !== 36) {\n    throw new Error('Invalid string representation of Uuid, it should be in the 00000000-0000-0000-0000-000000000000');\n  }\n  return new Uuid(utils.allocBufferFromString(value.replace(/-/g, ''), 'hex'));\n};\n\n/**\n * Creates a new random (version 4) Uuid.\n * @param {function} [callback] Optional callback to be invoked with the error as first parameter and the created Uuid as\n * second parameter.\n * @returns {Uuid}\n */\nUuid.random = function (callback) {\n  if (callback) {\n    getRandomBytes(function(err, buffer) {\n      if (err) {\n        return callback(err);\n      }\n      return callback(null, createUuidFromBuffer(buffer));\n    });\n  } else {\n    const buffer = getRandomBytes();\n    return createUuidFromBuffer(buffer);\n  }\n};\n\n/**\n * Gets the bytes representation of a Uuid\n * @returns {Buffer}\n */\nUuid.prototype.getBuffer = function () {\n  return this.buffer;\n};\n/**\n * Compares this object to the specified object.\n * The result is true if and only if the argument is not null, is a UUID object, and contains the same value, bit for bit, as this UUID.\n * @param {Uuid} other The other value to test for equality.\n */\nUuid.prototype.equals = function (other) {\n  return other instanceof Uuid && this.buffer.equals(other.buffer);\n};\n\n/**\n * Returns a string representation of the value of this Uuid instance.\n * 32 hex separated by hyphens, in the form of 00000000-0000-0000-0000-000000000000.\n * @returns {String}\n */\nUuid.prototype.toString = function () {\n  //32 hex representation of the Buffer\n  const hexValue = getHex(this);\n  return (\n    hexValue.substr(0, 8) + '-' +\n    hexValue.substr(8, 4) + '-' +\n    hexValue.substr(12, 4) + '-' +\n    hexValue.substr(16, 4) + '-' +\n    hexValue.substr(20, 12));\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nUuid.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nUuid.prototype.toJSON = function () {\n  return this.toString();\n};\n\n\n/**\n * Returns new Uuid\n * @private\n * @returns {Uuid}\n */\nfunction createUuidFromBuffer (buffer) {\n  //clear the version\n  buffer[6] &= 0x0f;\n  //set the version 4\n  buffer[6] |= 0x40;\n  //clear the variant\n  buffer[8] &= 0x3f;\n  //set the IETF variant\n  buffer[8] |= 0x80;\n  return new Uuid(buffer);\n}\n\n/**\n * @private\n * @returns {String} 32 hex representation of the instance, without separators\n */\nfunction getHex (uuid) {\n  return uuid.buffer.toString('hex');\n}\n\n/**\n * Gets a crypto generated 16 bytes\n * @private\n * @returns {Buffer}\n */\nfunction getRandomBytes (cb) {\n  return crypto.randomBytes(16, cb);\n}\n\nmodule.exports = Uuid;\n","// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @module types */\n\nvar utils = require('../utils');\n\n/**\n * Constructs a two's-complement integer an array containing bits of the\n * integer in 32-bit (signed) pieces, given in little-endian order (i.e.,\n * lowest-order bits in the first piece), and the sign of -1 or 0.\n *\n * See the from* functions below for other convenient ways of constructing\n * Integers.\n *\n * The internal representation of an integer is an array of 32-bit signed\n * pieces, along with a sign (0 or -1) that indicates the contents of all the\n * other 32-bit pieces out to infinity.  We use 32-bit pieces because these are\n * the size of integers on which Javascript performs bit-operations.  For\n * operations like addition and multiplication, we split each number into 16-bit\n * pieces, which can easily be multiplied within Javascript's floating-point\n * representation without overflow or change in sign.\n *\n * @constructor\n * @param {Array.<number>} bits Array containing the bits of the number.\n * @param {number} sign The sign of the number: -1 for negative and 0 positive.\n * @final\n */\nfunction Integer (bits, sign) {\n  /**\n   * @type {!Array.<number>}\n   * @private\n   */\n  this.bits_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sign_ = sign;\n\n  // Copy the 32-bit signed integer values passed in.  We prune out those at the\n  // top that equal the sign since they are redundant.\n  var top = true;\n  for (var i = bits.length - 1; i >= 0; i--) {\n    var val = bits[i] | 0;\n    if (!top || val != sign) {\n      this.bits_[i] = val;\n      top = false;\n    }\n  }\n}\n\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Integer representations of small integer values.\n * @type {!Object}\n * @private\n */\nInteger.IntCache_ = {};\n\n\n/**\n * Returns an Integer representing the given (32-bit) integer value.\n * @param {number} value A 32-bit integer value.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Integer.IntCache_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Integer([value | 0], value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Integer.IntCache_[value] = obj;\n  }\n  return obj;\n};\n\n\n/**\n * Returns an Integer representing the given value, provided that it is a finite\n * number.  Otherwise, zero is returned.\n * @param {number} value The value in question.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Integer.ZERO;\n  } else if (value < 0) {\n    return Integer.fromNumber(-value).negate();\n  } else {\n    var bits = [];\n    var pow = 1;\n    for (var i = 0; value >= pow; i++) {\n      bits[i] = (value / pow) | 0;\n      pow *= Integer.TWO_PWR_32_DBL_;\n    }\n    return new Integer(bits, 0);\n  }\n};\n\n\n/**\n * Returns a Integer representing the value that comes by concatenating the\n * given entries, each is assumed to be 32 signed bits, given in little-endian\n * order (lowest order bits in the lowest index), and sign-extending the highest\n * order 32-bit value.\n * @param {Array.<number>} bits The bits of the number, in 32-bit signed pieces,\n *     in little-endian order.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromBits = function(bits) {\n  var high = bits[bits.length - 1];\n  //noinspection JSBitwiseOperatorUsage\n  return new Integer(bits, high & (1 << 31) ? -1 : 0);\n};\n\n\n/**\n * Returns an Integer representation of the given string, written using the\n * given radix.\n * @param {string} str The textual representation of the Integer.\n * @param {number=} opt_radix The radix in which the text is written.\n * @return {!Integer} The corresponding Integer value.\n */\nInteger.fromString = function(str, opt_radix) {\n  if (str.length == 0) {\n    throw TypeError('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return Integer.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw TypeError('number format error: interior \"-\" character');\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Integer.fromNumber(Math.pow(radix, 8));\n\n  var result = Integer.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Integer.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Integer.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Integer.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n/**\n * Returns an Integer representation of a given big endian Buffer.\n * The internal representation of bits contains bytes in groups of 4\n * @param {Buffer} buf\n * @returns {Integer}\n */\nInteger.fromBuffer = function (buf) {\n  var bits = new Array(Math.ceil(buf.length / 4));\n  //noinspection JSBitwiseOperatorUsage\n  var sign = buf[0] & (1 << 7) ? -1 : 0;\n  for (var i = 0; i < bits.length; i++) {\n    var offset = buf.length - ((i + 1) * 4);\n    var value;\n    if (offset < 0) {\n      //The buffer length is not multiple of 4\n      offset = offset + 4;\n      value = 0;\n      for (var j = 0; j < offset; j++) {\n        var byte = buf[j];\n        if (sign === -1) {\n          //invert the bits\n          byte = ~byte & 0xff;\n        }\n        value = value | (byte << (offset - j - 1) * 8);\n      }\n      if (sign === -1) {\n        //invert all the bits\n        value = ~value;\n      }\n    }\n    else {\n      value = buf.readInt32BE(offset);\n    }\n    bits[i] = value;\n  }\n  return new Integer(bits, sign);\n};\n\n/**\n * Returns a big endian buffer representation of an Integer.\n * Internally the bits are represented using 4 bytes groups (numbers),\n * in the Buffer representation there might be the case where we need less than the 4 bytes.\n * For example: 0x00000001 -> '01', 0xFFFFFFFF -> 'FF', 0xFFFFFF01 -> 'FF01'\n * @param {Integer} value\n * @returns {Buffer}\n*/\nInteger.toBuffer = function (value) {\n  var sign = value.sign_;\n  var bits = value.bits_;\n  if (bits.length === 0) {\n    //[0] or [0xffffffff]\n    return utils.allocBufferFromArray([value.sign_]);\n  }\n  //the high bits might need to be represented in less than 4 bytes\n  var highBits = bits[bits.length-1];\n  if (sign === -1) {\n    highBits = ~highBits;\n  }\n  var high = [];\n  if (highBits >>> 24 > 0) {\n    high.push((highBits >> 24) & 0xff);\n  }\n  if (highBits >>> 16 > 0) {\n    high.push((highBits >> 16) & 0xff);\n  }\n  if (highBits >>> 8 > 0) {\n    high.push((highBits >> 8) & 0xff);\n  }\n  high.push(highBits & 0xff);\n  if (sign === -1) {\n    //The byte containing the sign bit got removed\n    if (high[0] >> 7 !== 0) {\n      //it is going to be negated\n      high.unshift(0);\n    }\n  }\n  else if (high[0] >> 7 !== 0) {\n    //its positive but it lost the byte containing the sign bit\n    high.unshift(0);\n  }\n  var buf = utils.allocBufferUnsafe(high.length + ((bits.length-1) * 4));\n  for (var j = 0; j < high.length; j++) {\n    var b = high[j];\n    if (sign === -1) {\n      buf[j] = ~b;\n    }\n    else {\n      buf[j] = b;\n    }\n  }\n  for (var i = 0; i < bits.length - 1; i++) {\n    var group = bits[bits.length - 2 - i];\n    var offset = high.length + i * 4;\n    buf.writeInt32BE(group, offset);\n  }\n  return buf;\n};\n\n\n/**\n * A number used repeatedly in calculations.  This must appear before the first\n * call to the from* functions below.\n * @type {number}\n * @private\n */\nInteger.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);\n\n\n/** @type {!Integer} */\nInteger.ZERO = Integer.fromInt(0);\n\n\n/** @type {!Integer} */\nInteger.ONE = Integer.fromInt(1);\n\n\n/**\n * @type {!Integer}\n * @private\n */\nInteger.TWO_PWR_24_ = Integer.fromInt(1 << 24);\n\n\n/**\n * Returns the value, assuming it is a 32-bit integer.\n * @return {number} The corresponding int value.\n */\nInteger.prototype.toInt = function() {\n  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;\n};\n\n\n/** @return {number} The closest floating-point representation to this value. */\nInteger.prototype.toNumber = function() {\n  if (this.isNegative()) {\n    return -this.negate().toNumber();\n  } else {\n    var val = 0;\n    var pow = 1;\n    for (var i = 0; i < this.bits_.length; i++) {\n      val += this.getBitsUnsigned(i) * pow;\n      pow *= Integer.TWO_PWR_32_DBL_;\n    }\n    return val;\n  }\n};\n\n\n/**\n * @param {number=} opt_radix The radix in which the text should be written.\n * @return {string} The textual representation of this value.\n * @override\n */\nInteger.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  } else if (this.isNegative()) {\n    return '-' + this.negate().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Integer.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.divide(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit (signed) piece of the Integer according to\n * little-endian order (i.e., index 0 contains the smallest bits).\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as a signed number.\n */\nInteger.prototype.getBits = function(index) {\n  if (index < 0) {\n    return 0;  // Allowing this simplifies bit shifting operations below...\n  } else if (index < this.bits_.length) {\n    return this.bits_[index];\n  } else {\n    return this.sign_;\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit piece as an unsigned number.\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as an unsigned number.\n */\nInteger.prototype.getBitsUnsigned = function(index) {\n  var val = this.getBits(index);\n  return val >= 0 ? val : Integer.TWO_PWR_32_DBL_ + val;\n};\n\n\n/** @return {number} The sign bit of this number, -1 or 0. */\nInteger.prototype.getSign = function() {\n  return this.sign_;\n};\n\n\n/** @return {boolean} Whether this value is zero. */\nInteger.prototype.isZero = function() {\n  if (this.sign_ != 0) {\n    return false;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    if (this.bits_[i] != 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/** @return {boolean} Whether this value is negative. */\nInteger.prototype.isNegative = function() {\n  return this.sign_ == -1;\n};\n\n\n/** @return {boolean} Whether this value is odd. */\nInteger.prototype.isOdd = function() {\n  return (this.bits_.length == 0) && (this.sign_ == -1) ||\n    (this.bits_.length > 0) && ((this.bits_[0] & 1) != 0);\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer equals the other.\n */\nInteger.prototype.equals = function(other) {\n  if (this.sign_ != other.sign_) {\n    return false;\n  }\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  for (var i = 0; i < len; i++) {\n    if (this.getBits(i) != other.getBits(i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer does not equal the other.\n */\nInteger.prototype.notEquals = function(other) {\n  return !this.equals(other);\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than the other.\n */\nInteger.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than or equal to the other.\n */\nInteger.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than the other.\n */\nInteger.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n\n/**\n * @param {Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than or equal to the other.\n */\nInteger.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n\n/**\n * Compares this Integer with the given one.\n * @param {Integer} other Integer to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\nInteger.prototype.compare = function(other) {\n  var diff = this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  } else if (diff.isZero()) {\n    return 0;\n  } else {\n    return +1;\n  }\n};\n\n\n/**\n * Returns an integer with only the first numBits bits of this value, sign\n * extended from the final bit.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!Integer} The shorted integer value.\n */\nInteger.prototype.shorten = function(numBits) {\n  var arr_index = (numBits - 1) >> 5;\n  var bit_index = (numBits - 1) % 32;\n  var bits = [];\n  for (var i = 0; i < arr_index; i++) {\n    bits[i] = this.getBits(i);\n  }\n  var sigBits = bit_index == 31 ? 0xFFFFFFFF : (1 << (bit_index + 1)) - 1;\n  var val = this.getBits(arr_index) & sigBits;\n  //noinspection JSBitwiseOperatorUsage\n  if (val & (1 << bit_index)) {\n    val |= 0xFFFFFFFF - sigBits;\n    bits[arr_index] = val;\n    return new Integer(bits, -1);\n  } else {\n    bits[arr_index] = val;\n    return new Integer(bits, 0);\n  }\n};\n\n\n/** @return {!Integer} The negation of this value. */\nInteger.prototype.negate = function() {\n  return this.not().add(Integer.ONE);\n};\n\n\n/**\n * Returns the sum of this and the given Integer.\n * @param {Integer} other The Integer to add to this.\n * @return {!Integer} The Integer result.\n */\nInteger.prototype.add = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  var carry = 0;\n\n  for (var i = 0; i <= len; i++) {\n    var a1 = this.getBits(i) >>> 16;\n    var a0 = this.getBits(i) & 0xFFFF;\n\n    var b1 = other.getBits(i) >>> 16;\n    var b0 = other.getBits(i) & 0xFFFF;\n\n    var c0 = carry + a0 + b0;\n    var c1 = (c0 >>> 16) + a1 + b1;\n    carry = c1 >>> 16;\n    c0 &= 0xFFFF;\n    c1 &= 0xFFFF;\n    arr[i] = (c1 << 16) | c0;\n  }\n  return Integer.fromBits(arr);\n};\n\n\n/**\n * Returns the difference of this and the given Integer.\n * @param {Integer} other The Integer to subtract from this.\n * @return {!Integer} The Integer result.\n */\nInteger.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n\n/**\n * Returns the product of this and the given Integer.\n * @param {Integer} other The Integer to multiply against this.\n * @return {!Integer} The product of this and the other.\n */\nInteger.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Integer.ZERO;\n  } else if (other.isZero()) {\n    return Integer.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both numbers are small, use float multiplication\n  if (this.lessThan(Integer.TWO_PWR_24_) &&\n    other.lessThan(Integer.TWO_PWR_24_)) {\n    return Integer.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Fill in an array of 16-bit products.\n  var len = this.bits_.length + other.bits_.length;\n  var arr = [];\n  for (var i = 0; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    for (var j = 0; j < other.bits_.length; j++) {\n      var a1 = this.getBits(i) >>> 16;\n      var a0 = this.getBits(i) & 0xFFFF;\n\n      var b1 = other.getBits(j) >>> 16;\n      var b0 = other.getBits(j) & 0xFFFF;\n\n      arr[2 * i + 2 * j] += a0 * b0;\n      Integer.carry16_(arr, 2 * i + 2 * j);\n      arr[2 * i + 2 * j + 1] += a1 * b0;\n      Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 1] += a0 * b1;\n      Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 2] += a1 * b1;\n      Integer.carry16_(arr, 2 * i + 2 * j + 2);\n    }\n  }\n\n  // Combine the 16-bit values into 32-bit values.\n  for (var i = 0; i < len; i++) {\n    arr[i] = (arr[2 * i + 1] << 16) | arr[2 * i];\n  }\n  for (var i = len; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  return new Integer(arr, 0);\n};\n\n\n/**\n * Carries any overflow from the given index into later entries.\n * @param {Array.<number>} bits Array of 16-bit values in little-endian order.\n * @param {number} index The index in question.\n * @private\n */\nInteger.carry16_ = function(bits, index) {\n  while ((bits[index] & 0xFFFF) != bits[index]) {\n    bits[index + 1] += bits[index] >>> 16;\n    bits[index] &= 0xFFFF;\n  }\n};\n\n\n/**\n * Returns this Integer divided by the given one.\n * @param {Integer} other Th Integer to divide this by.\n * @return {!Integer} This value divided by the given one.\n */\nInteger.prototype.divide = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Integer.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().divide(other.negate());\n    } else {\n      return this.negate().divide(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.divide(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Integer.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Integer.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Integer.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Integer.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n\n/**\n * Returns this Integer modulo the given one.\n * @param {Integer} other The Integer by which to mod.\n * @return {!Integer} This value modulo the given one.\n */\nInteger.prototype.modulo = function(other) {\n  return this.subtract(this.divide(other).multiply(other));\n};\n\n\n/** @return {!Integer} The bitwise-NOT of this value. */\nInteger.prototype.not = function() {\n  var len = this.bits_.length;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = ~this.bits_[i];\n  }\n  return new Integer(arr, ~this.sign_);\n};\n\n\n/**\n * Returns the bitwise-AND of this Integer and the given one.\n * @param {Integer} other The Integer to AND with this.\n * @return {!Integer} The bitwise-AND of this and the other.\n */\nInteger.prototype.and = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) & other.getBits(i);\n  }\n  return new Integer(arr, this.sign_ & other.sign_);\n};\n\n\n/**\n * Returns the bitwise-OR of this Integer and the given one.\n * @param {Integer} other The Integer to OR with this.\n * @return {!Integer} The bitwise-OR of this and the other.\n */\nInteger.prototype.or = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) | other.getBits(i);\n  }\n  return new Integer(arr, this.sign_ | other.sign_);\n};\n\n\n/**\n * Returns the bitwise-XOR of this Integer and the given one.\n * @param {Integer} other The Integer to XOR with this.\n * @return {!Integer} The bitwise-XOR of this and the other.\n */\nInteger.prototype.xor = function(other) {\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) ^ other.getBits(i);\n  }\n  return new Integer(arr, this.sign_ ^ other.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the left by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!Integer} This shifted to the left by the given amount.\n */\nInteger.prototype.shiftLeft = function(numBits) {\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i - arr_delta) << bit_delta) |\n      (this.getBits(i - arr_delta - 1) >>> (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i - arr_delta);\n    }\n  }\n  return new Integer(arr, this.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the right by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!Integer} This shifted to the right by the given amount.\n */\nInteger.prototype.shiftRight = function(numBits) {\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length - arr_delta;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i + arr_delta) >>> bit_delta) |\n      (this.getBits(i + arr_delta + 1) << (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i + arr_delta);\n    }\n  }\n  return new Integer(arr, this.sign_);\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nInteger.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns a Integer whose value is the absolute value of this\n * @returns {Integer}\n */\nInteger.prototype.abs = function () {\n  return this.sign_ === 0 ? this : this.negate();\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nInteger.prototype.toJSON = function () {\n  return this.toString();\n};\n\nmodule.exports = Integer;\n","\"use strict\";\nconst util = require('util');\n\n/** @module policies/retry */\n/**\n * Base and default RetryPolicy.\n * Determines what to do when the drivers runs into an specific Cassandra exception\n * @constructor\n */\nfunction RetryPolicy() {\n\n}\n\n/**\n * Determines what to do when the driver gets an UnavailableException response from a Cassandra node.\n * @param {OperationInfo} info\n * @param {Number} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Number} required The number of replicas whose response is required to achieve the\n * required [consistency]{@link module:types~consistencies}.\n * @param {Number} alive The number of replicas that were known to be alive when the request had been processed\n * (since an unavailable exception has been triggered, there will be alive &lt; required)\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onUnavailable = function (info, consistency, required, alive) {\n  if (info.nbRetry > 0) {\n    return this.rethrowResult();\n  }\n  return this.retryResult(undefined, false);\n};\n\n/**\n * Determines what to do when the driver gets a ReadTimeoutException response from a Cassandra node.\n * @param {OperationInfo} info\n * @param {Number} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Number} received The number of nodes having answered the request.\n * @param {Number} blockFor The number of replicas whose response is required to achieve the\n * required [consistency]{@link module:types~consistencies}.\n * @param {Boolean} isDataPresent When <code>false</code>, it means the replica that was asked for data has not responded.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onReadTimeout = function (info, consistency, received, blockFor, isDataPresent) {\n  if (info.nbRetry > 0) {\n    return this.rethrowResult();\n  }\n  return ((received >= blockFor && !isDataPresent) ?\n    this.retryResult() :\n    this.rethrowResult());\n};\n\n/**\n * Determines what to do when the driver gets a WriteTimeoutException response from a Cassandra node.\n * @param {OperationInfo} info\n * @param {Number} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Number} received The number of nodes having acknowledged the request.\n * @param {Number} blockFor The number of replicas whose acknowledgement is required to achieve the required\n * [consistency]{@link module:types~consistencies}.\n * @param {String} writeType A <code>string</code> that describes the type of the write that timed out (\"SIMPLE\"\n * / \"BATCH\" / \"BATCH_LOG\" / \"UNLOGGED_BATCH\" / \"COUNTER\").\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onWriteTimeout = function (info, consistency, received, blockFor, writeType) {\n  if (info.nbRetry > 0) {\n    return this.rethrowResult();\n  }\n  // If the batch log write failed, retry the operation as this might just be we were unlucky at picking candidates\n  return writeType === \"BATCH_LOG\" ? this.retryResult() : this.rethrowResult();\n};\n\n/**\n * Defines whether to retry and at which consistency level on an unexpected error.\n * <p>\n * This method might be invoked in the following situations:\n * </p>\n * <ol>\n * <li>On a client timeout, while waiting for the server response\n * (see [socketOptions.readTimeout]{@link ClientOptions}), being the error an instance of\n * [OperationTimedOutError]{@link module:errors~OperationTimedOutError}.</li>\n * <li>On a connection error (socket closed, etc.).</li>\n * <li>When the contacted host replies with an error, such as <code>overloaded</code>, <code>isBootstrapping</code>,\n * </code>serverError, etc. In this case, the error is instance of [ResponseError]{@link module:errors~ResponseError}.\n * </li>\n * </ol>\n * <p>\n * Note that when this method is invoked, <em>the driver cannot guarantee that the mutation has been effectively\n * applied server-side</em>; a retry should only be attempted if the request is known to be idempotent.\n * </p>\n * @param {OperationInfo} info\n * @param {Number|undefined} consistency The [consistency]{@link module:types~consistencies} level of the query that triggered\n * the exception.\n * @param {Error} err The error that caused this request to fail.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.onRequestError = function (info, consistency, err) {\n  // The default implementation triggers a retry on the next host in the query plan with the same consistency level,\n  // regardless of the statement's idempotence, for historical reasons.\n  return this.retryResult(undefined, false);\n};\n\n/**\n * Returns a {@link DecisionInfo} to retry the request with the given [consistency]{@link module:types~consistencies}.\n * @param {Number|undefined} [consistency] When specified, it retries the request with the given consistency.\n * @param {Boolean} [useCurrentHost] When specified, determines if the retry should be made using the same coordinator.\n * Default: true.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.retryResult = function (consistency, useCurrentHost) {\n  return {\n    decision: RetryPolicy.retryDecision.retry,\n    consistency: consistency,\n    useCurrentHost: useCurrentHost !== false\n  };\n};\n\n/**\n * Returns a {@link DecisionInfo} to callback in error when a err is obtained for a given request.\n * @returns {DecisionInfo}\n */\nRetryPolicy.prototype.rethrowResult = function () {\n  return { decision: RetryPolicy.retryDecision.rethrow };\n};\n\n/**\n * Determines the retry decision for the retry policies.\n * @type {Object}\n * @property {Number} rethrow\n * @property {Number} retry\n * @property {Number} ignore\n * @static\n */\nRetryPolicy.retryDecision = {\n  rethrow:  0,\n  retry:    1,\n  ignore:   2\n};\n\n/**\n * Creates a new instance of <code>IdempotenceAwareRetryPolicy</code>.\n * @classdesc\n * A retry policy that avoids retrying non-idempotent statements.\n * <p>\n * In case of write timeouts or unexpected errors, this policy will always return\n * [rethrowResult()]{@link module:policies/retry~RetryPolicy#rethrowResult} if the statement is deemed non-idempotent\n * (see [QueryOptions.isIdempotent]{@link QueryOptions}).\n * <p/>\n * For all other cases, this policy delegates the decision to the child policy.\n * @param {RetryPolicy} [childPolicy] The child retry policy to wrap. When not defined, it will use an instance of\n * [RetryPolicy]{@link module:policies/retry~RetryPolicy} as child policy.\n * @extends module:policies/retry~RetryPolicy\n * @constructor\n * @deprecated since 4.0 non-idempotent operations are never tried for write timeout or request error, use the default\n * retry policy instead.\n */\nfunction IdempotenceAwareRetryPolicy(childPolicy) {\n  this._childPolicy = childPolicy || new RetryPolicy();\n}\n\nutil.inherits(IdempotenceAwareRetryPolicy, RetryPolicy);\n\nIdempotenceAwareRetryPolicy.prototype.onReadTimeout = function (info, consistency, received, blockFor, isDataPresent) {\n  return this._childPolicy.onReadTimeout(info, consistency, received, blockFor, isDataPresent);\n};\n\n/**\n * If the query is not idempotent, it returns a rethrow decision. Otherwise, it relies on the child policy to decide.\n */\nIdempotenceAwareRetryPolicy.prototype.onRequestError = function (info, consistency, err) {\n  if (info.options.isIdempotent) {\n    return this._childPolicy.onRequestError(info, consistency, err);\n  }\n  return this.rethrowResult();\n};\n\nIdempotenceAwareRetryPolicy.prototype.onUnavailable = function (info, consistency, required, alive) {\n  return this._childPolicy.onUnavailable(info, consistency, required, alive);\n};\n\n/**\n * If the query is not idempotent, it return a rethrow decision. Otherwise, it relies on the child policy to decide.\n */\nIdempotenceAwareRetryPolicy.prototype.onWriteTimeout = function (info, consistency, received, blockFor, writeType) {\n  if (info.options.isIdempotent) {\n    return this._childPolicy.onWriteTimeout(info, consistency, received, blockFor, writeType);\n  }\n  return this.rethrowResult();\n};\n\n/**\n * Decision information\n * @typedef {Object} DecisionInfo\n * @property {Number} decision The decision as specified in\n * [retryDecision]{@link module:policies/retry~RetryPolicy.retryDecision}.\n * @property {Number} [consistency] The [consistency level]{@link module:types~consistencies}.\n * @property {useCurrentHost} [useCurrentHost] Determines if it should use the same host to retry the request.\n * <p>\n *   In the case that the current host is not available anymore, it will be retried on the next host even when\n *   <code>useCurrentHost</code> is set to <code>true</code>.\n * </p>\n */\n\n/**\n * Information of the execution to be used to determine whether the operation should be retried.\n * @typedef {Object} OperationInfo\n * @property {String} query The query that was executed.\n * @param {ExecutionOptions} executionOptions The options related to the execution of the request.\n * @property {Number} nbRetry The number of retries already performed for this operation.\n */\n\nexports.RetryPolicy = RetryPolicy;\nexports.IdempotenceAwareRetryPolicy = IdempotenceAwareRetryPolicy;","'use strict';\n\n/**\n * Tracker module.\n * @module tracker\n */\n\nexports.RequestLogger = require('./request-logger');\nexports.RequestTracker = require('./request-tracker');","'use strict';\n\n/**\n * Tracks request execution for a {@link Client}.\n * <p>\n *   A {@link RequestTracker} can be configured in the client options. The <code>Client</code> will execute\n *   {@link RequestTracker#onSuccess} or {@link RequestTracker#onError} for every query or batch\n *   executed (QUERY, EXECUTE and BATCH requests).\n * </p>\n * @interface\n * @alias module:tracker~RequestTracker\n */\nclass RequestTracker {\n\n  /**\n   * Invoked each time a query or batch request succeeds.\n   * @param {Host} host The node that acted as coordinator of the request.\n   * @param {String|Array} query In the case of prepared or unprepared query executions, the provided\n   * query string. For batch requests, an Array containing the queries and parameters provided.\n   * @param {Array|Object|null} parameters In the case of prepared or unprepared query executions, the provided\n   * parameters.\n   * @param {ExecutionOptions} executionOptions The information related to the execution of the request.\n   * @param {Number} requestLength Length of the body of the request.\n   * @param {Number} responseLength Length of the body of the response.\n   * @param {Array<Number>} latency An array containing [seconds, nanoseconds] tuple, where nanoseconds is the\n   * remaining part of the real time that can't be represented in second precision (see <code>process.hrtime()</code>).\n   */\n  onSuccess(host, query, parameters, executionOptions, requestLength, responseLength, latency) {\n\n  }\n\n  /**\n   * Invoked each time a query or batch request fails.\n   * @param {Host} host The node that acted as coordinator of the request.\n   * @param {String|Array} query In the case of prepared or unprepared query executions, the provided\n   * query string. For batch requests, an Array containing the queries and parameters provided.\n   * @param {Array|Object|null} parameters In the case of prepared or unprepared query executions, the provided\n   * parameters.\n   * @param {ExecutionOptions} executionOptions The information related to the execution of the request.\n   * @param {Number} requestLength Length of the body of the request. When the failure occurred before the request was\n   * written to the wire, the length will be <code>0</code>.\n   * @param {Error} err The error that caused that caused the request to fail.\n   * @param {Array<Number>} latency An array containing [seconds, nanoseconds] tuple, where nanoseconds is the\n   * remaining part of the real time that can't be represented in second precision (see <code>process.hrtime()</code>).\n   */\n  onError(host, query, parameters, executionOptions, requestLength, err, latency) {\n\n  }\n\n  /**\n   * Invoked when the Client is being shutdown.\n   */\n  shutdown() {\n\n  }\n}\n\nmodule.exports = RequestTracker;","'use strict';\n\nconst ClientMetrics = require('./client-metrics');\nconst DefaultMetrics = require('./default-metrics');\n\n/**\n * The <code>metrics</code> module contains interfaces and implementations used by the driver to expose\n * measurements of its internal behavior and of the server as seen from the driver side.\n * @module metrics\n */\n\nmodule.exports = { ClientMetrics, DefaultMetrics };","'use strict';\n\n/**\n * Represents a base class that is used to measure events from the server and the client as seen by the driver.\n * @alias module:metrics~ClientMetrics\n * @interface\n */\nclass ClientMetrics {\n  /**\n   * Method invoked when an authentication error is obtained from the server.\n   * @param {AuthenticationError|Error} e The error encountered.\n   */\n  onAuthenticationError(e) {}\n\n  /**\n   * Method invoked when an error (different than a server or client timeout, authentication or connection error) is\n   * encountered when executing a request.\n   * @param {OperationTimedOutError} e The timeout error.\n   */\n  onClientTimeoutError(e) {}\n\n  /**\n   * Method invoked when there is a connection error.\n   * @param {Error} e The error encountered.\n   */\n  onConnectionError(e) {}\n\n  /**\n   * Method invoked when an error (different than a server or client timeout, authentication or connection error) is\n   * encountered when executing a request.\n   * @param {Error} e The error encountered.\n   */\n  onOtherError(e) {}\n\n  /**\n   * Method invoked when a read timeout error is obtained from the server.\n   * @param {ResponseError} e The error encountered.\n   */\n  onReadTimeoutError(e) {}\n\n  /**\n   * Method invoked when a write timeout error is obtained from the server.\n   * @param {ResponseError} e The error encountered.\n   */\n  onWriteTimeoutError(e) {}\n\n  /**\n   * Method invoked when an unavailable error is obtained from the server.\n   * @param {ResponseError} e The error encountered.\n   */\n  onUnavailableError(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of a client-level timeout.\n   * @param {Error} e The error that caused the retry.\n   */\n  onClientTimeoutRetry(e) {}\n\n  /**\n   * Method invoked when an error (other than a server or client timeout) is retried.\n   * @param {Error} e The error that caused the retry.\n   */\n  onOtherErrorRetry(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of a read timeout from the server (coordinator to replica).\n   * @param {Error} e The error that caused the retry.\n   */\n  onReadTimeoutRetry(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of an unavailable error from the server.\n   * @param {Error} e The error that caused the retry.\n   */\n  onUnavailableRetry(e) {}\n\n  /**\n   * Method invoked when an execution is retried as a result of a write timeout from the server (coordinator to\n   * replica).\n   * @param {Error} e The error that caused the retry.\n   */\n  onWriteTimeoutRetry(e) {}\n\n  /**\n   * Method invoked when an error is marked as ignored by the retry policy.\n   * @param {Error} e The error that was ignored by the retry policy.\n   */\n  onIgnoreError(e) {}\n\n  /**\n   * Method invoked when a speculative execution is started.\n   */\n  onSpeculativeExecution() {}\n\n  /**\n   * Method invoked when a response is obtained successfully.\n   * @param {Array<Number>} latency The latency represented in a <code>[seconds, nanoseconds]</code> tuple\n   * Array, where nanoseconds is the remaining part of the real time that can't be represented in second precision.\n   */\n  onSuccessfulResponse(latency) {}\n\n  /**\n   * Method invoked when any response is obtained, the response can be the result of a successful execution or a\n   * server-side error.\n   * @param {Array<Number>} latency The latency represented in a <code>[seconds, nanoseconds]</code> tuple\n   * Array, where nanoseconds is the remaining part of the real time that can't be represented in second precision.\n   */\n  onResponse(latency) {\n\n  }\n}\n\nmodule.exports = ClientMetrics;","\"use strict\";\nconst utils = require('./utils');\nconst types = require('./types');\n\n/**\n * Creates a new instance of {@link ExecutionProfile}.\n * @classdesc\n * Represents a set configurations to be used in a statement execution to be used for a single {@link Client} instance.\n * <p>\n *   An {@link ExecutionProfile} instance should not be shared across different {@link Client} instances.\n * </p>\n * @param {String} name Name of the execution profile.\n * <p>\n *   Use <code>'default'</code> to specify that the new instance should be the default {@link ExecutionProfile} if no\n *   profile is specified in the execution.\n * </p>\n * @param {Object} [options] Profile options, when any of the options is not specified the {@link Client} will the use\n * the ones defined in the default profile.\n * @param {Number} [options.consistency] The consistency level to use for this profile.\n * @param {LoadBalancingPolicy} [options.loadBalancing] The load-balancing policy to use for this profile.\n * @param {Number} [options.readTimeout] The client per-host request timeout to use for this profile.\n * @param {RetryPolicy} [options.retry] The retry policy to use for this profile.\n * @param {Number} [options.serialConsistency] The serial consistency level to use for this profile.\n * @constructor\n */\nfunction ExecutionProfile(name, options) {\n  if (typeof name !== 'string') {\n    throw new TypeError('Execution profile name must be a string');\n  }\n  options = options || utils.emptyObject;\n  /**\n   * Name of the execution profile.\n   * @type {String}\n   */\n  this.name = name;\n  /**\n   * Consistency level.\n   * @type {Number}\n   */\n  this.consistency = options.consistency;\n  /**\n   * Load-balancing policy\n   * @type {LoadBalancingPolicy}\n   */\n  this.loadBalancing = options.loadBalancing;\n  /**\n   * Client read timeout.\n   * @type {Number}\n   */\n  this.readTimeout = options.readTimeout;\n  /**\n   * Retry policy.\n   * @type {RetryPolicy}\n   */\n  this.retry = options.retry;\n  /**\n   * Serial consistency level.\n   * @type {Number}\n   */\n  this.serialConsistency = options.serialConsistency;\n}\n\n/**\n * @param {ClientOptions} options\n * @constructor\n * @ignore\n */\nfunction ProfileManager(options) {\n  this._profiles = options.profiles || [];\n  this._setDefault(options);\n  // A array of unique load balancing policies\n  this._loadBalancingPolicies = [];\n  // A dictionary of name keys and profile values\n  this._profilesMap = {};\n  this._profiles.forEach(function (p) {\n    this._profilesMap[p.name] = p;\n    // Set required properties\n    p.loadBalancing = p.loadBalancing || this._defaultProfile.loadBalancing;\n    // Using array indexOf is not very efficient (O(n)) but the amount of profiles should be limited\n    // and a handful of load-balancing policies (no hashcode for load-Balancing policies)\n    if (this._loadBalancingPolicies.indexOf(p.loadBalancing) === -1) {\n      this._loadBalancingPolicies.push(p.loadBalancing);\n    }\n    return p;\n  }, this);\n}\n\n/**\n * @param {Client} client\n * @param {HostMap} hosts\n * @param {Function} callback\n */\nProfileManager.prototype.init = function (client, hosts, callback) {\n  utils.eachSeries(this._loadBalancingPolicies, function (policy, next) {\n    policy.init(client, hosts, next);\n  }, callback);\n};\n\n/**\n * Uses the load-balancing policies to get the relative distance to the host and return the closest one.\n * @param {Host} host\n */\nProfileManager.prototype.getDistance = function (host) {\n  let distance = types.distance.ignored;\n  // this is performance critical: we can't use any other language features than for-loop :(\n  for (let i = 0; i < this._loadBalancingPolicies.length; i++) {\n    const d = this._loadBalancingPolicies[i].getDistance(host);\n    if (d < distance) {\n      distance = d;\n      if (distance === types.distance.local) {\n        break;\n      }\n    }\n  }\n  host.setDistance(distance);\n  return distance;\n};\n\n/**\n * @param {String|ExecutionProfile} name\n * @returns {ExecutionProfile|undefined} It returns the execution profile by name or the default profile when name is\n * undefined. It returns undefined when the profile does not exist.\n */\nProfileManager.prototype.getProfile = function (name) {\n  if (name instanceof ExecutionProfile) {\n    return name;\n  }\n  return this._profilesMap[name || 'default'];\n};\n\n/** @returns {ExecutionProfile} */\nProfileManager.prototype.getDefault = function () {\n  return this._defaultProfile;\n};\n\n/** @returns {LoadBalancingPolicy} */\nProfileManager.prototype.getDefaultLoadBalancing = function () {\n  return this._defaultProfile.loadBalancing;\n};\n\n/**\n * @private\n * @param {ClientOptions} options\n */\nProfileManager.prototype._setDefault = function (options) {\n  this._defaultProfile = this._profiles.filter(function (p) { return p.name === 'default'; })[0];\n  if (!this._defaultProfile) {\n    this._profiles.push(this._defaultProfile = new ExecutionProfile('default'));\n  }\n  // set the required properties\n  this._defaultProfile.loadBalancing = this._defaultProfile.loadBalancing || options.policies.loadBalancing;\n  this._defaultProfile.retry = this._defaultProfile.retry || options.policies.retry;\n};\n\nexports.ProfileManager = ProfileManager;\nexports.ExecutionProfile = ExecutionProfile;\n","'use strict';\nconst events = require('events');\n\nconst types = require('./types');\nconst utils = require('./utils.js');\nconst FrameHeader = types.FrameHeader;\n\n/**\n * Contains the logic to write all the different types to the frame.\n */\nclass FrameWriter {\n  /**\n   * Creates a new instance of FrameWriter.\n   * @param {Number} opcode\n   */\n  constructor(opcode) {\n    if (!opcode) {\n      throw new Error('Opcode not provided');\n    }\n    this.buffers = [];\n    this.opcode = opcode;\n    this.bodyLength = 0;\n  }\n\n  add(buf) {\n    this.buffers.push(buf);\n    this.bodyLength += buf.length;\n  }\n\n  writeShort(num) {\n    const buf = utils.allocBufferUnsafe(2);\n    buf.writeUInt16BE(num, 0);\n    this.add(buf);\n  }\n\n  writeInt(num) {\n    const buf = utils.allocBufferUnsafe(4);\n    buf.writeInt32BE(num, 0);\n    this.add(buf);\n  }\n\n  /** @param {Long} num */\n  writeLong(num) {\n    this.add(types.Long.toBuffer(num));\n  }\n\n  /**\n   * Writes bytes according to Cassandra <int byteLength><bytes>\n   * @param {Buffer|null|types.unset} bytes\n   */\n  writeBytes(bytes) {\n    if (bytes === null) {\n      //Only the length buffer containing -1\n      this.writeInt(-1);\n      return;\n    }\n    if (bytes === types.unset) {\n      this.writeInt(-2);\n      return;\n    }\n    //Add the length buffer\n    this.writeInt(bytes.length);\n    //Add the actual buffer\n    this.add(bytes);\n  }\n\n  /**\n   * Writes a buffer according to Cassandra protocol: bytes.length (2) + bytes\n   * @param {Buffer} bytes\n   */\n  writeShortBytes(bytes) {\n    if(bytes === null) {\n      //Only the length buffer containing -1\n      this.writeShort(-1);\n      return;\n    }\n    //Add the length buffer\n    this.writeShort(bytes.length);\n    //Add the actual buffer\n    this.add(bytes);\n  }\n\n  /**\n   * Writes a single byte\n   * @param {Number} num Value of the byte, a number between 0 and 255.\n   */\n  writeByte(num) {\n    this.add(utils.allocBufferFromArray([num]));\n  }\n\n  writeString(str) {\n    if (typeof str === \"undefined\") {\n      throw new Error(\"can not write undefined\");\n    }\n    const len = Buffer.byteLength(str, 'utf8');\n    const buf = utils.allocBufferUnsafe(2 + len);\n    buf.writeUInt16BE(len, 0);\n    buf.write(str, 2, buf.length-2, 'utf8');\n    this.add(buf);\n  }\n\n  writeLString(str) {\n    const len = Buffer.byteLength(str, 'utf8');\n    const buf = utils.allocBufferUnsafe(4 + len);\n    buf.writeInt32BE(len, 0);\n    buf.write(str, 4, buf.length-4, 'utf8');\n    this.add(buf);\n  }\n\n  writeStringList(values) {\n    this.writeShort(values.length);\n    values.forEach(this.writeString, this);\n  }\n\n  writeCustomPayload(payload) {\n    const keys = Object.keys(payload);\n    this.writeShort(keys.length);\n    keys.forEach(function (k) {\n      this.writeString(k);\n      this.writeBytes(payload[k]);\n    }, this);\n  }\n\n  writeStringMap(map) {\n    const keys = [];\n    for (const k in map) {\n      if (map.hasOwnProperty(k)) {\n        keys.push(k);\n      }\n    }\n\n    this.writeShort(keys.length);\n\n    for(let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      this.writeString(key);\n      this.writeString(map[key]);\n    }\n  }\n\n  /**\n   * @param {Number} version\n   * @param {Number} streamId\n   * @param {Number} [flags] Header flags\n   * @returns {Buffer}\n   * @throws {TypeError}\n   */\n  write(version, streamId, flags) {\n    const header = new FrameHeader(version, flags || 0, streamId, this.opcode, this.bodyLength);\n    const headerBuffer = header.toBuffer();\n    this.buffers.unshift(headerBuffer);\n    return Buffer.concat(this.buffers, headerBuffer.length + this.bodyLength);\n  }\n}\n\n/**\n * Represents a queue that process one write at a time (FIFO).\n * @extends {EventEmitter}\n */\nclass WriteQueue extends events.EventEmitter {\n  /**\n   * Creates a new WriteQueue instance.\n   * @param {Socket} netClient\n   * @param {Encoder} encoder\n   * @param {ClientOptions} options\n   */\n  constructor(netClient, encoder, options) {\n    super();\n    this.netClient = netClient;\n    this.encoder = encoder;\n    this.isRunning = false;\n    /** @type {Array<{operation: OperationState, callback: Function}>} */\n    this.queue = [];\n    this.coalescingThreshold = options.socketOptions.coalescingThreshold;\n    this.error = null;\n  }\n\n  /**\n   * Enqueues a new request\n   * @param {OperationState} operation\n   * @param {Function} callback The write callback.\n   */\n  push(operation, callback) {\n    const self = this;\n    if (this.error) {\n      // There was a write error, there is no point in further trying to write to the socket.\n      return process.nextTick(function writePushError() {\n        callback(self.error);\n      });\n    }\n    this.queue.push({ operation: operation, callback: callback});\n    this.run();\n  }\n\n  run() {\n    if (!this.isRunning) {\n      this.isRunning = true;\n      // Use nextTick to allow the queue to build up on the current phase\n      process.nextTick(() => this.process());\n    }\n  }\n\n  process() {\n    if (this.error) {\n      return;\n    }\n\n    const buffers = [];\n    const callbacks = [];\n    let totalLength = 0;\n\n    while (this.queue.length > 0 && totalLength < this.coalescingThreshold) {\n      const writeItem = this.queue.shift();\n      if (!writeItem.operation.canBeWritten()) {\n        // Invoke the write callback with an error that is not going to be yielded to user\n        // as the operation has timed out or was cancelled.\n        writeItem.callback(new Error('The operation was already cancelled or timeout elapsed'));\n        continue;\n      }\n      let data;\n      try {\n        data = writeItem.operation.request.write(this.encoder, writeItem.operation.streamId);\n      }\n      catch (err) {\n        writeItem.callback(err);\n        continue;\n      }\n      totalLength += data.length;\n      buffers.push(data);\n      callbacks.push(writeItem.callback);\n    }\n\n    if (totalLength === 0) {\n      this.isRunning = false;\n      return;\n    }\n\n    // We have to invoke the callbacks to avoid race conditions.\n    // There is a performance benefit from executing all of them in a loop\n    for (let i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n    // Concatenate buffers and write it to the socket\n    // Further writes will be throttled until flushed\n    this.netClient.write(Buffer.concat(buffers, totalLength), err => {\n      if (err) {\n        this.setWriteError(err);\n        return;\n      }\n      if (this.queue.length === 0) {\n        // It will start running once we get the next message\n        this.isRunning = false;\n        return;\n      }\n      // Allow IO between writes\n      setImmediate(() => this.process());\n    });\n  }\n\n  /**\n   * Emits the 'error' event and callbacks items that haven't been written and clears them from the queue.\n   * @param err\n   */\n  setWriteError(err) {\n    err.isSocketError = true;\n    this.error = new types.DriverError('Socket was closed');\n    this.error.isSocketError = true;\n    // Use an special flag for items that haven't been written\n    this.error.requestNotWritten = true;\n    this.error.innerError = err;\n    const q = this.queue;\n    // Not more items can be added to the queue.\n    this.queue = utils.emptyArray;\n    for (let i = 0; i < q.length; i++) {\n      const item = q[i];\n      // Use the error marking that it was not written\n      item.callback(this.error);\n    }\n  }\n}\n\nexports.WriteQueue = WriteQueue;\nexports.FrameWriter = FrameWriter;\n","\"use strict\";\nconst util = require('util');\nconst events = require('events');\n\nconst utils = require('./utils');\nconst types = require('./types');\nconst HostConnectionPool = require('./host-connection-pool');\nconst PrepareHandler = require('./prepare-handler');\n\nconst healthResponseCountInterval = 200;\n\n/**\n * Creates a new Host instance.\n * @classdesc\n * Represents a Cassandra node.\n * @extends EventEmitter\n * @constructor\n */\nfunction Host(address, protocolVersion, options, metadata) {\n  events.EventEmitter.call(this);\n  /**\n   * Gets ip address and port number of the node separated by `:`.\n   * @type {String}\n   */\n  this.address = address;\n  this.setDownAt = 0;\n\n  /**\n   * Gets the timestamp of the moment when the Host was marked as UP.\n   * @type {Number|null}\n   * @ignore\n   * @internal\n   */\n  this.isUpSince = null;\n\n  Object.defineProperty(this, 'options', { value: options, enumerable: false, writable: false});\n\n  /**\n   * The host pool.\n   * @internal\n   * @ignore\n   * @type {HostConnectionPool}\n   */\n  Object.defineProperty(this, 'pool', { value: new HostConnectionPool(this, protocolVersion), enumerable: false});\n\n  const self = this;\n  this.pool.on('open', this._onNewConnectionOpen.bind(this));\n  this.pool.on('remove', function onConnectionRemovedFromPool() {\n    self._checkPoolState();\n  });\n  /**\n   * Gets string containing the Cassandra version.\n   * @type {String}\n   */\n  this.cassandraVersion = null;\n  /**\n   * Gets data center name of the node.\n   * @type {String}\n   */\n  this.datacenter = null;\n  /**\n   * Gets rack name of the node.\n   * @type {String}\n   */\n  this.rack = null;\n  /**\n   * Gets the tokens assigned to the node.\n   * @type {Array}\n   */\n  this.tokens = null;\n\n  /**\n   * Gets the id of the host.\n   * <p>This identifier is used by the server for internal communication / gossip.</p>\n   * @type {Uuid}\n   */\n  this.hostId = null;\n\n  // the distance as last set using the load balancing policy\n  this._distance = types.distance.ignored;\n  this._healthResponseCounter = 0;\n\n  // Make some of the private instance variables not enumerable to prevent from showing when inspecting\n  Object.defineProperty(this, '_metadata', { value: metadata, enumerable: false });\n  Object.defineProperty(this, '_healthResponseCountTimer', { value: null, enumerable: false, writable: true });\n\n  this.reconnectionSchedule = this.options.policies.reconnection.newSchedule();\n  this.reconnectionDelay = 0;\n}\n\nutil.inherits(Host, events.EventEmitter);\n\n/**\n * Marks this host as not available for query coordination, when the host was previously marked as UP, otherwise its\n * a no-op.\n * @internal\n * @ignore\n */\nHost.prototype.setDown = function() {\n  // Multiple events signaling that a host is failing could cause multiple calls to this method\n  if (this.setDownAt !== 0) {\n    // the host is already marked as Down\n    return;\n  }\n\n  if (this.pool.isClosing()) {\n    // the pool is being closed/shutdown, don't mind\n    return;\n  }\n\n  this.setDownAt = Date.now();\n\n  if (this.pool.coreConnectionsLength > 0) {\n    // According to the distance, there should be connections open to it => issue a warning\n    this.log('warning', `Host ${this.address} considered as DOWN. Reconnection delay ${this.reconnectionDelay}ms.`);\n  } else {\n    this.log('info', `Host ${this.address} considered as DOWN.`);\n  }\n\n  this.emit('down');\n  this._checkPoolState();\n};\n\n/**\n * Marks this host as available for querying.\n * @param {Boolean} [clearReconnection]\n * @internal\n * @ignore\n */\nHost.prototype.setUp = function (clearReconnection) {\n  if (!this.setDownAt) {\n    //The host is already marked as UP\n    return;\n  }\n  this.log('info', util.format('Setting host %s as UP', this.address));\n  this.setDownAt = 0;\n  this.isUpSince = Date.now();\n  //if it was unhealthy and now it is not, lets reset the reconnection schedule.\n  this.reconnectionSchedule = this.options.policies.reconnection.newSchedule();\n  if (clearReconnection) {\n    this.pool.clearNewConnectionAttempt();\n  }\n  this.emit('up');\n};\n\n/**\n * Resets the reconnectionSchedule and tries to issue a reconnection immediately.\n * @internal\n * @ignore\n */\nHost.prototype.checkIsUp = function () {\n  if (this.isUp()) {\n    return;\n  }\n  this.reconnectionSchedule = this.options.policies.reconnection.newSchedule();\n  this.reconnectionDelay = 0;\n  this.pool.attemptNewConnectionImmediate();\n};\n\n/**\n * @param {Boolean} waitForPending When true, it waits for in-flight operations to be finish before closing the\n * connections.\n * @param {Function} [callback]\n * @internal\n * @ignore\n */\nHost.prototype.shutdown = function (waitForPending, callback) {\n  callback = callback || utils.noop;\n\n  if (this._healthResponseCountTimer) {\n    clearInterval(this._healthResponseCountTimer);\n  }\n\n  if (waitForPending) {\n    this.pool.drainAndShutdown();\n    // Gracefully draining and shutting down the pool is being done in the background, it's not required\n    // for the shutting down to be over to callback\n    return callback();\n  }\n\n  this.pool.shutdown(callback);\n};\n\n/**\n * Determines if the node is UP now (seen as UP by the driver).\n * @returns {boolean}\n */\nHost.prototype.isUp = function () {\n  return !this.setDownAt;\n};\n\n/**\n * Determines if the host can be considered as UP\n * @returns {boolean}\n */\nHost.prototype.canBeConsideredAsUp = function () {\n  const self = this;\n  function hasTimePassed() {\n    return new Date().getTime() - self.setDownAt >= self.reconnectionDelay;\n  }\n  return !this.setDownAt || hasTimePassed();\n};\n\n/**\n * Sets the distance of the host relative to the client using the load balancing policy.\n * @param {Number} distance\n * @internal\n * @ignore\n */\nHost.prototype.setDistance = function (distance) {\n  const previousDistance = this._distance;\n  this._distance = distance || types.distance.local;\n  if (this.options.pooling.coreConnectionsPerHost) {\n    this.pool.coreConnectionsLength = this.options.pooling.coreConnectionsPerHost[this._distance] || 0;\n  }\n  else {\n    this.pool.coreConnectionsLength = 1;\n  }\n  if (this._distance === previousDistance) {\n    return this._distance;\n  }\n\n  if (this._healthResponseCountTimer) {\n    clearInterval(this._healthResponseCountTimer);\n  }\n\n  if (this._distance === types.distance.ignored) {\n    // this host was local/remote and now must be ignored\n    this.emit('ignore');\n    this.pool.drainAndShutdown();\n  }\n  else {\n    if (!this.isUp()) {\n      this.checkIsUp();\n    }\n\n    // Reset the health check timer\n    this._healthResponseCountTimer = setInterval(() => {\n      this._healthResponseCounter = this.pool.getAndResetResponseCounter();\n    }, healthResponseCountInterval);\n  }\n\n  return this._distance;\n};\n\n/**\n * Changes the protocol version of a given host\n * @param {Number} value\n * @internal\n * @ignore\n */\nHost.prototype.setProtocolVersion = function (value) {\n  this.pool.protocolVersion = value;\n};\n\n/**\n * It gets an open connection to the host.\n * If there isn't an available connections, it will open a new one according to the pooling options.\n * @param {String} keyspace The keyspace that the connection must be using. When the keyspace provided is null, no\n * keyspace check is performed.\n * @param {Connection} previousConnection The previous connection. When provided, the pool should try to provide a\n * different connection.\n * @param {Function} callback\n * @internal\n * @ignore\n */\nHost.prototype.borrowConnection = function (keyspace, previousConnection, callback) {\n  if (previousConnection) {\n    // Obtain one of the existing connections\n    return this.pool.borrowConnection(keyspace, previousConnection, callback);\n  }\n\n  this.pool.createAndBorrowConnection(keyspace, callback);\n};\n\n/**\n * Creates all the connection in the pool.\n * @param {Function} callback\n * @internal\n * @ignore\n */\nHost.prototype.warmupPool = function (callback) {\n  this.pool.create(true, callback);\n};\n\n/**\n * Gets any connection that is already opened or null if not found.\n * @returns {Connection}\n * @internal\n * @ignore\n */\nHost.prototype.getActiveConnection = function () {\n  if (!this.isUp() || !this.pool.connections.length) {\n    return null;\n  }\n  return this.pool.connections[0];\n};\n\n/**\n * Internal method to get the amount of responses dequeued in the last interval (between 200ms and 400ms) on all\n * connections to the host.\n * @returns {Number}\n * @internal\n * @ignore\n */\nHost.prototype.getResponseCount = function () {\n  // Last interval plus the current count\n  return this._healthResponseCounter + this.pool.responseCounter;\n};\n\n/**\n * Checks the health of a connection in the pool\n * @param {Connection} connection\n * @internal\n * @ignore\n */\nHost.prototype.checkHealth = function (connection) {\n  if (connection.timedOutOperations <= this.options.socketOptions.defunctReadTimeoutThreshold) {\n    return;\n  }\n  this.removeFromPool(connection);\n};\n\n/**\n * @param {Connection} connection\n * @internal\n * @ignore\n */\nHost.prototype.removeFromPool = function (connection) {\n  this.pool.remove(connection);\n  this._checkPoolState();\n};\n\n/**\n * Internal method that gets the amount of in-flight requests on all connections to the host.\n * @internal\n * @ignore\n */\nHost.prototype.getInFlight = function () {\n  return this.pool.getInFlight();\n};\n\n/**\n * Validates that the internal state of the connection pool.\n * If the pool size is smaller than expected, schedule a new connection attempt.\n * If the amount of connections is 0 for not ignored hosts, the host must be down.\n * @private\n */\nHost.prototype._checkPoolState = function () {\n  if (this.pool.isClosing()) {\n    return;\n  }\n\n  if (this.pool.connections.length < this.pool.coreConnectionsLength) {\n    // the pool needs to grow / reconnect\n    if (!this.pool.hasScheduledNewConnection()) {\n      this.reconnectionDelay = this.reconnectionSchedule.next().value;\n      this.pool.scheduleNewConnectionAttempt(this.reconnectionDelay);\n    }\n  }\n\n  const shouldHaveConnections = this._distance !== types.distance.ignored && this.pool.coreConnectionsLength > 0;\n\n  if (shouldHaveConnections && this.pool.connections.length === 0) {\n    // Mark as DOWN, if its UP\n    this.setDown();\n  }\n};\n\n/**\n * Executed after an scheduled new connection attempt finished\n * @private\n */\nHost.prototype._onNewConnectionOpen = function (err) {\n  if (err) {\n    this._checkPoolState();\n    return;\n  }\n  const self = this;\n  function setUpAndContinue(err) {\n    if (err) {\n      self.log('warning', util.format('Failed re-preparing on host %s: %s', self.address, err), err);\n    }\n    self.setUp();\n    self.pool.increaseSize();\n  }\n  if (this.isUp() || !this.options.rePrepareOnUp) {\n    return setUpAndContinue();\n  }\n  this.log('info', util.format('Re-preparing all queries on host %s before setting it as UP', this.address));\n  const allPrepared = this._metadata.getAllPrepared();\n  PrepareHandler.prepareAllQueries(this, allPrepared, setUpAndContinue);\n};\n\n/**\n * Returns an array containing the Cassandra Version as an Array of Numbers having the major version in the first\n * position.\n * @returns {Array.<Number>}\n */\nHost.prototype.getCassandraVersion = function () {\n  if (!this.cassandraVersion) {\n    return utils.emptyArray;\n  }\n  return this.cassandraVersion.split('-')[0].split('.').map(x => parseInt(x, 10));\n};\n\nHost.prototype.log = utils.log;\n\n/**\n * Represents an associative-array of {@link Host hosts} that can be iterated.\n * It creates an internal copy when adding or removing, making it safe to iterate using the values() method within async operations.\n * @extends events.EventEmitter\n * @constructor\n */\nfunction HostMap() {\n  events.EventEmitter.call(this);\n  this._items = {};\n  this._values = null;\n  Object.defineProperty(this, 'length', { get: function () { return this.values().length; }, enumerable: true });\n}\n\nutil.inherits(HostMap, events.EventEmitter);\n\n/**\n * Emitted when a host is added to the map\n * @event HostMap#add\n */\n/**\n * Emitted when a host is removed from the map\n * @event HostMap#remove\n */\n\n/**\n * Executes a provided function once per map element.\n * @param callback\n */\nHostMap.prototype.forEach = function (callback) {\n  //Use a new reference, allowing the map to be modified.\n  const items = this._items;\n  for (const key in items) {\n    if (!items.hasOwnProperty(key)) {\n      continue;\n    }\n    callback(items[key], key);\n  }\n};\n\n/**\n * Gets a {@link Host host} by key or undefined if not found.\n * @param {String} key\n * @returns {Host}\n */\nHostMap.prototype.get = function (key) {\n  return this._items[key];\n};\n\n/**\n * Returns an array of host addresses.\n * @returns {Array.<String>}\n */\nHostMap.prototype.keys = function () {\n  return Object.keys(this._items);\n};\n\n/**\n * Removes an item from the map.\n * @param {String} key The key of the host\n * @fires HostMap#remove\n */\nHostMap.prototype.remove = function (key) {\n  if (!this._items.hasOwnProperty(key)) {\n    //it's not part of it, do nothing\n    return;\n  }\n  //clear cache\n  this._values = null;\n  //copy the values\n  const copy = utils.extend({}, this._items);\n  const h = copy[key];\n  delete copy[key];\n  this._items = copy;\n  this.emit('remove', h);\n};\n\n/**\n * Removes multiple hosts from the map.\n * @param {Array.<String>} keys\n * @fires HostMap#remove\n */\nHostMap.prototype.removeMultiple = function (keys) {\n  //clear value cache\n  this._values = null;\n  //copy the values\n  const copy = utils.extend({}, this._items);\n  const removedHosts = [];\n  for (let i = 0; i < keys.length; i++) {\n    const h = copy[keys[i]];\n    if (!h) {\n      continue;\n    }\n    removedHosts.push(h);\n    delete copy[keys[i]];\n  }\n  this._items = copy;\n  removedHosts.forEach(function (h) {\n    this.emit('remove', h);\n  }, this);\n};\n\n/**\n * Adds a new item to the map.\n * @param {String} key The key of the host\n * @param {Host} value The host to be added\n * @fires HostMap#remove\n * @fires HostMap#add\n */\nHostMap.prototype.set = function (key, value) {\n  //clear values cache\n  this._values = null;\n  const originalValue = this._items[key];\n  if (originalValue) {\n    //The internal structure does not change\n    this._items[key] = value;\n    //emit a remove followed by a add\n    this.emit('remove', originalValue);\n    this.emit('add', value);\n    return;\n  }\n  //copy the values\n  const copy = utils.extend({}, this._items);\n  copy[key] = value;\n  this._items = copy;\n  this.emit('add', value);\n  return value;\n};\n\n/**\n * Returns a shallow copy of a portion of the items into a new array object.\n * Backward-compatibility.\n * @param {Number} [begin]\n * @param {Number} [end]\n * @returns {Array}\n * @ignore\n */\nHostMap.prototype.slice = function (begin, end) {\n  if (!begin && !end) {\n    //avoid making a copy of the copy\n    return this.values();\n  }\n  begin = begin || 0;\n  return this.values().slice(begin, end);\n};\n//Backward-compatibility\nHostMap.prototype.push = HostMap.prototype.set;\n\n/**\n * Returns a shallow copy of the values of the map.\n * @returns {Array.<Host>}\n */\nHostMap.prototype.values = function () {\n  if (!this._values) {\n    //cache the values\n    const values = [];\n    for (const key in this._items) {\n      if (!this._items.hasOwnProperty(key)) {\n        continue;\n      }\n      values.push(this._items[key]);\n    }\n    this._values = Object.freeze(values);\n  }\n  return this._values;\n};\n\n/**\n * Removes all items from the map.\n * @returns {Array.<Host>} The previous items\n */\nHostMap.prototype.clear = function () {\n  const previousItems = this.values();\n  // Clear cache\n  this._values = null;\n  // Clear items\n  this._items = {};\n  for (let i = 0; i < previousItems.length; i++) {\n    this.emit('remove', previousItems[i]);\n  }\n  return previousItems;\n};\n\nHostMap.prototype.inspect = function() {\n  return this._items;\n};\n\nHostMap.prototype.toJSON = function() {\n  return this._items;\n};\n\nexports.Host = Host;\nexports.HostMap = HostMap;\n","\"use strict\";\n\nconst events = require('events');\nconst util = require('util');\nconst tls = require('tls');\n\nconst Encoder = require('./encoder.js');\nconst WriteQueue = require('./writers').WriteQueue;\nconst requests = require('./requests');\nconst streams = require('./streams');\nconst utils = require('./utils');\nconst types = require('./types');\nconst errors = require('./errors');\nconst StreamIdStack = require('./stream-id-stack');\nconst OperationState = require('./operation-state');\nconst ExecutionOptions = require('./execution-options').ExecutionOptions;\n\n// Allow injection of net module\n// eslint-disable-next-line prefer-const\nlet net = require('net');\n\n/**\n * Represents a connection to a Cassandra node\n * @param {String} endpoint An string containing ip address and port of the host\n * @param {Number|null} protocolVersion\n * @param {ClientOptions} options\n * @extends EventEmitter\n * @constructor\n */\nfunction Connection(endpoint, protocolVersion, options) {\n  events.EventEmitter.call(this);\n  this.setMaxListeners(0);\n\n  if (!options) {\n    throw new Error('options is not defined');\n  }\n\n  /**\n   * Gets the ip and port of the server endpoint.\n   * @type {String}\n   */\n  this.endpoint = endpoint;\n\n  /**\n   * Gets the friendly name of the host, used to identify the connection in log messages.\n   * With direct connect, this is the address and port.\n   * @type {String}\n   */\n  this.endpointFriendlyName = endpoint;\n\n  if (!this.endpoint || this.endpoint.indexOf(':') < 0) {\n    throw new Error('EndPoint must contain the ip address and port separated by : symbol');\n  }\n\n  const portSeparatorIndex = this.endpoint.lastIndexOf(':');\n  this.address = this.endpoint.substr(0, portSeparatorIndex);\n  this.port = this.endpoint.substr(portSeparatorIndex + 1);\n\n  Object.defineProperty(this, \"options\", { value: options, enumerable: false, writable: false});\n\n  if (protocolVersion === null) {\n    // Set initial protocol version\n    protocolVersion = types.protocolVersion.maxSupported;\n    if (options.protocolOptions.maxVersion) {\n      // User provided the protocol version\n      protocolVersion = options.protocolOptions.maxVersion;\n    }\n    // Allow to check version using this connection instance\n    this._checkingVersion = true;\n  }\n\n  this.protocolVersion = protocolVersion;\n  /** @type {Object.<String, OperationState>} */\n  this._operations = {};\n  this._pendingWrites = [];\n  this._preparing = {};\n\n  /**\n   * The timeout state for the idle request (heartbeat)\n   */\n  this._idleTimeout = null;\n  this.timedOutOperations = 0;\n  this._streamIds = new StreamIdStack(this.protocolVersion);\n  this._metrics = options.metrics;\n\n  this.encoder = new Encoder(protocolVersion, options);\n  this.keyspace = null;\n  this.emitDrain = false;\n  /**\n   * Determines if the socket is open and startup succeeded, whether the connection can be used to send requests / \n   * receive events\n   */\n  this.connected = false;\n  /**\n   * Determines if the socket can be considered as open\n   */\n  this.isSocketOpen = false;\n}\n\nutil.inherits(Connection, events.EventEmitter);\n\nConnection.prototype.log = utils.log;\n\n/**\n * Binds the necessary event listeners for the socket\n */\nConnection.prototype.bindSocketListeners = function() {\n  //Remove listeners that were used for connecting\n  this.netClient.removeAllListeners('connect');\n  this.netClient.removeAllListeners('timeout');\n  // The socket is expected to be open at this point\n  this.isSocketOpen = true;\n  this.netClient.on('close', () => {\n    this.log('info', `Connection to ${this.endpointFriendlyName} closed`);\n    this.isSocketOpen = false;\n    const wasConnected = this.connected;\n    this.close();\n    if (wasConnected) {\n      // Emit only when it was closed unexpectedly\n      this.emit('socketClose');\n    }\n  });\n\n  this.protocol = new streams.Protocol({ objectMode: true });\n  this.parser = new streams.Parser({ objectMode: true }, this.encoder);\n  const resultEmitter = new streams.ResultEmitter({objectMode: true});\n  resultEmitter.on('result', this.handleResult.bind(this));\n  resultEmitter.on('row', this.handleRow.bind(this));\n  resultEmitter.on('frameEnded', this.freeStreamId.bind(this));\n  resultEmitter.on('nodeEvent', this.handleNodeEvent.bind(this));\n\n  this.netClient\n    .pipe(this.protocol)\n    .pipe(this.parser)\n    .pipe(resultEmitter);\n\n  this.writeQueue = new WriteQueue(this.netClient, this.encoder, this.options);\n};\n\n/**\n * Connects a socket and sends the startup protocol messages.\n * Note that when open() callbacks in error, the caller should immediately call {@link Connection#close}.\n */\nConnection.prototype.open = function (callback) {\n  const self = this;\n  this.log('info', `Connecting to ${this.endpointFriendlyName}`);\n\n  if (!this.options.sslOptions) {\n    this.netClient = new net.Socket({ highWaterMark: this.options.socketOptions.coalescingThreshold });\n    this.netClient.connect(this.port, this.address, function connectCallback() {\n      self.log('verbose', `Socket connected to ${self.endpointFriendlyName}`);\n      self.bindSocketListeners();\n      self.startup(callback);\n    });\n  } else {\n    // Use TLS\n    const sslOptions = utils.extend({ rejectUnauthorized: false }, this.options.sslOptions);\n\n    this.netClient = tls.connect(this.port, this.address, sslOptions, function tlsConnectCallback() {\n      self.log('verbose', `Secure socket connected to ${self.endpointFriendlyName}`);\n      self.bindSocketListeners();\n      self.startup(callback);\n    });\n\n    // TLSSocket will validate for values from 512 to 16K (depending on the SSL protocol version)\n    this.netClient.setMaxSendFragment(this.options.socketOptions.coalescingThreshold);\n  }\n\n  this.netClient.once('error', function socketError(err) {\n    self.errorConnecting(err, false, callback);\n  });\n\n  this.netClient.once('timeout', function connectTimedOut() {\n    const err = new types.DriverError('Connection timeout');\n    self.errorConnecting(err, true, callback);\n  });\n\n  this.netClient.setTimeout(this.options.socketOptions.connectTimeout);\n\n  // Improve failure detection with TCP keep-alives\n  if (this.options.socketOptions.keepAlive) {\n    this.netClient.setKeepAlive(true, this.options.socketOptions.keepAliveDelay);\n  }\n\n  this.netClient.setNoDelay(!!this.options.socketOptions.tcpNoDelay);\n};\n\n/**\n * Determines the protocol version to use and sends the STARTUP request\n * @param {Function} callback\n */\nConnection.prototype.startup = function (callback) {\n  if (this._checkingVersion) {\n    this.log('info', 'Trying to use protocol version 0x' + this.protocolVersion.toString(16));\n  }\n\n  const self = this;\n  const request = new requests.StartupRequest({ noCompact: this.options.protocolOptions.noCompact });\n\n  this.sendStream(request, null, function responseCallback(err, response) {\n    if (err && self._checkingVersion) {\n      let invalidProtocol = (err instanceof errors.ResponseError &&\n        err.code === types.responseErrorCodes.protocolError &&\n        err.message.indexOf('Invalid or unsupported protocol version') >= 0);\n      if (!invalidProtocol && types.protocolVersion.canStartupResponseErrorBeWrapped(self.protocolVersion)) {\n        //For some versions of Cassandra, the error is wrapped into a server error\n        //See CASSANDRA-9451\n        invalidProtocol = (err instanceof errors.ResponseError &&\n          err.code === types.responseErrorCodes.serverError &&\n          err.message.indexOf('ProtocolException: Invalid or unsupported protocol version') > 0);\n      }\n      if (invalidProtocol) {\n        // The server can respond with a message using the lower protocol version supported\n        // or using the same version as the one provided\n        let lowerVersion = self.protocol.version;\n        if (lowerVersion === self.protocolVersion) {\n          lowerVersion = types.protocolVersion.getLowerSupported(self.protocolVersion);\n        }\n        if (!lowerVersion) {\n          return startupCallback(\n            new Error('Connection was unable to STARTUP using protocol version ' + self.protocolVersion));\n        }\n        self.log('info', 'Protocol 0x' + self.protocolVersion.toString(16) + ' not supported, using 0x' + lowerVersion.toString(16));\n        self.decreaseVersion(lowerVersion);\n        // The host closed the connection, close the socket and start the connection flow again\n        setImmediate(function decreasingVersionClosing() {\n          self.close(function decreasingVersionOpening() {\n            // Attempt to open with the correct protocol version\n            self.open(callback);\n          });\n        });\n        return;\n      }\n    }\n    if (response && response.mustAuthenticate) {\n      return self.startAuthenticating(response.authenticatorName, startupCallback);\n    }\n    startupCallback(err);\n  });\n\n  function startupCallback(err) {\n    if (err) {\n      return self.errorConnecting(err, false, callback);\n    }\n    //The socket is connected and the connection is authenticated\n    return self.connectionReady(callback);\n  }\n};\n\nConnection.prototype.errorConnecting = function (err, destroy, callback) {\n  this.log('warning', `There was an error when trying to connect to the host ${this.endpointFriendlyName}`, err);\n  if (destroy) {\n    //there is a TCP connection that should be killed.\n    this.netClient.destroy();\n  }\n\n  this._metrics.onConnectionError(err);\n\n  callback(err);\n};\n\n/**\n * Sets the connection to ready/connected status\n */\nConnection.prototype.connectionReady = function (callback) {\n  this.emit('connected');\n  this.connected = true;\n  // Remove existing error handlers as the connection is now ready.\n  this.netClient.removeAllListeners('error');\n  this.netClient.on('error', this.handleSocketError.bind(this));\n  callback();\n};\n\n/** @param {Number} lowerVersion */\nConnection.prototype.decreaseVersion = function (lowerVersion) {\n  // The response already has the max protocol version supported by the Cassandra host.\n  this.protocolVersion = lowerVersion;\n  this.encoder.setProtocolVersion(lowerVersion);\n  this._streamIds.setVersion(lowerVersion);\n};\n\n/**\n * Handle socket errors, if the socket is not readable invoke all pending callbacks\n */\nConnection.prototype.handleSocketError = function (err) {\n  this._metrics.onConnectionError(err);\n  this.clearAndInvokePending(err);\n};\n\n/**\n * Cleans all internal state and invokes all pending callbacks of sent streams\n */\nConnection.prototype.clearAndInvokePending = function (innerError) {\n  if (this._idleTimeout) {\n    //Remove the idle request\n    clearTimeout(this._idleTimeout);\n    this._idleTimeout = null;\n  }\n  this._streamIds.clear();\n  if (this.emitDrain) {\n    this.emit('drain');\n  }\n  const err = new types.DriverError('Socket was closed');\n  err.isSocketError = true;\n  if (innerError) {\n    err.innerError = innerError;\n  }\n\n  //copy all handlers\n  const operations = utils.objectValues(this._operations);\n\n  //remove it from the map\n  this._operations = {};\n  if (operations.length > 0) {\n    this.log('info', 'Invoking ' + operations.length + ' pending callbacks');\n  }\n\n  // Invoke all handlers\n  utils.each(operations, function (operation, next) {\n    operation.setResult(err);\n    next();\n  });\n\n  const pendingWritesCopy = this._pendingWrites;\n  this._pendingWrites = [];\n  utils.each(pendingWritesCopy, function (operation, next) {\n    operation.setResult(err);\n    next();\n  });\n};\n\n/**\n * Starts the SASL flow\n * @param {String} authenticatorName\n * @param {Function} callback\n */\nConnection.prototype.startAuthenticating = function (authenticatorName, callback) {\n  if (!this.options.authProvider) {\n    return callback(new errors.AuthenticationError('Authentication provider not set'));\n  }\n  const authenticator = this.options.authProvider.newAuthenticator(this.endpoint, authenticatorName);\n  const self = this;\n  authenticator.initialResponse(function initialResponseCallback(err, token) {\n    // Start the flow with the initial token\n    if (err) {\n      return self.onAuthenticationError(callback, err);\n    }\n    self.authenticate(authenticator, token, callback);\n  });\n};\n\n/**\n * Handles authentication requests and responses.\n * @param {Authenticator} authenticator\n * @param {Buffer} token\n * @param {Function} callback\n */\nConnection.prototype.authenticate = function(authenticator, token, callback) {\n  const self = this;\n  let request = new requests.AuthResponseRequest(token);\n  if (this.protocolVersion === 1) {\n    //No Sasl support, use CREDENTIALS\n    if (!authenticator.username) {\n      return self.onAuthenticationError(\n        callback, new errors.AuthenticationError('Only plain text authenticator providers allowed under protocol v1'));\n    }\n\n    request = new requests.CredentialsRequest(authenticator.username, authenticator.password);\n  }\n\n  this.sendStream(request, null, function authResponseCallback(err, result) {\n    if (err) {\n      if (err instanceof errors.ResponseError && err.code === types.responseErrorCodes.badCredentials) {\n        const authError = new errors.AuthenticationError(err.message);\n        authError.additionalInfo = err;\n        err = authError;\n      }\n      return self.onAuthenticationError(callback, err);\n    }\n\n    if (result.ready) {\n      authenticator.onAuthenticationSuccess();\n      return callback();\n    }\n\n    if (result.authChallenge) {\n      return authenticator.evaluateChallenge(result.token, function evaluateCallback(err, t) {\n        if (err) {\n          return self.onAuthenticationError(callback, err);\n        }\n        //here we go again\n        self.authenticate(authenticator, t, callback);\n      });\n    }\n\n    callback(new errors.DriverInternalError('Unexpected response from Cassandra: ' + util.inspect(result)));\n  });\n};\n\nConnection.prototype.onAuthenticationError = function(callback, err) {\n  this._metrics.onAuthenticationError(err);\n  callback(err);\n};\n\n/**\n * Executes a 'USE ' query, if keyspace is provided and it is different from the current keyspace\n * @param {?String} keyspace\n * @param {Function} callback\n */\nConnection.prototype.changeKeyspace = function (keyspace, callback) {\n  if (!keyspace || this.keyspace === keyspace) {\n    return callback();\n  }\n  this.once('keyspaceChanged', callback);\n  if (this.toBeKeyspace === keyspace) {\n    // It will be invoked once the keyspace is changed\n    return;\n  }\n  this.toBeKeyspace = keyspace;\n  const query = util.format('USE \"%s\"', keyspace);\n  const self = this;\n  this.sendStream(\n    new requests.QueryRequest(query, null, null),\n    null,\n    function changeKeyspaceResponseCallback(err) {\n      if (err) {\n        self.log('error', `Connection to ${self.endpointFriendlyName} could not switch active keyspace`, err);\n      }\n      else {\n        self.keyspace = keyspace;\n      }\n      self.toBeKeyspace = null;\n      self.emit('keyspaceChanged', err, keyspace);\n    });\n};\n\n/**\n * Prepares a query on a given connection. If its already being prepared, it queues the callback.\n * @param {String} query\n * @param {function} callback\n */\nConnection.prototype.prepareOnce = function (query, callback) {\n  const name = ( this.keyspace || '' ) + query;\n  let info = this._preparing[name];\n  if (this._preparing[name]) {\n    //Its being already prepared\n    return info.once('prepared', callback);\n  }\n  info = new events.EventEmitter();\n  info.setMaxListeners(0);\n  info.once('prepared', callback);\n  this._preparing[name] = info;\n  const self = this;\n  this.sendStream(new requests.PrepareRequest(query), null, function (err, response) {\n    info.emit('prepared', err, response);\n    delete self._preparing[name];\n  });\n};\n\n/**\n * Queues the operation to be written to the wire and invokes the callback once the response was obtained or with an\n * error (socket error or OperationTimedOutError or serialization-related error).\n * @param {Request} request\n * @param {ExecutionOptions|null} execOptions\n * @param {function} callback Function to be called once the response has been received\n * @return {OperationState}\n */\nConnection.prototype.sendStream = function (request, execOptions, callback) {\n  execOptions = execOptions || ExecutionOptions.empty();\n\n  // Create a new operation that will contain the request, callback and timeouts\n  const operation = new OperationState(request, execOptions.getRowCallback(), (err, response, length) => {\n    if (!err || !err.isSocketError) {\n      // Emit that a response was obtained when there is a valid response\n      // or when the error is not a socket error\n      this.emit('responseDequeued');\n    }\n    callback(err, response, length);\n  });\n\n  const streamId = this._getStreamId();\n\n  // Start the request timeout without waiting for the request to be written\n  operation.setRequestTimeout(execOptions, this.options.socketOptions.readTimeout, this.endpoint,\n    () => this.timedOutOperations++,\n    () => this.timedOutOperations--);\n\n  if (streamId === null) {\n    this.log('info',\n      'Enqueuing ' +\n      this._pendingWrites.length +\n      ', if this message is recurrent consider configuring more connections per host or lowering the pressure');\n    this._pendingWrites.push(operation);\n    return operation;\n  }\n  this._write(operation, streamId);\n  return operation;\n};\n\n/**\n * Pushes the item into the queue.\n * @param {OperationState} operation\n * @param {Number} streamId\n * @private\n */\nConnection.prototype._write = function (operation, streamId) {\n  operation.streamId = streamId;\n  const self = this;\n  this.writeQueue.push(operation, function writeCallback (err) {\n    if (err) {\n      // The request was not written.\n      // There was a serialization error or the operation has already timed out or was cancelled\n      self._streamIds.push(streamId);\n      return operation.setResult(err);\n    }\n    self.log('verbose', 'Sent stream #' + streamId + ' to ' + self.endpointFriendlyName);\n    if (operation.isByRow()) {\n      self.parser.setOptions(streamId, { byRow: true });\n    }\n    self._setIdleTimeout();\n    self._operations[streamId] = operation;\n  });\n};\n\nConnection.prototype._setIdleTimeout = function () {\n  if (!this.options.pooling.heartBeatInterval) {\n    return;\n  }\n  const self = this;\n  // Scheduling the new timeout before de-scheduling the previous performs significantly better\n  // than de-scheduling first, see nodejs implementation: https://github.com/nodejs/node/blob/master/lib/timers.js\n  const previousTimeout = this._idleTimeout;\n  self._idleTimeout = setTimeout(() => self._idleTimeoutHandler(), self.options.pooling.heartBeatInterval);\n  if (previousTimeout) {\n    //remove the previous timeout for the idle request\n    clearTimeout(previousTimeout);\n  }\n};\n\n/**\n * Function that gets executed once the idle timeout has passed to issue a request to keep the connection alive\n */\nConnection.prototype._idleTimeoutHandler = function () {\n  if (this.sendingIdleQuery) {\n    //don't issue another\n    //schedule for next time\n    this._idleTimeout = setTimeout(() => this._idleTimeoutHandler(), this.options.pooling.heartBeatInterval);\n    return;\n  }\n\n  this.log('verbose', `Connection to ${this.endpointFriendlyName} idling, issuing a request to prevent disconnects`);\n  this.sendingIdleQuery = true;\n  this.sendStream(requests.options, null, (err) => {\n    this.sendingIdleQuery = false;\n    if (!err) {\n      //The sending succeeded\n      //There is a valid response but we don't care about the response\n      return;\n    }\n    this.log('warning', 'Received heartbeat request error', err);\n    this.emit('idleRequestError', err, this);\n  });\n};\n\n/**\n * Returns an available streamId or null if there isn't any available\n * @returns {Number}\n */\nConnection.prototype._getStreamId = function() {\n  return this._streamIds.pop();\n};\n\nConnection.prototype.freeStreamId = function(header) {\n  const streamId = header.streamId;\n  if (streamId < 0) {\n    return;\n  }\n  delete this._operations[streamId];\n  this._streamIds.push(streamId);\n  if (this.emitDrain && this._streamIds.inUse === 0 && this._pendingWrites.length === 0) {\n    this.emit('drain');\n  }\n  this._writeNext();\n};\n\nConnection.prototype._writeNext = function () {\n  if (this._pendingWrites.length === 0) {\n    return;\n  }\n  const streamId = this._getStreamId();\n  if (streamId === null) {\n    // No streamId available\n    return;\n  }\n  const self = this;\n  let operation;\n  while ((operation = this._pendingWrites.shift()) && !operation.canBeWritten()) {\n    // Trying to obtain an pending operation that can be written\n  }\n\n  if (!operation) {\n    // There isn't a pending operation that can be written\n    this._streamIds.push(streamId);\n    return;\n  }\n\n  // Schedule after current I/O callbacks have been executed\n  setImmediate(function writeNextPending() {\n    self._write(operation, streamId);\n  });\n};\n\n/**\n * Returns the number of requests waiting for response\n * @returns {Number}\n */\nConnection.prototype.getInFlight = function () {\n  return this._streamIds.inUse;\n};\n\n/**\n * Handles a result and error response\n */\nConnection.prototype.handleResult = function (header, err, result) {\n  const streamId = header.streamId;\n  if(streamId < 0) {\n    return this.log('verbose', 'event received', header);\n  }\n  const operation = this._operations[streamId];\n  if (!operation) {\n    return this.log('error', 'The server replied with a wrong streamId #' + streamId);\n  }\n  this.log('verbose', 'Received frame #' + streamId + ' from ' + this.endpointFriendlyName);\n  operation.setResult(err, result, header.bodyLength);\n};\n\nConnection.prototype.handleNodeEvent = function (header, event) {\n  switch (event.eventType) {\n    case types.protocolEvents.schemaChange:\n      this.emit('nodeSchemaChange', event);\n      break;\n    case types.protocolEvents.topologyChange:\n      this.emit('nodeTopologyChange', event);\n      break;\n    case types.protocolEvents.statusChange:\n      this.emit('nodeStatusChange', event);\n      break;\n  }\n};\n\n/**\n * Handles a row response\n */\nConnection.prototype.handleRow = function (header, row, meta, rowLength, flags) {\n  const streamId = header.streamId;\n  if(streamId < 0) {\n    return this.log('verbose', 'Event received', header);\n  }\n  const operation = this._operations[streamId];\n  if (!operation) {\n    return this.log('error', 'The server replied with a wrong streamId #' + streamId);\n  }\n  operation.setResultRow(row, meta, rowLength, flags, header);\n};\n\n/**\n * Closes the socket (if not already closed) and cancels all in-flight requests.\n * Multiple calls to this method have no additional side-effects.\n * @param {Function} [callback]\n */\nConnection.prototype.close = function (callback) {\n  callback = callback || utils.noop;\n\n  if (!this.connected && !this.isSocketOpen) {\n    return callback();\n  }\n\n  this.connected = false;\n  // Drain is never going to be emitted, once it is set to closed\n  this.removeAllListeners('drain');\n  this.clearAndInvokePending();\n\n  if (!this.isSocketOpen) {\n    return callback();\n  }\n\n  // Set the socket as closed now (before socket.end() is called) to avoid being invoked more than once\n  this.isSocketOpen = false;\n  this.log('verbose', `Closing connection to ${this.endpointFriendlyName}`);\n  const self = this;\n\n  // If server doesn't acknowledge the half-close within connection timeout, destroy the socket.\n  const endTimeout = setTimeout(() => {\n    this.log('info', `${this.endpointFriendlyName} did not respond to connection close within ` +\n      `${this.options.socketOptions.connectTimeout}ms, destroying connection`);\n    this.netClient.destroy();\n  }, this.options.socketOptions.connectTimeout);\n\n  this.netClient.once('close', function (hadError) {\n    clearTimeout(endTimeout);\n    if (hadError) {\n      self.log('info', 'The socket closed with a transmission error');\n    }\n    setImmediate(callback);\n  });\n\n  // At this point, the error event can be triggered because:\n  // - It's connected and writes haven't completed yet\n  // - The server abruptly closed its end of the connection (ECONNRESET) as a result of protocol error / auth error\n  // We need to remove any listeners and make sure we callback are pending writes\n  this.netClient.removeAllListeners('error');\n  this.netClient.on('error', err => this.clearAndInvokePending(err));\n\n  // Half-close the socket, it will result in 'close' event being fired\n  this.netClient.end();\n};\n\n/**\n * Gets the local IP address to which this connection socket is bound to.\n * @returns {String|undefined}\n */\nConnection.prototype.getLocalAddress = function () {\n  if (!this.netClient) {\n    return undefined;\n  }\n\n  return this.netClient.localAddress;\n};\n\nmodule.exports = Connection;\n","\"use strict\";\nconst util = require('util');\n\nconst types = require('./types');\nconst dataTypes = types.dataTypes;\nconst Long = types.Long;\nconst Integer = types.Integer;\nconst BigDecimal = types.BigDecimal;\nconst MutableLong = require('./types/mutable-long');\nconst utils = require('./utils');\nconst token = require('./token');\n\nconst uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nconst buffers = {\n  int16Zero: utils.allocBufferFromArray([0, 0]),\n  int32Zero: utils.allocBufferFromArray([0, 0, 0, 0]),\n  int8Zero: utils.allocBufferFromArray([0]),\n  int8One: utils.allocBufferFromArray([1]),\n  int8MaxValue: utils.allocBufferFromArray([0xff])\n};\n\n// BigInt: Avoid using literals (e.g., 32n) as we must be able to compile with older engines\nconst isBigIntSupported = typeof BigInt !== 'undefined';\nconst bigInt32 = isBigIntSupported ? BigInt(32) : null;\nconst bigInt8 = isBigIntSupported ? BigInt(8) : null;\nconst bigInt0 = isBigIntSupported ? BigInt(0) : null;\nconst bigIntMinus1 = isBigIntSupported ? BigInt(-1) : null;\nconst bigInt32BitsOn = isBigIntSupported ? BigInt(0xffffffff) : null;\nconst bigInt8BitsOn = isBigIntSupported ? BigInt(0xff) : null;\n\nconst complexTypeNames = Object.freeze({\n  list      : 'org.apache.cassandra.db.marshal.ListType',\n  set       : 'org.apache.cassandra.db.marshal.SetType',\n  map       : 'org.apache.cassandra.db.marshal.MapType',\n  udt       : 'org.apache.cassandra.db.marshal.UserType',\n  tuple     : 'org.apache.cassandra.db.marshal.TupleType',\n  frozen    : 'org.apache.cassandra.db.marshal.FrozenType',\n  reversed  : 'org.apache.cassandra.db.marshal.ReversedType',\n  composite : 'org.apache.cassandra.db.marshal.CompositeType',\n  empty     : 'org.apache.cassandra.db.marshal.EmptyType',\n  collection: 'org.apache.cassandra.db.marshal.ColumnToCollectionType'\n});\nconst cqlNames = Object.freeze({\n  frozen: 'frozen',\n  list: 'list',\n  'set': 'set',\n  map: 'map',\n  tuple: 'tuple',\n  empty: 'empty',\n  duration: 'duration'\n});\nconst singleTypeNames = Object.freeze({\n  'org.apache.cassandra.db.marshal.UTF8Type':           dataTypes.varchar,\n  'org.apache.cassandra.db.marshal.AsciiType':          dataTypes.ascii,\n  'org.apache.cassandra.db.marshal.UUIDType':           dataTypes.uuid,\n  'org.apache.cassandra.db.marshal.TimeUUIDType':       dataTypes.timeuuid,\n  'org.apache.cassandra.db.marshal.Int32Type':          dataTypes.int,\n  'org.apache.cassandra.db.marshal.BytesType':          dataTypes.blob,\n  'org.apache.cassandra.db.marshal.FloatType':          dataTypes.float,\n  'org.apache.cassandra.db.marshal.DoubleType':         dataTypes.double,\n  'org.apache.cassandra.db.marshal.BooleanType':        dataTypes.boolean,\n  'org.apache.cassandra.db.marshal.InetAddressType':    dataTypes.inet,\n  'org.apache.cassandra.db.marshal.SimpleDateType':     dataTypes.date,\n  'org.apache.cassandra.db.marshal.TimeType':           dataTypes.time,\n  'org.apache.cassandra.db.marshal.ShortType':          dataTypes.smallint,\n  'org.apache.cassandra.db.marshal.ByteType':           dataTypes.tinyint,\n  'org.apache.cassandra.db.marshal.DateType':           dataTypes.timestamp,\n  'org.apache.cassandra.db.marshal.TimestampType':      dataTypes.timestamp,\n  'org.apache.cassandra.db.marshal.LongType':           dataTypes.bigint,\n  'org.apache.cassandra.db.marshal.DecimalType':        dataTypes.decimal,\n  'org.apache.cassandra.db.marshal.IntegerType':        dataTypes.varint,\n  'org.apache.cassandra.db.marshal.CounterColumnType':  dataTypes.counter\n});\nconst singleFqTypeNamesLength = Object.keys(singleTypeNames).reduce(function (previous, current) {\n  return current.length > previous ? current.length : previous;\n}, 0);\nconst durationTypeName = 'org.apache.cassandra.db.marshal.DurationType';\nconst nullValueBuffer = utils.allocBufferFromArray([255, 255, 255, 255]);\nconst unsetValueBuffer = utils.allocBufferFromArray([255, 255, 255, 254]);\n\n/**\n * For backwards compatibility, empty buffers as text/blob/custom values are supported.\n * In the case of other types, they are going to be decoded as a <code>null</code> value.\n * @type {Set}\n */\nconst zeroLengthTypesSupported = new Set([\n  dataTypes.text,\n  dataTypes.ascii,\n  dataTypes.varchar,\n  dataTypes.custom,\n  dataTypes.blob\n]);\n\n/**\n * Serializes and deserializes to and from a CQL type and a Javascript Type.\n * @param {Number} protocolVersion\n * @param {ClientOptions} options\n * @constructor\n */\nfunction Encoder(protocolVersion, options) {\n  this.encodingOptions = options.encoding || utils.emptyObject;\n  defineInstanceMembers.call(this);\n  this.setProtocolVersion(protocolVersion);\n  setEncoders.call(this);\n  if (this.encodingOptions.copyBuffer) {\n    this.handleBuffer = handleBufferCopy;\n  }\n  else {\n    this.handleBuffer = handleBufferRef;\n  }\n}\n\n/**\n * Declares the privileged instance members.\n * @private\n */\nfunction defineInstanceMembers() {\n  /**\n   * Sets the protocol version and the encoding/decoding methods depending on the protocol version\n   * @param {Number} value\n   * @ignore\n   * @internal\n   */\n  this.setProtocolVersion = function (value) {\n    this.protocolVersion = value;\n    //Set the collection serialization based on the protocol version\n    this.decodeCollectionLength = decodeCollectionLengthV3;\n    this.getLengthBuffer = getLengthBufferV3;\n    this.collectionLengthSize = 4;\n    if (!types.protocolVersion.uses4BytesCollectionLength(this.protocolVersion)) {\n      this.decodeCollectionLength = decodeCollectionLengthV2;\n      this.getLengthBuffer = getLengthBufferV2;\n      this.collectionLengthSize = 2;\n    }\n  };\n  const customDecoders = {};\n  const customEncoders = {};\n  // Decoding methods\n  this.decodeBlob = function (bytes) {\n    return this.handleBuffer(bytes);\n  };\n  this.decodeCustom = function (bytes, typeName) {\n    const handler = customDecoders[typeName];\n    if (handler) {\n      return handler.call(this, bytes);\n    }\n    return this.handleBuffer(bytes);\n  };\n  this.decodeDuration = function (bytes) {\n    return types.Duration.fromBuffer(bytes);\n  };\n  this.decodeUtf8String = function (bytes) {\n    return bytes.toString('utf8');\n  };\n  this.decodeAsciiString = function (bytes) {\n    return bytes.toString('ascii');\n  };\n  this.decodeBoolean = function (bytes) {\n    return !!bytes.readUInt8(0);\n  };\n  this.decodeDouble = function (bytes) {\n    return bytes.readDoubleBE(0);\n  };\n  this.decodeFloat = function (bytes) {\n    return bytes.readFloatBE(0);\n  };\n  this.decodeInt = function (bytes) {\n    return bytes.readInt32BE(0);\n  };\n  this.decodeSmallint = function (bytes) {\n    return bytes.readInt16BE(0);\n  };\n  this.decodeTinyint = function (bytes) {\n    return bytes.readInt8(0);\n  };\n\n  this._decodeCqlLongAsLong = function (bytes) {\n    return Long.fromBuffer(bytes);\n  };\n\n  this._decodeCqlLongAsBigInt = function (bytes) {\n    return BigInt.asIntN(64, (BigInt(bytes.readUInt32BE(0)) << bigInt32) | BigInt(bytes.readUInt32BE(4)));\n  };\n\n  this.decodeLong = this.encodingOptions.useBigIntAsLong\n    ? this._decodeCqlLongAsBigInt\n    : this._decodeCqlLongAsLong;\n\n  this._decodeVarintAsInteger = function (bytes) {\n    return Integer.fromBuffer(bytes);\n  };\n\n  this._decodeVarintAsBigInt = function decodeVarintAsBigInt(bytes) {\n    let result = bigInt0;\n    if (bytes[0] <= 0x7f) {\n      for (let i = 0; i < bytes.length; i++) {\n        const b = BigInt(bytes[bytes.length - 1 - i]);\n        result = result | (b << BigInt(i * 8));\n      }\n    } else {\n      for (let i = 0; i < bytes.length; i++) {\n        const b = BigInt(bytes[bytes.length - 1 - i]);\n        result = result | ((~b & bigInt8BitsOn) << BigInt(i * 8));\n      }\n      result = ~result;\n    }\n\n    return result;\n  };\n\n  this.decodeVarint = this.encodingOptions.useBigIntAsVarint\n    ? this._decodeVarintAsBigInt\n    : this._decodeVarintAsInteger;\n\n  this.decodeDecimal = function(bytes) {\n    return BigDecimal.fromBuffer(bytes);\n  };\n  this.decodeTimestamp = function(bytes) {\n    return new Date(this._decodeCqlLongAsLong(bytes).toNumber());\n  };\n  this.decodeDate = function (bytes) {\n    return types.LocalDate.fromBuffer(bytes);\n  };\n  this.decodeTime = function (bytes) {\n    return types.LocalTime.fromBuffer(bytes);\n  };\n  /*\n   * Reads a list from bytes\n   */\n  this.decodeList = function (bytes, subtype) {\n    const totalItems = this.decodeCollectionLength(bytes, 0);\n    let offset = this.collectionLengthSize;\n    const list = new Array(totalItems);\n    for (let i = 0; i < totalItems; i++) {\n      //bytes length of the item\n      const length = this.decodeCollectionLength(bytes, offset);\n      offset += this.collectionLengthSize;\n      //slice it\n      list[i] = this.decode(bytes.slice(offset, offset+length), subtype);\n      offset += length;\n    }\n    return list;\n  };\n  /*\n   * Reads a Set from bytes\n   */\n  this.decodeSet = function (bytes, subtype) {\n    const arr = this.decodeList(bytes, subtype);\n    if (this.encodingOptions.set) {\n      const setConstructor = this.encodingOptions.set;\n      return new setConstructor(arr);\n    }\n    return arr;\n  };\n  /*\n   * Reads a map (key / value) from bytes\n   */\n  this.decodeMap = function (bytes, subtypes) {\n    let map;\n    const totalItems = this.decodeCollectionLength(bytes, 0);\n    let offset = this.collectionLengthSize;\n    const self = this;\n    function readValues(callback, thisArg) {\n      for (let i = 0; i < totalItems; i++) {\n        const keyLength = self.decodeCollectionLength(bytes, offset);\n        offset += self.collectionLengthSize;\n        const key = self.decode(bytes.slice(offset, offset + keyLength), subtypes[0]);\n        offset += keyLength;\n        const valueLength = self.decodeCollectionLength(bytes, offset);\n        offset += self.collectionLengthSize;\n        if (valueLength < 0) {\n          callback.call(thisArg, key, null);\n          continue;\n        }\n        const value = self.decode(bytes.slice(offset, offset + valueLength), subtypes[1]);\n        offset += valueLength;\n        callback.call(thisArg, key, value);\n      }\n    }\n    if (this.encodingOptions.map) {\n      const mapConstructor = this.encodingOptions.map;\n      map = new mapConstructor();\n      readValues(map.set, map);\n    }\n    else {\n      map = {};\n      readValues(function (key, value) {\n        map[key] = value;\n      });\n    }\n    return map;\n  };\n  this.decodeUuid = function (bytes) {\n    return new types.Uuid(this.handleBuffer(bytes));\n  };\n  this.decodeTimeUuid = function (bytes) {\n    return new types.TimeUuid(this.handleBuffer(bytes));\n  };\n  this.decodeInet = function (bytes) {\n    return new types.InetAddress(this.handleBuffer(bytes));\n  };\n  /**\n   * Decodes a user defined type into an object\n   * @param {Buffer} bytes\n   * @param {{fields: Array}} udtInfo\n   * @private\n   */\n  this.decodeUdt = function (bytes, udtInfo) {\n    const result = {};\n    let offset = 0;\n    for (let i = 0; i < udtInfo.fields.length && offset < bytes.length; i++) {\n      //bytes length of the field value\n      const length = bytes.readInt32BE(offset);\n      offset += 4;\n      //slice it\n      const field = udtInfo.fields[i];\n      if (length < 0) {\n        result[field.name] = null;\n        continue;\n      }\n      result[field.name] = this.decode(bytes.slice(offset, offset+length), field.type);\n      offset += length;\n    }\n    return result;\n  };\n  this.decodeTuple = function (bytes, tupleInfo) {\n    const elements = new Array(tupleInfo.length);\n    let offset = 0;\n    for (let i = 0; i < tupleInfo.length; i++) {\n      const length = bytes.readInt32BE(offset);\n      offset += 4;\n      if (length < 0) {\n        elements[i] = null;\n        continue;\n      }\n      elements[i] = this.decode(bytes.slice(offset, offset+length), tupleInfo[i]);\n      offset += length;\n    }\n    return new types.Tuple(elements);\n  };\n  //Encoding methods\n  this.encodeFloat = function (value) {\n    if (typeof value !== 'number') {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(4);\n    buf.writeFloatBE(value, 0);\n    return buf;\n  };\n  this.encodeDouble = function (value) {\n    if (typeof value !== 'number') {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(8);\n    buf.writeDoubleBE(value, 0);\n    return buf;\n  };\n  /**\n   * @param {Date|String|Long|Number} value\n   * @private\n   */\n  this.encodeTimestamp = function (value) {\n    const originalValue = value;\n    if (typeof value === 'string') {\n      value = new Date(value);\n    }\n    if (value instanceof Date) {\n      //milliseconds since epoch\n      value = value.getTime();\n      if (isNaN(value)) {\n        throw new TypeError('Invalid date: ' + originalValue);\n      }\n    }\n    return this.encodeLong(value);\n  };\n  /**\n   * @param {Date|String|LocalDate} value\n   * @returns {Buffer}\n   * @throws {TypeError}\n   * @private\n   */\n  this.encodeDate = function (value) {\n    const originalValue = value;\n    try {\n      if (typeof value === 'string') {\n        value = types.LocalDate.fromString(value);\n      }\n      if (value instanceof Date) {\n        value = types.LocalDate.fromDate(value);\n      }\n    }\n    catch (err) {\n      //Wrap into a TypeError\n      throw new TypeError('LocalDate could not be parsed ' + err);\n    }\n    if (!(value instanceof types.LocalDate)) {\n      throw new TypeError('Expected Date/String/LocalDate, obtained ' + util.inspect(originalValue));\n    }\n    return value.toBuffer();\n  };\n  /**\n   * @param {String|LocalDate} value\n   * @returns {Buffer}\n   * @throws {TypeError}\n   * @private\n   */\n  this.encodeTime = function (value) {\n    const originalValue = value;\n    try {\n      if (typeof value === 'string') {\n        value = types.LocalTime.fromString(value);\n      }\n    }\n    catch (err) {\n      //Wrap into a TypeError\n      throw new TypeError('LocalTime could not be parsed ' + err);\n    }\n    if (!(value instanceof types.LocalTime)) {\n      throw new TypeError('Expected String/LocalTime, obtained ' + util.inspect(originalValue));\n    }\n    return value.toBuffer();\n  };\n  /**\n   * @param {Uuid|String|Buffer} value\n   * @private\n   */\n  this.encodeUuid = function (value) {\n    if (typeof value === 'string') {\n      try {\n        value = types.Uuid.fromString(value).getBuffer();\n      }\n      catch (err) {\n        throw new TypeError(err.message);\n      }\n    } else if (value instanceof types.Uuid) {\n      value = value.getBuffer();\n    } else {\n      throw new TypeError('Not a valid Uuid, expected Uuid/String/Buffer, obtained ' + util.inspect(value));\n    }\n\n    return value;\n  };\n  /**\n   * @param {String|InetAddress|Buffer} value\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeInet = function (value) {\n    if (typeof value === 'string') {\n      value = types.InetAddress.fromString(value);\n    }\n    if (value instanceof types.InetAddress) {\n      value = value.getBuffer();\n    }\n    if (!(value instanceof Buffer)) {\n      throw new TypeError('Not a valid Inet, expected InetAddress/Buffer, obtained ' + util.inspect(value));\n    }\n    return value;\n  };\n\n  /**\n   * @param {Long|Buffer|String|Number} value\n   * @private\n   */\n  this._encodeBigIntFromLong = function (value) {\n    if (typeof value === 'number') {\n      value = Long.fromNumber(value);\n    } else if (typeof value === 'string') {\n      value = Long.fromString(value);\n    }\n\n    let buf = null;\n\n    if (value instanceof Long) {\n      buf = Long.toBuffer(value);\n    } else if (value instanceof MutableLong) {\n      buf = Long.toBuffer(value.toImmutable());\n    }\n\n    if (buf === null) {\n      throw new TypeError('Not a valid bigint, expected Long/Number/String/Buffer, obtained ' + util.inspect(value));\n    }\n\n    return buf;\n  };\n\n  this._encodeBigIntFromBigInt = function (value) {\n    // eslint-disable-next-line valid-typeof\n    if (typeof value !== 'bigint') {\n      // Only BigInt values are supported\n      throw new TypeError('Not a valid BigInt value, obtained ' + util.inspect(value));\n    }\n\n    const buffer = utils.allocBufferUnsafe(8);\n    buffer.writeUInt32BE(Number(value >> bigInt32) >>> 0, 0);\n    buffer.writeUInt32BE(Number(value & bigInt32BitsOn), 4);\n    return buffer;\n  };\n\n  this.encodeLong = this.encodingOptions.useBigIntAsLong\n    ? this._encodeBigIntFromBigInt\n    : this._encodeBigIntFromLong;\n\n  /**\n   * @param {Integer|Buffer|String|Number} value\n   * @returns {Buffer}\n   * @private\n   */\n  this._encodeVarintFromInteger = function (value) {\n    if (typeof value === 'number') {\n      value = Integer.fromNumber(value);\n    }\n    if (typeof value === 'string') {\n      value = Integer.fromString(value);\n    }\n    let buf = null;\n    if (value instanceof Buffer) {\n      buf = value;\n    }\n    if (value instanceof Integer) {\n      buf = Integer.toBuffer(value);\n    }\n    if (buf === null) {\n      throw new TypeError('Not a valid varint, expected Integer/Number/String/Buffer, obtained ' + util.inspect(value));\n    }\n    return buf;\n  };\n\n  this._encodeVarintFromBigInt = function (value) {\n    // eslint-disable-next-line valid-typeof\n    if (typeof value !== 'bigint') {\n      throw new TypeError('Not a valid varint, expected BigInt, obtained ' + util.inspect(value));\n    }\n\n    if (value === bigInt0) {\n      return buffers.int8Zero;\n\n    }\n    else if (value === bigIntMinus1) {\n      return buffers.int8MaxValue;\n    }\n\n    const parts = [];\n\n    if (value > bigInt0){\n      while (value !== bigInt0) {\n        parts.unshift(Number(value & bigInt8BitsOn));\n        value = value >> bigInt8;\n      }\n\n      if (parts[0] > 0x7f) {\n        // Positive value needs a padding\n        parts.unshift(0);\n      }\n    } else {\n      while (value !== bigIntMinus1) {\n        parts.unshift(Number(value & bigInt8BitsOn));\n        value = value >> bigInt8;\n      }\n\n      if (parts[0] <= 0x7f) {\n        // Negative value needs a padding\n        parts.unshift(0xff);\n      }\n    }\n\n    return utils.allocBufferFromArray(parts);\n  };\n\n  this.encodeVarint = this.encodingOptions.useBigIntAsVarint\n    ? this._encodeVarintFromBigInt\n    : this._encodeVarintFromInteger;\n\n  /**\n   * @param {BigDecimal|Buffer|String|Number} value\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeDecimal = function (value) {\n    if (typeof value === 'number') {\n      value = BigDecimal.fromNumber(value);\n    } else if (typeof value === 'string') {\n      value = BigDecimal.fromString(value);\n    }\n\n    let buf = null;\n\n    if (value instanceof BigDecimal) {\n      buf = BigDecimal.toBuffer(value);\n    } else {\n      throw new TypeError('Not a valid varint, expected BigDecimal/Number/String/Buffer, obtained ' + util.inspect(value));\n    }\n\n    return buf;\n  };\n  this.encodeString = function (value, encoding) {\n    if (typeof value !== 'string') {\n      throw new TypeError('Not a valid text value, expected String obtained ' + util.inspect(value));\n    }\n    return utils.allocBufferFromString(value, encoding);\n  };\n  this.encodeUtf8String = function (value) {\n    return this.encodeString(value, 'utf8');\n  };\n  this.encodeAsciiString = function (value) {\n    return this.encodeString(value, 'ascii');\n  };\n  this.encodeBlob = function (value) {\n    if (!(value instanceof Buffer)) {\n      throw new TypeError('Not a valid blob, expected Buffer obtained ' + util.inspect(value));\n    }\n    return value;\n  };\n  this.encodeCustom = function (value, name) {\n    const handler = customEncoders[name];\n    if (handler) {\n      return handler.call(this, value);\n    }\n    throw new TypeError('No encoding handler found for type ' + name);\n  };\n  this.encodeDuration = function (value) {\n    if (!(value instanceof types.Duration)) {\n      throw new TypeError('Not a valid duration, expected Duration/Buffer obtained ' + util.inspect(value));\n    }\n    return value.toBuffer();\n  };\n  /**\n   * @param {Boolean} value\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeBoolean = function (value) {\n    return value ? buffers.int8One : buffers.int8Zero;\n  };\n  /**\n   * @param {Number|String} value\n   * @private\n   */\n  this.encodeInt = function (value) {\n    if (isNaN(value)) {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(4);\n    buf.writeInt32BE(value, 0);\n    return buf;\n  };\n  /**\n   * @param {Number|String} value\n   * @private\n   */\n  this.encodeSmallint = function (value) {\n    if (isNaN(value)) {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(2);\n    buf.writeInt16BE(value, 0);\n    return buf;\n  };\n  /**\n   * @param {Number|String} value\n   * @private\n   */\n  this.encodeTinyint = function (value) {\n    if (isNaN(value)) {\n      throw new TypeError('Expected Number, obtained ' + util.inspect(value));\n    }\n    const buf = utils.allocBufferUnsafe(1);\n    buf.writeInt8(value, 0);\n    return buf;\n  };\n  this.encodeList = function (value, subtype) {\n    if (!util.isArray(value)) {\n      throw new TypeError('Not a valid list value, expected Array obtained ' + util.inspect(value));\n    }\n    if (value.length === 0) {\n      return null;\n    }\n    const parts = [];\n    parts.push(this.getLengthBuffer(value));\n    for (let i = 0;i < value.length;i++) {\n      const val = value[i];\n      if (val === null || typeof val === 'undefined' || val === types.unset) {\n        throw new TypeError('A collection can\\'t contain null or unset values');\n      }\n      const bytes = this.encode(val, subtype);\n      //include item byte length\n      parts.push(this.getLengthBuffer(bytes));\n      //include item\n      parts.push(bytes);\n    }\n    return Buffer.concat(parts);\n  };\n  this.encodeSet = function (value, subtype) {\n    if (this.encodingOptions.set && value instanceof this.encodingOptions.set) {\n      const arr = [];\n      value.forEach(function (x) {\n        arr.push(x);\n      });\n      return this.encodeList(arr, subtype);\n    }\n    return this.encodeList(value, subtype);\n  };\n  /**\n   * Serializes a map into a Buffer\n   * @param value\n   * @param {Array} [subtypes]\n   * @returns {Buffer}\n   * @private\n   */\n  this.encodeMap = function (value, subtypes) {\n    const parts = [];\n    let propCounter = 0;\n    let keySubtype = null;\n    let valueSubtype = null;\n    const self = this;\n    if (subtypes) {\n      keySubtype = subtypes[0];\n      valueSubtype = subtypes[1];\n    }\n    function addItem(val, key) {\n      if (key === null || typeof key === 'undefined' || key === types.unset) {\n        throw new TypeError('A map can\\'t contain null or unset keys');\n      }\n      if (val === null || typeof val === 'undefined' || val === types.unset) {\n        throw new TypeError('A map can\\'t contain null or unset values');\n      }\n      const keyBuffer = self.encode(key, keySubtype);\n      //include item byte length\n      parts.push(self.getLengthBuffer(keyBuffer));\n      //include item\n      parts.push(keyBuffer);\n      //value\n      const valueBuffer = self.encode(val, valueSubtype);\n      //include item byte length\n      parts.push(self.getLengthBuffer(valueBuffer));\n      //include item\n      if (valueBuffer !== null) {\n        parts.push(valueBuffer);\n      }\n      propCounter++;\n    }\n    if (this.encodingOptions.map && value instanceof this.encodingOptions.map) {\n      //Use Map#forEach() method to iterate\n      value.forEach(addItem);\n    }\n    else {\n      //Use object\n      for (const key in value) {\n        if (!value.hasOwnProperty(key)) {\n          continue;\n        }\n        const val = value[key];\n        addItem(val, key);\n      }\n    }\n\n    parts.unshift(this.getLengthBuffer(propCounter));\n    return Buffer.concat(parts);\n  };\n  this.encodeUdt = function (value, udtInfo) {\n    const parts = [];\n    let totalLength = 0;\n    for (let i = 0; i < udtInfo.fields.length; i++) {\n      const field = udtInfo.fields[i];\n      const item = this.encode(value[field.name], field.type);\n      if (!item) {\n        parts.push(nullValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n      if (item === types.unset) {\n        parts.push(unsetValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n      const lengthBuffer = utils.allocBufferUnsafe(4);\n      lengthBuffer.writeInt32BE(item.length, 0);\n      parts.push(lengthBuffer);\n      parts.push(item);\n      totalLength += item.length + 4;\n    }\n    return Buffer.concat(parts, totalLength);\n  };\n  this.encodeTuple = function (value, tupleInfo) {\n    const parts = [];\n    let totalLength = 0;\n    for (let i = 0; i < tupleInfo.length; i++) {\n      const type = tupleInfo[i];\n      const item = this.encode(value.get(i), type);\n      if (!item) {\n        parts.push(nullValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n      if (item === types.unset) {\n        parts.push(unsetValueBuffer);\n        totalLength += 4;\n        continue;\n      }\n      const lengthBuffer = utils.allocBufferUnsafe(4);\n      lengthBuffer.writeInt32BE(item.length, 0);\n      parts.push(lengthBuffer);\n      parts.push(item);\n      totalLength += item.length + 4;\n    }\n    return Buffer.concat(parts, totalLength);\n  };\n\n  /**\n   * If not provided, it uses the array of buffers or the parameters and hints to build the routingKey\n   * @param {Array} params\n   * @param {ExecutionOptions} execOptions\n   * @param [keys] parameter keys and positions in the params array\n   * @throws TypeError\n   * @internal\n   * @ignore\n   */\n  this.setRoutingKeyFromUser = function (params, execOptions, keys) {\n    let totalLength = 0;\n    const userRoutingKey = execOptions.getRoutingKey();\n    if (util.isArray(userRoutingKey)) {\n      if (userRoutingKey.length === 1) {\n        execOptions.setRoutingKey(userRoutingKey[0]);\n        return;\n      }\n\n      // Its a composite routing key\n      totalLength = 0;\n      for (let i = 0; i < userRoutingKey.length; i++) {\n        const item = userRoutingKey[i];\n        if (!item) {\n          // Invalid routing key part provided by the user, clear the value\n          execOptions.setRoutingKey(null);\n          return;\n        }\n        totalLength += item.length + 3;\n      }\n\n      execOptions.setRoutingKey(concatRoutingKey(userRoutingKey, totalLength));\n      return;\n    }\n    // If routingKey is present, ensure it is a Buffer, Token, or TokenRange.  Otherwise throw an error.\n    if (userRoutingKey) {\n      if (userRoutingKey instanceof Buffer || userRoutingKey instanceof token.Token\n        || userRoutingKey instanceof token.TokenRange) {\n        return;\n      }\n\n      throw new TypeError(`Unexpected routingKey '${util.inspect(userRoutingKey)}' provided. ` +\n        `Expected Buffer, Array<Buffer>, Token, or TokenRange.`);\n    }\n\n    // If no params are present, return as routing key cannot be determined.\n    if (!params || params.length === 0) {\n      return;\n    }\n\n    let routingIndexes = execOptions.getRoutingIndexes();\n    if (execOptions.getRoutingNames()) {\n      routingIndexes = execOptions.getRoutingNames().map(k => keys[k]);\n    }\n    if (!routingIndexes) {\n      return;\n    }\n\n    const parts = [];\n    const hints = execOptions.getHints() || utils.emptyArray;\n\n    const encodeParam = !keys ?\n      (i => this.encode(params[i], hints[i])) :\n      (i => this.encode(params[i].value, hints[i]));\n\n    try {\n      totalLength = this._encodeRoutingKeyParts(parts, routingIndexes, encodeParam);\n    } catch (e) {\n      // There was an error encoding a parameter that is part of the routing key,\n      // ignore now to fail afterwards\n    }\n\n    if (totalLength === 0) {\n      return;\n    }\n\n    execOptions.setRoutingKey(concatRoutingKey(parts, totalLength));\n  };\n\n  /**\n   * Sets the routing key in the options based on the prepared statement metadata.\n   * @param {Object} meta Prepared metadata\n   * @param {Array} params Array of parameters\n   * @param {ExecutionOptions} execOptions\n   * @throws TypeError\n   * @internal\n   * @ignore\n   */\n  this.setRoutingKeyFromMeta = function (meta, params, execOptions) {\n    const routingIndexes = execOptions.getRoutingIndexes();\n    if (!routingIndexes) {\n      return;\n    }\n    const parts = new Array(routingIndexes.length);\n    const encodeParam = i => {\n      const columnInfo = meta.columns[i];\n      return this.encode(params[i], columnInfo ? columnInfo.type : null);\n    };\n\n    let totalLength = 0;\n\n    try {\n      totalLength = this._encodeRoutingKeyParts(parts, routingIndexes, encodeParam);\n    } catch (e) {\n      // There was an error encoding a parameter that is part of the routing key,\n      // ignore now to fail afterwards\n    }\n\n    if (totalLength === 0) {\n      return;\n    }\n\n    execOptions.setRoutingKey(concatRoutingKey(parts, totalLength));\n  };\n\n  /**\n   * @param {Array} parts\n   * @param {Array} routingIndexes\n   * @param {Function} encodeParam\n   * @returns {Number} The total length\n   * @private\n   */\n  this._encodeRoutingKeyParts = function (parts, routingIndexes, encodeParam) {\n    let totalLength = 0;\n    for (let i = 0; i < routingIndexes.length; i++) {\n      const paramIndex = routingIndexes[i];\n      if (paramIndex === undefined) {\n        // Bad input from the user, ignore\n        return 0;\n      }\n\n      const item = encodeParam(paramIndex);\n      if (item === null || item === undefined || item === types.unset) {\n        // The encoded partition key should an instance of Buffer\n        // Let it fail later in the pipeline for null/undefined parameter values\n        return 0;\n      }\n\n      // Per each part of the routing key, 3 extra bytes are needed\n      totalLength += item.length + 3;\n      parts[i] = item;\n    }\n    return totalLength;\n  };\n\n  /**\n   * Parses a CQL name string into data type information\n   * @param {String} keyspace\n   * @param {String} typeName\n   * @param {Number} startIndex\n   * @param {Number|null} length\n   * @param {Function} udtResolver\n   * @param {Function} callback Callback invoked with err and  {{code: number, info: Object|Array|null, options: {frozen: Boolean}}}\n   * @internal\n   * @ignore\n   */\n  this.parseTypeName = function (keyspace, typeName, startIndex, length, udtResolver, callback) {\n    startIndex = startIndex || 0;\n    if (!length) {\n      length = typeName.length;\n    }\n    const dataType = {\n      code: 0,\n      info: null,\n      options: {\n        frozen: false\n      }\n    };\n    let innerTypes;\n    if (typeName.indexOf(\"'\", startIndex) === startIndex) {\n      //If quoted, this is a custom type.\n      dataType.info = typeName.substr(startIndex+1, length-2);\n      return callback(null, dataType);\n    }\n    if (!length) {\n      length = typeName.length;\n    }\n    if (typeName.indexOf(cqlNames.frozen, startIndex) === startIndex) {\n      //Remove the frozen token\n      startIndex += cqlNames.frozen.length + 1;\n      length -= cqlNames.frozen.length + 2;\n      dataType.options.frozen = true;\n    }\n    if (typeName.indexOf(cqlNames.list, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.list.length + 1;\n      length -= cqlNames.list.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n      if (innerTypes.length !== 1) {\n        return callback(new TypeError('Not a valid type ' + typeName));\n      }\n      dataType.code = dataTypes.list;\n      return this.parseTypeName(keyspace, innerTypes[0], 0, null, udtResolver, function (err, childType) {\n        if (err) {\n          return callback(err);\n        }\n        dataType.info = childType;\n        callback(null, dataType);\n      });\n    }\n    if (typeName.indexOf(cqlNames.set, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.set.length + 1;\n      length -= cqlNames.set.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n      if (innerTypes.length !== 1) {\n        return callback(new TypeError('Not a valid type ' + typeName));\n      }\n      dataType.code = dataTypes.set;\n      return this.parseTypeName(keyspace, innerTypes[0], 0, null, udtResolver, function (err, childType) {\n        if (err) {\n          return callback(err);\n        }\n        dataType.info = childType;\n        callback(null, dataType);\n      });\n    }\n    if (typeName.indexOf(cqlNames.map, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.map.length + 1;\n      length -= cqlNames.map.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n      //It should contain the key and value types\n      if (innerTypes.length !== 2) {\n        return callback(new TypeError('Not a valid type ' + typeName));\n      }\n      dataType.code = dataTypes.map;\n      return this._parseChildTypes(keyspace, dataType, innerTypes, udtResolver, callback);\n    }\n    if (typeName.indexOf(cqlNames.tuple, startIndex) === startIndex) {\n      //move cursor across the name and bypass the angle brackets\n      startIndex += cqlNames.tuple.length + 1;\n      length -= cqlNames.tuple.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length, '<', '>');\n      if (innerTypes.length < 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.tuple;\n      return this._parseChildTypes(keyspace, dataType, innerTypes, udtResolver, callback);\n    }\n    const quoted = typeName.indexOf('\"', startIndex) === startIndex;\n    if (quoted) {\n      //Remove quotes\n      startIndex++;\n      length -= 2;\n    }\n    //Quick check if its a single type\n    if (startIndex > 0) {\n      typeName = typeName.substr(startIndex, length);\n    }\n    // Un-escape double quotes if quoted.\n    if (quoted) {\n      typeName = typeName.replace('\"\"', '\"');\n    }\n    const typeCode = dataTypes[typeName];\n    if (typeof typeCode === 'number') {\n      dataType.code = typeCode;\n      return callback(null, dataType);\n    }\n    if (typeName === cqlNames.duration) {\n      dataType.info = durationTypeName;\n      return callback(null, dataType);\n    }\n    if (typeName === cqlNames.empty) {\n      //set as custom\n      dataType.info = 'empty';\n      return callback(null, dataType);\n    }\n    udtResolver(keyspace, typeName, function (err, udtInfo) {\n      if (err) {\n        return callback(err);\n      }\n      if (udtInfo) {\n        dataType.code = dataTypes.udt;\n        dataType.info = udtInfo;\n        return callback(null, dataType);\n      }\n      callback(new TypeError('Not a valid type \"' + typeName + '\"'));\n    });\n  };\n  /**\n   * @param {String} keyspace\n   * @param dataType\n   * @param {Array} typeNames\n   * @param {Function} udtResolver\n   * @param {Function} callback\n   * @private\n   */\n  this._parseChildTypes = function (keyspace, dataType, typeNames, udtResolver, callback) {\n    const self = this;\n    utils.mapSeries(typeNames, function (name, next) {\n      self.parseTypeName(keyspace, name.trim(), 0, null, udtResolver, next);\n    }, function (err, childTypes) {\n      if (err) {\n        return callback(err);\n      }\n      dataType.info = childTypes;\n      callback(null, dataType);\n    });\n  };\n\n  /**\n   * Parses a Cassandra fully-qualified class name string into data type information\n   * @param {String} typeName\n   * @param {Number} [startIndex]\n   * @param {Number} [length]\n   * @throws TypeError\n   * @returns {{code: number, info: Object|Array|null, options: {frozen: Boolean, reversed: Boolean}}}\n   * @internal\n   * @ignore\n   */\n  this.parseFqTypeName = function (typeName, startIndex, length) {\n    const dataType = {\n      code: 0,\n      info: null,\n      options: {\n        reversed: false,\n        frozen: false\n      }\n    };\n    startIndex = startIndex || 0;\n    let innerTypes;\n    if (!length) {\n      length = typeName.length;\n    }\n    if (length > complexTypeNames.reversed.length && typeName.indexOf(complexTypeNames.reversed) === startIndex) {\n      //Remove the reversed token\n      startIndex += complexTypeNames.reversed.length + 1;\n      length -= complexTypeNames.reversed.length + 2;\n      dataType.options.reversed = true;\n    }\n    if (length > complexTypeNames.frozen.length &&\n        typeName.indexOf(complexTypeNames.frozen, startIndex) === startIndex) {\n      //Remove the frozen token\n      startIndex += complexTypeNames.frozen.length + 1;\n      length -= complexTypeNames.frozen.length + 2;\n      dataType.options.frozen = true;\n    }\n    if (typeName === complexTypeNames.empty) {\n      //set as custom\n      dataType.info = 'empty';\n      return dataType;\n    }\n    //Quick check if its a single type\n    if (length <= singleFqTypeNamesLength) {\n      if (startIndex > 0) {\n        typeName = typeName.substr(startIndex, length);\n      }\n      const typeCode = singleTypeNames[typeName];\n      if (typeof typeCode === 'number') {\n        dataType.code = typeCode;\n        return dataType;\n      }\n      throw new TypeError('Not a valid type \"' + typeName + '\"');\n    }\n    if (typeName.indexOf(complexTypeNames.list, startIndex) === startIndex) {\n      //Its a list\n      //org.apache.cassandra.db.marshal.ListType(innerType)\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.list.length + 1;\n      length -= complexTypeNames.list.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      if (innerTypes.length !== 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.list;\n      dataType.info = this.parseFqTypeName(innerTypes[0]);\n      return dataType;\n    }\n    if (typeName.indexOf(complexTypeNames.set, startIndex) === startIndex) {\n      //Its a set\n      //org.apache.cassandra.db.marshal.SetType(innerType)\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.set.length + 1;\n      length -= complexTypeNames.set.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      if (innerTypes.length !== 1)\n      {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.set;\n      dataType.info = this.parseFqTypeName(innerTypes[0]);\n      return dataType;\n    }\n    if (typeName.indexOf(complexTypeNames.map, startIndex) === startIndex) {\n      //org.apache.cassandra.db.marshal.MapType(keyType,valueType)\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.map.length + 1;\n      length -= complexTypeNames.map.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      //It should contain the key and value types\n      if (innerTypes.length !== 2) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.map;\n      dataType.info = [this.parseFqTypeName(innerTypes[0]), this.parseFqTypeName(innerTypes[1])];\n      return dataType;\n    }\n    if (typeName.indexOf(complexTypeNames.udt, startIndex) === startIndex) {\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.udt.length + 1;\n      length -= complexTypeNames.udt.length + 2;\n      return this._parseUdtName(typeName, startIndex, length);\n    }\n    if (typeName.indexOf(complexTypeNames.tuple, startIndex) === startIndex) {\n      //move cursor across the name and bypass the parenthesis\n      startIndex += complexTypeNames.tuple.length + 1;\n      length -= complexTypeNames.tuple.length + 2;\n      innerTypes = parseParams(typeName, startIndex, length);\n      if (innerTypes.length < 1) {\n        throw new TypeError('Not a valid type ' + typeName);\n      }\n      dataType.code = dataTypes.tuple;\n      dataType.info = innerTypes.map(x => this.parseFqTypeName(x));\n      return dataType;\n    }\n\n    // Assume custom type if cannot be parsed up to this point.\n    dataType.info = typeName.substr(startIndex, length);\n    return dataType;\n  };\n  /**\n   * Parses type names with composites\n   * @param {String} typesString\n   * @returns {{types: Array, isComposite: Boolean, hasCollections: Boolean}}\n   * @internal\n   * @ignore\n   */\n  this.parseKeyTypes = function (typesString) {\n    let i = 0;\n    let length = typesString.length;\n    const isComposite = typesString.indexOf(complexTypeNames.composite) === 0;\n    if (isComposite) {\n      i = complexTypeNames.composite.length + 1;\n      length--;\n    }\n    const types = [];\n    let startIndex = i;\n    let nested = 0;\n    let inCollectionType = false;\n    let hasCollections = false;\n    //as collection types are not allowed, it is safe to split by ,\n    while (++i < length) {\n      switch (typesString[i]) {\n        case ',':\n          if (nested > 0) {\n            break;\n          }\n          if (inCollectionType) {\n            //remove type id\n            startIndex = typesString.indexOf(':', startIndex) + 1;\n          }\n          types.push(typesString.substring(startIndex, i));\n          startIndex = i + 1;\n          break;\n        case '(':\n          if (nested === 0 && typesString.indexOf(complexTypeNames.collection, startIndex) === startIndex) {\n            inCollectionType = true;\n            hasCollections = true;\n            //skip collection type\n            i++;\n            startIndex = i;\n            break;\n          }\n          nested++;\n          break;\n        case ')':\n          if (inCollectionType && nested === 0){\n            types.push(typesString.substring(typesString.indexOf(':', startIndex) + 1, i));\n            startIndex = i + 1;\n            break;\n          }\n          nested--;\n          break;\n      }\n    }\n    if (startIndex < length) {\n      types.push(typesString.substring(startIndex, length));\n    }\n    return {\n      types: types.map(name => this.parseFqTypeName(name)),\n      hasCollections: hasCollections,\n      isComposite: isComposite\n    };\n  };\n  this._parseUdtName = function (typeName, startIndex, length) {\n    const udtParams = parseParams(typeName, startIndex, length);\n    if (udtParams.length < 2) {\n      //It should contain at least the keyspace, name of the udt and a type\n      throw new TypeError('Not a valid type ' + typeName);\n    }\n    const dataType = {\n      code: dataTypes.udt,\n      info: null\n    };\n    const udtInfo = {\n      keyspace: udtParams[0],\n      name: utils.allocBufferFromString(udtParams[1], 'hex').toString(),\n      fields: []\n    };\n    for (let i = 2; i < udtParams.length; i++) {\n      const p = udtParams[i];\n      const separatorIndex = p.indexOf(':');\n      const fieldType = this.parseFqTypeName(p, separatorIndex + 1, p.length - (separatorIndex + 1));\n      udtInfo.fields.push({\n        name: utils.allocBufferFromString(p.substr(0, separatorIndex), 'hex').toString(),\n        type: fieldType\n      });\n    }\n    dataType.info = udtInfo;\n    return dataType;\n  };\n\n  customDecoders[durationTypeName] = this.decodeDuration;\n  customEncoders[durationTypeName] = this.encodeDuration;\n}\n\n/**\n * Sets the encoder and decoder methods for this instance\n * @private\n */\nfunction setEncoders() {\n  this.decoders = {\n    [dataTypes.custom]: this.decodeCustom,\n    [dataTypes.ascii]: this.decodeAsciiString,\n    [dataTypes.bigint]: this.decodeLong,\n    [dataTypes.blob]: this.decodeBlob,\n    [dataTypes.boolean]: this.decodeBoolean,\n    [dataTypes.counter]: this.decodeLong,\n    [dataTypes.decimal]: this.decodeDecimal,\n    [dataTypes.double]: this.decodeDouble,\n    [dataTypes.float]: this.decodeFloat,\n    [dataTypes.int]: this.decodeInt,\n    [dataTypes.text]: this.decodeUtf8String,\n    [dataTypes.timestamp]: this.decodeTimestamp,\n    [dataTypes.uuid]: this.decodeUuid,\n    [dataTypes.varchar]: this.decodeUtf8String,\n    [dataTypes.varint]: this.decodeVarint,\n    [dataTypes.timeuuid]: this.decodeTimeUuid,\n    [dataTypes.inet]: this.decodeInet,\n    [dataTypes.date]: this.decodeDate,\n    [dataTypes.time]: this.decodeTime,\n    [dataTypes.smallint]: this.decodeSmallint,\n    [dataTypes.tinyint]: this.decodeTinyint,\n    [dataTypes.list]: this.decodeList,\n    [dataTypes.map]: this.decodeMap,\n    [dataTypes.set]: this.decodeSet,\n    [dataTypes.udt]: this.decodeUdt,\n    [dataTypes.tuple]: this.decodeTuple\n  };\n\n  this.encoders = {\n    [dataTypes.custom]: this.encodeCustom,\n    [dataTypes.ascii]: this.encodeAsciiString,\n    [dataTypes.bigint]: this.encodeLong,\n    [dataTypes.blob]: this.encodeBlob,\n    [dataTypes.boolean]: this.encodeBoolean,\n    [dataTypes.counter]: this.encodeLong,\n    [dataTypes.decimal]: this.encodeDecimal,\n    [dataTypes.double]: this.encodeDouble,\n    [dataTypes.float]: this.encodeFloat,\n    [dataTypes.int]: this.encodeInt,\n    [dataTypes.text]: this.encodeUtf8String,\n    [dataTypes.timestamp]: this.encodeTimestamp,\n    [dataTypes.uuid]: this.encodeUuid,\n    [dataTypes.varchar]: this.encodeUtf8String,\n    [dataTypes.varint]: this.encodeVarint,\n    [dataTypes.timeuuid]: this.encodeUuid,\n    [dataTypes.inet]: this.encodeInet,\n    [dataTypes.date]: this.encodeDate,\n    [dataTypes.time]: this.encodeTime,\n    [dataTypes.smallint]: this.encodeSmallint,\n    [dataTypes.tinyint]: this.encodeTinyint,\n    [dataTypes.list]: this.encodeList,\n    [dataTypes.map]: this.encodeMap,\n    [dataTypes.set]: this.encodeSet,\n    [dataTypes.udt]: this.encodeUdt,\n    [dataTypes.tuple]: this.encodeTuple\n  };\n}\n\n/**\n * Decodes Cassandra bytes into Javascript values.\n * <p>\n * This is part of an <b>experimental</b> API, this can be changed future releases.\n * </p>\n * @param {Buffer} buffer Raw buffer to be decoded.\n * @param {Object} type An object containing the data type <code>code</code> and <code>info</code>.\n * @param {Number} type.code Type code.\n * @param {Object} [type.info] Additional information on the type for complex / nested types.\n */\nEncoder.prototype.decode = function (buffer, type) {\n  if (buffer === null || (buffer.length === 0 && !zeroLengthTypesSupported.has(type.code))) {\n    return null;\n  }\n\n  const decoder = this.decoders[type.code];\n\n  if (!decoder) {\n    throw new Error('Unknown data type: ' + type.code);\n  }\n\n  return decoder.call(this, buffer, type.info);\n};\n\n/**\n * Encodes Javascript types into Buffer according to the Cassandra protocol.\n * <p>\n * This is part of an <b>experimental</b> API, this can be changed future releases.\n * </p>\n * @param {*} value The value to be converted.\n * @param {{code: number, info: *|Object}|String|Number} [typeInfo] The type information.\n * <p>It can be either a:</p>\n * <ul>\n *   <li>A <code>String</code> representing the data type.</li>\n *   <li>A <code>Number</code> with one of the values of {@link module:types~dataTypes dataTypes}.</li>\n *   <li>An <code>Object</code> containing the <code>type.code</code> as one of the values of\n *   {@link module:types~dataTypes dataTypes} and <code>type.info</code>.\n *   </li>\n * </ul>\n * @returns {Buffer}\n * @throws {TypeError} When there is an encoding error\n */\nEncoder.prototype.encode = function (value, typeInfo) {\n  if (value === undefined) {\n    value = this.encodingOptions.useUndefinedAsUnset && this.protocolVersion >= 4 ? types.unset : null;\n  }\n\n  if (value === types.unset) {\n    if (!types.protocolVersion.supportsUnset(this.protocolVersion)) {\n      throw new TypeError('Unset value can not be used for this version of Cassandra, protocol version: ' +\n        this.protocolVersion);\n    }\n\n    return value;\n  }\n\n  if (value === null || value instanceof Buffer) {\n    return value;\n  }\n\n  /** @type {{code: Number, info: object}} */\n  let type = {\n    code: null,\n    info: null\n  };\n\n  if (typeInfo) {\n    if (typeof typeInfo === 'number') {\n      type.code = typeInfo;\n    }\n    else if (typeof typeInfo === 'string') {\n      type = dataTypes.getByName(typeInfo);\n    }\n    if (typeof typeInfo.code === 'number') {\n      type.code = typeInfo.code;\n      type.info = typeInfo.info;\n    }\n    if (typeof type.code !== 'number') {\n      throw new TypeError('Type information not valid, only String and Number values are valid hints');\n    }\n  }\n  else {\n    //Lets guess\n    type = Encoder.guessDataType(value);\n    if (!type) {\n      throw new TypeError('Target data type could not be guessed, you should use prepared statements for accurate type mapping. Value: ' + util.inspect(value));\n    }\n  }\n\n  const encoder = this.encoders[type.code];\n\n  if (!encoder) {\n    throw new Error('Type not supported ' + type.code);\n  }\n\n  return encoder.call(this, value, type.info);\n};\n\n/**\n * Try to guess the Cassandra type to be stored, based on the javascript value type\n * @param value\n * @returns {{code: number, info: object}|null}\n * @ignore\n * @internal\n */\nEncoder.guessDataType = function (value) {\n  let code = null;\n  let info = null;\n  const esTypeName = (typeof value);\n  if (esTypeName === 'number') {\n    code = dataTypes.double;\n  }\n  else if (esTypeName === 'string') {\n    code = dataTypes.text;\n    if (value.length === 36 && uuidRegex.test(value)){\n      code = dataTypes.uuid;\n    }\n  }\n  else if (esTypeName === 'boolean') {\n    code = dataTypes.boolean;\n  }\n  else if (value instanceof Buffer) {\n    code = dataTypes.blob;\n  }\n  else if (value instanceof Date) {\n    code = dataTypes.timestamp;\n  }\n  else if (value instanceof Long) {\n    code = dataTypes.bigint;\n  }\n  else if (value instanceof Integer) {\n    code = dataTypes.varint;\n  }\n  else if (value instanceof BigDecimal) {\n    code = dataTypes.decimal;\n  }\n  else if (value instanceof types.Uuid) {\n    code = dataTypes.uuid;\n  }\n  else if (value instanceof types.InetAddress) {\n    code = dataTypes.inet;\n  }\n  else if (value instanceof types.Tuple) {\n    code = dataTypes.tuple;\n  }\n  else if (value instanceof types.LocalDate) {\n    code = dataTypes.date;\n  }\n  else if (value instanceof types.LocalTime) {\n    code = dataTypes.time;\n  }\n  else if (value instanceof types.Duration) {\n    code = dataTypes.custom;\n    info = durationTypeName;\n  }\n  else if (util.isArray(value)) {\n    code = dataTypes.list;\n  }\n  if (code === null) {\n    return null;\n  }\n  return { code: code, info: info };\n};\n\n/**\n * Gets a buffer containing with the bytes (BE) representing the collection length for protocol v2 and below\n * @param {Buffer|Number} value\n * @returns {Buffer}\n * @private\n */\nfunction getLengthBufferV2(value) {\n  if (!value) {\n    return buffers.int16Zero;\n  }\n  const lengthBuffer = utils.allocBufferUnsafe(2);\n  if (typeof value === 'number') {\n    lengthBuffer.writeUInt16BE(value, 0);\n  }\n  else {\n    lengthBuffer.writeUInt16BE(value.length, 0);\n  }\n  return lengthBuffer;\n}\n\n/**\n * Gets a buffer containing with the bytes (BE) representing the collection length for protocol v3 and above\n * @param {Buffer|Number} value\n * @returns {Buffer}\n * @private\n */\nfunction getLengthBufferV3(value) {\n  if (!value) {\n    return buffers.int32Zero;\n  }\n  const lengthBuffer = utils.allocBufferUnsafe(4);\n  if (typeof value === 'number') {\n    lengthBuffer.writeInt32BE(value, 0);\n  }\n  else {\n    lengthBuffer.writeInt32BE(value.length, 0);\n  }\n  return lengthBuffer;\n}\n\n/**\n * @param {Buffer} buffer\n * @private\n */\nfunction handleBufferCopy(buffer) {\n  if (buffer === null) {\n    return null;\n  }\n  return utils.copyBuffer(buffer);\n}\n\n/**\n * @param {Buffer} buffer\n * @private\n */\nfunction handleBufferRef(buffer) {\n  return buffer;\n}\n/**\n * Decodes collection length for protocol v3 and above\n * @param bytes\n * @param offset\n * @returns {Number}\n * @private\n */\nfunction decodeCollectionLengthV3(bytes, offset) {\n  return bytes.readInt32BE(offset);\n}\n/**\n * Decodes collection length for protocol v2 and below\n * @param bytes\n * @param offset\n * @returns {Number}\n * @private\n */\nfunction decodeCollectionLengthV2(bytes, offset) {\n  return bytes.readUInt16BE(offset);\n}\n\n/**\n * @param {String} value\n * @param {Number} startIndex\n * @param {Number} length\n * @param {String} [open]\n * @param {String} [close]\n * @returns {Array}\n * @private\n */\nfunction parseParams(value, startIndex, length, open, close) {\n  open = open || '(';\n  close = close || ')';\n  const types = [];\n  let paramStart = startIndex;\n  let level = 0;\n  for (let i = startIndex; i < startIndex + length; i++) {\n    const c = value[i];\n    if (c === open) {\n      level++;\n    }\n    if (c === close) {\n      level--;\n    }\n    if (level === 0 && c === ',') {\n      types.push(value.substr(paramStart, i - paramStart));\n      paramStart = i + 1;\n    }\n  }\n  //Add the last one\n  types.push(value.substr(paramStart, length - (paramStart - startIndex)));\n  return types;\n}\n\n/**\n * @param {Array.<Buffer>} parts\n * @param {Number} totalLength\n * @returns {Buffer}\n * @private\n */\nfunction concatRoutingKey(parts, totalLength) {\n  if (totalLength === 0) {\n    return null;\n  }\n  if (parts.length === 1) {\n    return parts[0];\n  }\n  const routingKey = utils.allocBufferUnsafe(totalLength);\n  let offset = 0;\n  for (let i = 0; i < parts.length; i++) {\n    const item = parts[i];\n    routingKey.writeUInt16BE(item.length, offset);\n    offset += 2;\n    item.copy(routingKey, offset);\n    offset += item.length;\n    routingKey[offset] = 0;\n    offset++;\n  }\n  return routingKey;\n}\n\nmodule.exports = Encoder;\n","\"use strict\";\n\nconst Long = require('long');\n\nconst TWO_PWR_16_DBL = 1 << 16;\nconst TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\nconst one = new MutableLong(1, 0, 0, 0);\n\n/**\n * Constructs a signed int64 representation.\n * @constructor\n * @ignore\n */\nfunction MutableLong(b00, b16, b32, b48) {\n  // Use an array of uint16\n  this._arr = [ b00 & 0xffff, b16 & 0xffff, b32 & 0xffff, b48 & 0xffff ];\n}\n\nMutableLong.fromNumber = function fromNumber(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return new MutableLong();\n  }\n  if (value < 0) {\n    return MutableLong.fromNumber(-value).negate();\n  }\n  const low32Bits = value % TWO_PWR_32_DBL;\n  const high32Bits = value / TWO_PWR_32_DBL;\n  return MutableLong.fromBits(low32Bits, high32Bits);\n};\n\nMutableLong.fromBits = function fromBits(low32Bits, high32Bits) {\n  return new MutableLong(low32Bits, low32Bits >>> 16, high32Bits, high32Bits >>> 16);\n};\n\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @param {String} str\n * @param {Number} [radix]\n * @return {MutableLong}\n */\nMutableLong.fromString = function fromString(str, radix) {\n  if (typeof str !== 'string') {\n    throw new Error('String format is not valid: ' + str);\n  }\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n  if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") {\n    return new MutableLong();\n  }\n  radix = radix || 10;\n  if (radix < 2 || radix > 36) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  let p;\n  if ((p = str.indexOf('-')) > 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n  if (p === 0) {\n    return MutableLong.fromString(str.substring(1), radix).negate();\n  }\n\n  // Do several (8) digits each time through the loop\n  const radixToPower = MutableLong.fromNumber(Math.pow(radix, 8));\n\n  const result = new MutableLong();\n  for (let i = 0; i < str.length; i += 8) {\n    const size = Math.min(8, str.length - i);\n    const value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      const power = MutableLong.fromNumber(Math.pow(radix, size));\n      result.multiply(power).add(MutableLong.fromNumber(value));\n      break;\n    }\n    result.multiply(radixToPower);\n    result.add(MutableLong.fromNumber(value));\n  }\n  return result;\n};\n\nMutableLong.prototype.toString = function toString() {\n  return this.toImmutable().toString();\n};\n\n/**\n * Compares this value with the provided value.\n * @param {MutableLong} other\n * @return {number}\n */\nMutableLong.prototype.compare = function (other) {\n  const thisNeg = this.isNegative();\n  const otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n  // At this point the sign bits are the same\n  return this._compareBits(other);\n};\n\nMutableLong.prototype._compareBits = function(other) {\n  for (let i = 3; i >= 0; i--) {\n    if (this._arr[i] > other._arr[i]) {\n      return 1;\n    }\n    if (this._arr[i] < other._arr[i]) {\n      return -1;\n    }\n  }\n  return 0;\n};\n\nMutableLong.prototype.getUint16 = function (index) {\n  return this._arr[index];\n};\n\nMutableLong.prototype.getLowBitsUnsigned = function () {\n  return (this._arr[0] | ((this._arr[1] & 0xffff) << 16)) >>> 0;\n};\n\nMutableLong.prototype.getHighBitsUnsigned = function () {\n  return (this._arr[2] | (this._arr[3] << 16)) >>> 0;\n};\n\nMutableLong.prototype.toNumber = function () {\n  return (this._arr[3] << 16 | this._arr[2]) * TWO_PWR_32_DBL + ((this._arr[1] << 16 | this._arr[0]) >>> 0);\n};\n\n/**\n * Performs the bitwise NOT of this value.\n * @return {MutableLong}\n */\nMutableLong.prototype.not = function () {\n  this._arr[0] = ~this._arr[0] & 0xffff;\n  this._arr[1] = ~this._arr[1] & 0xffff;\n  this._arr[2] = ~this._arr[2] & 0xffff;\n  this._arr[3] = ~this._arr[3] & 0xffff;\n  return this;\n};\n\nMutableLong.prototype.add = function (addend) {\n  let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += this._arr[0] + addend._arr[0];\n  this._arr[0] = c00 & 0xffff;\n\n  c16 += c00 >>> 16;\n  c16 += this._arr[1] + addend._arr[1];\n  this._arr[1] = c16 & 0xffff;\n\n  c32 += c16 >>> 16;\n  c32 += this._arr[2] + addend._arr[2];\n  this._arr[2] = c32 & 0xffff;\n\n  c48 += c32 >>> 16;\n  c48 += this._arr[3] + addend._arr[3];\n  this._arr[3] = c48 & 0xffff;\n  return this;\n};\n\nMutableLong.prototype.shiftLeft = function (numBits) {\n  if (numBits === 0) {\n    return this;\n  }\n  if (numBits >= 64) {\n    return this.toZero();\n  }\n  const remainingBits = numBits % 16;\n  const pos = Math.floor(numBits / 16);\n  if (pos > 0) {\n    this._arr[3] = this._arr[3 - pos];\n    this._arr[2] = pos > 2 ? 0 : this._arr[2 - pos];\n    this._arr[1] = pos > 1 ? 0 : this._arr[0];\n    this._arr[0] = 0;\n  }\n  if (remainingBits > 0) {\n    // shift left within the int16 and the next one\n    this._arr[3] = ((this._arr[3] << remainingBits) | (this._arr[2] >>> (16 - remainingBits))) & 0xffff;\n    this._arr[2] = ((this._arr[2] << remainingBits) | (this._arr[1] >>> (16 - remainingBits))) & 0xffff;\n    this._arr[1] = ((this._arr[1] << remainingBits) | (this._arr[0] >>> (16 - remainingBits))) & 0xffff;\n    this._arr[0] = (this._arr[0] << remainingBits) & 0xffff;\n  }\n  return this;\n};\n\nMutableLong.prototype.shiftRightUnsigned = function (numBits) {\n  if (numBits === 0) {\n    return this;\n  }\n  if (numBits >= 64) {\n    return this.toZero();\n  }\n  const remainingBits = numBits % 16;\n  const pos = Math.floor(numBits / 16);\n  if (pos > 0) {\n    this._arr[0] = this._arr[pos];\n    this._arr[1] = pos > 2 ? 0 : this._arr[1 + pos];\n    this._arr[2] = pos > 1 ? 0 : this._arr[3];\n    this._arr[3] = 0;\n  }\n  if (remainingBits > 0) {\n    this._arr[0] = (this._arr[0] >>> remainingBits) | ((this._arr[1] << (16 - remainingBits)) & 0xffff);\n    this._arr[1] = (this._arr[1] >>> remainingBits) | ((this._arr[2] << (16 - remainingBits)) & 0xffff);\n    this._arr[2] = (this._arr[2] >>> remainingBits) | ((this._arr[3] << (16 - remainingBits)) & 0xffff);\n    this._arr[3] = this._arr[3] >>> remainingBits;\n  }\n  return this;\n};\n\nMutableLong.prototype.or = function (other) {\n  this._arr[0] |= other._arr[0];\n  this._arr[1] |= other._arr[1];\n  this._arr[2] |= other._arr[2];\n  this._arr[3] |= other._arr[3];\n  return this;\n};\n\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @param {MutableLong} other\n * @returns {MutableLong} this instance.\n */\nMutableLong.prototype.xor = function (other) {\n  this._arr[0] ^= other._arr[0];\n  this._arr[1] ^= other._arr[1];\n  this._arr[2] ^= other._arr[2];\n  this._arr[3] ^= other._arr[3];\n  return this;\n};\n\nMutableLong.prototype.clone = function () {\n  return new MutableLong(this._arr[0], this._arr[1], this._arr[2], this._arr[3]);\n};\n\n/**\n * Performs the product of this and the specified Long.\n * @param {MutableLong} multiplier\n * @returns {MutableLong} this instance.\n */\nMutableLong.prototype.multiply = function multiply(multiplier) {\n  if (this.isZero() || multiplier.isZero()) {\n    return this.toZero();\n  }\n  if (this.isNegative()) {\n    if (multiplier.isNegative()) {\n      return this.negate().multiply(multiplier.clone().negate());\n    }\n    return this.negate().multiply(multiplier).negate();\n  }\n  else if (multiplier.isNegative()) {\n    return this.multiply(multiplier.clone().negate()).negate();\n  }\n  // We can skip products that would overflow.\n  let c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n  c00 += this._arr[0] * multiplier._arr[0];\n  c16 += c00 >>> 16;\n\n  c16 += this._arr[1] * multiplier._arr[0];\n  c32 += c16 >>> 16;\n  c16 &= 0xFFFF;\n  c16 += this._arr[0] * multiplier._arr[1];\n  c32 += c16 >>> 16;\n\n  c32 += this._arr[2] * multiplier._arr[0];\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += this._arr[1] * multiplier._arr[1];\n  c48 += c32 >>> 16;\n  c32 &= 0xFFFF;\n  c32 += this._arr[0] * multiplier._arr[2];\n  c48 += c32 >>> 16;\n  c48 += this._arr[3] * multiplier._arr[0] + this._arr[2] * multiplier._arr[1] +\n    this._arr[1] * multiplier._arr[2] + this._arr[0] * multiplier._arr[3];\n\n  this._arr[0] = c00 & 0xffff;\n  this._arr[1] = c16 & 0xffff;\n  this._arr[2] = c32 & 0xffff;\n  this._arr[3] = c48 & 0xffff;\n  return this;\n};\n\nMutableLong.prototype.toZero = function () {\n  this._arr[3] = this._arr[2] = this._arr[1] =this._arr[0] = 0;\n  return this;\n};\n\nMutableLong.prototype.isZero = function () {\n  return (this._arr[3] === 0 && this._arr[2] === 0 && this._arr[1] === 0 && this._arr[0] === 0);\n};\n\nMutableLong.prototype.isNegative = function () {\n  // most significant bit turned on\n  return (this._arr[3] & 0x8000) > 0;\n};\n\n\n/**\n * Negates this value.\n * @return {MutableLong}\n */\nMutableLong.prototype.negate = function () {\n  return this.not().add(one);\n};\n\nMutableLong.prototype.equals = function (other) {\n  if (!(other instanceof MutableLong)) {\n    return false;\n  }\n  return (\n    this._arr[0] === other._arr[0] && this._arr[1] === other._arr[1] &&\n    this._arr[2] === other._arr[2] && this._arr[3] === other._arr[3]);\n};\n\nMutableLong.prototype.toImmutable = function () {\n  return Long.fromBits(this.getLowBitsUnsigned(), this.getHighBitsUnsigned(), false);\n};\n\nmodule.exports = MutableLong;","'use strict';\n\nconst util = require('util');\nconst errors = require('./errors');\nconst utils = require('./utils');\nconst RequestHandler = require('./request-handler');\n\n/**\n * Encapsulates the logic for dealing with the different prepare request and response flows, including failover when\n * trying to prepare a query.\n */\nclass PrepareHandler {\n  /**\n   * Creates a new instance of PrepareHandler\n   * @param {Client} client\n   * @param {LoadBalancingPolicy} loadBalancing\n   */\n  constructor(client, loadBalancing) {\n    this._client = client;\n    this._loadBalancing = loadBalancing;\n    this.logEmitter = client.options.logEmitter;\n    this.log = utils.log;\n  }\n\n  /**\n   * @param {Client} client\n   * @param {LoadBalancingPolicy} loadBalancing\n   * @param {String} query\n   * @param {String} keyspace\n   * @param {Function} callback\n   * @static\n   */\n  static getPrepared(client, loadBalancing, query, keyspace, callback) {\n    const info = client.metadata.getPreparedInfo(keyspace, query);\n    if (info.queryId) {\n      return callback(null, info.queryId, info.meta);\n    }\n    info.once('prepared', callback);\n    if (info.preparing) {\n      // It's already being prepared\n      return;\n    }\n    const instance = new PrepareHandler(client, loadBalancing);\n    instance._prepare(info, query, keyspace);\n  }\n\n  /**\n   * @param {Client} client\n   * @param {LoadBalancingPolicy} loadBalancing\n   * @param {Array} queries\n   * @param {String} keyspace\n   * @param {Function} callback\n   * @static\n   */\n  static getPreparedMultiple(client, loadBalancing, queries, keyspace, callback) {\n    const result = new Array(queries.length);\n    utils.forEachOf(queries, function eachQuery(item, index, next) {\n      let query;\n      if (item) {\n        query = typeof item === 'string' ? item : item.query;\n      }\n      if (typeof query !== 'string') {\n        return next(new errors.ArgumentError('Query item should be a string'));\n      }\n\n      PrepareHandler.getPrepared(client, loadBalancing, query, keyspace, function getPrepareCb(err, id, meta) {\n        if (err) {\n          return next(err);\n        }\n        result[index] = {\n          query: query,\n          params: utils.adaptNamedParamsPrepared(item.params, meta.columns),\n          queryId: id,\n          meta: meta\n        };\n        next();\n      });\n    }, function eachEnded(err) {\n      if (err) {\n        return callback(err);\n      }\n      callback(null, result);\n    });\n  }\n\n  /**\n   * Prepares the query on a single host or on all hosts depending on the options.\n   * Uses the info 'prepared' event to emit the result.\n   * @param {Object} info\n   * @param {String} query\n   * @param {String} keyspace\n   */\n  _prepare(info, query, keyspace) {\n    info.preparing = true;\n    const self = this;\n    this._loadBalancing.newQueryPlan(keyspace, null, function (err, iterator) {\n      if (err) {\n        info.preparing = false;\n        return info.emit('prepared', err);\n      }\n      self._prepareWithQueryPlan(info, iterator, null, query, keyspace);\n    });\n  }\n\n  /**\n   * @param {Object} info\n   * @param {Iterator} iterator\n   * @param {Object|null} triedHosts\n   * @param {String} query\n   * @param {String} keyspace\n   * @private\n   */\n  _prepareWithQueryPlan(info, iterator, triedHosts, query, keyspace) {\n    triedHosts = triedHosts || {};\n    const self = this;\n    RequestHandler.borrowNextConnection(iterator, triedHosts, this._client.profileManager, keyspace,\n      function borrowCallback(err, connection, host) {\n        if (err) {\n          return self._onPrepareError(err, host, triedHosts, info, iterator, query, keyspace);\n        }\n        connection.prepareOnce(query, function prepareOnceCallback(err, response) {\n          if (err) {\n            return self._onPrepareError(err, host, triedHosts, info, iterator, query, keyspace);\n          }\n          if (self._client.options.prepareOnAllHosts) {\n            return self._prepareOnAllHosts(info, response, host, iterator, query, keyspace);\n          }\n          self._onPrepareSuccess(info, response);\n        });\n      });\n  }\n\n  _onPrepareSuccess(info, response) {\n    info.preparing = false;\n    info.queryId = response.id;\n    info.meta = response.meta;\n    this._client.metadata.setPreparedById(info);\n    info.emit('prepared', null, info.queryId, info.meta);\n  }\n\n  _onPrepareError(err, host, triedHosts, info, iterator, query, keyspace) {\n    if (err.isSocketError || err instanceof errors.OperationTimedOutError) {\n      const self = this;\n      triedHosts[host.address] = err;\n      return self._prepareWithQueryPlan(info, iterator, triedHosts, query, keyspace);\n    }\n    info.preparing = false;\n    err.query = query;\n    return info.emit('prepared', err);\n  }\n\n  /**\n   * Prepares all queries on a single host.\n   * @param {Host} host\n   * @param {Array} allPrepared\n   * @param {Function} callback\n   */\n  static prepareAllQueries(host, allPrepared, callback) {\n    const anyKeyspaceQueries = [];\n    const queriesByKeyspace = {};\n    allPrepared.forEach(function (info) {\n      let arr = anyKeyspaceQueries;\n      if (info.keyspace) {\n        arr = queriesByKeyspace[info.keyspace] = (queriesByKeyspace[info.keyspace] || []);\n      }\n      arr.push(info.query);\n    });\n    utils.eachSeries(Object.keys(queriesByKeyspace), function eachKeyspace(keyspace, next) {\n      PrepareHandler._borrowAndPrepare(host, keyspace, queriesByKeyspace[keyspace], next);\n    }, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      PrepareHandler._borrowAndPrepare(host, null, anyKeyspaceQueries, callback);\n    });\n  }\n\n  /**\n   * Borrows a connection from the host and prepares the queries provided.\n   * @param {Host} host\n   * @param {String} keyspace\n   * @param {Array} queries\n   * @param {Function} callback\n   * @private\n   */\n  static _borrowAndPrepare(host, keyspace, queries, callback) {\n    if (queries.length === 0) {\n      return callback();\n    }\n\n    host.borrowConnection(keyspace, null, function borrowCallback(err, connection) {\n      if (err) {\n        return callback(err);\n      }\n      utils.each(queries, function prepareEach(query, next) {\n        connection.prepareOnce(query, next);\n      }, callback);\n    });\n  }\n\n  /**\n   * Prepares the provided query on all hosts, except the host provided.\n   * @param {Object} info\n   * @param {Object} response\n   * @param {Host} hostToAvoid\n   * @param {Iterator} iterator\n   * @param {String} query\n   * @param {String} keyspace\n   * @private\n   */\n  _prepareOnAllHosts(info, response, hostToAvoid, iterator, query, keyspace) {\n    const self = this;\n    utils.each(utils.iteratorToArray(iterator), function (host, next) {\n      if (host.address === hostToAvoid.address) {\n        return next();\n      }\n\n      host.borrowConnection(keyspace, null, function borrowCallback(err, connection) {\n        if (err) {\n          // Don't mind about issues with the pool in this case\n          return next();\n        }\n        connection.prepareOnce(query, function (err) {\n          if (err) {\n            // There has been error\n            self.log('verbose', util.format('Unexpected error while preparing query (%s) on %s', query, host.address));\n          }\n          return next();\n        });\n      });\n    }, function eachEnded() {\n      self._onPrepareSuccess(info, response);\n    });\n  }\n}\n\nmodule.exports = PrepareHandler;","'use strict';\nconst util = require('util');\n\nconst errors = require('./errors');\nconst types = require('./types');\nconst utils = require('./utils');\nconst RequestExecution = require('./request-execution');\n\n/**\n * Handles a BATCH, QUERY and EXECUTE request to the server, dealing with host fail-over and retries on error\n */\nclass RequestHandler {\n  /**\n   * Creates a new instance of RequestHandler.\n   * @param {Request} request\n   * @param {ExecutionOptions} execOptions\n   * @param {Client} client Client instance used to retrieve and set the keyspace.\n   */\n  constructor(request, execOptions, client) {\n    this.client = client;\n    this._speculativeExecutionPlan = client.options.policies.speculativeExecution.newPlan(\n      client.keyspace, request.query || request.queries);\n    this.logEmitter = client.options.logEmitter;\n    this.log = utils.log;\n    this.request = request;\n    this.executionOptions = execOptions;\n    this.stackContainer = null;\n    this.triedHosts = {};\n    // start at -1 as first request does not count.\n    this.speculativeExecutions = -1;\n    this._hostIterator = null;\n    this._callback = null;\n    this._newExecutionTimeout = null;\n    this._executions = [];\n  }\n\n  /**\n   * Borrows a connection iterating from the query plan one or more times, until finding an open connection with the\n   * keyspace set.\n   * It invokes the callback with the err, connection and host as parameters.\n   * The error can only be a NoHostAvailableError instance.\n   * @param {Iterator} iterator\n   * @param {Object} triedHosts\n   * @param {ProfileManager} profileManager\n   * @param {String} keyspace\n   * @param {Function} callback\n   */\n  static borrowNextConnection(iterator, triedHosts, profileManager, keyspace, callback) {\n    triedHosts = triedHosts || {};\n    const host = RequestHandler._getNextHost(iterator, profileManager, triedHosts);\n    if (host === null) {\n      return callback(new errors.NoHostAvailableError(triedHosts));\n    }\n\n    host.borrowConnection(keyspace, null, function borrowFromHostCallback(err, connection) {\n      if (err) {\n        triedHosts[host.address] = err;\n        if (connection) {\n          host.removeFromPool(connection);\n        }\n        // Issue on next tick to avoid large numbers of sync recursive calls\n        return process.nextTick(() =>\n          RequestHandler.borrowNextConnection(iterator, triedHosts, profileManager, keyspace, callback));\n      }\n      triedHosts[host.address] = null;\n      callback(null, connection, host);\n    });\n  }\n\n  /**\n   * Gets the next host from the query plan.\n   * @param {Iterator} iterator\n   * @param {ProfileManager} profileManager\n   * @param {Object} triedHosts\n   * @return {Host|null}\n   * @private\n   */\n  static _getNextHost(iterator, profileManager, triedHosts) {\n    let host;\n    // Get a host that is UP in a sync loop\n    while (true) {\n      const item = iterator.next();\n      if (item.done) {\n        return null;\n      }\n      host = item.value;\n      // set the distance relative to the client first\n      const distance = profileManager.getDistance(host);\n      if (distance === types.distance.ignored) {\n        //If its marked as ignore by the load balancing policy, move on.\n        continue;\n      }\n      if (host.isUp()) {\n        break;\n      }\n      triedHosts[host.address] = 'Host considered as DOWN';\n    }\n    return host;\n  }\n\n  /**\n   * Sends a new BATCH, QUERY or EXECUTE request.\n   * @param {Request} request\n   * @param {ExecutionOptions} execOptions\n   * @param {Client} client Client instance used to retrieve and set the keyspace.\n   * @param {Function} callback\n   */\n  static send(request, execOptions, client, callback) {\n    const instance = new RequestHandler(request, execOptions, client);\n    instance.send(callback);\n  }\n\n  /**\n   * Gets a connection from the next host according to the query plan or a NoHostAvailableError.\n   * @param {Function} callback\n   */\n  getNextConnection(callback) {\n    RequestHandler.borrowNextConnection(\n      this._hostIterator, this.triedHosts, this.client.profileManager, this.client.keyspace, callback);\n  }\n\n  /**\n   * Gets an available connection and sends the request\n   * @param {Function} callback\n   */\n  send(callback) {\n    if (this.executionOptions.getCaptureStackTrace()) {\n      Error.captureStackTrace(this.stackContainer = {});\n    }\n\n    const lbp = this.executionOptions.getLoadBalancingPolicy();\n    const fixedHost = this.executionOptions.getFixedHost();\n    const self = this;\n    this._callback = callback;\n\n    if (fixedHost) {\n      // if host is configured bypass load balancing policy and use\n      // a single host plan.\n      self._hostIterator = utils.arrayIterator([fixedHost]);\n      self._startNewExecution();\n    } else {\n      lbp.newQueryPlan(this.client.keyspace, this.executionOptions, function newPlanCb(err, iterator) {\n        if (err) {\n          return self._callback(err);\n        }\n        self._hostIterator = iterator;\n        self._startNewExecution();\n      });\n    }\n  }\n\n  _startNewExecution(isSpecExec) {\n    if (isSpecExec) {\n      this.client.metrics.onSpeculativeExecution();\n    }\n\n    const execution = new RequestExecution(this);\n    this._executions.push(execution);\n    const self = this;\n    execution.start(function hostAcquired(host) {\n      // This function is called when a connection to a host was successfully acquired and\n      // the execution was not yet cancelled\n      if (!self.executionOptions.isIdempotent()) {\n        return;\n      }\n      const delay = self._speculativeExecutionPlan.nextExecution(host);\n      if (typeof delay !== 'number' || delay < 0) {\n        return;\n      }\n      if (delay === 0) {\n        // Multiple parallel executions\n        return process.nextTick(function startNextInParallel() {\n          // Unlike timers process.nextTick() handlers can't be cleared so we must be sure that the\n          // the previous execution wasn't cancelled before issuing the next one.\n          if (execution.wasCancelled()) {\n            return;\n          }\n\n          self._startNewExecution(true);\n        });\n      }\n\n      self._newExecutionTimeout = setTimeout(() => self._startNewExecution(true), delay);\n    });\n  }\n\n  /**\n   * Sets the keyspace in any connection that is already opened.\n   * @param {Client} client\n   * @param {Function} callback\n   */\n  static setKeyspace(client, callback) {\n    let connection;\n    const hosts = client.hosts.values();\n    for (let i = 0; i < hosts.length; i++) {\n      const host = hosts[i];\n      connection = host.getActiveConnection();\n      if (connection) {\n        break;\n      }\n    }\n    if (!connection) {\n      return callback(new errors.DriverInternalError('No active connection found'));\n    }\n    connection.changeKeyspace(client.keyspace, callback);\n  }\n\n  /**\n   * @param {Error} err\n   * @param {ResultSet} [result]\n   */\n  setCompleted(err, result) {\n    if (this._newExecutionTimeout !== null) {\n      clearTimeout(this._newExecutionTimeout);\n    }\n\n    // Mark all executions as cancelled\n    for (let i = 0; i < this._executions.length; i++) {\n      this._executions[i].cancel();\n    }\n\n    if (err) {\n      if (this.executionOptions.getCaptureStackTrace()) {\n        utils.fixStack(this.stackContainer.stack, err);\n      }\n\n      // The error already has the stack information, there is no value in maintaining the call stack\n      // for the callback invocation\n      return process.nextTick(() => this._callback(err));\n    }\n\n    if (result.info.warnings) {\n      // Log the warnings from the response\n      result.info.warnings.forEach(function (message, i, warnings) {\n        this.log('warning', util.format(\n          'Received warning (%d of %d) \"%s\" for \"%s\"',\n          i + 1,\n          warnings.length,\n          message,\n          this.request.query || 'batch'));\n      }, this);\n    }\n\n    // Invoke the callback in the next tick allowing stack unwinding, that way we can continue\n    // processing the read queue before executing user code.\n    // Additionally, we prevent the optimizing compiler to optimize read and write functions together.\n    // FFR: We found corner cases where maintaining the call stack when invoking the user callback impacted the overall\n    // performance of the driver. These corner cases appeared when adding more logic to the completion of the\n    // request/response operation, that by itself had a negligible processing cost, but had a significant\n    // performance penalty when integrated.\n    process.nextTick(() => this._callback(null, result));\n  }\n\n  /**\n   * @param {NoHostAvailableError} err\n   * @param {RequestExecution} sender\n   */\n  handleNoHostAvailable(err, sender) {\n    // Remove the execution\n    const index = this._executions.indexOf(sender);\n    this._executions.splice(index, 1);\n    if (this._executions.length === 0) {\n      // There aren't any other executions, we should report back to the user that there isn't\n      // a host available for executing the request\n      this.setCompleted(err);\n    }\n  }\n}\n\nmodule.exports = RequestHandler;\n","\"use strict\";\nconst events = require('events');\nconst util = require('util');\n/**\n * Module containing classes and fields related to metadata.\n * @module metadata\n */\nconst t = require('../tokenizer');\nconst utils = require('../utils');\nconst errors = require('../errors');\nconst types = require('../types');\nconst requests = require('../requests');\nconst schemaParserFactory = require('./schema-parser');\nconst TokenRange = require('../token').TokenRange;\nconst ExecutionOptions = require('../execution-options').ExecutionOptions;\n\n/**\n * @const\n * @private\n */\nconst _selectTraceSession = \"SELECT * FROM system_traces.sessions WHERE session_id=%s\";\n/**\n * @const\n * @private\n */\nconst _selectTraceEvents = \"SELECT * FROM system_traces.events WHERE session_id=%s\";\n/**\n * @const\n * @private\n */\nconst _selectSchemaVersionPeers = \"SELECT schema_version FROM system.peers\";\n/**\n * @const\n * @private\n */\nconst _selectSchemaVersionLocal = \"SELECT schema_version FROM system.local\";\n/**\n * @const\n * @private\n */\nconst _traceMaxAttemps = 5;\n/**\n * @const\n * @private\n */\nconst _traceAttemptDelay = 200;\n\n/**\n * Represents cluster and schema information.\n * The metadata class acts as a internal state of the driver.\n * @param {ClientOptions} options\n * @param {ControlConnection} controlConnection Control connection used to retrieve information.\n * @constructor\n */\nfunction Metadata (options, controlConnection) {\n  if (!options) {\n    throw new errors.ArgumentError('Options are not defined');\n  }\n  Object.defineProperty(this, 'options', { value: options, enumerable: false, writable: false});\n  Object.defineProperty(this, 'controlConnection', { value: controlConnection, enumerable: false, writable: false});\n  this.keyspaces = {};\n  this.initialized = false;\n  this._schemaParser = schemaParserFactory.getByVersion(options, controlConnection, this.getUdt.bind(this));\n  const self = this;\n  this._preparedQueries = new PreparedQueries(options.maxPrepared, function () {\n    self.log.apply(self, arguments);\n  });\n}\n\n/**\n * Sets the cassandra version\n * @internal\n * @ignore\n * @param {Array.<Number>} version\n */\nMetadata.prototype.setCassandraVersion = function (version) {\n  this._schemaParser = schemaParserFactory.getByVersion(\n    this.options, this.controlConnection, this.getUdt.bind(this), version, this._schemaParser);\n};\n\n/**\n * @ignore\n * @param {String} partitionerName\n */\nMetadata.prototype.setPartitioner = function (partitionerName) {\n  if (/RandomPartitioner$/.test(partitionerName)) {\n    return this.tokenizer = new t.RandomTokenizer();\n  }\n  if (/ByteOrderedPartitioner$/.test(partitionerName)) {\n    return this.tokenizer = new t.ByteOrderedTokenizer();\n  }\n  return this.tokenizer = new t.Murmur3Tokenizer();\n};\n\n/**\n * Populates the information regarding primary replica per token, datacenters (+ racks) and sorted token ring.\n * @ignore\n * @param {HostMap} hosts\n */\nMetadata.prototype.buildTokens = function (hosts) {\n  if (!this.tokenizer) {\n    return this.log('error', 'Tokenizer could not be determined');\n  }\n  //Get a sorted array of tokens\n  const allSorted = [];\n  //Get a map of <token, primaryHost>\n  const primaryReplicas = {};\n  //Depending on the amount of tokens, this could be an expensive operation\n  const hostArray = hosts.values();\n  const stringify = this.tokenizer.stringify;\n  const datacenters = {};\n  hostArray.forEach((h) => {\n    if (!h.tokens) {\n      return;\n    }\n    h.tokens.forEach((tokenString) => {\n      const token = this.tokenizer.parse(tokenString);\n      utils.insertSorted(allSorted, token, (t1, t2) => t1.compare(t2));\n      primaryReplicas[stringify(token)] = h;\n    });\n    let dc = datacenters[h.datacenter];\n    if (!dc) {\n      dc = datacenters[h.datacenter] = {\n        hostLength: 0,\n        racks: new utils.HashSet()\n      };\n    }\n    dc.hostLength++;\n    dc.racks.add(h.rack);\n  });\n  //Primary replica for given token\n  this.primaryReplicas = primaryReplicas;\n  //All the tokens in ring order\n  this.ring = allSorted;\n\n  // Build TokenRanges.\n  const tokenRanges = new Set();\n  if(this.ring.length === 1) {\n    // If there is only one token, return the range ]minToken, minToken]\n    const min = this.tokenizer.minToken();\n    tokenRanges.add(new TokenRange(min, min, this.tokenizer));\n  } else {\n    for (let i = 0; i < this.ring.length; i++) {\n      const start = this.ring[i];\n      const end = this.ring[(i + 1) % this.ring.length];\n      tokenRanges.add(new TokenRange(start, end, this.tokenizer));\n    }\n  }\n  this.tokenRanges = tokenRanges;\n\n  //Compute string versions as it's potentially expensive and frequently reused later\n  this.ringTokensAsStrings = new Array(allSorted.length);\n  for (let i = 0; i < allSorted.length; i++) {\n    this.ringTokensAsStrings[i] = stringify(allSorted[i]);\n  }\n  //Datacenter metadata (host length and racks)\n  this.datacenters = datacenters;\n};\n\n/**\n * Gets the keyspace metadata information and updates the internal state of the driver.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the keyspaces metadata refresh completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * @param {String} name Name of the keyspace.\n * @param {Function} [callback] Optional callback.\n */\nMetadata.prototype.refreshKeyspace = function (name, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._refreshKeyspaceCb(name, cb);\n  });\n};\n\n/**\n * @param {String} name\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._refreshKeyspaceCb = function (name, callback) {\n  if (!this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  this.log('info', util.format('Retrieving keyspace %s metadata', name));\n  const self = this;\n  this._schemaParser.getKeyspace(name, function (err, ksInfo) {\n    if (err) {\n      self.log('error', 'There was an error while trying to retrieve keyspace information', err);\n      return callback(err);\n    }\n    if (!ksInfo) {\n      // the keyspace was dropped\n      delete self.keyspaces[name];\n      return callback();\n    }\n    // tokens are lazily init on the keyspace, once a replica from that keyspace is retrieved.\n    self.keyspaces[ksInfo.name] = ksInfo;\n    callback(null, ksInfo);\n  });\n};\n\n/**\n * Gets the metadata information of all the keyspaces and updates the internal state of the driver.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the keyspace metadata refresh completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * @param {Boolean|Function} [waitReconnect] Determines if it should wait for reconnection in case the control connection is not\n * connected at the moment. Default: true.\n * @param {Function} [callback] Optional callback.\n */\nMetadata.prototype.refreshKeyspaces = function (waitReconnect, callback) {\n  if (typeof waitReconnect === 'function' || typeof waitReconnect === 'undefined') {\n    callback = waitReconnect;\n    waitReconnect = true;\n  }\n\n  return this._refreshKeyspaces(waitReconnect, false, callback);\n};\n\n/**\n * @param {Boolean} waitReconnect\n * @param {Boolean} internal Whether or not this was called by driver (i.e. control connection)\n * @param {Function} [callback] \n * @private\n */\nMetadata.prototype._refreshKeyspaces = function (waitReconnect, internal, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._refreshKeyspacesCb(waitReconnect, internal, cb);\n  });\n};\n\n/**\n * @param {Boolean} waitReconnect\n * @param {Boolean} internal\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._refreshKeyspacesCb = function (waitReconnect, internal, callback) {\n  if (!internal && !this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  this.log('info', 'Retrieving keyspaces metadata');\n  const self = this;\n  this._schemaParser.getKeyspaces(waitReconnect, function getKeyspacesCallback(err, keyspaces) {\n    if (err) {\n      self.log('error', 'There was an error while trying to retrieve keyspaces information', err);\n      return callback(err);\n    }\n    self.keyspaces = keyspaces;\n    callback(null, keyspaces);\n  });\n};\n\nMetadata.prototype._getKeyspaceReplicas = function (keyspace) {\n  if (!keyspace.replicas) {\n    //Calculate replicas the first time for the keyspace\n    keyspace.replicas =\n      keyspace.tokenToReplica(this.tokenizer, this.ringTokensAsStrings, this.primaryReplicas, this.datacenters);\n  }\n  return keyspace.replicas;\n};\n\n/**\n * Gets the host list representing the replicas that contain the given partition key, token or token range.\n * <p>\n *   It uses the pre-loaded keyspace metadata to retrieve the replicas for a token for a given keyspace.\n *   When the keyspace metadata has not been loaded, it returns null.\n * </p>\n * @param {String} keyspaceName\n * @param {Buffer|Token|TokenRange} token Can be Buffer (serialized partition key), Token or TokenRange\n * @returns {Array}\n */\nMetadata.prototype.getReplicas = function (keyspaceName, token) {\n  if (!this.ring) {\n    return null;\n  }\n  if (Buffer.isBuffer(token)) {\n    token = this.tokenizer.hash(token);\n  }\n  if (token instanceof TokenRange) {\n    token = token.end;\n  }\n\n  let keyspace;\n  if (keyspaceName) {\n    keyspace = this.keyspaces[keyspaceName];\n    if (!keyspace) {\n      // the keyspace was not found, the metadata should be loaded beforehand\n      return null;\n    }\n  }\n  let i = utils.binarySearch(this.ring, token, (t1, t2) => t1.compare(t2));\n  if (i < 0) {\n    i = ~i;\n  }\n  if (i >= this.ring.length) {\n    //it circled back\n    i = i % this.ring.length;\n  }\n  const closestToken = this.ringTokensAsStrings[i];\n\n  if (!keyspaceName) {\n    return [this.primaryReplicas[closestToken]];\n  }\n\n  const replicas = this._getKeyspaceReplicas(keyspace);\n  return replicas[closestToken];\n};\n\n/**\n * Gets the token ranges that define data distribution in the ring.\n *\n * @returns {Set<TokenRange>} The ranges of the ring or empty set if schema metadata is not enabled.\n */\nMetadata.prototype.getTokenRanges = function () {\n  return this.tokenRanges;\n};\n\n/**\n * Gets the token ranges that are replicated on the given host, for\n * the given keyspace.\n *\n * @param {String} keyspaceName The name of the keyspace to get ranges for.\n * @param {Host} host The host.\n * @returns {Set<TokenRange>|null} Ranges for the keyspace on this host or null if keyspace isn't found or hasn't been loaded.\n */\nMetadata.prototype.getTokenRangesForHost = function (keyspaceName, host) {\n  if (!this.ring) {\n    return null;\n  }\n  let keyspace;\n  if (keyspaceName) {\n    keyspace = this.keyspaces[keyspaceName];\n    if (!keyspace) {\n      // the keyspace was not found, the metadata should be loaded beforehand\n      return null;\n    }\n  }\n\n  // If the ring has only 1 token, just return the ranges as we should only have a single node cluster.\n  if (this.ring.length === 1) {\n    return this.getTokenRanges();\n  }\n\n  const replicas = this._getKeyspaceReplicas(keyspace);\n  const ranges = new Set();\n\n  // for each range, find replicas for end token, if replicas include host, add range.\n  this.tokenRanges.forEach((tokenRange) => {\n    const replicasForToken = replicas[this.tokenizer.stringify(tokenRange.end)];\n    if (replicasForToken.indexOf(host) !== -1) {\n      ranges.add(tokenRange);\n    }\n  });\n  return ranges;\n};\n\n/**\n * Constructs a Token from the input buffer(s) or string input.  If a string is passed in\n * it is assumed this matches the token representation reported by cassandra.\n * @param {Array<Buffer>|Buffer|String} components\n * @returns {Token} constructed token from the input buffer.\n */\nMetadata.prototype.newToken = function (components) {\n  if (!this.tokenizer) {\n    throw new Error('Partitioner not established.  This should only happen if metadata was disabled or you have not connected yet.');\n  }\n  if (util.isArray(components)) {\n    return this.tokenizer.hash(Buffer.concat(components));\n  } else if (util.isString(components)) {\n    return this.tokenizer.parse(components);\n  }\n  return this.tokenizer.hash(components);\n};\n\n/**\n * Constructs a TokenRange from the given start and end tokens.\n * @param {Token} start \n * @param {Token} end \n * @returns TokenRange build range spanning from start (exclusive) to end (inclusive).\n */\nMetadata.prototype.newTokenRange = function(start, end) {\n  if (!this.tokenizer) {\n    throw new Error('Partitioner not established.  This should only happen if metadata was disabled or you have not connected yet.');\n  }\n  return new TokenRange(start, end, this.tokenizer);\n};\n\nMetadata.prototype.log = utils.log;\n\n/**\n * Gets the metadata information already stored associated to a prepared statement\n * @param {String} keyspaceName\n * @param {String} query\n * @internal\n * @ignore\n */\nMetadata.prototype.getPreparedInfo = function (keyspaceName, query) {\n  //overflow protection\n  return this._preparedQueries.getOrAdd(keyspaceName, query);\n};\n\n/**\n * Clears the internal state related to the prepared statements.\n * Following calls to the Client using the prepare flag will re-prepare the statements.\n */\nMetadata.prototype.clearPrepared = function () {\n  this._preparedQueries.clear();\n};\n\n/** @ignore */\nMetadata.prototype.getPreparedById = function (id) {\n  return this._preparedQueries.getById(id);\n};\n\n/** @ignore */\nMetadata.prototype.setPreparedById = function (info) {\n  return this._preparedQueries.setById(info);\n};\n\n/** @ignore */\nMetadata.prototype.getAllPrepared = function () {\n  return this._preparedQueries.getAll();\n};\n\n/** @ignore */\nMetadata.prototype._uninitializedError = function () {\n  return new Error('Metadata has not been initialized.  This could only happen if you have not connected yet.');\n};\n\n/**\n * Gets the definition of an user-defined type.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n * When trying to retrieve the same UDT definition concurrently, it will query once and invoke all callbacks\n * with the retrieved information.\n * </p>\n * @param {String} keyspaceName Name of the keyspace.\n * @param {String} name Name of the UDT.\n * @param {Function} [callback] The callback to invoke when retrieval completes.\n */\nMetadata.prototype.getUdt = function (keyspaceName, name, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getUdtCb(keyspaceName, name, cb);\n  });\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getUdtCb = function (keyspaceName, name, callback) {\n  if (!this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  let cache;\n  if (this.options.isMetadataSyncEnabled) {\n    const keyspace = this.keyspaces[keyspaceName];\n    if (!keyspace) {\n      return callback(null, null);\n    }\n    cache = keyspace.udts;\n  }\n  this._schemaParser.getUdt(keyspaceName, name, cache, callback);\n};\n\n/**\n * Gets the definition of a table.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n * When trying to retrieve the same table definition concurrently, it will query once and invoke all callbacks\n * with the retrieved information.\n * </p>\n * @param {String} keyspaceName Name of the keyspace.\n * @param {String} name Name of the Table.\n * @param {Function} [callback] The callback with the err as a first parameter and the {@link TableMetadata} as\n * second parameter.\n */\nMetadata.prototype.getTable = function (keyspaceName, name, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getTableCb(keyspaceName, name, cb);\n  });\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getTableCb = function (keyspaceName, name, callback) {\n  if (!this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  let cache;\n  let virtual;\n  if (this.options.isMetadataSyncEnabled) {\n    const keyspace = this.keyspaces[keyspaceName];\n    if (!keyspace) {\n      return callback(null, null);\n    }\n    cache = keyspace.tables;\n    virtual = keyspace.virtual;\n  }\n  this._schemaParser.getTable(keyspaceName, name, cache, virtual, callback);\n};\n\n/**\n * Gets the definition of CQL functions for a given name.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n * When trying to retrieve the same function definition concurrently, it will query once and invoke all callbacks\n * with the retrieved information.\n * </p>\n * @param {String} keyspaceName Name of the keyspace.\n * @param {String} name Name of the Function.\n * @param {Function} [callback] The callback with the err as a first parameter and the array of {@link SchemaFunction}\n * as second parameter.\n */\nMetadata.prototype.getFunctions = function (keyspaceName, name, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getFunctionsCb(keyspaceName, name, cb);\n  });\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getFunctionsCb = function (keyspaceName, name, callback) {\n  if (typeof callback !== 'function') {\n    throw new errors.ArgumentError('Callback is not a function');\n  }\n  if (!keyspaceName || !name) {\n    return callback(\n      new errors.ArgumentError('You must provide the keyspace name and cql function name to retrieve the metadata'));\n  }\n  this._getFunctions(keyspaceName, name, false, function (err, functionsMap) {\n    if (err) {\n      return callback(err, null);\n    }\n    callback(null, utils.objectValues(functionsMap));\n  });\n};\n\n/**\n * Gets a definition of CQL function for a given name and signature.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n * When trying to retrieve the same function definition concurrently, it will query once and invoke all callbacks\n * with the retrieved information.\n * </p>\n * @param {String} keyspaceName Name of the keyspace\n * @param {String} name Name of the Function\n * @param {Array.<String>|Array.<{code, info}>} signature Array of types of the parameters.\n * @param {Function} [callback] The callback with the err as a first parameter and the {@link SchemaFunction} as second\n * parameter.\n */\nMetadata.prototype.getFunction = function (keyspaceName, name, signature, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getSingleFunctionCb(keyspaceName, name, signature, false, cb);\n  });\n};\n\n/**\n * Gets the definition of CQL aggregate for a given name.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n * When trying to retrieve the same aggregates definition concurrently, it will query once and invoke all callbacks\n * with the retrieved information.\n * </p>\n * @param {String} keyspaceName Name of the keyspace\n * @param {String} name Name of the Function\n * @param {Function} [callback] The callback with the err as a first parameter and the array of {@link Aggregate} as\n * second parameter.\n */\nMetadata.prototype.getAggregates = function (keyspaceName, name, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getAggregatesCb(keyspaceName, name, cb);\n  });\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getAggregatesCb = function (keyspaceName, name, callback) {\n  if (typeof callback !== 'function') {\n    throw new errors.ArgumentError('Callback is not a function');\n  }\n  if (!keyspaceName || !name) {\n    return callback(new errors.ArgumentError('You must provide the keyspace name and cql aggregate name to retrieve the metadata'));\n  }\n  this._getFunctions(keyspaceName, name, true, function (err, functionsMap) {\n    if (err) {\n      return callback(err, null);\n    }\n    callback(null, utils.objectValues(functionsMap));\n  });\n};\n\n/**\n * Gets a definition of CQL aggregate for a given name and signature.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n * When trying to retrieve the same aggregate definition concurrently, it will query once and invoke all callbacks\n * with the retrieved information.\n * </p>\n * @param {String} keyspaceName Name of the keyspace\n * @param {String} name Name of the aggregate\n * @param {Array.<String>|Array.<{code, info}>} signature Array of types of the parameters.\n * @param {Function} [callback] The callback with the err as a first parameter and the {@link Aggregate} as second parameter.\n */\nMetadata.prototype.getAggregate = function (keyspaceName, name, signature, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getSingleFunctionCb(keyspaceName, name, signature, true, cb);\n  });\n};\n\n/**\n * Gets the definition of a CQL materialized view for a given name.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * <p>\n *   Note that, unlike the rest of the {@link Metadata} methods, this method does not cache the result for following\n *   calls, as the current version of the Cassandra native protocol does not support schema change events for\n *   materialized views. Each call to this method will produce one or more queries to the cluster.\n * </p>\n * @param {String} keyspaceName Name of the keyspace\n * @param {String} name Name of the materialized view\n * @param {Function} [callback] The callback with the err as a first parameter and the {@link MaterializedView} as\n * second parameter.\n */\nMetadata.prototype.getMaterializedView = function (keyspaceName, name, callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getMaterializedViewCb(keyspaceName, name, cb);\n  });\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getMaterializedViewCb = function (keyspaceName, name, callback) {\n  if (!this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  let cache;\n  if (this.options.isMetadataSyncEnabled) {\n    const keyspace = this.keyspaces[keyspaceName];\n    if (!keyspace) {\n      return callback(null, null);\n    }\n    cache = keyspace.views;\n  }\n  this._schemaParser.getMaterializedView(keyspaceName, name, cache, callback);\n};\n\n/**\n * Gets a map of cql function definitions or aggregates based on signature.\n * @param {String} keyspaceName\n * @param {String} name Name of the function or aggregate\n * @param {Boolean} aggregate\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getFunctions = function (keyspaceName, name, aggregate, callback) {\n  if (!this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  let cache;\n  if (this.options.isMetadataSyncEnabled) {\n    const keyspace = this.keyspaces[keyspaceName];\n    if (!keyspace) {\n      return callback(null, null);\n    }\n    cache = aggregate ? keyspace.aggregates : keyspace.functions;\n  }\n  this._schemaParser.getFunctions(keyspaceName, name, aggregate, cache, callback);\n};\n\n/**\n * Gets a single cql function or aggregate definition\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Array} signature\n * @param {Boolean} aggregate\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getSingleFunctionCb = function (keyspaceName, name, signature, aggregate, callback) {\n  if (typeof callback !== 'function') {\n    throw new errors.ArgumentError('Callback is not a function');\n  }\n  if (!keyspaceName || !name) {\n    return callback(\n      new errors.ArgumentError('You must provide the keyspace name and cql function name to retrieve the metadata'));\n  }\n  if (!util.isArray(signature)) {\n    return callback(new errors.ArgumentError('Signature must be an array of types'));\n  }\n  try {\n    signature = signature.map(function (item) {\n      if (typeof item === 'string') {\n        return item;\n      }\n      return types.getDataTypeNameByCode(item);\n    });\n  }\n  catch (err) {\n    return callback(err);\n  }\n  this._getFunctions(keyspaceName, name, aggregate, function (err, functionsMap) {\n    if (err) {\n      return callback(err, null);\n    }\n    let f;\n    if (functionsMap) {\n      f = functionsMap['(' + signature.join(',') + ')'];\n    }\n    callback(null, f || null);\n  });\n};\n\n/**\n * Gets the trace session generated by Cassandra when query tracing is enabled for the\n * query. The trace itself is stored in Cassandra in the <code>sessions</code> and\n * <code>events</code> table in the <code>system_traces</code> keyspace and can be\n * retrieve manually using the trace identifier.\n * <p>\n *   If a <code>callback</code> is provided, the callback is invoked when the metadata retrieval completes.\n *   Otherwise, it returns a <code>Promise</code>.\n * </p>\n * @param {Uuid} traceId Identifier of the trace session.\n * @param {Number} [consistency] The consistency level to obtain the trace.\n * @param {Function} [callback] The callback with the err as first parameter and the query trace as second parameter.\n */\nMetadata.prototype.getTrace = function (traceId, consistency, callback) {\n  if (!callback && typeof consistency === 'function') {\n    // Both callback and consistency are optional parameters\n    // In this case, the second parameter is the callback\n    callback = consistency;\n    consistency = null;\n  }\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._getTraceCb(traceId, consistency, cb);\n  });\n};\n\n/**\n * @param {Uuid} traceId\n * @param {Number} consistency\n * @param {Function} callback\n * @private\n */\nMetadata.prototype._getTraceCb = function (traceId, consistency, callback) {\n  if (!this.initialized) {\n    return callback(this._uninitializedError(), null);\n  }\n  let trace;\n  let attempts = 0;\n  const info = ExecutionOptions.empty();\n  info.getConsistency = () => consistency;\n  const sessionRequest = new requests.QueryRequest(util.format(_selectTraceSession, traceId), null, info);\n  const eventsRequest = new requests.QueryRequest(util.format(_selectTraceEvents, traceId), null, info);\n  const self = this;\n\n  utils.whilst(function condition() {\n    return !trace && (attempts++ < _traceMaxAttemps);\n  }, function iterator(next) {\n    self.controlConnection.query(sessionRequest, function (err, result) {\n      if (err) {\n        return next(err);\n      }\n      const sessionRow = result.rows[0];\n      if (!sessionRow || !sessionRow['duration']) {\n        return setTimeout(next, _traceAttemptDelay);\n      }\n      trace = {\n        requestType: sessionRow['request'],\n        coordinator: sessionRow['coordinator'],\n        parameters: sessionRow['parameters'],\n        startedAt: sessionRow['started_at'],\n        duration: sessionRow['duration'],\n        clientAddress: sessionRow['client'],\n        events: []\n      };\n      self.controlConnection.query(eventsRequest, function (err, result) {\n        if (err) {\n          return next(err);\n        }\n        result.rows.forEach(function (row) {\n          trace.events.push({\n            id: row['event_id'],\n            activity: row['activity'],\n            source: row['source'],\n            elapsed: row['source_elapsed'],\n            thread: row['thread']\n          });\n        });\n        next();\n      });\n    });\n  }, function getTraceEnded(err) {\n    if (!err && !trace) {\n      err = new Error(util.format('Trace %s could not fully retrieved after %d attempts', traceId, _traceMaxAttemps));\n    }\n    callback(err, trace);\n  });\n};\n\n/**\n * Checks whether hosts that are currently up agree on the schema definition.\n * <p>\n *   This method performs a one-time check only, without any form of retry; therefore\n *   <code>protocolOptions.maxSchemaAgreementWaitSeconds</code> setting does not apply in this case.\n * </p>\n * @param {Function} [callback] A function that is invoked with a value\n * <code>true</code> when all hosts agree on the schema and <code>false</code> when there is no agreement or when\n * the check could not be performed (for example, if the control connection is down).\n * @returns {Promise} Returns a <code>Promise</code> when a callback is not provided. The promise resolves to\n * <code>true</code> when all hosts agree on the schema and <code>false</code> when there is no agreement or when\n * the check could not be performed (for example, if the control connection is down).\n */\nMetadata.prototype.checkSchemaAgreement = function (callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    const connection = this.controlConnection.connection;\n    if (!connection) {\n      return cb(null, false);\n    }\n\n    this.compareSchemaVersions(connection, (err, agreement) => {\n      // The error is never thrown\n      cb(null, !err && agreement);\n    });\n  });\n};\n\n/**\n * Uses the metadata to fill the user provided parameter hints\n * @param {String} keyspace\n * @param {Array} hints\n * @param {Function} callback\n * @internal\n * @ignore\n */\nMetadata.prototype.adaptUserHints = function (keyspace, hints, callback) {\n  if (!util.isArray(hints)) {\n    return callback();\n  }\n  const udts = [];\n  //check for udts and get the metadata\n  function checkUdtTypes(type) {\n    if (type.code === types.dataTypes.udt) {\n      const udtName = type.info.split('.');\n      type.info = {\n        keyspace: udtName[0],\n        name: udtName[1]\n      };\n      if (!type.info.name) {\n        if (!keyspace) {\n          throw new TypeError('No keyspace specified for udt: ' + udtName.join('.'));\n        }\n        //use the provided keyspace\n        type.info.name = type.info.keyspace;\n        type.info.keyspace = keyspace;\n      }\n      udts.push(type);\n      return;\n    }\n    if (!type.info) {\n      return;\n    }\n    if (type.code === types.dataTypes.list || type.code === types.dataTypes.set) {\n      return checkUdtTypes(type.info);\n    }\n    if (type.code === types.dataTypes.map) {\n      checkUdtTypes(type.info[0]);\n      checkUdtTypes(type.info[1]);\n    }\n  }\n  for (let i = 0; i < hints.length; i++) {\n    const hint = hints[i];\n    if (typeof hint !== 'string') {\n      continue;\n    }\n    try {\n      const type = types.dataTypes.getByName(hint);\n      checkUdtTypes(type);\n      hints[i] = type;\n    }\n    catch (err) {\n      return callback(err);\n    }\n  }\n  const self = this;\n  utils.each(udts, function (type, next) {\n    self.getUdt(type.info.keyspace, type.info.name, function (err, udtInfo) {\n      if (err) {\n        return next(err);\n      }\n      if (!udtInfo) {\n        return next(new TypeError('User defined type not found: ' + type.info.keyspace + '.' + type.info.name));\n      }\n      type.info = udtInfo;\n      next();\n    });\n  }, callback);\n};\n\n/**\n * Uses the provided connection to query the schema versions and compare them.\n * @param {Connection} connection\n * @param {Function} callback\n * @internal\n * @ignore\n */\nMetadata.prototype.compareSchemaVersions = function (connection, callback) {\n  const versions = new Set();\n\n  utils.series([\n    next => {\n      const request = new requests.QueryRequest(_selectSchemaVersionLocal, null, null);\n      connection.sendStream(request, null, function (err, result) {\n        if (!err && result && result.rows && result.rows.length === 1) {\n          versions.add(result.rows[0]['schema_version'].toString());\n        }\n        next(err);\n      });\n    },\n    next => {\n      const request = new requests.QueryRequest(_selectSchemaVersionPeers, null, null);\n      connection.sendStream(request, null, function (err, result) {\n        if (!err && result && result.rows) {\n          for (const row of result.rows) {\n            const value = row['schema_version'];\n            if (!value) {\n              continue;\n            }\n            versions.add(value.toString());\n          }\n        }\n        next(err);\n      });\n    }\n  ], (err) => {\n    callback(err, versions.size === 1);\n  });\n};\n\n/**\n * Allows to store prepared queries and retrieval by query or query id.\n * @param {Number} maxPrepared\n * @param {Function} logger\n * @constructor\n * @ignore\n */\nfunction PreparedQueries(maxPrepared, logger) {\n  this.length = 0;\n  this._maxPrepared = maxPrepared;\n  this._mapByKey = {};\n  this._mapById = {};\n  this._logger = logger;\n}\n\nPreparedQueries.prototype._getKey = function (keyspace, query) {\n  return ( keyspace || '' ) + query;\n};\n\nPreparedQueries.prototype.getOrAdd = function (keyspace, query) {\n  const key = this._getKey(keyspace, query);\n  let info = this._mapByKey[key];\n  if (info) {\n    return info;\n  }\n  this._validateOverflow();\n  info = new events.EventEmitter();\n  info.setMaxListeners(0);\n  info.query = query;\n  // The keyspace in which it was prepared\n  info.keyspace = keyspace;\n  this._mapByKey[key] = info;\n  this.length++;\n  return info;\n};\n\nPreparedQueries.prototype._validateOverflow = function () {\n  if (this.length < this._maxPrepared) {\n    return;\n  }\n  const toRemove = [];\n  this._logger('warning',\n    'Prepared statements exceeded maximum. This could be caused by preparing queries that contain parameters');\n  const existingKeys = Object.keys(this._mapByKey);\n  for (let i = 0; i < existingKeys.length && this.length - toRemove.length < this._maxPrepared; i++) {\n    const info = this._mapByKey[existingKeys[i]];\n    if (!info.queryId) {\n      // Only remove queries that contain queryId\n      continue;\n    }\n    toRemove.push(info);\n  }\n  toRemove.forEach(function (item) {\n    delete this._mapByKey[item.query];\n    delete this._mapById[item.queryId];\n    this.length--;\n  }, this);\n};\n\nPreparedQueries.prototype.setById = function (info) {\n  this._mapById[info.queryId.toString('hex')] = info;\n};\n\nPreparedQueries.prototype.getById = function (id) {\n  return this._mapById[id.toString('hex')];\n};\n\nPreparedQueries.prototype.clear = function () {\n  this._mapByKey = {};\n  this._mapById = {};\n  this.length = 0;\n};\n\nPreparedQueries.prototype.getAll = function () {\n  return utils.objectValues(this._mapByKey).filter(function (info) {\n    return !!info.queryId;\n  });\n};\n\nmodule.exports = Metadata;\n","\"use strict\";\nconst util = require('util');\nconst events = require('events');\n/**\n * Creates a new instance of DataCollection\n * @param {String} name Name of the data object.\n * @classdesc Describes a table or a view\n * @alias module:metadata~DataCollection\n * @constructor\n * @abstract\n */\nfunction DataCollection(name) {\n  events.EventEmitter.call(this);\n  this.setMaxListeners(0);\n  //private\n  Object.defineProperty(this, 'loading', { value: false, enumerable: false, writable: true });\n  Object.defineProperty(this, 'loaded', { value: false, enumerable: false, writable: true });\n  /**\n   * Name of the object\n   * @type {String}\n   */\n  this.name = name;\n  /**\n   * False-positive probability for SSTable Bloom filters.\n   * @type {number}\n   */\n  this.bloomFilterFalsePositiveChance = 0;\n  /**\n   * Level of caching: all, keys_only, rows_only, none\n   * @type {String}\n   */\n  this.caching = null;\n  /**\n   * A human readable comment describing the table.\n   * @type {String}\n   */\n  this.comment = null;\n  /**\n   * Specifies the time to wait before garbage collecting tombstones (deletion markers)\n   * @type {number}\n   */\n  this.gcGraceSeconds = 0;\n  /**\n   * Compaction strategy class used for the table.\n   * @type {String}\n   */\n  this.compactionClass = null;\n  /**\n   * Associative-array containing the compaction options keys and values.\n   * @type {Object}\n   */\n  this.compactionOptions = null;\n  /**\n   * Associative-array containing the compression options.\n   * @type {Object}\n   */\n  this.compression = null;\n  /**\n   * Specifies the probability of read repairs being invoked over all replicas in the current data center.\n   * @type {number}\n   */\n  this.localReadRepairChance = 0;\n  /**\n   * Specifies the probability with which read repairs should be invoked on non-quorum reads. The value must be\n   * between 0 and 1.\n   * @type {number}\n   */\n  this.readRepairChance = 0;\n  /**\n   * An associative Array containing extra metadata for the table.\n   * <p>\n   * For Apache Cassandra versions prior to 3.0.0, this method always returns <code>null</code>.\n   * </p>\n   * @type {Object}\n   */\n  this.extensions = null;\n  /**\n   * When compression is enabled, this option defines the probability\n   * with which checksums for compressed blocks are checked during reads.\n   * The default value for this options is 1.0 (always check).\n   * <p>\n   *   For Apache Cassandra versions prior to 3.0.0, this method always returns <code>null</code>.\n   * </p>\n   * @type {Number|null}\n   */\n  this.crcCheckChance = null;\n  /**\n   * Whether the populate I/O cache on flush is set on this table.\n   * @type {Boolean}\n   */\n  this.populateCacheOnFlush = false;\n  /**\n   * Returns the default TTL for this table.\n   * @type {Number}\n   */\n  this.defaultTtl = 0;\n  /**\n   * * Returns the speculative retry option for this table.\n   * @type {String}\n   */\n  this.speculativeRetry = 'NONE';\n  /**\n   * Returns the minimum index interval option for this table.\n   * <p>\n   *   Note: this option is available in Apache Cassandra 2.1 and above, and will return <code>null</code> for\n   *   earlier versions.\n   * </p>\n   * @type {Number|null}\n   */\n  this.minIndexInterval = 128;\n  /**\n   * Returns the maximum index interval option for this table.\n   * <p>\n   * Note: this option is available in Apache Cassandra 2.1 and above, and will return <code>null</code> for\n   * earlier versions.\n   * </p>\n   * @type {Number|null}\n   */\n  this.maxIndexInterval = 2048;\n  /**\n   * Array describing the table columns.\n   * @type {Array}\n   */\n  this.columns = null;\n  /**\n   * An associative Array of columns by name.\n   * @type {Object}\n   */\n  this.columnsByName = null;\n  /**\n   * Array describing the columns that are part of the partition key.\n   * @type {Array}\n   */\n  this.partitionKeys = [];\n  /**\n   * Array describing the columns that form the clustering key.\n   * @type {Array}\n   */\n  this.clusteringKeys = [];\n  /**\n   * Array describing the clustering order of the columns in the same order as the clusteringKeys.\n   * @type {Array}\n   */\n  this.clusteringOrder = [];\n}\n\nutil.inherits(DataCollection, events.EventEmitter);\n\nmodule.exports = DataCollection;","'use strict';\n/**\n * @classdesc Provides [Authenticator]{@link module:auth~Authenticator} instances to be used when connecting to a host.\n * @constructor\n * @abstract\n * @alias module:auth~AuthProvider\n */\nfunction AuthProvider() {\n\n}\n\n/**\n * Returns an [Authenticator]{@link module:auth~Authenticator} instance to be used when connecting to a host.\n * @param {String} endpoint The ip address and port number in the format ip:port\n * @param {String} name Authenticator name\n * @abstract\n * @returns {Authenticator}\n */\nAuthProvider.prototype.newAuthenticator = function (endpoint, name) {\n  throw new Error('This is an abstract class, you must implement newAuthenticator method or ' +\n    'use another auth provider that inherits from this class');\n};\n\n/**\n * @class\n * @classdesc Handles SASL authentication with Cassandra servers.\n * Each time a new connection is created and the server requires authentication,\n * a new instance of this class will be created by the corresponding.\n * @constructor\n * @alias module:auth~Authenticator\n */\nfunction Authenticator() {\n\n}\n\n/**\n * Obtain an initial response token for initializing the SASL handshake.\n * @param {Function} callback\n */\nAuthenticator.prototype.initialResponse = function (callback) {\n  callback(new Error('Not implemented'));\n};\n\n/**\n * Evaluates a challenge received from the Server. Generally, this method should callback with\n * no error and no additional params when authentication is complete from the client perspective.\n * @param {Buffer} challenge\n * @param {Function} callback\n */\nAuthenticator.prototype.evaluateChallenge = function (challenge, callback) {\n  callback(new Error('Not implemented'));\n};\n\n/**\n * Called when authentication is successful with the last information\n * optionally sent by the server.\n * @param {Buffer} [token]\n */\nAuthenticator.prototype.onAuthenticationSuccess = function (token) {\n\n};\n\nexports.AuthProvider = AuthProvider;\nexports.Authenticator = Authenticator;","'use strict';\n\nconst ModelBatchMapper = require('./model-batch-mapper');\n\n/**\n * Represents an object mapper for a specific model.\n * @alias module:mapping~ModelMapper\n */\nclass ModelMapper {\n  constructor(name, handler) {\n    /**\n     * Gets the name identifier of the model.\n     * @type {String}\n     */\n    this.name = name;\n    this._handler = handler;\n    /**\n     * Gets a [ModelBatchMapper]{@link module:mapping~ModelBatchMapper} instance containing utility methods to group\n     * multiple doc mutations in a single batch.\n     * @type {ModelBatchMapper}\n     */\n    this.batching = new ModelBatchMapper(this._handler);\n  }\n\n  /**\n   * Gets the first document matching the provided filter or null when not found.\n   * <p>\n   *   Note that all partition and clustering keys must be defined in order to use this method.\n   * </p>\n   * @param {Object} doc The object containing the properties that map to the primary keys.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @return {Promise<Object>}\n   * @example <caption>Get a video by id</caption>\n   * videoMapper.get({ id })\n   * @example <caption>Get a video by id, selecting specific columns</caption>\n   * videoMapper.get({ id }, fields: ['name', 'description'])\n   */\n  get(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getSelectExecutor(doc, docInfo, true)\n      .then(executor => executor(doc, docInfo, executionOptions))\n      .then(result => result.first());\n  }\n\n  /**\n   * Executes a SELECT query based on the filter and returns the result as an iterable of documents.\n   * @param {Object} doc An object containing the properties that map to the primary keys to filter.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n   * @param {Object<String, String>} [docInfo.orderBy] An associative array containing the column names as key and\n   * the order string (asc or desc) as value used to set the order of the results server-side.\n   * @param {Number} [docInfo.limit] Restricts the result of the query to a maximum number of rows on the\n   * server.\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Number} [executionOptions.fetchSize] The amount of rows to retrieve per page.\n   * @param {Number} [executionOptions.pageState] A Buffer instance or a string token representing the paging state.\n   * <p>When provided, the query will be executed starting from a given paging state.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Get user's videos</caption>\n   * const result = await videoMapper.find({ userId });\n   * for (let video of result) {\n   *   console.log(video.name);\n   * }\n   * @example <caption>Get user's videos from a certain date</caption>\n   * videoMapper.find({ userId, addedDate: q.gte(date)});\n   * @example <caption>Get user's videos in reverse order</caption>\n   * videoMapper.find({ userId }, { orderBy: { addedDate: 'desc' }});\n   */\n  find(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getSelectExecutor(doc, docInfo, false)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Executes a SELECT query without a filter and returns the result as an iterable of documents.\n   * <p>\n   *   This is only recommended to be used for tables with a limited amount of results. Otherwise, breaking up the\n   *   token ranges on the client side should be used.\n   * </p>\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * SELECT cql statement generated, in order to restrict the amount of columns retrieved.\n   * @param {Object<String, String>} [docInfo.orderBy] An associative array containing the column names as key and\n   * the order string (asc or desc) as value used to set the order of the results server-side.\n   * @param {Number} [docInfo.limit] Restricts the result of the query to a maximum number of rows on the\n   * server.\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Number} [executionOptions.fetchSize] The mount of rows to retrieve per page.\n   * @param {Number} [executionOptions.pageState] A Buffer instance or a string token representing the paging state.\n   * <p>When provided, the query will be executed starting from a given paging state.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   */\n  findAll(docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    const executor = this._handler.getSelectAllExecutor(docInfo);\n    return executor(docInfo, executionOptions);\n  }\n\n  /**\n   * Inserts a document.\n   * <p>\n   *   When the model is mapped to multiple tables, it will insert a row in each table when all the primary keys\n   *   are specified.\n   * </p>\n   * @param {Object} doc An object containing the properties to insert.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * INSERT cql statements generated. If specified, it must include the columns to insert and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifNotExists] When set, it only inserts if the row does not exist prior to the insertion.\n   * <p>Please note that using IF NOT EXISTS will incur a non negligible performance cost so this should be used\n   * sparingly.</p>\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   By default all generated INSERT statements are considered idempotent, except in the case of lightweight\n   *   transactions. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Insert a video</caption>\n   * videoMapper.insert({ id, name });\n   */\n  insert(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getInsertExecutor(doc, docInfo)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Updates a document.\n   * <p>\n   *   When the model is mapped to multiple tables, it will update a row in each table when all the primary keys\n   *   are specified.\n   * </p>\n   * @param {Object} doc An object containing the properties to update.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * UPDATE cql statements generated. If specified, it must include the columns to update and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifExists] When set, it only updates if the row already exists on the server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the UPDATE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   The mapper uses the generated queries to determine the default value. When an UPDATE is generated with a\n   *   counter column or appending/prepending to a list column, the execution is marked as not idempotent.\n   * </p>\n   * <p>\n   *   Additionally, the mapper uses the safest approach for queries with lightweight transactions (Compare and\n   *   Set) by considering them as non-idempotent. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Update the name of a video</caption>\n   * videoMapper.update({ id, name });\n   */\n  update(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getUpdateExecutor(doc, docInfo)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Deletes a document.\n   * @param {Object} doc A document containing the primary keys values of the document to delete.\n   * @param {Object} [docInfo] An object containing the additional doc information.\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the DELETE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * When the CQL query is generated, this would be used to generate the `IF` clause.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Boolean} [docInfo.ifExists] When set, it only issues the DELETE command if the row already exists on the\n   * server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * DELETE cql statement generated. If specified, it must include the columns to delete and the primary keys.\n   * @param {Boolean} [docInfo.deleteOnlyColumns] Determines that, when more document properties are specified\n   * besides the primary keys, the generated DELETE statement should be used to delete some column values but leave\n   * the row. When this is enabled and more properties are specified, a DELETE statement will have the following form:\n   * \"DELETE col1, col2 FROM table1 WHERE pk1 = ? AND pk2 = ?\"\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   By default all generated DELETE statements are considered idempotent, except in the case of lightweight\n   *   transactions. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result} instance.\n   * @example <caption>Delete a video</caption>\n   * videoMapper.remove({ id });\n   */\n  remove(doc, docInfo, executionOptions) {\n    if (executionOptions === undefined && typeof docInfo === 'string') {\n      executionOptions = docInfo;\n      docInfo = null;\n    }\n\n    return this._handler.getDeleteExecutor(doc, docInfo)\n      .then(executor => executor(doc, docInfo, executionOptions));\n  }\n\n  /**\n   * Uses the provided query and param getter function to execute a query and map the results.\n   * Gets a function that takes the document, executes the query and returns the mapped results.\n   * @param {String} query The query to execute.\n   * @param {Function} paramsHandler The function to execute to extract the parameters of a document.\n   * @param {Object|String} [executionOptions] When provided, the options for all executions generated with this\n   * method will use the provided options and it will not consider the executionOptions per call.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Number} [executionOptions.fetchSize] Amount of rows to retrieve per page.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times\n   * without changing the result beyond the initial application.\n   * @param {Number} [executionOptions.pageState] Buffer or string token representing the paging state.\n   * <p>When provided, the query will be executed starting from a given paging state.</p>\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * <p>When provided, this will replace the client generated and the server side assigned timestamp.</p>\n   * @return {Function} Returns a function that takes the document and execution options as parameters and returns a\n   * Promise the resolves to a [Result]{@link module:mapping~Result} instance.\n   */\n  mapWithQuery(query, paramsHandler, executionOptions) {\n    return this._handler.getExecutorFromQuery(query, paramsHandler, executionOptions);\n  }\n}\n\nmodule.exports = ModelMapper;","'use strict';\n\nconst Cache = require('./cache');\nconst Tree = require('./tree');\nconst ModelBatchItem = require('./model-batch-item');\n\n/**\n * Provides utility methods to group multiple mutations on a single batch.\n * @alias module:mapping~ModelBatchMapper\n */\nclass ModelBatchMapper {\n  /**\n   * Creates a new instance of model batch mapper.\n   * <p>\n   *   An instance of this class is exposed as a singleton in the <code>batching</code> field of the\n   *   [ModelMapper]{@link module:mapping~ModelMapper}. Note that new instances should not be create with this\n   *   constructor.\n   * </p>\n   * @param {MappingHandler} handler\n   * @ignore\n   */\n  constructor(handler) {\n    this._handler = handler;\n    this._cache = {\n      insert: new Tree(),\n      update: new Tree(),\n      remove: new Tree()\n    };\n  }\n\n  /**\n   * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the INSERT mutation to be\n   * used in a batch execution.\n   * @param {Object} doc An object containing the properties to insert.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * INSERT cql statements generated. If specified, it must include the columns to insert and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifNotExists] When set, it only inserts if the row does not exist prior to the insertion.\n   * <p>Please note that using IF NOT EXISTS will incur a non negligible performance cost so this should be used\n   * sparingly.</p>\n   * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query\n   * or a set of queries to be included in a batch.\n   */\n  insert(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    const cacheKey = Cache.getInsertKey(docKeys, docInfo);\n    const cacheItem = this._cache.insert.getOrCreate(cacheKey, () => ({ queries: null }));\n\n    if (cacheItem.queries === null) {\n      cacheItem.queries = this._handler.createInsertQueries(docKeys, doc, docInfo);\n    }\n\n    return new ModelBatchItem(cacheItem.queries, doc, docInfo, this._handler.info);\n  }\n\n  /**\n   * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem} containing the queries for the UPDATE mutation to be\n   * used in a batch execution.\n   * @param {Object} doc An object containing the properties to update.\n   * @param {Object} [docInfo] An object containing the additional document information.\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * UPDATE cql statements generated. If specified, it must include the columns to update and the primary keys.\n   * @param {Number} [docInfo.ttl] Specifies an optional Time To Live (in seconds) for the inserted values.\n   * @param {Boolean} [docInfo.ifExists] When set, it only updates if the row already exists on the server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the UPDATE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query\n   * or a set of queries to be included in a batch.\n   */\n  update(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    const cacheKey = Cache.getUpdateKey(docKeys, doc, docInfo);\n    const cacheItem = this._cache.update.getOrCreate(cacheKey, () => ({ queries: null }));\n\n    if (cacheItem.queries === null) {\n      cacheItem.queries = this._handler.createUpdateQueries(docKeys, doc, docInfo);\n    }\n\n    return new ModelBatchItem(cacheItem.queries, doc, docInfo, this._handler.info);\n  }\n\n  /**\n   * Gets a [ModelBatchItem]{@link module:mapping~ModelBatchItem}  containing the queries for the DELETE mutation to be\n   * used in a batch execution.\n   * @param {Object} doc A document containing the primary keys values of the document to delete.\n   * @param {Object} [docInfo] An object containing the additional doc information.\n   * @param {Object} [docInfo.when] A document that act as the condition that has to be met for the DELETE to occur.\n   * Use this property only in the case you want to specify a conditional clause for lightweight transactions (CAS).\n   * When the CQL query is generated, this would be used to generate the `IF` clause.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Boolean} [docInfo.ifExists] When set, it only issues the DELETE command if the row already exists on the\n   * server.\n   * <p>\n   *   Please note that using IF conditions will incur a non negligible performance cost on the server-side so this\n   *   should be used sparingly.\n   * </p>\n   * @param {Array<String>} [docInfo.fields] An Array containing the name of the properties that will be used in the\n   * DELETE cql statement generated. If specified, it must include the columns to delete and the primary keys.\n   * @param {Boolean} [docInfo.deleteOnlyColumns] Determines that, when more document properties are specified\n   * besides the primary keys, the generated DELETE statement should be used to delete some column values but leave\n   * the row. When this is enabled and more properties are specified, a DELETE statement will have the following form:\n   * \"DELETE col1, col2 FROM table1 WHERE pk1 = ? AND pk2 = ?\"\n   * @returns {ModelBatchItem} A [ModelBatchItem]{@link module:mapping~ModelBatchItem} instance representing a query\n   * or a set of queries to be included in a batch.\n   */\n  remove(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    const cacheKey = Cache.getRemoveKey(docKeys, doc, docInfo);\n    const cacheItem = this._cache.remove.getOrCreate(cacheKey, () => ({ queries: null }));\n\n    if (cacheItem.queries === null) {\n      cacheItem.queries = this._handler.createDeleteQueries(docKeys, doc, docInfo);\n    }\n\n    return new ModelBatchItem(cacheItem.queries, doc, docInfo, this._handler.info);\n  }\n}\n\nmodule.exports = ModelBatchMapper;","'use strict';\n\nconst qModule = require('./q');\nconst QueryOperator = qModule.QueryOperator;\nconst QueryAssignment = qModule.QueryAssignment;\n\n/**\n * Provides utility methods for obtaining a caching keys based on the specifics of the Mapper methods.\n * @ignore\n */\nclass Cache {\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for a select query.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{fields, limit, orderBy}} docInfo\n   * @returns {Iterator}\n   */\n  static *getSelectKey(docKeys, doc, docInfo) {\n    yield* Cache._yieldKeyAndOperators(docKeys, doc);\n\n    yield* Cache._getSelectDocInfo(docInfo);\n  }\n  /**\n   * Gets an iterator of keys to uniquely identify a shape for a select all query.\n   * @param {{fields, limit, orderBy}} docInfo\n   * @returns {Iterator}\n   */\n  static *getSelectAllKey(docInfo) {\n    yield 'root';\n\n    yield* Cache._getSelectDocInfo(docInfo);\n  }\n\n  /**\n   * Gets the parts of the key for a select query related to the docInfo.\n   * @param {{fields, limit, orderBy}} docInfo\n   * @private\n   */\n  static *_getSelectDocInfo(docInfo) {\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (typeof docInfo.limit === 'number') {\n        yield '|l|';\n      }\n\n      if (docInfo.orderBy && docInfo.orderBy.length > 0) {\n        yield '|o|';\n        yield* docInfo.orderBy;\n      }\n    }\n  }\n\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for an insert query.\n   * @param {Array<String>} docKeys\n   * @param {{ifNotExists, ttl, fields}} docInfo\n   */\n  static *getInsertKey(docKeys, docInfo) {\n    // No operator supported on INSERT values\n    yield* docKeys;\n\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (typeof docInfo.ttl === 'number') {\n        yield '|t|';\n      }\n\n      if (docInfo.ifNotExists) {\n        yield '|e|';\n      }\n    }\n  }\n\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for an UPDATE query.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{ifExists, when, ttl, fields}} docInfo\n   */\n  static *getUpdateKey(docKeys, doc, docInfo) {\n    yield* Cache._yieldKeyAndAllQs(docKeys, doc);\n\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (typeof docInfo.ttl === 'number') {\n        yield '|t|';\n      }\n\n      if (docInfo.ifExists) {\n        yield '|e|';\n      }\n\n      if (docInfo.when) {\n        yield* Cache._yieldKeyAndOperators(Object.keys(docInfo.when), docInfo.when);\n      }\n    }\n  }\n\n  /**\n   * Gets an iterator of keys to uniquely identify a document shape for a DELETE query.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{ifExists, when, fields, deleteOnlyColumns}} docInfo\n   */\n  static *getRemoveKey(docKeys, doc, docInfo) {\n    yield* Cache._yieldKeyAndOperators(docKeys, doc);\n\n    if (docInfo) {\n      if (docInfo.fields && docInfo.fields.length > 0) {\n        // Use a separator from properties\n        yield '|f|';\n        yield* docInfo.fields;\n      }\n\n      if (docInfo.ifExists) {\n        yield '|e|';\n      }\n\n      if (docInfo.deleteOnlyColumns) {\n        yield '|dc|';\n      }\n\n      if (docInfo.when) {\n        yield* Cache._yieldKeyAndOperators(Object.keys(docInfo.when), docInfo.when);\n      }\n    }\n  }\n\n  static *_yieldKeyAndOperators(keys, obj) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield key;\n      yield* Cache._yieldOperators(obj[key]);\n    }\n  }\n\n  static *_yieldOperators(value) {\n    if (value !== null && value !== undefined && value instanceof QueryOperator) {\n      yield value.key;\n      if (value.hasChildValues) {\n        yield* Cache._yieldOperators(value.value[0]);\n        yield '|/|';\n        yield* Cache._yieldOperators(value.value[1]);\n      }\n    }\n  }\n\n  static *_yieldKeyAndAllQs(keys, obj) {\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield key;\n      const value = obj[key];\n      if (value !== null && value !== undefined) {\n        if (value instanceof QueryOperator) {\n          yield* Cache._yieldOperators(value);\n        }\n        else if (value instanceof QueryAssignment) {\n          yield value.sign;\n          yield value.inverted;\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = Cache;","'use strict';\n\nconst EventEmitter = require('events');\n\n/**\n * Represents a tree node where the key is composed by 1 or more strings.\n * @ignore\n */\nclass Node extends EventEmitter {\n  /**\n   * Creates a new instance of {@link Node}.\n   * @param {Array<String>} key\n   * @param {Object} value\n   * @param {Array} [edges]\n   */\n  constructor(key, value, edges) {\n    super();\n    this.key = key;\n    this.value = value;\n    this.edges = edges || [];\n  }\n}\n\n/**\n * A radix tree where each node contains a key, a value and edges.\n * @ignore\n */\nclass Tree extends Node {\n  constructor() {\n    super([], null);\n    this.length = 0;\n  }\n\n  /**\n   * Gets the existing item in the tree or creates a new one with the value provided by valueHandler\n   * @param {Iterator} keyIterator\n   * @param {Function} valueHandler\n   * @return {Object}\n   */\n  getOrCreate(keyIterator, valueHandler) {\n    if (typeof keyIterator.next !== 'function') {\n      keyIterator = keyIterator[Symbol.iterator]();\n    }\n    let node = this;\n    let isMatch = false;\n    let item = keyIterator.next();\n    while (true) {\n      let newBranch;\n      // Check node keys at position 1 and above\n      for (let i = 1; i < node.key.length; i++) {\n        if (item.done || node.key[i] !== item.value) {\n          // We should branch out\n          newBranch = this._createBranch(node, i, item.done, valueHandler);\n          break;\n        }\n        item = keyIterator.next();\n      }\n\n      if (item.done) {\n        isMatch = true;\n        break;\n      }\n\n      if (newBranch !== undefined) {\n        break;\n      }\n\n      const edges = node.edges;\n      let nextNode;\n      for (let i = 0; i < edges.length; i++) {\n        const e = edges[i];\n        if (e.key[0] === item.value) {\n          // its a match\n          nextNode = e;\n          item = keyIterator.next();\n          break;\n        }\n      }\n\n      if (nextNode === undefined) {\n        // Current node is the root for a new leaf\n        break;\n      }\n      else {\n        node = nextNode;\n      }\n    }\n\n    if (!isMatch) {\n      // Create using \"node\" as the root\n      const value = valueHandler();\n      node.edges.push(new Node(iteratorToArray(item.value, keyIterator), value));\n      this._onItemAdded();\n      return value;\n    }\n    return node.value;\n  }\n\n  _createBranch(node, index, useNewValue, valueHandler) {\n    const newBranch = new Node(node.key.slice(index), node.value, node.edges);\n    node.key = node.key.slice(0, index);\n    node.edges = [ newBranch ];\n    if (useNewValue) {\n      // The previous node value has moved to a leaf\n      // The node containing the new leaf should use the new value\n      node.value = valueHandler();\n      this._onItemAdded();\n    }\n    else {\n      // Clear the value as it was copied in the branch\n      node.value = null;\n    }\n    return newBranch;\n  }\n\n  _onItemAdded() {\n    this.length++;\n    this.emit('add', this.length);\n  }\n}\n\nfunction iteratorToArray(value, iterator) {\n  const values = [ value ];\n  let item = iterator.next();\n  while (!item.done) {\n    values.push(item.value);\n    item = iterator.next();\n  }\n  return values;\n}\n\nmodule.exports = Tree;","module.exports = require(\"vm\");","'use strict';\n\nconst vm = require('vm');\nconst utils = require('../utils');\nconst types = require('../types');\n\n/**\n * @ignore\n */\nclass ResultMapper {\n  /**\n   * Gets a generated function to adapt the row to a document.\n   * @param {ModelMappingInfo} info\n   * @param {ResultSet} rs\n   * @returns {Function}\n   */\n  static getSelectAdapter(info, rs) {\n    const columns = rs.columns;\n    if (!columns) {\n      throw new Error('Expected ROWS result obtained VOID');\n    }\n\n    let scriptText = '(function rowAdapter(row, info) {\\n' +\n      '  const item = info.newInstance();\\n';\n\n    scriptText += columns.map(c => `  item['${info.getPropertyName(c.name)}'] = row['${c.name}'];`).join('\\n');\n\n    scriptText += '\\n  return item;\\n})';\n\n    const script = new vm.Script(scriptText);\n    return script.runInThisContext({ filename: 'gen-result-mapper.js'});\n  }\n\n  /**\n   * Gets a function used to adapt VOID results or conditional updates.\n   * @param {ResultSet} rs\n   * @returns {Function}\n   */\n  static getMutationAdapter(rs) {\n    if (rs.columns === null) {\n      // VOID result\n      return utils.noop;\n    }\n\n    if (\n      rs.columns.length === 1 && rs.columns[0].name === '[applied]' &&\n      rs.columns[0].type.code === types.dataTypes.boolean) {\n      return utils.noop;\n    }\n\n    return ResultMapper._getConditionalRowAdapter(rs);\n  }\n\n  static _getConditionalRowAdapter(rs) {\n    return (function conditionalRowAdapter(row, info) {\n      const item = info.newInstance();\n\n      // Skip the first column (\"[applied]\")\n      for (let i = 1; i < rs.columns.length; i++) {\n        const c = rs.columns[i];\n        item[info.getPropertyName(c.name)] = row[c.name];\n      }\n\n      return item;\n    });\n  }\n\n  /**\n   * @param {ModelMappingInfo} info\n   * @param {ResultSet} rs\n   * @returns {{canCache: Boolean, fn: Function}}\n   */\n  static getCustomQueryAdapter(info, rs) {\n    if (rs.columns === null || rs.columns.length === 0) {\n      // VOID result\n      return { canCache: true, fn: utils.noop };\n    }\n\n    if (rs.columns[0].name === '[applied]' && rs.columns[0].type.code === types.dataTypes.boolean) {\n      // Conditional update results adapter functions should not be cached\n      return { canCache: false, fn: ResultMapper._getConditionalRowAdapter(rs) };\n    }\n\n    return { canCache: true, fn: ResultMapper.getSelectAdapter(info, rs) };\n  }\n}\n\nmodule.exports = ResultMapper;","'use strict';\n\nconst errors = require('../errors');\nconst utils = require('../utils');\n\n/**\n * Provides utility methods to adapt and map user provided docInfo and executionOptions to a predictable object format.\n * @ignore\n */\nclass DocInfoAdapter {\n  /**\n   * Returns an Array where each item contains the property name, the column name and the property value (to obtain\n   * the operator).\n   * When docInfo.fields is specified, it uses that array to obtain the information.\n   * @param {Array<String>} docKeys\n   * @param {null|{fields}} docInfo\n   * @param {Object} doc\n   * @param {ModelMappingInfo} mappingInfo\n   * @returns {Array}\n   */\n  static getPropertiesInfo(docKeys, docInfo, doc, mappingInfo) {\n    let propertyKeys = docKeys;\n    if (docInfo && docInfo.fields && docInfo.fields.length > 0) {\n      propertyKeys = docInfo.fields;\n    }\n\n    return propertyKeys.map(propertyName => ({\n      propertyName, columnName: mappingInfo.getColumnName(propertyName), value: doc[propertyName]\n    }));\n  }\n\n  /**\n   * @param {{orderBy}} docInfo\n   * @param {ModelMappingInfo} mappingInfo\n   * @returns {Array<String>}\n   */\n  static adaptOrderBy(docInfo, mappingInfo){\n    if (!docInfo || !docInfo.orderBy) {\n      return utils.emptyArray;\n    }\n    return Object.keys(docInfo.orderBy).map(key => {\n      const value = docInfo.orderBy[key];\n      const ordering = typeof value === 'string' ? value.toUpperCase() : value;\n      if (ordering !== 'ASC' && ordering !== 'DESC') {\n        throw new errors.ArgumentError('Order must be either \"ASC\" or \"DESC\", obtained: ' + value);\n      }\n      return [ mappingInfo.getColumnName(key), ordering ];\n    });\n  }\n\n  /**\n   * Returns the QueryOptions for an INSERT/UPDATE/DELETE statement.\n   * @param {Object|String|undefined} executionOptions\n   * @param {Boolean} isIdempotent\n   */\n  static adaptOptions(executionOptions, isIdempotent) {\n    const options = {\n      prepare: true,\n      executionProfile: undefined,\n      timestamp: undefined,\n      isIdempotent: isIdempotent\n    };\n\n    if (typeof executionOptions === 'string') {\n      options.executionProfile = executionOptions;\n    }\n    else if (executionOptions !== null && executionOptions !== undefined) {\n      options.executionProfile = executionOptions.executionProfile;\n      options.timestamp = executionOptions.timestamp;\n\n      if (executionOptions.isIdempotent !== undefined) {\n        options.isIdempotent = executionOptions.isIdempotent;\n      }\n    }\n    return options;\n  }\n\n  /**\n   * Returns the QueryOptions for a SELECT statement.\n   * @param {Object|String|undefined} executionOptions\n   * @param {Boolean} [overrideIdempotency]\n   */\n  static adaptAllOptions(executionOptions, overrideIdempotency) {\n    const options = {\n      prepare: true,\n      executionProfile: undefined,\n      fetchSize: undefined,\n      pageState: undefined,\n      timestamp: undefined,\n      isIdempotent: undefined\n    };\n\n    if (typeof executionOptions === 'string') {\n      options.executionProfile = executionOptions;\n    }\n    else if (executionOptions !== null && executionOptions !== undefined) {\n      options.executionProfile = executionOptions.executionProfile;\n      options.fetchSize = executionOptions.fetchSize;\n      options.pageState = executionOptions.pageState;\n      options.timestamp = executionOptions.timestamp;\n      options.isIdempotent = executionOptions.isIdempotent;\n    }\n\n    if (overrideIdempotency) {\n      options.isIdempotent = true;\n    }\n\n    return options;\n  }\n\n  /**\n   * Returns the QueryOptions for a batch statement.\n   * @param {Object|String|undefined} executionOptions\n   * @param {Boolean} isIdempotent\n   * @param {Boolean} isCounter\n   */\n  static adaptBatchOptions(executionOptions, isIdempotent, isCounter) {\n    const options = {\n      prepare: true,\n      executionProfile: undefined,\n      timestamp: undefined,\n      logged: undefined,\n      isIdempotent: isIdempotent,\n      counter: isCounter\n    };\n\n    if (typeof executionOptions === 'string') {\n      options.executionProfile = executionOptions;\n    }\n    else if (executionOptions !== null && executionOptions !== undefined) {\n      options.executionProfile = executionOptions.executionProfile;\n      options.timestamp = executionOptions.timestamp;\n      options.logged = executionOptions.logged !== false;\n\n      if (executionOptions.isIdempotent !== undefined) {\n        options.isIdempotent = executionOptions.isIdempotent;\n      }\n    }\n    return options;\n  }\n}\n\nmodule.exports = DocInfoAdapter;","'use strict';\n\n/**\n * Contains a set of methods to represent a row into a document and a document into a row.\n * @alias module:mapping~TableMappings\n * @interface\n */\nclass TableMappings {\n  /**\n   * Method that is called by the mapper to create the instance of the document.\n   * @return {Object}\n   */\n  newObjectInstance() {\n    return {};\n  }\n\n  /**\n   * Gets the name of the column based on the document property name.\n   * @param {String} propName The name of the property.\n   * @returns {String}\n   */\n  getColumnName(propName) {\n    return propName;\n  }\n\n  /**\n   * Gets the name of the document property based on the column name.\n   * @param {String} columnName The name of the column.\n   * @returns {String}\n   */\n  getPropertyName(columnName) {\n    return columnName;\n  }\n}\n\n/**\n * A [TableMappings]{@link module:mapping~TableMappings} implementation that converts CQL column names in all-lowercase\n * identifiers with underscores (snake case) to camel case (initial lowercase letter) property names.\n * <p>\n *   The conversion is performed without any checks for the source format, you should make sure that the source\n *   format is snake case for CQL identifiers and camel case for properties.\n * </p>\n * @alias module:mapping~UnderscoreCqlToCamelCaseMappings\n * @implements {module:mapping~TableMappings}\n */\nclass UnderscoreCqlToCamelCaseMappings extends TableMappings {\n  /**\n   * Creates a new instance of {@link UnderscoreCqlToCamelCaseMappings}\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Converts a property name in camel case to snake case.\n   * @param {String} propName Name of the property to convert to snake case.\n   * @return {String}\n   */\n  getColumnName(propName) {\n    return propName.replace(/[a-z][A-Z]/g, (match, offset) => match.charAt(0) + '_' + match.charAt(1)).toLowerCase();\n  }\n\n  /**\n   * Converts a column name in snake case to camel case.\n   * @param {String} columnName The column name to convert to camel case.\n   * @return {String}\n   */\n  getPropertyName(columnName) {\n    return columnName.replace(/_[a-z]/g, (match, offset) => ((offset === 0) ? match : match.substr(1).toUpperCase()));\n  }\n}\n\n/**\n * Default implementation of [TableMappings]{@link module:mapping~TableMappings} that doesn't perform any conversion.\n * @alias module:mapping~DefaultTableMappings\n * @implements {module:mapping~TableMappings}\n */\nclass DefaultTableMappings extends TableMappings {\n  /**\n   * Creates a new instance of {@link DefaultTableMappings}.\n   */\n  constructor() {\n    super();\n  }\n\n  /**  @override */\n  getColumnName(propName) {\n    return super.getColumnName(propName);\n  }\n\n  /** @override */\n  getPropertyName(columnName) {\n    return super.getPropertyName(columnName);\n  }\n\n  /**\n   * Creates a new object instance, using object initializer.\n   */\n  newObjectInstance() {\n    return super.newObjectInstance();\n  }\n}\n\nexports.TableMappings = TableMappings;\nexports.UnderscoreCqlToCamelCaseMappings = UnderscoreCqlToCamelCaseMappings;\nexports.DefaultTableMappings = DefaultTableMappings;","/**\n * Counter metric\n */\n'use strict';\n\nconst util = require('util');\nconst { globalRegistry } = require('./registry');\nconst type = 'counter';\nconst {\n\tisDate,\n\tgetPropertiesFromObj,\n\thashObject,\n\tisObject,\n\tprintDeprecationObjectConstructor,\n\tgetLabels,\n\tremoveLabels\n} = require('./util');\n\nconst {\n\tvalidateLabel,\n\tvalidateMetricName,\n\tvalidateLabelName\n} = require('./validation');\n\nclass Counter {\n\t/**\n\t * Counter\n\t * @param {string} name - Name of the metric\n\t * @param {string} help - Help description for the metric\n\t * @param {Array.<string>} labels - Labels\n\t */\n\tconstructor(name, help, labels) {\n\t\tlet config;\n\t\tif (isObject(name)) {\n\t\t\tconfig = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tlabelNames: []\n\t\t\t\t},\n\t\t\t\tname\n\t\t\t);\n\n\t\t\tif (!config.registers) {\n\t\t\t\tconfig.registers = [globalRegistry];\n\t\t\t}\n\t\t} else {\n\t\t\tprintDeprecationObjectConstructor();\n\n\t\t\tconfig = {\n\t\t\t\tname,\n\t\t\t\thelp,\n\t\t\t\tlabelNames: labels,\n\t\t\t\tregisters: [globalRegistry]\n\t\t\t};\n\t\t}\n\n\t\tif (!config.help) {\n\t\t\tthrow new Error('Missing mandatory help parameter');\n\t\t}\n\t\tif (!config.name) {\n\t\t\tthrow new Error('Missing mandatory name parameter');\n\t\t}\n\t\tif (!validateMetricName(config.name)) {\n\t\t\tthrow new Error('Invalid metric name');\n\t\t}\n\n\t\tif (!validateLabelName(config.labelNames)) {\n\t\t\tthrow new Error('Invalid label name');\n\t\t}\n\n\t\tthis.name = config.name;\n\n\t\tthis.labelNames = config.labelNames || [];\n\n\t\tthis.reset();\n\n\t\tthis.help = config.help;\n\t\tthis.aggregator = config.aggregator || 'sum';\n\n\t\tconfig.registers.forEach(registryInstance =>\n\t\t\tregistryInstance.registerMetric(this)\n\t\t);\n\t}\n\n\t/**\n\t * Increment counter\n\t * @param {object} labels - What label you want to be incremented\n\t * @param {Number} value - Value to increment, if omitted increment with 1\n\t * @param {(Number|Date)} timestamp - Timestamp to set the counter to\n\t * @returns {void}\n\t */\n\tinc(labels, value, timestamp) {\n\t\tif (!isObject(labels)) {\n\t\t\treturn inc.call(this, null)(labels, value);\n\t\t}\n\n\t\tconst hash = hashObject(labels);\n\t\treturn inc.call(this, labels, hash)(value, timestamp);\n\t}\n\n\t/**\n\t * Reset counter\n\t * @returns {void}\n\t */\n\treset() {\n\t\treturn reset.call(this);\n\t}\n\n\tget() {\n\t\treturn {\n\t\t\thelp: this.help,\n\t\t\tname: this.name,\n\t\t\ttype,\n\t\t\tvalues: getPropertiesFromObj(this.hashMap),\n\t\t\taggregator: this.aggregator\n\t\t};\n\t}\n\n\tlabels() {\n\t\tconst labels = getLabels(this.labelNames, arguments) || {};\n\t\tconst hash = hashObject(labels);\n\t\tvalidateLabel(this.labelNames, labels);\n\t\treturn {\n\t\t\tinc: inc.call(this, labels, hash)\n\t\t};\n\t}\n\n\tremove() {\n\t\tconst labels = getLabels(this.labelNames, arguments) || {};\n\t\treturn removeLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nconst reset = function() {\n\tthis.hashMap = {};\n\n\tif (this.labelNames.length === 0) {\n\t\tthis.hashMap = setValue({}, 0);\n\t}\n};\n\nconst inc = function(labels, hash) {\n\treturn (value, timestamp) => {\n\t\tif (value && !Number.isFinite(value)) {\n\t\t\tthrow new TypeError(`Value is not a valid number: ${util.format(value)}`);\n\t\t}\n\t\tif (timestamp && !isDate(timestamp) && !Number.isFinite(timestamp)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Timestamp is not a valid date or number: ${util.format(timestamp)}`\n\t\t\t);\n\t\t}\n\t\tif (value < 0) {\n\t\t\tthrow new Error('It is not possible to decrease a counter');\n\t\t}\n\n\t\tlabels = labels || {};\n\t\tvalidateLabel(this.labelNames, labels);\n\n\t\tconst incValue = value === null || value === undefined ? 1 : value;\n\n\t\tthis.hashMap = setValue(this.hashMap, incValue, timestamp, labels, hash);\n\t};\n};\n\nfunction setValue(hashMap, value, timestamp, labels, hash) {\n\thash = hash || '';\n\ttimestamp = isDate(timestamp)\n\t\t? timestamp.valueOf()\n\t\t: Number.isFinite(timestamp)\n\t\t? timestamp\n\t\t: undefined;\n\tif (hashMap[hash]) {\n\t\thashMap[hash].value += value;\n\t\thashMap[hash].timestamp = timestamp;\n\t} else {\n\t\thashMap[hash] = { value, labels: labels || {}, timestamp };\n\t}\n\treturn hashMap;\n}\n\nmodule.exports = Counter;\n","\nfunction TreeBase() {}\n\n// removes all nodes from the tree\nTreeBase.prototype.clear = function() {\n    this._root = null;\n    this.size = 0;\n};\n\n// returns node data if found, null otherwise\nTreeBase.prototype.find = function(data) {\n    var res = this._root;\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            return res.data;\n        }\n        else {\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// returns iterator to node if found, null otherwise\nTreeBase.prototype.findIter = function(data) {\n    var res = this._root;\n    var iter = this.iterator();\n\n    while(res !== null) {\n        var c = this._comparator(data, res.data);\n        if(c === 0) {\n            iter._cursor = res;\n            return iter;\n        }\n        else {\n            iter._ancestors.push(res);\n            res = res.get_child(c > 0);\n        }\n    }\n\n    return null;\n};\n\n// Returns an iterator to the tree node at or immediately after the item\nTreeBase.prototype.lowerBound = function(item) {\n    var cur = this._root;\n    var iter = this.iterator();\n    var cmp = this._comparator;\n\n    while(cur !== null) {\n        var c = cmp(item, cur.data);\n        if(c === 0) {\n            iter._cursor = cur;\n            return iter;\n        }\n        iter._ancestors.push(cur);\n        cur = cur.get_child(c > 0);\n    }\n\n    for(var i=iter._ancestors.length - 1; i >= 0; --i) {\n        cur = iter._ancestors[i];\n        if(cmp(item, cur.data) < 0) {\n            iter._cursor = cur;\n            iter._ancestors.length = i;\n            return iter;\n        }\n    }\n\n    iter._ancestors.length = 0;\n    return iter;\n};\n\n// Returns an iterator to the tree node immediately after the item\nTreeBase.prototype.upperBound = function(item) {\n    var iter = this.lowerBound(item);\n    var cmp = this._comparator;\n\n    while(iter.data() !== null && cmp(iter.data(), item) === 0) {\n        iter.next();\n    }\n\n    return iter;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.min = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.left !== null) {\n        res = res.left;\n    }\n\n    return res.data;\n};\n\n// returns null if tree is empty\nTreeBase.prototype.max = function() {\n    var res = this._root;\n    if(res === null) {\n        return null;\n    }\n\n    while(res.right !== null) {\n        res = res.right;\n    }\n\n    return res.data;\n};\n\n// returns a null iterator\n// call next() or prev() to point to an element\nTreeBase.prototype.iterator = function() {\n    return new Iterator(this);\n};\n\n// calls cb on each node's data, in order\nTreeBase.prototype.each = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.next()) !== null) {\n        cb(data);\n    }\n};\n\n// calls cb on each node's data, in reverse order\nTreeBase.prototype.reach = function(cb) {\n    var it=this.iterator(), data;\n    while((data = it.prev()) !== null) {\n        cb(data);\n    }\n};\n\n\nfunction Iterator(tree) {\n    this._tree = tree;\n    this._ancestors = [];\n    this._cursor = null;\n}\n\nIterator.prototype.data = function() {\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns first node\n// otherwise, returns next node\nIterator.prototype.next = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._minNode(root);\n        }\n    }\n    else {\n        if(this._cursor.right === null) {\n            // no greater node in subtree, go up to parent\n            // if coming from a right child, continue up the stack\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.right === save);\n        }\n        else {\n            // get the next node from the subtree\n            this._ancestors.push(this._cursor);\n            this._minNode(this._cursor.right);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\n// if null-iterator, returns last node\n// otherwise, returns previous node\nIterator.prototype.prev = function() {\n    if(this._cursor === null) {\n        var root = this._tree._root;\n        if(root !== null) {\n            this._maxNode(root);\n        }\n    }\n    else {\n        if(this._cursor.left === null) {\n            var save;\n            do {\n                save = this._cursor;\n                if(this._ancestors.length) {\n                    this._cursor = this._ancestors.pop();\n                }\n                else {\n                    this._cursor = null;\n                    break;\n                }\n            } while(this._cursor.left === save);\n        }\n        else {\n            this._ancestors.push(this._cursor);\n            this._maxNode(this._cursor.left);\n        }\n    }\n    return this._cursor !== null ? this._cursor.data : null;\n};\n\nIterator.prototype._minNode = function(start) {\n    while(start.left !== null) {\n        this._ancestors.push(start);\n        start = start.left;\n    }\n    this._cursor = start;\n};\n\nIterator.prototype._maxNode = function(start) {\n    while(start.right !== null) {\n        this._ancestors.push(start);\n        start = start.right;\n    }\n    this._cursor = start;\n};\n\nmodule.exports = TreeBase;\n\n","'use strict';\n\nexports.linearBuckets = (start, width, count) => {\n\tif (count < 1) {\n\t\tthrow new Error('Linear buckets needs a positive count');\n\t}\n\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start;\n\t\tstart += width;\n\t}\n\treturn buckets;\n};\n\nexports.exponentialBuckets = (start, factor, count) => {\n\tif (start <= 0) {\n\t\tthrow new Error('Exponential buckets needs a positive start');\n\t}\n\tif (count < 1) {\n\t\tthrow new Error('Exponential buckets needs a positive count');\n\t}\n\tif (factor <= 1) {\n\t\tthrow new Error('Exponential buckets needs a factor greater than 1');\n\t}\n\tconst buckets = new Array(count);\n\tfor (let i = 0; i < count; i++) {\n\t\tbuckets[i] = start;\n\t\tstart *= factor;\n\t}\n\treturn buckets;\n};\n","'use strict';\n\nfunction safeMemoryUsage() {\n\tlet memoryUsage;\n\ttry {\n\t\tmemoryUsage = process.memoryUsage();\n\t} catch (ex) {\n\t\t// empty\n\t}\n\n\treturn memoryUsage;\n}\n\nmodule.exports = safeMemoryUsage;\n","'use strict';\n\nconst { Grouper, hashObject } = require('./util');\n\n/**\n * Returns a new function that applies the `aggregatorFn` to the values.\n * @param {Function} aggregatorFn function to apply to values.\n * @return {Function} aggregator function\n */\nfunction AggregatorFactory(aggregatorFn) {\n\treturn metrics => {\n\t\tif (metrics.length === 0) return;\n\t\tconst result = {\n\t\t\thelp: metrics[0].help,\n\t\t\tname: metrics[0].name,\n\t\t\ttype: metrics[0].type,\n\t\t\tvalues: [],\n\t\t\taggregator: metrics[0].aggregator\n\t\t};\n\t\t// Gather metrics by metricName and labels.\n\t\tconst byLabels = new Grouper();\n\t\tmetrics.forEach(metric => {\n\t\t\tmetric.values.forEach(value => {\n\t\t\t\tconst key = hashObject(value.labels);\n\t\t\t\tbyLabels.add(`${value.metricName}_${key}`, value);\n\t\t\t});\n\t\t});\n\t\t// Apply aggregator function to gathered metrics.\n\t\tbyLabels.forEach(values => {\n\t\t\tif (values.length === 0) return;\n\t\t\tconst valObj = {\n\t\t\t\tvalue: aggregatorFn(values),\n\t\t\t\tlabels: values[0].labels\n\t\t\t};\n\t\t\tif (values[0].metricName) {\n\t\t\t\tvalObj.metricName = values[0].metricName;\n\t\t\t}\n\t\t\t// NB: Timestamps are omitted.\n\t\t\tresult.values.push(valObj);\n\t\t});\n\t\treturn result;\n\t};\n}\n// Export for users to define their own aggregation methods.\nexports.AggregatorFactory = AggregatorFactory;\n\n/**\n * Functions that can be used to aggregate metrics from multiple registries.\n */\nexports.aggregators = {\n\t/**\n\t * @return The sum of values.\n\t */\n\tsum: AggregatorFactory(v => v.reduce((p, c) => p + c.value, 0)),\n\t/**\n\t * @return The first value.\n\t */\n\tfirst: AggregatorFactory(v => v[0].value),\n\t/**\n\t * @return {undefined} Undefined; omits the metric.\n\t */\n\tomit: () => {},\n\t/**\n\t * @return The arithmetic mean of the values.\n\t */\n\taverage: AggregatorFactory(\n\t\tv => v.reduce((p, c) => p + c.value, 0) / v.length\n\t),\n\t/**\n\t * @return The minimum of the values.\n\t */\n\tmin: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.min(p, c.value), Infinity)\n\t),\n\t/**\n\t * @return The maximum of the values.\n\t */\n\tmax: AggregatorFactory(v =>\n\t\tv.reduce((p, c) => Math.max(p, c.value), -Infinity)\n\t)\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n","'use strict';\n\nconst clientOptions = require('./lib/client-options');\nexports.Client = require('./lib/client');\nexports.ExecutionProfile = require('./lib/execution-profile').ExecutionProfile;\nexports.ExecutionOptions = require('./lib/execution-options').ExecutionOptions;\nexports.types = require('./lib/types');\nexports.errors = require('./lib/errors');\nexports.policies = require('./lib/policies');\nexports.auth = require('./lib/auth');\nexports.mapping = require('./lib/mapping');\nexports.tracker = require('./lib/tracker');\nexports.metrics = require('./lib/metrics');\nexports.concurrent = require('./lib/concurrent');\n\nconst token = require('./lib/token');\nexports.token = {\n  Token: token.Token,\n  TokenRange: token.TokenRange\n};\nconst Metadata = require('./lib/metadata');\nexports.metadata = {\n  Metadata: Metadata\n};\nexports.Encoder = require('./lib/encoder');\n/**\n * Returns a new instance of the default [options]{@link ClientOptions} used by the driver.\n */\nexports.defaultOptions = function () {\n  return clientOptions.defaultOptions();\n};\nexports.version = require('./package.json').version;","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.raw = bodyParser.raw\nexports.static = require('serve-static');\nexports.text = bodyParser.text\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n","/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString\n\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation (callSite) {\n  var fileName\n  var fileLocation = ''\n\n  if (callSite.isNative()) {\n    fileLocation = 'native'\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL()\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin()\n    }\n  } else {\n    fileName = callSite.getFileName()\n  }\n\n  if (fileName) {\n    fileLocation += fileName\n\n    var lineNumber = callSite.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber\n\n      var columnNumber = callSite.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source'\n}\n\n/**\n * Format a CallSite to a string.\n */\n\nfunction callSiteToString (callSite) {\n  var addSuffix = true\n  var fileLocation = callSiteFileLocation(callSite)\n  var functionName = callSite.getFunctionName()\n  var isConstructor = callSite.isConstructor()\n  var isMethodCall = !(callSite.isToplevel() || isConstructor)\n  var line = ''\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName()\n    var typeName = getConstructorName(callSite)\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.'\n      }\n\n      line += functionName\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']'\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>')\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>')\n  } else if (functionName) {\n    line += functionName\n  } else {\n    addSuffix = false\n    line += fileLocation\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')'\n  }\n\n  return line\n}\n\n/**\n * Get constructor name of reviver.\n */\n\nfunction getConstructorName (obj) {\n  var receiver = obj.receiver\n  return (receiver.constructor && receiver.constructor.name) || null\n}\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = eventListenerCount\n\n/**\n * Get the count of listeners on an event emitter of a specific type.\n */\n\nfunction eventListenerCount (emitter, type) {\n  return emitter.listeners(type).length\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.substr(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = str.substring(0, index) + '#'\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  return FIRST_CHAR_REGEXP.exec(str)[1]\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","module.exports = require(\"tty\");","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, done)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","module.exports = require(\"zlib\");","/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    formatter: formats.formatters[formats['default']],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly,\n    charset\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = obj.join(',');\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (isArray(obj)) {\n            pushToArray(values, stringify(\n                obj[key],\n                typeof generateArrayPrefix === 'function' ? generateArrayPrefix(prefix, key) : prefix,\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        } else {\n            pushToArray(values, stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly,\n                charset\n            ));\n        }\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && opts.encoder !== undefined && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder, charset);\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (val && options.comma && val.indexOf(',') > -1) {\n            val = val.split(',');\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new Error('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        depth: typeof opts.depth === 'number' ? opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you dont need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    return this.settings[setting];\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n","/*!\n * finalhandler\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses[status]\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.substr(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 151;","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\nvar toIdentifier = require('toidentifier')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy a stream.\n *\n * @param {object} stream\n * @public\n */\n\nfunction destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream)\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream\n  }\n\n  if (typeof stream.destroy === 'function') {\n    stream.destroy()\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream(stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n\n  return stream\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose() {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n","var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = req.connection.remoteAddress\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n","(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toRFC5952String = function() {\n      var bestMatchIndex, bestMatchLength, match, regex, string;\n      regex = /((^|:)(0(:|$)){2,})/g;\n      string = this.toNormalizedString();\n      bestMatchIndex = 0;\n      bestMatchLength = -1;\n      while ((match = regex.exec(string))) {\n        if (match[0].length > bestMatchLength) {\n          bestMatchIndex = match.index;\n          bestMatchLength = match[0].length;\n        }\n      }\n      if (bestMatchLength < 0) {\n        return string;\n      }\n      return string.substring(0, bestMatchIndex) + '::' + string.substring(bestMatchIndex + bestMatchLength);\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.toFixedLengthString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16).padStart(4, '0'));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the give mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  } else if (host.indexOf(',') !== -1) {\n    // Note: X-Forwarded-Host is normally only ever a\n    //       single value, but this is to be safe.\n    host = host.substring(0, host.indexOf(',')).trimRight()\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n","/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n","/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Cached loaded submodules.\n * @private\n */\n\nvar modules = Object.create(null);\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  var preferredCharsets = loadModule('charset').preferredCharsets;\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  var preferredEncodings = loadModule('encoding').preferredEncodings;\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  var preferredLanguages = loadModule('language').preferredLanguages;\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  var preferredMediaTypes = loadModule('mediaType').preferredMediaTypes;\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n\n/**\n * Load the given module.\n * @private\n */\n\nfunction loadModule(moduleName) {\n  var module = modules[moduleName];\n\n  if (module !== undefined) {\n    return module;\n  }\n\n  // This uses a switch for static require analysis\n  switch (moduleName) {\n    case 'charset':\n      module = require('./lib/charset');\n      break;\n    case 'encoding':\n      module = require('./lib/encoding');\n      break;\n    case 'language':\n      module = require('./lib/language');\n      break;\n    case 'mediaType':\n      module = require('./lib/mediaType');\n      break;\n    default:\n      throw new Error('Cannot find module \\'' + moduleName + '\\'');\n  }\n\n  // Store to prevent invoking require()\n  modules[moduleName] = module;\n\n  return module;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var language = parseLanguage(accepts[i].trim(), i);\n\n    if (language) {\n      accepts[j++] = language;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1],\n    suffix = match[2],\n    full = prefix;\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var j = 0; j < params.length; j++) {\n      var p = params[j].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    // replace chars not allowed in JavaScript that are in JSON\n    body = body\n      .replace(/\\u2028/g, '\\\\u2028')\n      .replace(/\\u2029/g, '\\\\u2029');\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile')\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = resolve(path);\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function(o){ return o.value });\n    next(err);\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n      : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // same as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        /* istanbul ignore next: unreachable default */\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n","/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n","\"use strict\";\nconst dns = require('dns');\nconst util = require('util');\nconst utils = require('../utils');\n/** @module policies/addressResolution */\n/**\n * @class\n * @classdesc\n * Translates IP addresses received from Cassandra nodes into locally queryable\n * addresses.\n * <p>\n * The driver auto-detects new Cassandra nodes added to the cluster through server\n * side pushed notifications and through checking the system tables. For each\n * node, the address received will correspond to the address set as\n * <code>rpc_address</code> in the node yaml file. In most case, this is the correct\n * address to use by the driver and that is what is used by default. However,\n * sometimes the addresses received through this mechanism will either not be\n * reachable directly by the driver or should not be the preferred address to use\n * to reach the node (for instance, the <code>rpc_address</code> set on Cassandra nodes\n * might be a private IP, but some clients  may have to use a public IP, or\n * pass by a router to reach that node). This interface allows to deal with\n * such cases, by allowing to translate an address as sent by a Cassandra node\n * to another address to be used by the driver for connection.\n * <p>\n * Please note that the contact points addresses provided while creating the\n * {@link Client} instance are not \"translated\", only IP address retrieve from or sent\n * by Cassandra nodes to the driver are.\n * @constructor\n */\nfunction AddressTranslator() {\n\n}\n\n/**\n * Translates a Cassandra <code>rpc_address</code> to another address if necessary.\n * @param {String} address the address of a node as returned by Cassandra.\n * <p>\n * Note that if the <code>rpc_address</code> of a node has been configured to <code>0.0.0.0</code>\n * server side, then the provided address will be the node <code>listen_address</code>,\n * *not* <code>0.0.0.0</code>.\n * </p>\n * @param {Number} port The port number, as specified in the [protocolOptions]{@link ClientOptions} at Client instance creation (9042 by default).\n * @param {Function} callback Callback to invoke with endpoint as first parameter.\n * The endpoint is an string composed of the IP address and the port number in the format <code>ipAddress:port</code>.\n */\nAddressTranslator.prototype.translate = function (address, port, callback) {\n  callback(address + ':' + port);\n};\n\n/**\n * @class\n * @classdesc\n * {@link AddressTranslator} implementation for multi-region EC2 deployments <strong>where clients are also deployed in EC2</strong>.\n * <p>\n * Its distinctive feature is that it translates addresses according to the location of the Cassandra host:\n * </p>\n * <ul>\n *  <li>addresses in different EC2 regions (than the client) are unchanged</li>\n *  <li>addresses in the same EC2 region are <strong>translated to private IPs</strong></li>\n * </ul>\n * <p>\n * This optimizes network costs, because Amazon charges more for communication over public IPs.\n * </p>\n * @constructor\n */\nfunction EC2MultiRegionTranslator() {\n\n}\n\nutil.inherits(EC2MultiRegionTranslator, AddressTranslator);\n\n/**\n * Addresses in the same EC2 region are translated to private IPs and addresses in\n * different EC2 regions (than the client) are unchanged\n */\nEC2MultiRegionTranslator.prototype.translate = function (address, port, callback) {\n  let newAddress = address;\n  const self = this;\n  let name;\n  utils.series([\n    function resolve(next) {\n      dns.reverse(address, function (err, hostNames) {\n        if (err) {\n          return next(err);\n        }\n        if (!hostNames) {\n          return next();\n        }\n        name = hostNames[0];\n        next();\n      });\n    },\n    function lookup(next) {\n      if (!name) {\n        return next();\n      }\n      dns.lookup(name, function (err, lookupAddress) {\n        if (err) {\n          return next(err);\n        }\n        newAddress = lookupAddress;\n        next();\n      });\n    }], function (err) {\n    if (err) {\n      //there was an issue while doing dns resolution\n      self.logError(address, err);\n    }\n    callback(newAddress + ':' + port);\n  });\n};\n\n/**\n * Log method called to log errors that occurred while performing dns resolution.\n * You can assign your own method to the class instance to do proper logging.\n * @param {String} address\n * @param {Error} err\n */\nEC2MultiRegionTranslator.prototype.logError = function (address, err) {\n  //Do nothing by default\n};\n\nexports.AddressTranslator = AddressTranslator;\nexports.EC2MultiRegionTranslator = EC2MultiRegionTranslator;","\"use strict\";\n\nconst util = require('util');\nconst types = require('../types');\nconst utils = require('../utils.js');\nconst errors = require('../errors.js');\n\nconst doneIteratorObject = Object.freeze({ done: true });\n\n/** @module policies/loadBalancing */\n/**\n * Base class for Load Balancing Policies\n * @constructor\n */\nfunction LoadBalancingPolicy() {\n\n}\n\n/**\n * Initializes the load balancing policy, called after the driver obtained the information of the cluster.\n * @param {Client} client\n * @param {HostMap} hosts\n * @param {Function} callback\n */\nLoadBalancingPolicy.prototype.init = function (client, hosts, callback) {\n  this.client = client;\n  this.hosts = hosts;\n  callback();\n};\n\n/**\n * Returns the distance assigned by this policy to the provided host.\n * @param {Host} host\n */\nLoadBalancingPolicy.prototype.getDistance = function (host) {\n  return types.distance.local;\n};\n\n/**\n * Returns an iterator with the hosts for a new query.\n * Each new query will call this method. The first host in the result will\n * then be used to perform the query.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nLoadBalancingPolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  callback(new Error('You must implement a query plan for the LoadBalancingPolicy class'));\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nLoadBalancingPolicy.prototype.getOptions = function () {\n  return new Map();\n};\n\n/**\n * This policy yield nodes in a round-robin fashion.\n * @extends LoadBalancingPolicy\n * @constructor\n */\nfunction RoundRobinPolicy() {\n  this.index = 0;\n}\n\nutil.inherits(RoundRobinPolicy, LoadBalancingPolicy);\n\n/**\n * Returns an iterator with the hosts to be used as coordinator for a query.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nRoundRobinPolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  if (!this.hosts) {\n    return callback(new Error('Load balancing policy not initialized'));\n  }\n  const hosts = this.hosts.values();\n  const self = this;\n  let counter = 0;\n\n  let planIndex = self.index % hosts.length;\n  self.index += 1;\n  if (self.index >= utils.maxInt) {\n    self.index = 0;\n  }\n\n  callback(null, {\n    next: function () {\n      if (++counter > hosts.length) {\n        return doneIteratorObject;\n      }\n      return {value: hosts[planIndex++ % hosts.length], done: false};\n    }\n  });\n};\n\n/**\n * A data-center aware Round-robin load balancing policy.\n * This policy provides round-robin queries over the nodes of the local\n * data center.\n * @param {?String} [localDc] local datacenter name.  This value overrides the 'localDataCenter' Client option \\\n * and is useful for cases where you have multiple execution profiles that you intend on using for routing\n * requests to different data centers.\n * @extends {LoadBalancingPolicy}\n * @constructor\n */\nfunction DCAwareRoundRobinPolicy(localDc) {\n  this.localDc = localDc;\n  this.index = 0;\n  /** @type {Array} */\n  this.localHostsArray = null;\n}\n\nutil.inherits(DCAwareRoundRobinPolicy, LoadBalancingPolicy);\n\n/**\n * Initializes the load balancing policy.\n * @param {Client} client\n * @param {HostMap} hosts\n * @param {Function} callback\n */\nDCAwareRoundRobinPolicy.prototype.init = function (client, hosts, callback) {\n  this.client = client;\n  this.hosts = hosts;\n  hosts.on('add', this._cleanHostCache.bind(this));\n  hosts.on('remove', this._cleanHostCache.bind(this));\n\n  if (client && client.options) {\n    if (this.localDc && !client.options.localDataCenter) {\n      this.client.log('info', 'Local data center \\'' + this.localDc + '\\' was provided as an argument to' +\n        ' DCAwareRoundRobinPolicy. It is more preferable to specify the local data center using \\'localDataCenter\\'' +\n        ' in Client options instead when your application is targeting a single data center.');\n    }\n\n    // If localDc is unset, use value set in client options.\n    this.localDc = this.localDc || client.options.localDataCenter;\n  }\n\n  if (!this.localDc) {\n    return callback(new errors.ArgumentError('\\'localDataCenter\\' is not defined in Client options and also was' +\n      ' not specified in constructor. At least one is required.'));\n  }\n  callback();\n};\n\n/**\n * Returns the distance depending on the datacenter.\n * @param {Host} host\n */\nDCAwareRoundRobinPolicy.prototype.getDistance = function (host) {\n  if (!host.datacenter) {\n    return types.distance.ignored;\n  }\n  if (host.datacenter === this.localDc) {\n    return types.distance.local;\n  }\n  return types.distance.remote;\n};\n\nDCAwareRoundRobinPolicy.prototype._cleanHostCache = function () {\n  this.localHostsArray = null;\n};\n\nDCAwareRoundRobinPolicy.prototype._resolveLocalHosts = function() {\n  const hosts = this.hosts.values();\n  if (this.localHostsArray) {\n    //there were already calculated\n    return;\n  }\n  this.localHostsArray = [];\n  hosts.forEach(function (h) {\n    if (!h.datacenter) {\n      //not a remote dc node\n      return;\n    }\n    if (h.datacenter === this.localDc) {\n      this.localHostsArray.push(h);\n    }\n  }, this);\n};\n\n/**\n * It returns an iterator that yields local nodes.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nDCAwareRoundRobinPolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  if (!this.hosts) {\n    return callback(new Error('Load balancing policy not initialized'));\n  }\n  this.index += 1;\n  if (this.index >= utils.maxInt) {\n    this.index = 0;\n  }\n  this._resolveLocalHosts();\n  // Use a local reference of hosts\n  const localHostsArray = this.localHostsArray;\n  let planLocalIndex = this.index;\n  let counter = 0;\n  callback(null, {\n    next: function () {\n      let host;\n      if (counter++ < localHostsArray.length) {\n        host = localHostsArray[planLocalIndex++ % localHostsArray.length];\n        return { value: host, done: false };\n      }\n      return doneIteratorObject;\n    }\n  });\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nDCAwareRoundRobinPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['localDataCenter', this.localDc ]\n  ]);\n};\n\n/**\n * A wrapper load balancing policy that add token awareness to a child policy.\n * @param {LoadBalancingPolicy} childPolicy\n * @extends LoadBalancingPolicy\n * @constructor\n */\nfunction TokenAwarePolicy (childPolicy) {\n  if (!childPolicy) {\n    throw new Error(\"You must specify a child load balancing policy\");\n  }\n  this.childPolicy = childPolicy;\n}\n\nutil.inherits(TokenAwarePolicy, LoadBalancingPolicy);\n\nTokenAwarePolicy.prototype.init = function (client, hosts, callback) {\n  this.client = client;\n  this.hosts = hosts;\n  this.childPolicy.init(client, hosts, callback);\n};\n\nTokenAwarePolicy.prototype.getDistance = function (host) {\n  return this.childPolicy.getDistance(host);\n};\n\n/**\n * Returns the hosts to use for a new query.\n * The returned plan will return local replicas first, if replicas can be determined, followed by the plan of the\n * child policy.\n * @param {String} keyspace Name of currently logged keyspace at <code>Client</code> level.\n * @param {ExecutionOptions|null} executionOptions The information related to the execution of the request.\n * @param {Function} callback The function to be invoked with the error as first parameter and the host iterator as\n * second parameter.\n */\nTokenAwarePolicy.prototype.newQueryPlan = function (keyspace, executionOptions, callback) {\n  let routingKey;\n  if (executionOptions) {\n    routingKey = executionOptions.getRoutingKey();\n    if (executionOptions.getKeyspace()) {\n      keyspace = executionOptions.getKeyspace();\n    }\n  }\n  let replicas;\n  if (routingKey) {\n    replicas = this.client.getReplicas(keyspace, routingKey);\n  }\n  if (!routingKey || !replicas) {\n    return this.childPolicy.newQueryPlan(keyspace, executionOptions, callback);\n  }\n  const iterator = new TokenAwareIterator(keyspace, executionOptions, replicas, this.childPolicy);\n  iterator.iterate(callback);\n};\n\n/**\n * An iterator that holds the context for the subsequent next() calls\n * @param {String} keyspace\n * @param {ExecutionOptions} execOptions\n * @param {Array} replicas\n * @param childPolicy\n * @constructor\n * @ignore\n */\nfunction TokenAwareIterator(keyspace, execOptions, replicas, childPolicy) {\n  this.keyspace = keyspace;\n  this.childPolicy = childPolicy;\n  this.options = execOptions;\n  this.localReplicas = [];\n  this.replicaIndex = 0;\n  this.replicaMap = {};\n  this.childIterator = null;\n  // Memoize the local replicas\n  // The amount of local replicas should be defined before start iterating, in order to select an\n  // appropriate (pseudo random) startIndex\n  for (let i = 0; i < replicas.length; i++) {\n    const host = replicas[i];\n    if (this.childPolicy.getDistance(host) !== types.distance.local) {\n      continue;\n    }\n    this.replicaMap[host.address] = true;\n    this.localReplicas.push(host);\n  }\n  // We use a PRNG to set the replica index\n  // We only care about proportional fair scheduling between replicas of a given token\n  // Math.random() has an extremely short permutation cycle length but we don't care about collisions\n  this.startIndex = Math.floor(Math.random() * this.localReplicas.length);\n}\n\nTokenAwareIterator.prototype.iterate = function (callback) {\n  //Load the child policy hosts\n  const self = this;\n  this.childPolicy.newQueryPlan(this.keyspace, this.options, function (err, iterator) {\n    if (err) {\n      return callback(err);\n    }\n    //get the iterator of the child policy in case is needed\n    self.childIterator = iterator;\n    callback(null, {\n      next: function () { return self.computeNext(); }\n    });\n  });\n};\n\nTokenAwareIterator.prototype.computeNext = function () {\n  let host;\n  if (this.replicaIndex < this.localReplicas.length) {\n    host = this.localReplicas[(this.startIndex + (this.replicaIndex++)) % this.localReplicas.length];\n    return { value: host, done: false };\n  }\n  // Return hosts from child policy\n  let item;\n  while ((item = this.childIterator.next()) && !item.done) {\n    if (this.replicaMap[item.value.address]) {\n      // Avoid yielding local replicas from the child load balancing policy query plan\n      continue;\n    }\n    return item;\n  }\n  return doneIteratorObject;\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nTokenAwarePolicy.prototype.getOptions = function () {\n  const map = new Map([\n    ['childPolicy', this.childPolicy.constructor !== undefined ? this.childPolicy.constructor.name : null ]\n  ]);\n\n  if (this.childPolicy instanceof DCAwareRoundRobinPolicy) {\n    map.set('localDataCenter', this.childPolicy.localDc);\n  }\n\n  return map;\n};\n\n/**\n * Create a new policy that wraps the provided child policy but only \"allow\" hosts\n * from the provided while list.\n * @class\n * @classdesc\n * A load balancing policy wrapper that ensure that only hosts from a provided\n * white list will ever be returned.\n * <p>\n * This policy wraps another load balancing policy and will delegate the choice\n * of hosts to the wrapped policy with the exception that only hosts contained\n * in the white list provided when constructing this policy will ever be\n * returned. Any host not in the while list will be considered ignored\n * and thus will not be connected to.\n * <p>\n * This policy can be useful to ensure that the driver only connects to a\n * predefined set of hosts. Keep in mind however that this policy defeats\n * somewhat the host auto-detection of the driver. As such, this policy is only\n * useful in a few special cases or for testing, but is not optimal in general.\n * If all you want to do is limiting connections to hosts of the local\n * data-center then you should use DCAwareRoundRobinPolicy and *not* this policy\n * in particular.\n * @param {LoadBalancingPolicy} childPolicy the wrapped policy.\n * @param {Array.<string>}  whiteList the white listed hosts address in the format ipAddress:port.\n * Only hosts from this list may get connected\n * to (whether they will get connected to or not depends on the child policy).\n * @extends LoadBalancingPolicy\n * @constructor\n */\nfunction WhiteListPolicy (childPolicy, whiteList) {\n  if (!childPolicy) {\n    throw new Error(\"You must specify a child load balancing policy\");\n  }\n  if (!util.isArray(whiteList)) {\n    throw new Error(\"You must provide the white list of host addresses\");\n  }\n  this.childPolicy = childPolicy;\n  const map = {};\n  whiteList.forEach(function (address) {\n    map[address] = true;\n  });\n  this.whiteList = map;\n}\n\nutil.inherits(WhiteListPolicy, LoadBalancingPolicy);\n\nWhiteListPolicy.prototype.init = function (client, hosts, callback) {\n  this.childPolicy.init(client, hosts, callback);\n};\n\n/**\n * Uses the child policy to return the distance to the host if included in the white list.\n * Any host not in the while list will be considered ignored.\n * @param host\n */\nWhiteListPolicy.prototype.getDistance = function (host) {\n  if (!this._contains(host)) {\n    return types.distance.ignored;\n  }\n  return this.childPolicy.getDistance(host);\n};\n\n/**\n * @param {Host} host\n * @returns {boolean}\n * @private\n */\nWhiteListPolicy.prototype._contains = function (host) {\n  return !!this.whiteList[host.address];\n};\n\n/**\n * Returns the hosts to use for a new query filtered by the white list.\n */\nWhiteListPolicy.prototype.newQueryPlan = function (keyspace, info, callback) {\n  const self = this;\n  this.childPolicy.newQueryPlan(keyspace, info, function (err, iterator) {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, self._filter(iterator));\n  });\n};\n\nWhiteListPolicy.prototype._filter = function (childIterator) {\n  const self = this;\n  return {\n    next: function () {\n      const item = childIterator.next();\n      if (!item.done && !self._contains(item.value)) {\n        return this.next();\n      }\n      return item;\n    }\n  };\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nWhiteListPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['childPolicy', this.childPolicy.constructor !== undefined ? this.childPolicy.constructor.name : null ],\n    ['whitelist', Object.keys(this.whiteList)]\n  ]);\n};\n\nexports.DCAwareRoundRobinPolicy = DCAwareRoundRobinPolicy;\nexports.LoadBalancingPolicy = LoadBalancingPolicy;\nexports.RoundRobinPolicy = RoundRobinPolicy;\nexports.TokenAwarePolicy = TokenAwarePolicy;\nexports.WhiteListPolicy = WhiteListPolicy;","'use strict';\nconst util = require('util');\nconst crypto = require('crypto');\nconst Long = require('long');\n\nconst Uuid = require('./uuid');\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Oct 15, 1582 in milliseconds since unix epoch\n * @const\n * @private\n */\nconst _unixToGregorian = 12219292800000;\n/**\n * 10,000 ticks in a millisecond\n * @const\n * @private\n */\nconst _ticksInMs = 10000;\n\nconst minNodeId = utils.allocBufferFromString('808080808080', 'hex');\nconst minClockId = utils.allocBufferFromString('8080', 'hex');\nconst maxNodeId = utils.allocBufferFromString('7f7f7f7f7f7f', 'hex');\nconst maxClockId = utils.allocBufferFromString('7f7f', 'hex');\n\n/**\n * Counter used to generate up to 10000 different timeuuid values with the same Date\n * @private\n * @type {number}\n */\nlet _ticks = 0;\n/**\n * Counter used to generate ticks for the current time\n * @private\n * @type {number}\n */\nlet _ticksForCurrentTime = 0;\n/**\n * Remember the last time when a ticks for the current time so that it can be reset\n * @private\n * @type {number}\n */\nlet _lastTimestamp = 0;\n\n/**\n * Creates a new instance of Uuid based on the parameters provided according to rfc4122.\n * If any of the arguments is not provided, it will be randomly generated, except for the date that will use the current\n * date.\n * <p>\n *   Note that when nodeId and/or clockId portions are not provided, the constructor will generate them using\n *   <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's\n *   recommended that you use the callback-based version of the static methods <code>fromDate()</code> or\n *   <code>now()</code> in that case.\n * </p>\n * @class\n * @classdesc Represents an immutable version 1 universally unique identifier (UUID). A UUID represents a 128-bit value.\n * <p>Usage: <code>TimeUuid.now()</code></p>\n * @extends module:types~Uuid\n * @param {Date} [value] The datetime for the instance, if not provided, it will use the current Date.\n * @param {Number} [ticks] A number from 0 to 10000 representing the 100-nanoseconds units for this instance to fill in the information not available in the Date,\n * as Ecmascript Dates have only milliseconds precision.\n * @param {String|Buffer} [nodeId] A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n * @param {String|Buffer} [clockId] A 2-length Buffer or string of 6 ascii characters representing the clock identifier.\n * @constructor\n */\nfunction TimeUuid(value, ticks, nodeId, clockId) {\n  let buffer;\n  if (value instanceof Buffer) {\n    if (value.length !== 16) {\n      throw new Error('Buffer for v1 uuid not valid');\n    }\n    buffer = value;\n  }\n  else {\n    buffer = generateBuffer(value, ticks, nodeId, clockId);\n  }\n  Uuid.call(this, buffer);\n}\n\nutil.inherits(TimeUuid, Uuid);\n\n/**\n * Generates a TimeUuid instance based on the Date provided using random node and clock values.\n * @param {Date} date Date to generate the v1 uuid.\n * @param {Number} [ticks] A number from 0 to 10000 representing the 100-nanoseconds units for this instance to fill in the information not available in the Date,\n * as Ecmascript Dates have only milliseconds precision.\n * @param {String|Buffer} [nodeId] A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n * If not provided, a random nodeId will be generated.\n * @param {String|Buffer} [clockId] A 2-length Buffer or string of 6 ascii characters representing the clock identifier.\n * If not provided a random clockId will be generated.\n * @param {Function} [callback] An optional callback to be invoked with the error as first parameter and the created\n * <code>TimeUuid</code> as second parameter. When a callback is provided, the random portions of the\n * <code>TimeUuid</code> instance are created asynchronously.\n * <p>\n *   When nodeId and/or clockId portions are not provided, this method will generate them using\n *   <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's\n *   recommended that you use the callback-based version of this method in that case.\n * </p>\n * @example <caption>Generate a TimeUuid from a ECMAScript Date</caption>\n * const timeuuid = TimeUuid.fromDate(new Date());\n * @example <caption>Generate a TimeUuid from a Date with ticks portion</caption>\n * const timeuuid = TimeUuid.fromDate(new Date(), 1203);\n * @example <caption>Generate a TimeUuid from a Date without any random portion</caption>\n * const timeuuid = TimeUuid.fromDate(new Date(), 1203, 'host01', '02');\n * @example <caption>Generate a TimeUuid from a Date with random node and clock identifiers</caption>\n * TimeUuid.fromDate(new Date(), 1203, function (err, timeuuid) {\n *   // do something with the generated timeuuid\n * });\n */\nTimeUuid.fromDate = function (date, ticks, nodeId, clockId, callback) {\n  if (typeof ticks === 'function') {\n    callback = ticks;\n    ticks = nodeId = clockId = null;\n  } else if (typeof nodeId === 'function') {\n    callback = nodeId;\n    nodeId = clockId = null;\n  } else if (typeof clockId === 'function') {\n    callback = clockId;\n    clockId = null;\n  }\n\n  if (!callback) {\n    return new TimeUuid(date, ticks, nodeId, clockId);\n  }\n\n  utils.parallel([\n    next => getOrGenerateRandom(nodeId, 6, (err, buffer) => next(err, nodeId = buffer)),\n    next => getOrGenerateRandom(clockId, 2, (err, buffer) => next(err, clockId = buffer)),\n  ], (err) => {\n    if (err) {\n      return callback(err);\n    }\n\n    let timeUuid;\n    try {\n      timeUuid = new TimeUuid(date, ticks, nodeId, clockId);\n    }\n    catch (e) {\n      return callback(e);\n    }\n\n    callback(null, timeUuid);\n  });\n};\n\n/**\n * Parses a string representation of a TimeUuid\n * @param {String} value\n * @returns {TimeUuid}\n */\nTimeUuid.fromString = function (value) {\n  return new TimeUuid(Uuid.fromString(value).getBuffer());\n};\n\n/**\n * Returns the smaller possible type 1 uuid with the provided Date.\n */\nTimeUuid.min = function (date, ticks) {\n  return new TimeUuid(date, ticks, minNodeId, minClockId);\n};\n\n/**\n * Returns the biggest possible type 1 uuid with the provided Date.\n */\nTimeUuid.max = function (date, ticks) {\n  return new TimeUuid(date, ticks, maxNodeId, maxClockId);\n};\n\n/**\n * Generates a TimeUuid instance based on the current date using random node and clock values.\n * @param {String|Buffer} [nodeId] A 6-length Buffer or string of 6 ascii characters representing the node identifier, ie: 'host01'.\n * If not provided, a random nodeId will be generated.\n * @param {String|Buffer} [clockId] A 2-length Buffer or string of 6 ascii characters representing the clock identifier.\n * If not provided a random clockId will be generated.\n * @param {Function} [callback] An optional callback to be invoked with the error as first parameter and the created\n * <code>TimeUuid</code> as second parameter. When a callback is provided, the random portions of the\n * <code>TimeUuid</code> instance are created asynchronously.\n * <p>\n *   When nodeId and/or clockId portions are not provided, this method will generate them using\n *   <code>crypto.randomBytes()</code>. As it's possible that <code>crypto.randomBytes()</code> might block, it's\n *   recommended that you use the callback-based version of this method in that case.\n * </p>\n * @example <caption>Generate a TimeUuid from a Date without any random portion</caption>\n * const timeuuid = TimeUuid.now('host01', '02');\n * @example <caption>Generate a TimeUuid with random node and clock identifiers</caption>\n * TimeUuid.now(function (err, timeuuid) {\n *   // do something with the generated timeuuid\n * });\n * @example <caption>Generate a TimeUuid based on the current date (might block)</caption>\n * const timeuuid = TimeUuid.now();\n */\nTimeUuid.now = function (nodeId, clockId, callback) {\n  return TimeUuid.fromDate(null, null, nodeId, clockId, callback);\n};\n\n\n/**\n * Gets the Date and 100-nanoseconds units representation of this instance.\n * @returns {{date: Date, ticks: Number}}\n */\nTimeUuid.prototype.getDatePrecision = function () {\n  const timeLow = this.buffer.readUInt32BE(0);\n\n  let timeHigh = 0;\n  timeHigh |= ( this.buffer[4] & 0xff ) << 8;\n  timeHigh |= this.buffer[5] & 0xff;\n  timeHigh |= ( this.buffer[6] & 0x0f ) << 24;\n  timeHigh |= ( this.buffer[7] & 0xff ) << 16;\n\n  const val = Long.fromBits(timeLow, timeHigh);\n  const ticksInMsLong = Long.fromNumber(_ticksInMs);\n  const ticks = val.modulo(ticksInMsLong);\n  const time = val\n    .div(ticksInMsLong)\n    .subtract(Long.fromNumber(_unixToGregorian));\n  return { date: new Date(time.toNumber()), ticks: ticks.toNumber()};\n};\n\n/**\n * Gets the Date representation of this instance.\n * @returns {Date}\n */\nTimeUuid.prototype.getDate = function () {\n  return this.getDatePrecision().date;\n};\n\n/**\n * Returns the node id this instance\n * @returns {Buffer}\n */\nTimeUuid.prototype.getNodeId = function () {\n  return this.buffer.slice(10);\n};\n\n/**\n * Returns the clock id this instance, with the variant applied (first 2 msb being 1 and 0).\n * @returns {Buffer}\n */\nTimeUuid.prototype.getClockId = function () {\n  return this.buffer.slice(8, 10);\n};\n\n/**\n * Returns the node id this instance as an ascii string\n * @returns {String}\n */\nTimeUuid.prototype.getNodeIdString = function () {\n  return this.buffer.slice(10).toString('ascii');\n};\n\nfunction writeTime(buffer, time, ticks) {\n  //value time expressed in ticks precision\n  const val = Long\n    .fromNumber(time + _unixToGregorian)\n    .multiply(Long.fromNumber(10000))\n    .add(Long.fromNumber(ticks));\n  const timeHigh = val.getHighBitsUnsigned();\n  buffer.writeUInt32BE(val.getLowBitsUnsigned(), 0);\n  buffer.writeUInt16BE(timeHigh & 0xffff, 4);\n  buffer.writeUInt16BE(timeHigh >>> 16 & 0xffff, 6);\n}\n\n/**\n * Returns a buffer of length 2 representing the clock identifier\n * @param {String|Buffer} clockId\n * @returns {Buffer}\n * @private\n */\nfunction getClockId(clockId) {\n  let buffer = clockId;\n  if (typeof clockId === 'string') {\n    buffer = utils.allocBufferFromString(clockId, 'ascii');\n  }\n  if (!(buffer instanceof Buffer)) {\n    //Generate\n    buffer = getRandomBytes(2);\n  }\n  else if (buffer.length !== 2) {\n    throw new Error('Clock identifier must have 2 bytes');\n  }\n  return buffer;\n}\n\n/**\n * Returns a buffer of length 6 representing the clock identifier\n * @param {String|Buffer} nodeId\n * @returns {Buffer}\n * @private\n */\nfunction getNodeId(nodeId) {\n  let buffer = nodeId;\n  if (typeof nodeId === 'string') {\n    buffer = utils.allocBufferFromString(nodeId, 'ascii');\n  }\n  if (!(buffer instanceof Buffer)) {\n    //Generate\n    buffer = getRandomBytes(6);\n  }\n  else if (buffer.length !== 6) {\n    throw new Error('Node identifier must have 6 bytes');\n  }\n  return buffer;\n}\n\n/**\n * Returns the ticks portion of a timestamp.  If the ticks are not provided an internal counter is used that gets reset at 10000.\n * @private\n * @param {Number} [ticks] \n * @returns {Number} \n */\nfunction getTicks(ticks) {\n  if (typeof ticks !== 'number'|| ticks >= _ticksInMs) {\n    _ticks++;\n    if (_ticks >= _ticksInMs) {\n      _ticks = 0;\n    }\n    ticks = _ticks;\n  }\n  return ticks;\n}\n\n/**\n * Returns an object with the time representation of the date expressed in milliseconds since unix epoch \n * and a ticks property for the 100-nanoseconds precision.\n * @private\n * @returns {{time: Number, ticks: Number}} \n */\nfunction getTimeWithTicks(date, ticks) {\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    // time with ticks for the current time\n    date = new Date();\n    const time = date.getTime();\n    _ticksForCurrentTime++;\n    if(_ticksForCurrentTime > _ticksInMs || time > _lastTimestamp) {\n      _ticksForCurrentTime = 0;\n      _lastTimestamp = time;\n    }\n    ticks = _ticksForCurrentTime;\n  }\n  return {\n    time: date.getTime(),\n    ticks: getTicks(ticks)\n  };\n}\n\nfunction getRandomBytes(length) {\n  return crypto.randomBytes(length);\n}\n\nfunction getOrGenerateRandom(id, length, callback) {\n  if (id) {\n    return callback(null, id);\n  }\n  crypto.randomBytes(length, callback);\n}\n\n/**\n * Generates a 16-length Buffer instance\n * @private\n * @param {Date} date\n * @param {Number} ticks\n * @param {String|Buffer} nodeId\n * @param {String|Buffer} clockId\n * @returns {Buffer}\n */\nfunction generateBuffer(date, ticks, nodeId, clockId) {\n  const timeWithTicks = getTimeWithTicks(date, ticks);\n  nodeId = getNodeId(nodeId);\n  clockId = getClockId(clockId);\n  const buffer = utils.allocBufferUnsafe(16);\n  //Positions 0-7 Timestamp\n  writeTime(buffer, timeWithTicks.time, timeWithTicks.ticks);\n  //Position 8-9 Clock\n  clockId.copy(buffer, 8, 0);\n  //Positions 10-15 Node\n  nodeId.copy(buffer, 10, 0);\n  //Version Byte: Time based\n  //0001xxxx\n  //turn off first 4 bits\n  buffer[6] = buffer[6] & 0x0f;\n  //turn on fifth bit\n  buffer[6] = buffer[6] | 0x10;\n\n  //IETF Variant Byte: 1.0.x\n  //10xxxxxx\n  //turn off first 2 bits\n  buffer[8] = buffer[8] & 0x3f;\n  //turn on first bit\n  buffer[8] = buffer[8] | 0x80;\n  return buffer;\n}\n\nmodule.exports = TimeUuid;","'use strict';\n\nconst utils = require('../utils');\nconst VersionNumber = require('./version-number');\nconst v200 = VersionNumber.parse('2.0.0');\nconst v210 = VersionNumber.parse('2.1.0');\nconst v220 = VersionNumber.parse('2.2.0');\nconst v300 = VersionNumber.parse('3.0.0');\n\n/**\n * Contains information for the different protocol versions supported by the driver.\n * @type {Object}\n * @property {Number} v1 Cassandra protocol v1, supported in Apache Cassandra 1.2-->2.2.\n * @property {Number} v2 Cassandra protocol v2, supported in Apache Cassandra 2.0-->2.2.\n * @property {Number} v3 Cassandra protocol v3, supported in Apache Cassandra 2.1-->3.x.\n * @property {Number} v4 Cassandra protocol v4, supported in Apache Cassandra 2.2-->3.x.\n * @property {Number} v5 Cassandra protocol v5, in beta from Apache Cassandra 3.x+. Currently not supported by the\n * driver.\n * @property {Number} maxSupported Returns the higher protocol version that is supported by this driver.\n * @property {Number} minSupported Returns the lower protocol version that is supported by this driver.\n * @property {Function} isSupported A function that returns a boolean determining whether a given protocol version\n * is supported.\n * @alias module:types~protocolVersion\n */\nconst protocolVersion = {\n  // Strict equality operators to compare versions are allowed, other comparison operators are discouraged. Instead,\n  // use a function that checks if a functionality is present on a certain version, for maintainability purposes.\n  v1: 0x01,\n  v2: 0x02,\n  v3: 0x03,\n  v4: 0x04,\n  v5: 0x05,\n  maxSupported: 0x04,\n  minSupported: 0x01,\n  isSupported: function (version) {\n    return (version <= 0x04 && version >= 0x01);\n  },\n  /**\n   * Determines whether the protocol supports partition key indexes in the `prepared` RESULT responses.\n   * @param {Number} version\n   * @returns {Boolean}\n   * @ignore\n   */\n  supportsPreparedPartitionKey: function (version) {\n    return (version >= this.v4);\n  },\n  /**\n   * Determines whether the protocol supports up to 4 strings (ie: change_type, target, keyspace and table) in the\n   * schema change responses.\n   * @param version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsSchemaChangeFullMetadata: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the protocol supports paging state and serial consistency parameters in QUERY and EXECUTE\n   * requests.\n   * @param version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsPaging: function (version) {\n    return (version >= this.v2);\n  },\n  /**\n   * Determines whether the protocol supports timestamps parameters in BATCH, QUERY and EXECUTE requests.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsTimestamp: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the protocol supports named parameters in QUERY and EXECUTE requests.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsNamedParameters: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the protocol supports unset parameters.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  supportsUnset: function (version) {\n    return (version >= this.v4);\n  },\n  /**\n   * Determines whether the protocol supports timestamp and serial consistency parameters in BATCH requests.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  uses2BytesStreamIds: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Determines whether the collection length is encoded using 32 bits.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  uses4BytesCollectionLength: function (version) {\n    return (version >= this.v3);\n  },\n  /**\n   * Startup responses using protocol v4+ can be a SERVER_ERROR wrapping a ProtocolException, this method returns true\n   * when is possible to receive such error.\n   * @param {Number} version\n   * @return {boolean}\n   * @ignore\n   */\n  canStartupResponseErrorBeWrapped: function (version) {\n    return (version >= this.v4);\n  },\n  /**\n   * Gets the first version number that is supported, lower than the one provided.\n   * Returns zero when there isn't a lower supported version.\n   * @param {Number} version\n   * @return {Number}\n   * @ignore\n   */\n  getLowerSupported: function (version) {\n    if (version >= this.v5) {\n      return this.v4;\n    }\n    if (version <= this.v1) {\n      return 0;\n    }\n    return version - 1;\n  },\n\n  /**\n   * Computes the highest supported protocol version collectively by the given hosts.\n   *\n   * Considers the cassandra_version of the input hosts to determine what protocol versions\n   * are supported and uses the highest common protocol version among them.\n   *\n   * If hosts >= C* 3.0 are detected, any hosts older than C* 2.1 will not be considered\n   * as those cannot be connected to.  In general this will not be a problem as C* does\n   * not support clusters with nodes that have versions that are more than one major\n   * version away from each other.\n   * @param {Connection} connection Connection hosts were discovered from.\n   * @param {Array.<Host>} hosts The hosts to determine highest protocol version from.\n   * @return {Number} Highest supported protocol version among hosts.\n   */\n  getHighestCommon: function(connection, hosts) {\n    const log = connection.log ? connection.log.bind(connection) : utils.noop;\n    let maxVersion = connection.protocolVersion;\n    // whether or not protocol v3 is required (nodes detected that don't support < 3).\n    let v3Requirement = false;\n    // track the common protocol version >= v3 in case we encounter older versions.\n    let maxVersionWith3OrMore = maxVersion;\n    hosts.forEach(h => {\n      if (!h.cassandraVersion || h.cassandraVersion.length === 0) {\n        log('warning', 'Encountered host ' + h.address + ' with no cassandra version,' +\n          ' skipping as part of protocol version evaluation');\n        return;\n      }\n\n      try {\n        const cassandraVersion = VersionNumber.parse(h.cassandraVersion);\n        log('verbose', 'Encountered host ' + h.address + ' with cassandra version ' + cassandraVersion);\n        if (cassandraVersion.compare(v300) >= 0) {\n          // Anything 3.0.0+ has a max protocol version of V4 and requires at least V3.\n          v3Requirement = true;\n          maxVersion = Math.min(this.v4, maxVersion);\n          maxVersionWith3OrMore = maxVersion;\n        } else if (cassandraVersion.compare(v220) >= 0) {\n          // Cassandra 2.2.x has a max protocol version of V4.\n          maxVersion = Math.min(this.v4, maxVersion);\n          maxVersionWith3OrMore = maxVersion;\n        } else if (cassandraVersion.compare(v210) >= 0) {\n          // Cassandra 2.1.x has a max protocol version of V3.\n          maxVersion = Math.min(this.v3, maxVersion);\n          maxVersionWith3OrMore = maxVersion;\n        } else if (cassandraVersion.compare(v200) >= 0) {\n          // Cassandra 2.0.x has a max protocol version of V2.\n          maxVersion = Math.min(this.v2, maxVersion);\n        } else {\n          // Anything else is < 2.x and requires protocol version V1.\n          maxVersion = this.v1;\n        }\n      } catch (e) {\n        log('warning', 'Encountered host ' + h.address + ' with unparseable cassandra version ' + h.cassandraVersion\n          + ' skipping as part of protocol version evaluation');\n      }\n    });\n\n    if (v3Requirement && maxVersion < this.v3) {\n      const addendum = '. This should not be possible as nodes within a cluster can\\'t be separated by more than one major version';\n      if (maxVersionWith3OrMore < this.v3) {\n        log('error', 'Detected hosts that require at least protocol version 0x3, but currently connected to '\n         + connection.address + ':' + connection.port + ' using protocol version 0x' + maxVersionWith3OrMore\n         + '. Will not be able to connect to these hosts' + addendum);\n      } else {\n        log('error', 'Detected hosts with maximum protocol version of 0x' + maxVersion.toString(16)\n          + ' but there are some hosts that require at least version 0x3. Will not be able to connect to these older hosts'\n          + addendum);\n      }\n      maxVersion = maxVersionWith3OrMore;\n    }\n\n    log('verbose', 'Resolved protocol version 0x' + maxVersion.toString(16) + ' as the highest common protocol version among hosts');\n    return maxVersion;\n  }\n};\n\nmodule.exports = protocolVersion;","'use strict';\n\nconst _versionPattern = /(\\d+)\\.(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+)?)?(?:[-~]([\\w+]*(?:-\\w[.\\w]*)*))?(?:\\+([.\\w]+))?/;\n\n/**\n * Represents a version number in the form of X.Y.Z with optional pre-release and build metadata.\n *\n * Version numbers compare the usual way, the major version number (X) is compared first, then\n * the minor one (Y) and then the patch level one (Z).  If pre-release or other build metadata\n * is present for a version, that version is considered less than an otherwise equivalent version\n * that doesn't have these labels, otherwise they are considered equal.\n *\n * As of initial implementation versions are only compared against those with at most patch versions\n * more refined comparisons are not needed.\n *\n * @property {Number} major The major version, X of X.Y.Z.\n * @property {Number} minor The minor version, Y of X.Y.Z.\n * @property {Number} patch The patch version, Z of X.Y.Z.\n * @property {Number} dsePatch The dsePatch version, A of X.Y.Z.A or undefined if not present.\n * @property {String[]} preReleases Prerelease indicators if present, i.e. SNAPSHOT of X.Y.Z-SNAPSHOT.\n * @property {String} build Build string if present, i.e. build1 of X.Y.Z+build1.\n *\n * @ignore\n */\nclass VersionNumber {\n  constructor(major, minor, patch, dsePatch, preReleases, build) {\n    this.major = major;\n    this.minor = minor;\n    this.patch = patch;\n    this.dsePatch = dsePatch;\n    this.preReleases = preReleases;\n    this.build = build;\n  }\n\n  /**\n   * @return {String} String representation of this version.\n   */\n  toString() {\n    let str = this.major + '.' + this.minor;\n    if (this.patch !== undefined) {\n      str += '.' + this.patch;\n    }\n    if (this.dsePatch !== undefined) {\n      str += '.' + this.dsePatch;\n    }\n    if (this.preReleases !== undefined) {\n      this.preReleases.forEach((preRelease) => {\n        str += '-' + preRelease;\n      });\n    }\n    if (this.build) {\n      str += '+' + this.build;\n    }\n    return str;\n  }\n\n  /**\n   * Compares this version with the provided version. \n   * @param {VersionNumber} other \n   * @return {Number} -1 if less than other, 0 if equal, 1 if greater than.\n   */\n  compare(other) {\n    if (this.major < other.major) {\n      return -1;\n    } else if (this.major > other.major) {\n      return 1;\n    } else if (this.minor < other.minor) {\n      return -1;\n    } else if (this.minor > other.minor) {\n      return 1;\n    }\n\n    // sanitize patch by setting to 0 if undefined.\n    const thisPatch = this.patch || 0;\n    const otherPatch = other.patch || 0;\n    if (thisPatch < otherPatch) {\n      return -1;\n    } else if (thisPatch > otherPatch) {\n      return 1;\n    }\n\n    // if dsePatch is set in one case, but not other, consider the one where it is set as greater.\n    if (this.dsePatch === undefined) {\n      if (other.dsePatch !== undefined) {\n        return -1;\n      }\n    } else if (other.dsePatch === undefined) {\n      return 1;\n    } else {\n      if (this.dsePatch < other.dsePatch) {\n        return -1;\n      } else if (this.dsePatch > other.dsePatch) {\n        return 1;\n      }\n    }\n\n    // If prereleases are present, consider less than those that don't have any.\n    if (this.preReleases === undefined) {\n      if (other.preReleases !== undefined) {\n        return 1;\n      }\n    } else if (other.preReleases === undefined) {\n      return -1;\n    }\n   \n    // Don't consider build.\n    return 0;\n  }\n\n  static parse(version) {\n    if (!version) {\n      return null;\n    }\n\n    const match = version.match(_versionPattern);\n    if (match) {\n      const major = parseInt(match[1], 10);\n      const minor = parseInt(match[2], 10);\n      const patch = match[3] ? parseInt(match[3], 10) : undefined;\n      const dsePatch = match[4] ? parseInt(match[4], 10) : undefined;\n      const preReleases = match[5] ? match[5].split('-') : undefined;\n      const build = match[6];\n      return new VersionNumber(major, minor, patch, dsePatch, preReleases, build);\n    }\n    throw new TypeError('Could not extract version from \\'' + version + '\\'');\n  }\n}\n\nmodule.exports = VersionNumber;","'use strict';\nconst Integer = require('./integer');\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Constructs an immutable arbitrary-precision signed decimal number.\n * A <code>BigDecimal</code> consists of an [arbitrary precision integer]{@link module:types~Integer}\n * <i>unscaled value</i> and a 32-bit integer <i>scale</i>.  If zero\n * or positive, the scale is the number of digits to the right of the\n * decimal point.  If negative, the unscaled value of the number is\n * multiplied by ten to the power of the negation of the scale.  The\n * value of the number represented by the <code>BigDecimal</code> is\n * therefore <tt>(unscaledValue &times; 10<sup>-scale</sup>)</tt>.\n * @class\n * @classdesc The <code>BigDecimal</code> class provides operations for\n * arithmetic, scale manipulation, rounding, comparison and\n * format conversion.  The {@link #toString} method provides a\n * canonical representation of a <code>BigDecimal</code>.\n * @param {Integer|Number} unscaledValue The integer part of the decimal.\n * @param {Number} scale The scale of the decimal.\n * @constructor\n */\nfunction BigDecimal(unscaledValue, scale) {\n  if (typeof unscaledValue === 'number') {\n    unscaledValue = Integer.fromNumber(unscaledValue);\n  }\n  /**\n   * @type {Integer}\n   * @private\n   */\n  this._intVal = unscaledValue;\n  /**\n   * @type {Number}\n   * @private\n   */\n  this._scale = scale;\n}\n\n/**\n * Returns the BigDecimal representation of a buffer composed of the scale (int32BE) and the unsigned value (varint BE)\n * @param {Buffer} buf\n * @returns {BigDecimal}\n */\nBigDecimal.fromBuffer = function (buf) {\n  const scale = buf.readInt32BE(0);\n  const unscaledValue = Integer.fromBuffer(buf.slice(4));\n  return new BigDecimal(unscaledValue, scale);\n};\n\n/**\n * Returns a buffer representation composed of the scale as a BE int 32 and the unsigned value as a BE varint\n * @param {BigDecimal} value\n * @returns {Buffer}\n */\nBigDecimal.toBuffer = function (value) {\n  const unscaledValueBuffer = Integer.toBuffer(value._intVal);\n  const scaleBuffer = utils.allocBufferUnsafe(4);\n  scaleBuffer.writeInt32BE(value._scale, 0);\n  return Buffer.concat([scaleBuffer, unscaledValueBuffer], scaleBuffer.length + unscaledValueBuffer.length);\n};\n\n/**\n * Returns a BigDecimal representation of the string\n * @param {String} value\n * @returns {BigDecimal}\n */\nBigDecimal.fromString = function (value) {\n  if (!value) {\n    throw new TypeError('Invalid null or undefined value');\n  }\n  value = value.trim();\n  const scaleIndex = value.indexOf('.');\n  let scale = 0;\n  if (scaleIndex >= 0) {\n    scale = value.length - 1 - scaleIndex;\n    value = value.substr(0, scaleIndex) + value.substr(scaleIndex + 1);\n  }\n  return new BigDecimal(Integer.fromString(value), scale);\n};\n\n/**\n * Returns a BigDecimal representation of the Number\n * @param {Number} value\n * @returns {BigDecimal}\n */\nBigDecimal.fromNumber = function (value) {\n  if (isNaN(value)) {\n    return new BigDecimal(Integer.ZERO, 0);\n  }\n  let textValue = value.toString();\n  if (textValue.indexOf('e') >= 0) {\n    //get until scale 20\n    textValue = value.toFixed(20);\n  }\n  return BigDecimal.fromString(textValue);\n};\n\n/**\n * Returns true if the value of the BigDecimal instance and other are the same\n * @param {BigDecimal} other\n * @returns {Boolean}\n */\nBigDecimal.prototype.equals = function (other) {\n  return ((other instanceof BigDecimal) && this.compare(other) === 0);\n};\n\nBigDecimal.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * @param {BigDecimal} other\n * @returns {boolean}\n */\nBigDecimal.prototype.notEquals = function (other) {\n  return !this.equals(other);\n};\n\n/**\n * Compares this BigDecimal with the given one.\n * @param {BigDecimal} other Integer to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\nBigDecimal.prototype.compare = function (other) {\n  const diff = this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  }\n  if (diff.isZero()) {\n    return 0;\n  }\n  return +1;\n};\n\n/**\n * Returns the difference of this and the given BigDecimal.\n * @param {BigDecimal} other The BigDecimal to subtract from this.\n * @return {!BigDecimal} The BigDecimal result.\n */\nBigDecimal.prototype.subtract = function (other) {\n  const first = this;\n  if (first._scale === other._scale) {\n    return new BigDecimal(first._intVal.subtract(other._intVal), first._scale);\n  }\n  let diffScale;\n  let unscaledValue;\n  if (first._scale < other._scale) {\n    //The scale of this is lower\n    diffScale = other._scale - first._scale;\n    //multiple this unScaledValue to compare in the same scale\n    unscaledValue = first._intVal\n      .multiply(Integer.fromNumber(Math.pow(10, diffScale)))\n      .subtract(other._intVal);\n    return new BigDecimal(unscaledValue, other._scale);\n  }\n  //The scale of this is higher\n  diffScale = first._scale - other._scale;\n  //multiple this unScaledValue to compare in the same scale\n  unscaledValue = first._intVal\n    .subtract(\n      other._intVal.multiply(Integer.fromNumber(Math.pow(10, diffScale))));\n  return new BigDecimal(unscaledValue, first._scale);\n};\n\n/**\n * Returns the sum of this and the given <code>BigDecimal</code>.\n * @param {BigDecimal} other The BigDecimal to sum to this.\n * @return {!BigDecimal} The BigDecimal result.\n */\nBigDecimal.prototype.add = function (other) {\n  const first = this;\n  if (first._scale === other._scale) {\n    return new BigDecimal(first._intVal.add(other._intVal), first._scale);\n  }\n  let diffScale;\n  let unscaledValue;\n  if (first._scale < other._scale) {\n    //The scale of this is lower\n    diffScale = other._scale - first._scale;\n    //multiple this unScaledValue to compare in the same scale\n    unscaledValue = first._intVal\n      .multiply(Integer.fromNumber(Math.pow(10, diffScale)))\n      .add(other._intVal);\n    return new BigDecimal(unscaledValue, other._scale);\n  }\n  //The scale of this is higher\n  diffScale = first._scale - other._scale;\n  //multiple this unScaledValue to compare in the same scale\n  unscaledValue = first._intVal\n    .add(\n      other._intVal.multiply(Integer.fromNumber(Math.pow(10, diffScale))));\n  return new BigDecimal(unscaledValue, first._scale);\n};\n\n/**\n * Returns true if the current instance is greater than the other\n * @param {BigDecimal} other\n * @returns {boolean}\n */\nBigDecimal.prototype.greaterThan = function (other) {\n  return this.compare(other) === 1;\n};\n\n/** @return {boolean} Whether this value is negative. */\nBigDecimal.prototype.isNegative = function () {\n  return this._intVal.isNegative();\n};\n\n/** @return {boolean} Whether this value is zero. */\nBigDecimal.prototype.isZero = function () {\n  return this._intVal.isZero();\n};\n\n/**\n * Returns the string representation of this <code>BigDecimal</code>\n * @returns {string}\n */\nBigDecimal.prototype.toString = function () {\n  let intString = this._intVal.toString();\n  if (this._scale === 0) {\n    return intString;\n  }\n  let signSymbol = '';\n  if (intString.charAt(0) === '-') {\n    signSymbol = '-';\n    intString = intString.substr(1);\n  }\n  let separatorIndex = intString.length - this._scale;\n  if (separatorIndex <= 0) {\n    //add zeros at the beginning, plus an additional zero\n    intString = utils.stringRepeat('0', (-separatorIndex) + 1) + intString;\n    separatorIndex = intString.length - this._scale;\n  }\n  return signSymbol + intString.substr(0, separatorIndex) + '.' + intString.substr(separatorIndex);\n};\n\n/**\n * Returns a Number representation of this <code>BigDecimal</code>.\n * @returns {Number}\n */\nBigDecimal.prototype.toNumber = function () {\n  return parseFloat(this.toString());\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nBigDecimal.prototype.toJSON = function () {\n  return this.toString();\n};\n\n\nmodule.exports = BigDecimal;","'use strict';\nconst Long = require('long');\nconst util = require('util');\nconst utils = require('../utils');\n\n/** @module types */\n\n// Reuse the same buffers that should perform slightly better than built-in buffer pool\nconst reusableBuffers = {\n  months: utils.allocBuffer(9),\n  days: utils.allocBuffer(9),\n  nanoseconds: utils.allocBuffer(9)\n};\n\nconst maxInt32 = 0x7FFFFFFF;\nconst longOneThousand = Long.fromInt(1000);\nconst nanosPerMicro = longOneThousand;\nconst nanosPerMilli = longOneThousand.multiply(nanosPerMicro);\nconst nanosPerSecond = longOneThousand.multiply(nanosPerMilli);\nconst nanosPerMinute = Long.fromInt(60).multiply(nanosPerSecond);\nconst nanosPerHour = Long.fromInt(60).multiply(nanosPerMinute);\nconst daysPerWeek = 7;\nconst monthsPerYear = 12;\nconst standardRegex = /(\\d+)(y|mo|w|d|h|s|ms|us|µs|ns|m)/gi;\nconst iso8601Regex = /P((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T((\\d+)H)?((\\d+)M)?((\\d+)S)?)?/;\nconst iso8601WeekRegex = /P(\\d+)W/;\nconst iso8601AlternateRegex = /P(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})/;\n\n/**\n * Creates a new instance of {@link Duration}.\n * @classdesc\n * Represents a duration. A duration stores separately months, days, and seconds due to the fact that the number of\n * days in a month varies, and a day can have 23 or 25 hours if a daylight saving is involved.\n * @param {Number} months The number of months.\n * @param {Number} days The number of days.\n * @param {Number|Long} nanoseconds The number of nanoseconds.\n * @constructor\n */\nfunction Duration(months, days, nanoseconds) {\n  /**\n   * Gets the number of months.\n   * @type {Number}\n   */\n  this.months = months;\n  /**\n   * Gets the number of days.\n   * @type {Number}\n   */\n  this.days = days;\n  /**\n   * Gets the number of nanoseconds represented as a <code>int64</code>.\n   * @type {Long}\n   */\n  this.nanoseconds = typeof nanoseconds === 'number' ? Long.fromNumber(nanoseconds) : nanoseconds;\n}\n\nDuration.prototype.equals = function (other) {\n  if (!(other instanceof Duration)) {\n    return false;\n  }\n  return this.months === other.months &&\n    this.days === other.days &&\n    this.nanoseconds.equals(other.nanoseconds);\n};\n\n/**\n * Serializes the duration and returns the representation of the value in bytes.\n * @returns {Buffer}\n */\nDuration.prototype.toBuffer = function () {\n  const lengthMonths = VIntCoding.writeVInt(Long.fromNumber(this.months), reusableBuffers.months);\n  const lengthDays = VIntCoding.writeVInt(Long.fromNumber(this.days), reusableBuffers.days);\n  const lengthNanoseconds = VIntCoding.writeVInt(this.nanoseconds, reusableBuffers.nanoseconds);\n  const buffer = utils.allocBufferUnsafe(lengthMonths + lengthDays + lengthNanoseconds);\n  reusableBuffers.months.copy(buffer, 0, 0, lengthMonths);\n  let offset = lengthMonths;\n  reusableBuffers.days.copy(buffer, offset, 0, lengthDays);\n  offset += lengthDays;\n  reusableBuffers.nanoseconds.copy(buffer, offset, 0, lengthNanoseconds);\n  return buffer;\n};\n\n/**\n * Returns the string representation of the value.\n * @return {string}\n */\nDuration.prototype.toString = function () {\n  let value = '';\n  function append(dividend, divisor, unit) {\n    if (dividend === 0 || dividend < divisor) {\n      return dividend;\n    }\n    // string concatenation is supposed to be fasted than join()\n    value += (dividend / divisor).toFixed(0) + unit;\n    return dividend % divisor;\n  }\n  function append64(dividend, divisor, unit) {\n    if (dividend.equals(Long.ZERO) || dividend.lessThan(divisor)) {\n      return dividend;\n    }\n    // string concatenation is supposed to be fasted than join()\n    value += dividend.divide(divisor).toString() + unit;\n    return dividend.modulo(divisor);\n  }\n  if (this.months < 0 || this.days < 0 || this.nanoseconds.isNegative()) {\n    value = '-';\n  }\n  let remainder = append(Math.abs(this.months), monthsPerYear, \"y\");\n  append(remainder, 1, \"mo\");\n  append(Math.abs(this.days), 1, \"d\");\n\n  if (!this.nanoseconds.equals(Long.ZERO)) {\n    const nanos = this.nanoseconds.isNegative() ? this.nanoseconds.negate() : this.nanoseconds;\n    remainder = append64(nanos, nanosPerHour, \"h\");\n    remainder = append64(remainder, nanosPerMinute, \"m\");\n    remainder = append64(remainder, nanosPerSecond, \"s\");\n    remainder = append64(remainder, nanosPerMilli, \"ms\");\n    remainder = append64(remainder, nanosPerMicro, \"us\");\n    append64(remainder, Long.ONE, \"ns\");\n  }\n  return value;\n};\n\n/**\n * Creates a new {@link Duration} instance from the binary representation of the value.\n * @param {Buffer} buffer\n * @returns {Duration}\n */\nDuration.fromBuffer = function (buffer) {\n  const offset = { value: 0 };\n  const months = VIntCoding.readVInt(buffer, offset).toNumber();\n  const days = VIntCoding.readVInt(buffer, offset).toNumber();\n  const nanoseconds = VIntCoding.readVInt(buffer, offset);\n  return new Duration(months, days, nanoseconds);\n};\n\n/**\n * Creates a new {@link Duration} instance from the string representation of the value.\n * <p>\n *   Accepted formats:\n * </p>\n * <ul>\n * <li>multiple digits followed by a time unit like: 12h30m where the time unit can be:\n *   <ul>\n *     <li>{@code y}: years</li>\n *     <li>{@code m}: months</li>\n *     <li>{@code w}: weeks</li>\n *     <li>{@code d}: days</li>\n *     <li>{@code h}: hours</li>\n *     <li>{@code m}: minutes</li>\n *     <li>{@code s}: seconds</li>\n *     <li>{@code ms}: milliseconds</li>\n *     <li>{@code us} or {@code µs}: microseconds</li>\n *     <li>{@code ns}: nanoseconds</li>\n *   </ul>\n * </li>\n * <li>ISO 8601 format:  <code>P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W</code></li>\n * <li>ISO 8601 alternative format: <code>P[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss]</code></li>\n * </ul>\n * @param {String} input\n * @returns {Duration}\n */\nDuration.fromString = function (input) {\n  const isNegative = input.charAt(0) === '-';\n  const source = isNegative ? input.substr(1) : input;\n  if (source.charAt(0) === 'P') {\n    if (source.charAt(source.length - 1) === 'W') {\n      return parseIso8601WeekFormat(isNegative, source);\n    }\n    if (source.indexOf('-') > 0) {\n      return parseIso8601AlternativeFormat(isNegative, source);\n    }\n    return parseIso8601Format(isNegative, source);\n  }\n  return parseStandardFormat(isNegative, source);\n};\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseStandardFormat(isNegative, source) {\n  const builder = new Builder(isNegative);\n  standardRegex.lastIndex = 0;\n  let matches;\n  while ((matches = standardRegex.exec(source)) && matches.length <= 3) {\n    builder.add(matches[1], matches[2]);\n  }\n  return builder.build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseIso8601Format(isNegative, source) {\n  const matches = iso8601Regex.exec(source);\n  if (!matches || matches[0] !== source) {\n    throw new TypeError(util.format(\"Unable to convert '%s' to a duration\", source));\n  }\n  const builder = new Builder(isNegative);\n  if (matches[1]) {\n    builder.addYears(matches[2]);\n  }\n  if (matches[3]) {\n    builder.addMonths(matches[4]);\n  }\n  if (matches[5]) {\n    builder.addDays(matches[6]);\n  }\n  if (matches[7]) {\n    if (matches[8]) {\n      builder.addHours(matches[9]);\n    }\n    if (matches[10]) {\n      builder.addMinutes(matches[11]);\n    }\n    if (matches[12]) {\n      builder.addSeconds(matches[13]);\n    }\n  }\n  return builder.build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseIso8601WeekFormat(isNegative, source) {\n  const matches = iso8601WeekRegex.exec(source);\n  if (!matches || matches[0] !== source) {\n    throw new TypeError(util.format(\"Unable to convert '%s' to a duration\", source));\n  }\n  return new Builder(isNegative)\n    .addWeeks(matches[1])\n    .build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @param {String} source\n * @returns {Duration}\n * @private\n */\nfunction parseIso8601AlternativeFormat(isNegative, source) {\n  const matches = iso8601AlternateRegex.exec(source);\n  if (!matches || matches[0] !== source) {\n    throw new TypeError(util.format(\"Unable to convert '%s' to a duration\", source));\n  }\n  return new Builder(isNegative).addYears(matches[1])\n    .addMonths(matches[2])\n    .addDays(matches[3])\n    .addHours(matches[4])\n    .addMinutes(matches[5])\n    .addSeconds(matches[6])\n    .build();\n}\n\n/**\n * @param {Boolean} isNegative\n * @private\n * @constructor\n */\nfunction Builder(isNegative) {\n  this._isNegative = isNegative;\n  this._unitIndex = 0;\n  this._months = 0;\n  this._days = 0;\n  this._nanoseconds = Long.ZERO;\n  this._addMethods = {\n    'y': this.addYears,\n    'mo': this.addMonths,\n    'w': this.addWeeks,\n    'd': this.addDays,\n    'h': this.addHours,\n    'm': this.addMinutes,\n    's': this.addSeconds,\n    'ms': this.addMillis,\n    // µs\n    '\\u00B5s': this.addMicros,\n    'us': this.addMicros,\n    'ns': this.addNanos\n  };\n  this._unitByIndex = [\n    null, 'years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds', 'milliseconds', 'microseconds',\n    'nanoseconds'\n  ];\n}\n\nBuilder.prototype._validateOrder = function (unitIndex) {\n  if (unitIndex === this._unitIndex) {\n    throw new TypeError(util.format(\"Invalid duration. The %s are specified multiple times\", this._getUnitName(unitIndex)));\n  }\n\n  if (unitIndex <= this._unitIndex) {\n    throw new TypeError(util.format(\"Invalid duration. The %s should be after %s\",\n      this._getUnitName(this._unitIndex),\n      this._getUnitName(unitIndex)));\n  }\n  this._unitIndex = unitIndex;\n};\n\n/**\n * @param {Number} units\n * @param {Number} monthsPerUnit\n */\nBuilder.prototype._validateMonths = function(units, monthsPerUnit) {\n  this._validate32(units, (maxInt32 - this._months) / monthsPerUnit, \"months\");\n};\n\n/**\n * @param {Number} units\n * @param {Number} daysPerUnit\n */\nBuilder.prototype._validateDays = function(units, daysPerUnit) {\n  this._validate32(units, (maxInt32 - this._days) / daysPerUnit, \"days\");\n};\n\n/**\n * @param {Long} units\n * @param {Long} nanosPerUnit\n */\nBuilder.prototype._validateNanos = function(units, nanosPerUnit) {\n  this._validate64(units, Long.MAX_VALUE.subtract(this._nanoseconds).divide(nanosPerUnit), \"nanoseconds\");\n};\n\n/**\n * @param {Number} units\n * @param {Number} limit\n * @param {String} unitName\n */\nBuilder.prototype._validate32 = function(units, limit, unitName) {\n  if (units > limit) {\n    throw new TypeError(util.format('Invalid duration. The total number of %s must be less or equal to %s',\n      unitName,\n      maxInt32));\n  }\n};\n\n/**\n * @param {Long} units\n * @param {Long} limit\n * @param {String} unitName\n */\nBuilder.prototype._validate64 = function(units, limit, unitName) {\n  if (units.greaterThan(limit)) {\n    throw new TypeError(util.format('Invalid duration. The total number of %s must be less or equal to %s',\n      unitName,\n      Long.MAX_VALUE.toString()));\n  }\n};\n\nBuilder.prototype._getUnitName = function(unitIndex) {\n  const name = this._unitByIndex[+unitIndex];\n  if (!name) {\n    throw new Error('unknown unit index: ' + unitIndex);\n  }\n  return name;\n};\n\nBuilder.prototype.add = function (textValue, symbol) {\n  const addMethod = this._addMethods[symbol.toLowerCase()];\n  if (!addMethod) {\n    throw new TypeError(util.format(\"Unknown duration symbol '%s'\", symbol));\n  }\n  return addMethod.call(this, textValue);\n};\n\n/**\n * @param {String|Number} years\n * @return {Builder}\n */\nBuilder.prototype.addYears = function (years) {\n  const value = +years;\n  this._validateOrder(1);\n  this._validateMonths(value, monthsPerYear);\n  this._months += value * monthsPerYear;\n  return this;\n};\n\n/**\n * @param {String|Number} months\n * @return {Builder}\n */\nBuilder.prototype.addMonths = function(months) {\n  const value = +months;\n  this._validateOrder(2);\n  this._validateMonths(value, 1);\n  this._months += value;\n  return this;\n};\n\n/**\n * @param {String|Number} weeks\n * @return {Builder}\n */\nBuilder.prototype.addWeeks = function(weeks) {\n  const value = +weeks;\n  this._validateOrder(3);\n  this._validateDays(value, daysPerWeek);\n  this._days += value * daysPerWeek;\n  return this;\n};\n\n/**\n * @param {String|Number} days\n * @return {Builder}\n */\nBuilder.prototype.addDays = function(days) {\n  const value = +days;\n  this._validateOrder(4);\n  this._validateDays(value, 1);\n  this._days += value;\n  return this;\n};\n\n/**\n * @param {String|Long} hours\n * @return {Builder}\n */\nBuilder.prototype.addHours = function(hours) {\n  const value = typeof hours === 'string' ? Long.fromString(hours) : hours;\n  this._validateOrder(5);\n  this._validateNanos(value, nanosPerHour);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerHour));\n  return this;\n};\n\n/**\n * @param {String|Long} minutes\n * @return {Builder}\n */\nBuilder.prototype.addMinutes = function(minutes) {\n  const value = typeof minutes === 'string' ? Long.fromString(minutes) : minutes;\n  this._validateOrder(6);\n  this._validateNanos(value, nanosPerMinute);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerMinute));\n  return this;\n};\n\n/**\n * @param {String|Long} seconds\n * @return {Builder}\n */\nBuilder.prototype.addSeconds = function(seconds) {\n  const value = typeof seconds === 'string' ? Long.fromString(seconds) : seconds;\n  this._validateOrder(7);\n  this._validateNanos(value, nanosPerSecond);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerSecond));\n  return this;\n};\n\n/**\n * @param {String|Long} millis\n * @return {Builder}\n */\nBuilder.prototype.addMillis = function(millis) {\n  const value = typeof millis === 'string' ? Long.fromString(millis) : millis;\n  this._validateOrder(8);\n  this._validateNanos(value, nanosPerMilli);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerMilli));\n  return this;\n};\n\n/**\n * @param {String|Long} micros\n * @return {Builder}\n */\nBuilder.prototype.addMicros = function(micros) {\n  const value = typeof micros === 'string' ? Long.fromString(micros) : micros;\n  this._validateOrder(9);\n  this._validateNanos(value, nanosPerMicro);\n  this._nanoseconds = this._nanoseconds.add(value.multiply(nanosPerMicro));\n  return this;\n};\n\n/**\n * @param {String|Long} nanos\n * @return {Builder}\n */\nBuilder.prototype.addNanos = function(nanos) {\n  const value = typeof nanos === 'string' ? Long.fromString(nanos) : nanos;\n  this._validateOrder(10);\n  this._validateNanos(value, Long.ONE);\n  this._nanoseconds = this._nanoseconds.add(value);\n  return this;\n};\n\n/** @return {Duration} */\nBuilder.prototype.build = function () {\n  return (this._isNegative ?\n    new Duration(-this._months, -this._days, this._nanoseconds.negate()) :\n    new Duration(this._months, this._days, this._nanoseconds));\n};\n\n/**\n * Contains the methods for reading and writing vints into binary format.\n * Exposes only 2 internal methods, the rest are hidden.\n * @private\n */\nconst VIntCoding = (function () {\n  /** @param {Long} n */\n  function encodeZigZag64(n) {\n    //     (n << 1) ^ (n >> 63);\n    return n.toUnsigned().shiftLeft(1).xor(n.shiftRight(63));\n  }\n\n  /** @param {Long} n */\n  function decodeZigZag64(n) {\n    //     (n >>> 1) ^ -(n & 1);\n    return n.shiftRightUnsigned(1).xor(n.and(Long.ONE).negate());\n  }\n\n  /**\n   * @param {Long} value\n   * @param {Buffer} buffer\n   * @returns {Number}\n   */\n  function writeVInt(value, buffer) {\n    return writeUnsignedVInt(encodeZigZag64(value), buffer);\n  }\n\n  /**\n   * @param {Long} value\n   * @param {Buffer} buffer\n   * @returns {number}\n   */\n  function writeUnsignedVInt(value, buffer) {\n    const size = computeUnsignedVIntSize(value);\n    if (size === 1) {\n      buffer[0] = value.getLowBits();\n      return 1;\n    }\n    encodeVInt(value, size, buffer);\n    return size;\n  }\n\n  /**\n   * @param {Long} value\n   * @returns {number}\n   */\n  function computeUnsignedVIntSize(value) {\n    const magnitude = numberOfLeadingZeros(value.or(Long.ONE));\n    return (639 - magnitude * 9) >> 6;\n  }\n\n  /**\n   * @param {Long} value\n   * @param {Number} size\n   * @param {Buffer} buffer\n   */\n  function encodeVInt(value, size, buffer) {\n    const extraBytes = size - 1;\n    let intValue = value.getLowBits();\n    let i;\n    let intBytes = 4;\n    for (i = extraBytes; i >= 0 && (intBytes--) > 0; i--) {\n      buffer[i] = 0xFF & intValue;\n      intValue >>= 8;\n    }\n    intValue = value.getHighBits();\n    for (; i >= 0; i--) {\n      buffer[i] = 0xFF & intValue;\n      intValue >>= 8;\n    }\n    buffer[0] |= encodeExtraBytesToRead(extraBytes);\n  }\n  /**\n   * Returns the number of zero bits preceding the highest-order one-bit in the binary representation of the value.\n   * @param {Long} value\n   * @returns {Number}\n   */\n  function numberOfLeadingZeros(value) {\n    if (value.equals(Long.ZERO)) {\n      return 64;\n    }\n    let n = 1;\n    let x = value.getHighBits();\n    if (x === 0) {\n      n += 32;\n      x = value.getLowBits();\n    }\n    if (x >>> 16 === 0) {\n      n += 16;\n      x <<= 16;\n    }\n    if (x >>> 24 === 0) {\n      n += 8;\n      x <<= 8;\n    }\n    if (x >>> 28 === 0) {\n      n += 4;\n      x <<= 4;\n    }\n    if (x >>> 30 === 0) {\n      n += 2;\n      x <<= 2;\n    }\n    n -= x >>> 31;\n    return n;\n  }\n\n\n  function encodeExtraBytesToRead(extraBytesToRead) {\n    return ~(0xff >> extraBytesToRead);\n  }\n\n  /**\n   * @param {Buffer} buffer\n   * @param {{value: number}} offset\n   * @returns {Long}\n   */\n  function readVInt(buffer, offset) {\n    return decodeZigZag64(readUnsignedVInt(buffer, offset));\n  }\n\n  /**\n   * @param {Buffer} input\n   * @param {{ value: number}} offset\n   * @returns {Long}\n   */\n  function readUnsignedVInt(input, offset) {\n    const firstByte = input[offset.value++];\n    if ((firstByte & 0x80) === 0) {\n      return Long.fromInt(firstByte);\n    }\n    const sByteInt = fromSignedByteToInt(firstByte);\n    const size = numberOfExtraBytesToRead(sByteInt);\n    let result = Long.fromInt(sByteInt & firstByteValueMask(size));\n    for (let ii = 0; ii < size; ii++) {\n      const b = Long.fromInt(input[offset.value++]);\n      //       (result << 8) | b\n      result = result.shiftLeft(8).or(b);\n    }\n    return result;\n  }\n\n  function fromSignedByteToInt(value) {\n    if (value > 0x7f) {\n      return value - 0x0100;\n    }\n    return value;\n  }\n\n  function numberOfLeadingZerosInt32(i) {\n    if (i === 0) {\n      return 32;\n    }\n    let n = 1;\n    if (i >>> 16 === 0) {\n      n += 16;\n      i <<= 16;\n    }\n    if (i >>> 24 === 0) {\n      n += 8;\n      i <<= 8;\n    }\n    if (i >>> 28 === 0) {\n      n += 4;\n      i <<= 4;\n    }\n    if (i >>> 30 === 0) {\n      n += 2;\n      i <<= 2;\n    }\n    n -= i >>> 31;\n    return n;\n  }\n\n  /**\n   * @param {Number} firstByte\n   * @returns {Number}\n   */\n  function numberOfExtraBytesToRead(firstByte) {\n    // Instead of counting 1s of the byte, we negate and count 0 of the byte\n    return numberOfLeadingZerosInt32(~firstByte) - 24;\n  }\n\n  /**\n   * @param {Number} extraBytesToRead\n   * @returns {Number}\n   */\n  function firstByteValueMask(extraBytesToRead) {\n    return 0xff >> extraBytesToRead;\n  }\n\n  return {\n    readVInt: readVInt,\n    writeVInt: writeVInt\n  };\n})();\n\nmodule.exports = Duration;\n","\"use strict\";\n\nconst utils = require('../utils');\n\n/** @module types */\n/**\n * Creates a new instance of InetAddress\n * @class\n * @classdesc Represents an v4 or v6 Internet Protocol (IP) address.\n * @param {Buffer} buffer\n * @constructor\n */\nfunction InetAddress(buffer) {\n  if (!(buffer instanceof Buffer) || (buffer.length !== 4 && buffer.length !== 16)) {\n    throw new TypeError('The ip address must contain 4 or 16 bytes');\n  }\n\n  /**\n   * Immutable buffer that represents the IP address \n   * @type Array\n   */\n  this.buffer = buffer;\n\n  /**\n   * Returns the length of the underlying buffer\n   * @type Number\n   */\n  this.length = buffer.length;\n\n  /**\n   * Returns the Ip version (4 or 6)\n   * @type Number\n   */\n  this.version = buffer.length === 4 ? 4 : 6;\n}\n\n/**\n * Parses the string representation and returns an Ip address\n * @param {String} value\n */\nInetAddress.fromString = function (value) {\n  if (!value) {\n    return new InetAddress(utils.allocBufferFromArray([0, 0, 0, 0]));\n  }\n  const ipv4Pattern = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n  const ipv6Pattern = /^[\\da-f:.]+$/i;\n  let parts;\n  if (ipv4Pattern.test(value)) {\n    parts = value.split('.');\n    return new InetAddress(utils.allocBufferFromArray(parts));\n  }\n  if (!ipv6Pattern.test(value)) {\n    throw new TypeError('Value could not be parsed as InetAddress: ' + value);\n  }\n  parts = value.split(':');\n  if (parts.length < 3) {\n    throw new TypeError('Value could not be parsed as InetAddress: ' + value);\n  }\n  const buffer = utils.allocBufferUnsafe(16);\n  let filling = 8 - parts.length + 1;\n  let applied = false;\n  let offset = 0;\n  const embeddedIp4 = ipv4Pattern.test(parts[parts.length - 1]);\n  if (embeddedIp4) {\n    // Its IPv6 address with an embedded IPv4 address:\n    // subtract 1 from the potential empty filling as ip4 contains 4 bytes instead of 2 of a ipv6 section\n    filling -= 1;\n  }\n  function writeItem(uIntValue) {\n    buffer.writeUInt8(+uIntValue, offset++);\n  }\n  for (let i = 0; i < parts.length; i++) {\n    const item = parts[i];\n    if (item) {\n      if (embeddedIp4 && i === parts.length - 1) {\n        item.split('.').forEach(writeItem);\n        break;\n      }\n      buffer.writeUInt16BE(parseInt(item, 16), offset);\n      offset = offset + 2;\n      continue;\n    }\n    //its an empty string\n    if (applied) {\n      //there could be 2 occurrences of empty string\n      filling = 1;\n    }\n    applied = true;\n    for (let j = 0; j < filling; j++) {\n      buffer[offset++] = 0;\n      buffer[offset++] = 0;\n    }\n  }\n  if (embeddedIp4 && !isValidIPv4Mapped(buffer)) {\n    throw new TypeError('Only IPv4-Mapped IPv6 addresses are allowed as IPv6 address with embedded IPv4 address');\n  }\n  return new InetAddress(buffer);\n};\n\n/**\n * Compares 2 addresses and returns true if the underlying bytes are the same\n * @param {InetAddress} other\n * @returns {Boolean}\n */\nInetAddress.prototype.equals = function (other) {\n  if (!(other instanceof InetAddress)) {\n    return false;\n  }\n  return (this.buffer.length === other.buffer.length &&\n    this.buffer.toString('hex') === other.buffer.toString('hex'));\n};\n\n/**\n * Returns the underlying buffer\n * @returns {Buffer}\n */\nInetAddress.prototype.getBuffer = function () {\n  return this.buffer;\n};\n\n/**\n * Provide the name of the constructor and the string representation\n * @returns {string}\n */\nInetAddress.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns the string representation of the IP address.\n * <p>For v4 IP addresses, a string in the form of d.d.d.d is returned.</p>\n * <p>\n *   For v6 IP addresses, a string in the form of x:x:x:x:x:x:x:x is returned, where the 'x's are the hexadecimal\n *   values of the eight 16-bit pieces of the address, according to rfc5952.\n *   In cases where there is more than one field of only zeros, it can be shortened. For example, 2001:0db8:0:0:0:1:0:1\n *   will be expressed as 2001:0db8::1:0:1.\n * </p>\n * @param {String} [encoding]\n * @returns {String}\n */\nInetAddress.prototype.toString = function (encoding) {\n  if (encoding === 'hex') {\n    //backward compatibility: behave in the same way as the buffer\n    return this.buffer.toString('hex');\n  }\n  if (this.buffer.length === 4) {\n    return (\n      this.buffer[0] + '.' +\n      this.buffer[1] + '.' +\n      this.buffer[2] + '.' +\n      this.buffer[3]\n    );\n  }\n  let start = -1;\n  const longest = { length: 0, start: -1};\n  function checkLongest (i) {\n    if (start >= 0) {\n      //close the group\n      const length = i - start;\n      if (length > longest.length) {\n        longest.length = length;\n        longest.start = start;\n        start = -1;\n      }\n    }\n  }\n  //get the longest 16-bit group of zeros\n  for (let i = 0; i < this.buffer.length; i = i + 2) {\n    if (this.buffer[i] === 0 && this.buffer[i + 1] === 0) {\n      //its a group of zeros\n      if (start < 0) {\n        start = i;\n      }\n\n      // at the end of the buffer, make a final call to checkLongest.\n      if(i === this.buffer.length - 2) {\n        checkLongest(i+2);\n      }\n      continue;\n    }\n    //its a group of non-zeros\n    checkLongest(i);\n  }\n\n  let address = '';\n  for (let h = 0; h < this.buffer.length; h = h + 2) {\n    if (h === longest.start) {\n      address += ':';\n      continue;\n    }\n    if (h < (longest.start + longest.length) && h > longest.start) {\n      //its a group of zeros\n      continue;\n    }\n    if (address.length > 0) {\n      address += ':';\n    }\n    address += ((this.buffer[h] << 8) | this.buffer[h+1]).toString(16);\n  }\n  if (address.charAt(address.length-1) === ':') {\n    address += ':';\n  }\n  return address;\n};\n\n/**\n * Returns the string representation.\n * Method used by the native JSON.stringify() to serialize this instance.\n */\nInetAddress.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * Validates for a IPv4-Mapped IPv6 according to https://tools.ietf.org/html/rfc4291#section-2.5.5\n * @private\n * @param {Buffer} buffer\n */\nfunction isValidIPv4Mapped(buffer) {\n  // check the form\n  // |      80 bits   | 16 |   32 bits\n  // +----------------+----+-------------\n  // |0000........0000|FFFF| IPv4 address\n\n  for (let i = 0; i < buffer.length - 6; i++) {\n    if (buffer[i] !== 0) {\n      return false;\n    }\n  }\n  return !(buffer[10] !== 255 || buffer[11] !== 255);\n}\n\nmodule.exports = InetAddress;","\"use strict\";\nconst util = require('util');\n\nconst utils = require('../utils');\n/** @module types */\n\n/**\n * @private\n * @const\n */\nconst millisecondsPerDay = 86400000;\n/**\n * @private\n */\nconst dateCenter = Math.pow(2,31);\n/**\n *\n * Creates a new instance of LocalDate.\n * @class\n * @classdesc A date without a time-zone in the ISO-8601 calendar system, such as 2010-08-05.\n * <p>\n *   LocalDate is an immutable object that represents a date, often viewed as year-month-day. For example, the value \"1st October 2014\" can be stored in a LocalDate.\n * </p>\n * <p>\n *   This class does not store or represent a time or time-zone. Instead, it is a description of the date, as used for birthdays. It cannot represent an instant on the time-line without additional information such as an offset or time-zone.\n * </p>\n * <p>\n *   Note that this type can represent dates in the range [-5877641-06-23; 5881580-07-17] while the ES5 date type can only represent values in the range of [-271821-04-20; 275760-09-13].\n *   In the event that year, month, day parameters do not fall within the ES5 date range an Error will be thrown.  If you wish to represent a date outside of this range, pass a single\n *   parameter indicating the days since epoch.  For example, -1 represents 1969-12-31.\n * </p>\n * @param {Number} year The year or days since epoch.  If days since epoch, month and day should not be provided.\n * @param {Number} month Between 1 and 12 inclusive.\n * @param {Number} day Between 1 and the number of days in the given month of the given year.\n *\n * @property {Date} date The date representation if falls within a range of an ES5 data type, otherwise an invalid date.\n *\n * @constructor\n */\nfunction LocalDate(year, month, day) {\n  //implementation detail: internally uses a UTC based date\n  if (typeof year === 'number' && typeof month === 'number' && typeof day === 'number') {\n    // Use setUTCFullYear as if there is a 2 digit year, Date.UTC() assumes\n    // that is the 20th century.\n    this.date = new Date();\n    this.date.setUTCHours(0, 0, 0, 0);\n    this.date.setUTCFullYear(year, month-1, day);\n    if(isNaN(this.date.getTime())) {\n      throw new Error(util.format('%d-%d-%d does not form a valid ES5 date!',\n        year, month, day));\n    }\n  }\n  else if (typeof month === 'undefined' && typeof day === 'undefined') {\n    if (typeof year === 'number') {\n      //in days since epoch.\n      if(year < -2147483648 || year > 2147483647) {\n        throw new Error('You must provide a valid value for days since epoch (-2147483648 <= value <= 2147483647).');\n      }\n      this.date = new Date(year * millisecondsPerDay);\n    }\n  }\n\n  if (typeof this.date === 'undefined') {\n    throw new Error('You must provide a valid year, month and day');\n  }\n\n  /** \n   * If date cannot be represented yet given a valid days since epoch, track\n   * it internally.\n   */\n  this._value = isNaN(this.date.getTime()) ? year : null;\n\n  /**\n   * A number representing the year.  May return NaN if cannot be represented as\n   * a Date.\n   * @type Number\n   */\n  this.year = this.date.getUTCFullYear();\n  /**\n   * A number between 1 and 12 inclusive representing the month.  May return\n   * NaN if cannot be represented as a Date.\n   * @type Number\n   */\n  this.month = this.date.getUTCMonth() + 1;\n  /**\n   * A number between 1 and the number of days in the given month of the given year (28, 29, 30, 31).\n   * May return NaN if cannot be represented as a Date.\n   * @type Number\n   */\n  this.day = this.date.getUTCDate();\n}\n\n/**\n * Creates a new instance of LocalDate using the current year, month and day from the system clock in the default time-zone.\n */\nLocalDate.now = function () {\n  return LocalDate.fromDate(new Date());\n};\n\n/**\n * Creates a new instance of LocalDate using the current date from the system clock at UTC.\n */\nLocalDate.utcNow = function () {\n  return new LocalDate(Date.now());\n};\n\n\n/**\n * Creates a new instance of LocalDate using the year, month and day from the provided local date time.\n * @param {Date} date\n */\nLocalDate.fromDate = function (date) {\n  if (isNaN(date.getTime())) {\n    throw new TypeError('Invalid date: ' + date);\n  }\n  return new LocalDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\n};\n\n/**\n * Creates a new instance of LocalDate using the year, month and day provided in the form: yyyy-mm-dd or\n * days since epoch (i.e. -1 for Dec 31, 1969).\n * @param {String} value\n */\nLocalDate.fromString = function (value) {\n  const dashCount = (value.match(/-/g) || []).length;\n  if(dashCount >= 2) {\n    let multiplier = 1;\n    if (value[0] === '-') {\n      value = value.substring(1);\n      multiplier = -1;\n    }\n    const parts = value.split('-');\n    return new LocalDate(multiplier * parseInt(parts[0], 10), parseInt(parts[1], 10), parseInt(parts[2], 10));\n  }\n  if(value.match(/^-?\\d+$/)) {\n    // Parse as days since epoch.\n    return new LocalDate(parseInt(value, 10));\n  }\n  throw new Error(\"Invalid input '\" + value + \"'.\");\n};\n\n/**\n * Creates a new instance of LocalDate using the bytes representation.\n * @param {Buffer} buffer\n */\nLocalDate.fromBuffer = function (buffer) {\n  //move to unix epoch: 0.\n  return new LocalDate((buffer.readUInt32BE(0) - dateCenter));\n};\n\n/**\n * Compares this LocalDate with the given one.\n * @param {LocalDate} other date to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n * if the given one is greater.\n */\nLocalDate.prototype.compare = function (other) {\n  const thisValue = isNaN(this.date.getTime()) ? this._value * millisecondsPerDay : this.date.getTime();\n  const otherValue = isNaN(other.date.getTime()) ? other._value * millisecondsPerDay : other.date.getTime();\n  const diff = thisValue - otherValue;\n  if (diff < 0) {\n    return -1;\n  }\n  if (diff > 0) {\n    return 1;\n  }\n  return 0;\n};\n\n/**\n * Returns true if the value of the LocalDate instance and other are the same\n * @param {LocalDate} other\n * @returns {Boolean}\n */\nLocalDate.prototype.equals = function (other) {\n  return ((other instanceof LocalDate)) && this.compare(other) === 0;\n};\n\nLocalDate.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Gets the bytes representation of the instance.\n * @returns {Buffer}\n */\nLocalDate.prototype.toBuffer = function () {\n  //days since unix epoch\n  const daysSinceEpoch = isNaN(this.date.getTime()) ? this._value : Math.floor(this.date.getTime() / millisecondsPerDay);\n  const value = daysSinceEpoch + dateCenter;\n  const buf = utils.allocBufferUnsafe(4);\n  buf.writeUInt32BE(value, 0);\n  return buf;\n};\n\n/**\n * Gets the string representation of the instance in the form: yyyy-mm-dd if\n * the value can be parsed as a Date, otherwise days since epoch.\n * @returns {String}\n */\nLocalDate.prototype.toString = function () {\n  let result;\n  //if cannot be parsed as date, return days since epoch representation.\n  if (isNaN(this.date.getTime())) {\n    return this._value.toString();\n  }\n  if (this.year < 0) {\n    result = '-' + fillZeros((this.year * -1).toString(), 4);\n  }\n  else {\n    result = fillZeros(this.year.toString(), 4);\n  }\n  result += '-' + fillZeros(this.month.toString(), 2) + '-' + fillZeros(this.day.toString(), 2);\n  return result;\n};\n\n/**\n * Gets the string representation of the instance in the form: yyyy-mm-dd, valid for JSON.\n * @returns {String}\n */\nLocalDate.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * @param {String} value\n * @param {Number} amount\n * @private\n */\nfunction fillZeros(value, amount) {\n  if (value.length >= amount) {\n    return value;\n  }\n  return utils.stringRepeat('0', amount - value.length) + value;\n}\n\nmodule.exports = LocalDate;","\"use strict\";\nconst Long = require('long');\nconst util = require('util');\nconst utils = require('../utils');\n/** @module types */\n\n/**\n * @const\n * @private\n * */\nconst maxNanos = Long.fromString('86399999999999');\n/**\n * Nanoseconds in a second\n * @const\n * @private\n * */\nconst nanoSecInSec = Long.fromNumber(1000000000);\n/**\n * Nanoseconds in a millisecond\n * @const\n * @private\n * */\nconst nanoSecInMillis = Long.fromNumber(1000000);\n/**\n * Milliseconds in day\n * @const\n * @private\n * */\nconst millisInDay = 86400000;\n/**\n *\n * Creates a new instance of LocalTime.\n * @class\n * @classdesc A time without a time-zone in the ISO-8601 calendar system, such as 10:30:05.\n * <p>\n *   LocalTime is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value \"13:45.30.123456789\" can be stored in a LocalTime.\n * </p>\n * @param {Long} totalNanoseconds Total nanoseconds since midnight.\n * @constructor\n */\nfunction LocalTime(totalNanoseconds) {\n  if (!(totalNanoseconds instanceof Long)) {\n    throw new Error('You must specify a Long value as totalNanoseconds');\n  }\n  if (totalNanoseconds.lessThan(Long.ZERO) || totalNanoseconds.greaterThan(maxNanos)) {\n    throw new Error('Total nanoseconds out of range');\n  }\n  this.value = totalNanoseconds;\n  \n  /**\n   * Gets the hour component of the time represented by the current instance, a number from 0 to 23.\n   * @type Number\n   */\n  this.hour = this._getParts()[0];\n  /**\n   * Gets the minute component of the time represented by the current instance, a number from 0 to 59.\n   * @type Number\n   */\n  this.minute = this._getParts()[1];\n  /**\n   * Gets the second component of the time represented by the current instance, a number from 0 to 59.\n   * @type Number\n   */\n  this.second = this._getParts()[2];\n  /**\n   * Gets the nanoseconds component of the time represented by the current instance, a number from 0 to 999999999.\n   * @type Number\n   */\n  this.nanosecond = this._getParts()[3];\n}\n\n/**\n * Parses an string representation and returns a new LocalDate.\n * @param {String} value\n * @returns {LocalTime}\n */\nLocalTime.fromString = function (value) {\n  if (typeof value !== 'string') {\n    throw new Error('Argument type invalid: ' + util.inspect(value));\n  }\n  const parts = value.split(':');\n  let millis = parseInt(parts[0], 10) * 3600000 + parseInt(parts[1], 10) * 60000;\n  let nanos;\n  if (parts.length === 3) {\n    const secParts = parts[2].split('.');\n    millis += parseInt(secParts[0], 10) * 1000;\n    if (secParts.length === 2) {\n      nanos = secParts[1];\n      //add zeros at the end\n      nanos = nanos + utils.stringRepeat('0', 9 - nanos.length);\n    }\n  }\n  return LocalTime.fromMilliseconds(millis, parseInt(nanos, 10) || 0);\n};\n\n/**\n * Uses the current local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n * @param {Number} [nanoseconds] A Number from 0 to 999,999, representing the time nanosecond portion.\n * @returns {LocalTime}\n */\nLocalTime.now = function (nanoseconds) {\n  return LocalTime.fromDate(new Date(), nanoseconds);\n};\n\n/**\n * Uses the provided local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n * @param {Date} date Local date portion to extract the time passed since midnight.\n * @param {Number} [nanoseconds] A Number from 0 to 999,999, representing the nanosecond time portion.\n * @returns {LocalTime}\n */\nLocalTime.fromDate = function (date, nanoseconds) {\n  if (!util.isDate(date)) {\n    throw new Error('Not a valid date');\n  }\n  //Use the local representation, only the milliseconds portion\n  const millis = (date.getTime() + date.getTimezoneOffset() * -60000) % millisInDay;\n  return LocalTime.fromMilliseconds(millis, nanoseconds);\n};\n\n/**\n * Uses the provided local time (in milliseconds) and the nanoseconds to create a new instance of LocalTime\n * @param {Number} milliseconds A Number from 0 to 86,399,999.\n * @param {Number} [nanoseconds] A Number from 0 to 999,999, representing the time nanosecond portion.\n * @returns {LocalTime}\n */\nLocalTime.fromMilliseconds = function (milliseconds, nanoseconds) {\n  if (typeof nanoseconds !== 'number') {\n    nanoseconds = 0;\n  }\n  return new LocalTime(Long\n    .fromNumber(milliseconds)\n    .multiply(nanoSecInMillis)\n    .add(Long.fromNumber(nanoseconds)));\n};\n\n/**\n * Creates a new instance of LocalTime from the bytes representation.\n * @param {Buffer} value\n * @returns {LocalTime}\n */\nLocalTime.fromBuffer = function (value) {\n  if (!(value instanceof Buffer)) {\n    throw new TypeError('Expected Buffer, obtained ' + util.inspect(value));\n  }\n  return new LocalTime(new Long(value.readInt32BE(4), value.readInt32BE(0)));\n};\n\n/**\n * Compares this LocalTime with the given one.\n * @param {LocalTime} other time to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n * if the given one is greater.\n */\nLocalTime.prototype.compare = function (other) {\n  return this.value.compare(other.value);\n};\n\n/**\n * Returns true if the value of the LocalTime instance and other are the same\n * @param {LocalTime} other\n * @returns {Boolean}\n */\nLocalTime.prototype.equals = function (other) {\n  return ((other instanceof LocalTime)) && this.compare(other) === 0;\n};\n\n/**\n * Gets the total amount of nanoseconds since midnight for this instance.\n * @returns {Long}\n */\nLocalTime.prototype.getTotalNanoseconds = function () {\n  return this.value;\n};\n\nLocalTime.prototype.inspect = function () {\n  return this.constructor.name + ': ' + this.toString();\n};\n\n/**\n * Returns a big-endian bytes representation of the instance\n * @returns {Buffer}\n */\nLocalTime.prototype.toBuffer = function () {\n  const buffer = utils.allocBufferUnsafe(8);\n  buffer.writeUInt32BE(this.value.getHighBitsUnsigned(), 0);\n  buffer.writeUInt32BE(this.value.getLowBitsUnsigned(), 4);\n  return buffer;\n};\n\n/**\n * Returns the string representation of the instance in the form of hh:MM:ss.ns\n * @returns {String}\n */\nLocalTime.prototype.toString = function () {\n  return formatTime(this._getParts());\n};\n\n/**\n * Gets the string representation of the instance in the form: hh:MM:ss.ns\n * @returns {String}\n */\nLocalTime.prototype.toJSON = function () {\n  return this.toString();\n};\n\n/**\n * @returns {Array.<Number>}\n * @ignore\n */\nLocalTime.prototype._getParts = function () {\n  if (!this._partsCache) {\n    //hours, minutes, seconds and nanos\n    const parts = [0, 0, 0, 0];\n    const secs = this.value.div(nanoSecInSec);\n    //faster modulo\n    //total nanos\n    parts[3] = this.value.subtract(secs.multiply(nanoSecInSec)).toNumber();\n    //seconds\n    parts[2] = secs.toNumber();\n    if (parts[2] >= 60) {\n      //minutes\n      parts[1] = Math.floor(parts[2] / 60);\n      parts[2] = parts[2] % 60;\n    }\n    if (parts[1] >= 60) {\n      //hours\n      parts[0] = Math.floor(parts[1] / 60);\n      parts[1] = parts[1] % 60;\n    }\n    this._partsCache = parts;\n  }\n  return this._partsCache;\n};\n\n/**\n * @param {Array.<Number>} values\n * @private\n */\nfunction formatTime(values) {\n  let result;\n  if (values[0] < 10) {\n    result = '0' + values[0] + ':';\n  }\n  else {\n    result = values[0] + ':';\n  }\n  if (values[1] < 10) {\n    result += '0' + values[1] + ':';\n  }\n  else {\n    result += values[1] + ':';\n  }\n  if (values[2] < 10) {\n    result += '0' + values[2];\n  }\n  else {\n    result += values[2];\n  }\n  if (values[3] > 0) {\n    let nanos = values[3].toString();\n    //nine digits\n    if (nanos.length < 9) {\n      nanos = utils.stringRepeat('0', 9 - nanos.length) + nanos;\n    }\n    let lastPosition;\n    for (let i = nanos.length - 1; i > 0; i--) {\n      if (nanos[i] !== '0') {\n        break;\n      }\n      lastPosition = i;\n    }\n    if (lastPosition) {\n      nanos = nanos.substring(0, lastPosition);\n    }\n    result += '.' + nanos;\n  }\n  return result;\n}\n\nmodule.exports = LocalTime;","\"use strict\";\nconst utils = require('../utils');\n\n/** @module types */\n\n/**\n * Creates a new instance of ResultSet.\n * @class\n * @classdesc Represents the result of a query.\n * @param {Object} response\n * @param {String} host\n * @param {Object} triedHosts\n * @param {Number} speculativeExecutions\n * @param {Number} consistency\n * @param {Boolean} isSchemaInAgreement\n * @constructor\n */\nfunction ResultSet(response, host, triedHosts, speculativeExecutions, consistency, isSchemaInAgreement) {\n  // if no execution was made at all, set to 0.\n  if (speculativeExecutions === -1) {\n    speculativeExecutions = 0;\n  }\n  /**\n   * Information on the execution of a successful query:\n   * @member {Object}\n   * @property {Number} achievedConsistency The consistency level that has been actually achieved by the query.\n   * @property {String} queriedHost The Cassandra host that coordinated this query.\n   * @property {Object} triedHosts Gets the associative array of host that were queried before getting a valid response,\n   * being the last host the one that replied correctly.\n   * @property {Object} speculativeExecutions The number of speculative executions (not including the first) executed before\n   * getting a valid response.\n   * @property {Uuid} traceId Identifier of the trace session.\n   * @property {Array.<string>} warnings Warning messages generated by the server when executing the query.\n   * @property {Boolean} isSchemaInAgreement Whether the cluster had reached schema agreement after the execution of\n   * this query.\n   * <p>\n   *   After a successful schema-altering query (ex: creating a table), the driver will check if\n   *   the cluster's nodes agree on the new schema version. If not, it will keep retrying for a given\n   *   delay (see <code>protocolOptions.maxSchemaAgreementWaitSeconds</code>).\n   * </p>\n   * <p>\n   *   Note that the schema agreement check is only performed for schema-altering queries For other\n   *   query types, this method will always return <code>true</code>. If this method returns <code>false</code>,\n   *   clients can call [Metadata.checkSchemaAgreement()]{@link module:metadata~Metadata#checkSchemaAgreement} later to\n   *   perform the check manually.\n   * </p>\n   */\n  this.info = {\n    queriedHost: host,\n    triedHosts: triedHosts,\n    speculativeExecutions: speculativeExecutions,\n    achievedConsistency: consistency,\n    traceId: null,\n    warnings: null,\n    customPayload: null,\n    isSchemaInAgreement\n  };\n\n  if (response.flags) {\n    this.info.traceId = response.flags.traceId;\n    this.info.warnings = response.flags.warnings;\n    this.info.customPayload = response.flags.customPayload;\n  }\n  /**\n   * Gets an array rows returned by the query, in case the result was buffered.\n   * @type {Array.<Row>}\n   */\n  this.rows = response.rows;\n  /**\n   * Gets the row length of the result, regardless if the result has been buffered or not\n   * @type {Number}\n   */\n  this.rowLength = this.rows ? this.rows.length : response.rowLength;\n  /**\n   * Gets the columns returned in this ResultSet.\n   * @type {Array.<{name, type}>}\n   * @default null\n   */\n  this.columns = null;\n  /**\n   * A string token representing the current page state of query. It can be used in the following executions to\n   * continue paging and retrieve the remained of the result for the query.\n   * @type String\n   * @default null\n   */\n  this.pageState = null;\n  /**\n   * Method used to manually fetch the next page of results.\n   * This method is only exposed when using the {@link Client#eachRow} method and there are more rows available in\n   * following pages.\n   * @type Function\n   */\n  this.nextPage = undefined;\n\n  const meta = response.meta;\n\n  if (meta) {\n    this.columns = meta.columns;\n\n    if (meta.pageState) {\n      this.pageState = meta.pageState.toString('hex');\n\n      // Expose rawPageState internally\n      Object.defineProperty(this, 'rawPageState', { value: meta.pageState, enumerable: false });\n    }\n  }\n}\n\n/**\n * Returns the first row or null if the result rows are empty.\n */\nResultSet.prototype.first = function () {\n  if (this.rows && this.rows.length) {\n    return this.rows[0];\n  }\n  return null;\n};\n\nResultSet.prototype.getPageState = function () {\n  // backward-compatibility\n  return this.pageState;\n};\n\nResultSet.prototype.getColumns = function () {\n  // backward-compatibility\n  return this.columns;\n};\n\n/**\n * When this instance is the result of a conditional update query, it returns whether it was successful.\n * Otherwise, it returns <code>true</code>.\n * <p>\n *   For consistency, this method always returns <code>true</code> for non-conditional queries (although there is\n *   no reason to call the method in that case). This is also the case for conditional DDL statements\n *   (CREATE KEYSPACE... IF NOT EXISTS, CREATE TABLE... IF NOT EXISTS), for which the server doesn't return\n *   information whether it was applied or not.\n * </p>\n */\nResultSet.prototype.wasApplied = function () {\n  if (!this.rows || this.rows.length === 0) {\n    return true;\n  }\n  const firstRow = this.rows[0];\n  const applied = firstRow['[applied]'];\n  return typeof applied === 'boolean' ? applied : true;\n};\n\n/**\n * Gets the iterator function.\n * <p>\n *   Retrieves the iterator of the underlying fetched rows and will not cause the driver to fetch the following\n *   result pages. For more information on result paging,\n *   [visit the documentation]{@link http://docs.datastax.com/en/developer/nodejs-driver/latest/features/paging/}.\n * </p>\n * @alias module:types~ResultSet#@@iterator\n * @example <caption>Using for...of statement</caption>\n * const query = 'SELECT name, email, address FROM users WHERE id = ?';\n * const result = await client.execute(query, [ id ], { prepare: true });\n * for (let row of result) {\n *   console.log(row['email']);\n * }\n * @returns {Iterator.<Row>}\n */\nResultSet.prototype[Symbol.iterator] = function getIterator() {\n  if (!this.rows) {\n    return utils.emptyArray[Symbol.iterator]();\n  }\n  return this.rows[Symbol.iterator]();\n};\n\nmodule.exports = ResultSet;","'use strict';\nconst util = require('util');\nconst stream = require('stream');\n\n/** @module types */\n/**\n * Readable stream using to yield data from a result or a field\n * @constructor\n */\nfunction ResultStream(opt) {\n  stream.Readable.call(this, opt);\n  this.buffer = [];\n  this.paused = true;\n}\n\nutil.inherits(ResultStream, stream.Readable);\n\nResultStream.prototype._read = function() {\n  this.paused = false;\n  if (this.buffer.length === 0) {\n    this._readableState.reading = false;\n  }\n  while (!this.paused && this.buffer.length > 0) {\n    this.paused = !this.push(this.buffer.shift());\n  }\n  if ( !this.paused && !this.buffer.length && this._readNext ) {\n    this._readNext();\n    this._readNext = null;\n  }\n};\n\n/**\n * Allows for throttling, helping nodejs keep the internal buffers reasonably sized.\n * @param {function} readNext function that triggers reading the next result chunk\n */\nResultStream.prototype._valve = function( readNext ) {\n  this._readNext = null;\n  if ( !readNext ) {\n    return;\n  }\n  if ( this.paused || this.buffer.length ) {\n    this._readNext = readNext;\n  }\n  else {\n    readNext();\n  }\n};\n\nResultStream.prototype.add = function (chunk) {\n  this.buffer.push(chunk);\n  this.read(0);\n};\n\nmodule.exports = ResultStream;","\"use strict\";\n/** @module types */\n/**\n * Represents a result row\n * @param {Array} columns\n * @constructor\n */\nfunction Row(columns) {\n  if (!columns) {\n    throw new Error('Columns not defined');\n  }\n  //Private non-enumerable properties, with double underscore to avoid interfering with column names\n  Object.defineProperty(this, '__columns', { value: columns, enumerable: false, writable: false});\n}\n\n/**\n * Returns the cell value.\n * @param {String|Number} columnName Name or index of the column\n */\nRow.prototype.get = function (columnName) {\n  if (typeof columnName === 'number') {\n    //its an index\n    return this[this.__columns[columnName].name];\n  }\n  return this[columnName];\n};\n\n/**\n * Returns an array of the values of the row\n * @returns {Array}\n */\nRow.prototype.values = function () {\n  const valuesArray = [];\n  this.forEach(function (val) {\n    valuesArray.push(val);\n  });\n  return valuesArray;\n};\n\n/**\n * Returns an array of the column names of the row\n * @returns {Array}\n */\nRow.prototype.keys = function () {\n  const keysArray = [];\n  this.forEach(function (val, key) {\n    keysArray.push(key);\n  });\n  return keysArray;\n};\n\n/**\n * Executes the callback for each field in the row, containing the value as first parameter followed by the columnName\n * @param {Function} callback\n */\nRow.prototype.forEach = function (callback) {\n  for (const columnName in this) {\n    if (!this.hasOwnProperty(columnName)) {\n      continue;\n    }\n    callback(this[columnName], columnName);\n  }\n};\n\nmodule.exports = Row;","\"use strict\";\nconst util = require('util');\n/** @module types */\n/**\n * Creates a new sequence of immutable objects with the parameters provided.\n * @class\n * @classdesc A tuple is a sequence of immutable objects.\n * Tuples are sequences, just like [Arrays]{@link Array}. The only difference is that tuples can't be changed.\n * <p>\n *   As tuples can be used as a Map keys, the {@link Tuple#toString toString()} method calls toString of each element,\n *   to try to get a unique string key.\n * </p>\n * @param [arguments] The sequence elements as arguments.\n * @constructor\n */\nfunction Tuple() {\n  let elements = Array.prototype.slice.call(arguments);\n  if (elements.length === 0) {\n    throw new TypeError('Tuple must contain at least one value');\n  }\n  if (elements.length === 1 && util.isArray(elements)) {\n    //The first argument is an array of the elements, use a copy of the array\n    elements = elements[0];\n  }\n \n  /** \n   * Immutable elements of Tuple object.\n   * @type Array\n   */\n  this.elements = elements;\n\n  /**\n   * Returns the number of the elements.\n   * @type Number\n   */\n  this.length = this.elements.length;\n}\n\n/**\n * Creates a new instance of a tuple based on the Array\n * @param {Array} elements\n * @returns {Tuple}\n */\nTuple.fromArray = function (elements) {\n  //Use a copy of an array\n  return new Tuple(elements.slice(0));\n};\n\n/**\n * Returns the value located at the index.\n * @param {Number} index Element index\n */\nTuple.prototype.get = function (index) {\n  return this.elements[index || 0];\n};\n\n/**\n * Returns the string representation of the sequence surrounded by parenthesis, ie: (1, 2).\n * <p>\n *   The returned value attempts to be a unique string representation of its values.\n * </p>\n * @returns {string}\n */\nTuple.prototype.toString = function () {\n  return ('(' +\n    this.elements.reduce(function (prev, x, i) {\n      return prev + (i > 0 ? ',' : '') + x.toString();\n    }, '') +\n    ')');\n};\n\n/**\n * Returns the Array representation of the sequence.\n * @returns {Array}\n */\nTuple.prototype.toJSON = function () {\n  return this.elements;\n};\n\n/**\n * Gets the elements as an array\n * @returns {Array}\n */\nTuple.prototype.values = function () {\n  return this.elements.slice(0);\n};\n\nmodule.exports = Tuple;","'use strict';\nconst util = require('util');\n\n/** @module policies/reconnection */\n/**\n * Base class for Reconnection Policies\n * @constructor\n */\nfunction ReconnectionPolicy() {\n\n}\n\n/**\n * A new reconnection schedule.\n * @returns {{next: function}} An infinite iterator\n */\nReconnectionPolicy.prototype.newSchedule = function () {\n  throw new Error('You must implement a new schedule for the Reconnection class');\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nReconnectionPolicy.prototype.getOptions = function () {\n  return new Map();\n};\n\n/**\n * A reconnection policy that waits a constant time between each reconnection attempt.\n * @param {Number} delay Delay in ms\n * @constructor\n */\nfunction ConstantReconnectionPolicy(delay) {\n  this.delay = delay;\n}\n\nutil.inherits(ConstantReconnectionPolicy, ReconnectionPolicy);\n\n/**\n * A new reconnection schedule that returns the same next delay value\n * @returns {{next: next}} An infinite iterator\n */\nConstantReconnectionPolicy.prototype.newSchedule = function () {\n  const self = this;\n  return {\n    next: function () {\n      return {value: self.delay, done: false};\n    }\n  };\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nConstantReconnectionPolicy.prototype.getOptions = function () {\n  return new Map([['delay', this.delay ]]);\n};\n\n/**\n * A reconnection policy that waits exponentially longer between each\n * reconnection attempt (but keeps a constant delay once a maximum delay is reached).\n * <p>\n *   A random amount of jitter (+/- 15%) will be added to the pure exponential delay value to avoid situations\n *   where many clients are in the reconnection process at exactly the same time. The jitter will never cause the\n *   delay to be less than the base delay, or more than the max delay.\n * </p>\n * @param {Number} baseDelay The base delay in milliseconds to use for the schedules created by this policy.\n * @param {Number} maxDelay The maximum delay in milliseconds to wait between two reconnection attempt.\n * @param {Boolean} startWithNoDelay Determines if the first attempt should be zero delay\n * @constructor\n */\nfunction ExponentialReconnectionPolicy(baseDelay, maxDelay, startWithNoDelay) {\n  this.baseDelay = baseDelay;\n  this.maxDelay = maxDelay;\n  this.startWithNoDelay = startWithNoDelay;\n}\n\nutil.inherits(ExponentialReconnectionPolicy, ReconnectionPolicy);\n\n/**\n * A new schedule that uses an exponentially growing delay between reconnection attempts.\n * @returns {{next: next}} An infinite iterator.\n */\nExponentialReconnectionPolicy.prototype.newSchedule = function* () {\n  let index = this.startWithNoDelay ? -1 : 0;\n\n  while (true) {\n    let delay = 0;\n\n    if (index >= 64) {\n      delay = this.maxDelay;\n    } else if (index !== -1) {\n      delay = Math.min(Math.pow(2, index) * this.baseDelay, this.maxDelay);\n    }\n\n    index++;\n\n    yield this._addJitter(delay);\n  }\n};\n\n/**\n * Adds a random portion of +-15% to the delay provided.\n * Initially, its adds a random value of 15% to avoid reconnection before reaching the base delay.\n * When the schedule reaches max delay, only subtracts a random portion of 15%.\n */\nExponentialReconnectionPolicy.prototype._addJitter = function (value) {\n  if (value === 0) {\n    // Instant reconnection without jitter\n    return value;\n  }\n\n  // Use the formula: 85% + rnd() * 30% to calculate the percentage of the original delay\n  let minPercentage = 0.85;\n  let range = 0.30;\n\n  if (!this.startWithNoDelay && value === this.baseDelay) {\n    // Between 100% to 115% of the original value\n    minPercentage = 1;\n    range = 0.15;\n  } else if (value === this.maxDelay) {\n    // Between 85% to 100% of the original value\n    range = 0.15;\n  }\n\n  return Math.floor(value * (Math.random() * range + minPercentage));\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nExponentialReconnectionPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['baseDelay', this.baseDelay ],\n    ['maxDelay', this.maxDelay ],\n    ['startWithNoDelay', this.startWithNoDelay ]\n  ]);\n};\n\nexports.ReconnectionPolicy = ReconnectionPolicy;\nexports.ConstantReconnectionPolicy = ConstantReconnectionPolicy;\nexports.ExponentialReconnectionPolicy = ExponentialReconnectionPolicy;","'use strict';\n\nconst util = require('util');\nconst errors = require('../errors');\n\n/** @module policies/speculativeExecution */\n\n/**\n * @classdesc\n * The policy that decides if the driver will send speculative queries to the next hosts when the current host takes too\n * long to respond.\n * <p>Note that only idempotent statements will be speculatively retried.</p>\n * @constructor\n * @abstract\n */\nfunction SpeculativeExecutionPolicy() {\n  \n}\n\n/**\n * Initialization method that gets invoked on Client startup.\n * @param {Client} client\n * @abstract\n */\nSpeculativeExecutionPolicy.prototype.init = function (client) {\n\n};\n\n/**\n * Gets invoked at client shutdown, giving the opportunity to the implementor to perform cleanup.\n * @abstract\n */\nSpeculativeExecutionPolicy.prototype.shutdown = function () {\n\n};\n\n/**\n * Gets the plan to use for a new query.\n * Returns an object with a <code>nextExecution()</code> method, which returns a positive number representing the\n * amount of milliseconds to delay the next execution or a non-negative number to avoid further executions.\n * @param {String} keyspace The currently logged keyspace.\n * @param {String|Array<String>} queryInfo The query, or queries in the case of batches, for which to build a plan.\n * @return {{nextExecution: function}}\n * @abstract\n */\nSpeculativeExecutionPolicy.prototype.newPlan = function (keyspace, queryInfo) {\n  throw new Error('You must implement newPlan() method in the SpeculativeExecutionPolicy');\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nSpeculativeExecutionPolicy.prototype.getOptions = function () {\n  return new Map();\n};\n\n/**\n * Creates a new instance of NoSpeculativeExecutionPolicy.\n * @classdesc\n * A {@link SpeculativeExecutionPolicy} that never schedules speculative executions.\n * @constructor\n * @extends {SpeculativeExecutionPolicy}\n */\nfunction NoSpeculativeExecutionPolicy() {\n  this._plan = {\n    nextExecution: function () {\n      return -1;\n    }\n  };\n}\n\nutil.inherits(NoSpeculativeExecutionPolicy, SpeculativeExecutionPolicy);\n\nNoSpeculativeExecutionPolicy.prototype.newPlan = function () {\n  return this._plan;\n};\n\n\n/**\n * Creates a new instance of ConstantSpeculativeExecutionPolicy.\n * @classdesc\n * A {@link SpeculativeExecutionPolicy} that schedules a given number of speculative executions,\n * separated by a fixed delay.\n * @constructor\n * @param {Number} delay The delay between each speculative execution.\n * @param {Number} maxSpeculativeExecutions The amount of speculative executions that should be scheduled after the\n * initial execution. Must be strictly positive.\n * @extends {SpeculativeExecutionPolicy}\n */\nfunction ConstantSpeculativeExecutionPolicy(delay, maxSpeculativeExecutions) {\n  if (!(delay >= 0)) {\n    throw new errors.ArgumentError('delay must be a positive number or zero');\n  }\n  if (!(maxSpeculativeExecutions > 0)) {\n    throw new errors.ArgumentError('maxSpeculativeExecutions must be a positive number');\n  }\n  this._delay = delay;\n  this._maxSpeculativeExecutions = maxSpeculativeExecutions;\n}\n\nutil.inherits(ConstantSpeculativeExecutionPolicy, SpeculativeExecutionPolicy);\n\nConstantSpeculativeExecutionPolicy.prototype.newPlan = function () {\n  let executions = 0;\n  const self = this;\n  return {\n    nextExecution: function () {\n      if (executions++ < self._maxSpeculativeExecutions) {\n        return self._delay;\n      }\n      return -1;\n    }\n  };\n};\n\n/**\n * Gets an associative array containing the policy options.\n */\nConstantSpeculativeExecutionPolicy.prototype.getOptions = function () {\n  return new Map([\n    ['delay', this._delay ],\n    ['maxSpeculativeExecutions', this._maxSpeculativeExecutions ]\n  ]);\n};\n\nexports.NoSpeculativeExecutionPolicy = NoSpeculativeExecutionPolicy;\nexports.SpeculativeExecutionPolicy = SpeculativeExecutionPolicy;\nexports.ConstantSpeculativeExecutionPolicy = ConstantSpeculativeExecutionPolicy;","'use strict';\n\nconst util = require('util');\nconst Long = require('../types').Long;\nconst errors = require('../errors');\n\n/** @module policies/timestampGeneration */\n\n/**\n * Defines the maximum date in milliseconds that can be represented in microseconds using Number ((2 ^ 53) / 1000)\n * @const\n * @private\n */\nconst _maxSafeNumberDate = 9007199254740;\n\n/**\n * A long representing the value 1000\n * @const\n * @private\n */\nconst _longOneThousand = Long.fromInt(1000);\n\n/**\n * Creates a new instance of {@link TimestampGenerator}.\n * @classdesc\n * Generates client-side, microsecond-precision query timestamps.\n * <p>\n *   Given that Cassandra uses those timestamps to resolve conflicts, implementations should generate\n *   monotonically increasing timestamps for successive invocations of {@link TimestampGenerator.next()}.\n * </p>\n * @constructor\n */\nfunction TimestampGenerator() {\n\n}\n\n/**\n * Returns the next timestamp.\n * <p>\n *   Implementors should enforce increasing monotonicity of timestamps, that is,\n *   a timestamp returned should always be strictly greater that any previously returned\n *   timestamp.\n * <p/>\n * <p>\n *   Implementors should strive to achieve microsecond precision in the best possible way,\n *   which is usually largely dependent on the underlying operating system's capabilities.\n * </p>\n * @param {Client} client The {@link Client} instance to generate timestamps to.\n * @returns {Long|Number|null} the next timestamp (in microseconds). If it's equals to <code>null</code>, it won't be\n * sent by the driver, letting the server to generate the timestamp.\n * @abstract\n */\nTimestampGenerator.prototype.next = function (client) {\n  throw new Error('next() must be implemented');\n};\n\n/**\n * A timestamp generator that guarantees monotonically increasing timestamps and logs warnings when timestamps\n * drift in the future.\n * <p>\n *   {@link Date} has millisecond precision and client timestamps require microsecond precision. This generator\n *   keeps track of the last generated timestamp, and if the current time is within the same millisecond as the last,\n *   it fills the microsecond portion of the new timestamp with the value of an incrementing counter.\n * </p>\n * @param {Number} [warningThreshold] Determines how far in the future timestamps are allowed to drift before a\n * warning is logged, expressed in milliseconds. Default: <code>1000</code>.\n * @param {Number} [minLogInterval] In case of multiple log events, it determines the time separation between log\n * events, expressed in milliseconds. Use 0 to disable. Default: <code>1000</code>.\n * @extends {TimestampGenerator}\n * @constructor\n */\nfunction MonotonicTimestampGenerator(warningThreshold, minLogInterval) {\n  if (warningThreshold < 0) {\n    throw new errors.ArgumentError('warningThreshold can not be lower than 0');\n  }\n  this._warningThreshold = warningThreshold || 1000;\n  this._minLogInterval = 1000;\n  if (typeof minLogInterval === 'number') {\n    // A value under 1 will disable logging\n    this._minLogInterval = minLogInterval;\n  }\n  this._micros = -1;\n  this._lastDate = 0;\n  this._lastLogDate = 0;\n}\n\nutil.inherits(MonotonicTimestampGenerator, TimestampGenerator);\n\n/**\n * Returns the current time in milliseconds since UNIX epoch\n * @returns {Number}\n */\nMonotonicTimestampGenerator.prototype.getDate = function () {\n  return Date.now();\n};\n\nMonotonicTimestampGenerator.prototype.next = function (client) {\n  let date = this.getDate();\n  let drifted = 0;\n  if (date > this._lastDate) {\n    this._micros = 0;\n    this._lastDate = date;\n    return this._generateMicroseconds();\n  }\n\n  if (date < this._lastDate) {\n    drifted = this._lastDate - date;\n    date = this._lastDate;\n  }\n  if (++this._micros === 1000) {\n    this._micros = 0;\n    if (date === this._lastDate) {\n      // Move date 1 millisecond into the future\n      date++;\n      drifted++;\n    }\n  }\n  const lastDate = this._lastDate;\n  this._lastDate = date;\n  const result = this._generateMicroseconds();\n  if (drifted >= this._warningThreshold) {\n    // Avoid logging an unbounded amount of times within a clock-skew event or during an interval when more than 1\n    // query is being issued by microsecond\n    const currentLogDate = Date.now();\n    if (this._minLogInterval > 0 && this._lastLogDate + this._minLogInterval <= currentLogDate){\n      const message = util.format(\n        'Timestamp generated using current date was %d milliseconds behind the last generated timestamp (which ' +\n        'millisecond portion was %d), the returned value (%s) is being artificially incremented to guarantee ' +\n        'monotonicity.',\n        drifted, lastDate, result);\n      this._lastLogDate = currentLogDate;\n      client.log('warning', message);\n    }\n  }\n  return result;\n};\n\n/**\n * @private\n * @returns {Number|Long}\n */\nMonotonicTimestampGenerator.prototype._generateMicroseconds = function () {\n  if (this._lastDate < _maxSafeNumberDate) {\n    // We are safe until Jun 06 2255, its faster to perform this operations on Number than on Long\n    // We hope to have native int64 by then :)\n    return this._lastDate * 1000 + this._micros;\n  }\n  return Long\n    .fromNumber(this._lastDate)\n    .multiply(_longOneThousand)\n    .add(Long.fromInt(this._micros));\n};\n\nexports.TimestampGenerator = TimestampGenerator;\nexports.MonotonicTimestampGenerator = MonotonicTimestampGenerator;","'use strict';\n\nconst events = require('events');\nconst RequestTracker = require('./request-tracker');\nconst errors = require('../errors');\nconst format = require('util').format;\n\nconst nanosToMillis = 1000000;\nconst defaultMessageMaxQueryLength = 500;\nconst defaultMaxParameterValueLength = 50;\nconst defaultMaxErrorStackTraceLength = 200;\n\n/**\n * A request tracker that logs the requests executed through the session, according to a set of\n * configurable options.\n * @implements {module:tracker~RequestTracker}\n * @alias module:tracker~RequestLogger\n * @example <caption>Logging slow queries</caption>\n * const requestLogger = new RequestLogger({ slowThreshold: 1000 });\n * requestLogger.emitter.on('show', message => console.log(message));\n * // Add the requestLogger to the client options\n * const client = new Client({ contactPoints, requestTracker: requestLogger });\n */\nclass RequestLogger extends RequestTracker {\n\n  /**\n   * Creates a new instance of {@link RequestLogger}.\n   * @param {Object} options\n   * @param {Number} [options.slowThreshold] The threshold in milliseconds beyond which queries are considered 'slow'\n   * and logged as such by the driver.\n   * @param {Number} [options.requestSizeThreshold] The threshold in bytes beyond which requests are considered 'large'\n   * and logged as such by the driver.\n   * @param {Boolean} [options.logNormalRequests] Determines whether it should emit 'normal' events for every\n   * EXECUTE, QUERY and BATCH request executed successfully, useful only for debugging. This option can be modified\n   * after the client is connected using the property {@link RequestLogger#logNormalRequests}.\n   * @param {Boolean} [options.logErroredRequests] Determines whether it should emit 'failure' events for every\n   * EXECUTE, QUERY and BATCH request execution that resulted in an error. This option can be modified\n   * after the client is connected using the property {@link RequestLogger#logErroredRequests}.\n   * @param {Number} [options.messageMaxQueryLength] The maximum amount of characters that are logged from the query\n   * portion of the message. Defaults to 500.\n   * @param {Number} [options.messageMaxParameterValueLength] The maximum amount of characters of each query parameter\n   * value that will be included in the message. Defaults to 50.\n   * @param {Number} [options.messageMaxErrorStackTraceLength] The maximum amount of characters of the stack trace\n   * that will be included in the message. Defaults to 200.\n   */\n  constructor(options) {\n    super();\n    if (!options) {\n      throw new errors.ArgumentError('RequestLogger options parameter is required');\n    }\n\n    this._options = options;\n\n    /**\n     * Determines whether it should emit 'normal' events for every EXECUTE, QUERY and BATCH request executed\n     * successfully, useful only for debugging\n     * @type {Boolean}\n     */\n    this.logNormalRequests = this._options.logNormalRequests;\n\n    /**\n     * Determines whether it should emit 'failure' events for every EXECUTE, QUERY and BATCH request execution that\n     * resulted in an error\n     * @type {Boolean}\n     */\n    this.logErroredRequests = this._options.logErroredRequests;\n\n    /**\n     * The object instance that emits <code>'slow'</code>, <code>'large'</code>, <code>'normal'</code> and\n     * <code>'failure'</code> events.\n     * @type {EventEmitter}\n     */\n    this.emitter = new events.EventEmitter();\n  }\n\n  /**\n   * Logs message if request execution was deemed too slow, large or if normal requests are logged.\n   * @override\n   */\n  onSuccess(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    if (this._options.slowThreshold > 0 && toMillis(latency) > this._options.slowThreshold) {\n      this._logSlow(host, query, parameters, execOptions, requestLength, responseLength, latency);\n    }\n    else if (this._options.requestSizeThreshold > 0 && requestLength > this._options.requestSizeThreshold) {\n      this._logLargeRequest(host, query, parameters, execOptions, requestLength, responseLength, latency);\n    }\n    else if (this.logNormalRequests) {\n      this._logNormalRequest(host, query, parameters, execOptions, requestLength, responseLength, latency);\n    }\n  }\n\n  /**\n   * Logs message if request execution was too large and/or encountered an error.\n   * @override\n   */\n  onError(host, query, parameters, execOptions, requestLength, err, latency) {\n    if (this._options.requestSizeThreshold > 0 && requestLength > this._options.requestSizeThreshold) {\n      this._logLargeErrorRequest(host, query, parameters, execOptions, requestLength, err, latency);\n    }\n    else if (this.logErroredRequests) {\n      this._logErrorRequest(host, query, parameters, execOptions, requestLength, err, latency);\n    }\n  }\n\n  _logSlow(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    const message = format('[%s] Slow request, took %d ms (%s): %s', host.address, Math.floor(toMillis(latency)),\n      getPayloadSizes(requestLength, responseLength), getStatementInfo(query, parameters, execOptions, this._options));\n    this.emitter.emit('slow', message);\n  }\n\n  _logLargeRequest(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    const message = format('[%s] Request exceeded length, %s (took %d ms): %s', host.address,\n      getPayloadSizes(requestLength, responseLength), ~~toMillis(latency),\n      getStatementInfo(query, parameters, execOptions, this._options));\n    this.emitter.emit('large', message);\n  }\n\n  _logNormalRequest(host, query, parameters, execOptions, requestLength, responseLength, latency) {\n    const message = format('[%s] Request completed normally, took %d ms (%s): %s', host.address, ~~toMillis(latency),\n      getPayloadSizes(requestLength, responseLength), getStatementInfo(query, parameters, execOptions, this._options));\n    this.emitter.emit('normal', message);\n  }\n\n  _logLargeErrorRequest(host, query, parameters, execOptions, requestLength, err, latency) {\n    const maxStackTraceLength = this._options.messageMaxErrorStackTraceLength || defaultMaxErrorStackTraceLength;\n    const message = format('[%s] Request exceeded length and execution failed, %s (took %d ms): %s; error: %s',\n      host.address, getPayloadSizes(requestLength), ~~toMillis(latency),\n      getStatementInfo(query, parameters, execOptions, this._options), err.stack.substr(0, maxStackTraceLength));\n\n    // Use 'large' event and not 'failure' as this log is caused by exceeded length\n    this.emitter.emit('large', message);\n  }\n\n  _logErrorRequest(host, query, parameters, execOptions, requestLength, err, latency) {\n    const maxStackTraceLength = this._options.messageMaxErrorStackTraceLength || defaultMaxErrorStackTraceLength;\n    const message = format('[%s] Request execution failed, took %d ms (%s): %s; error: %s', host.address,\n      ~~toMillis(latency), getPayloadSizes(requestLength),\n      getStatementInfo(query, parameters, execOptions, this._options), err.stack.substr(0, maxStackTraceLength));\n\n    // Avoid using 'error' as its a special event\n    this.emitter.emit('failure', message);\n  }\n}\n\nfunction toMillis(latency) {\n  return latency[0] * 1000 + latency[1] / nanosToMillis;\n}\n\nfunction getStatementInfo(query, parameters, execOptions, options) {\n  const maxQueryLength = options.messageMaxQueryLength || defaultMessageMaxQueryLength;\n  const maxParameterLength = options.messageMaxParameterValueLength || defaultMaxParameterValueLength;\n\n  if (Array.isArray(query)) {\n    return getBatchStatementInfo(query, execOptions, maxQueryLength, maxParameterLength);\n  }\n\n  // String concatenation is usually faster than Array#join() in V8\n  let message = query.substr(0, maxQueryLength);\n  const remaining = maxQueryLength - message.length - 1;\n  message += getParametersInfo(parameters, remaining, maxParameterLength);\n\n  if (!execOptions.isPrepared()) {\n    // This part of the message is not accounted for in \"maxQueryLength\"\n    message += ' (not prepared)';\n  }\n\n  return message;\n}\n\nfunction getBatchStatementInfo(queries, execOptions, maxQueryLength, maxParameterLength) {\n  // This part of the message is not accounted for in \"maxQueryLength\"\n  let message = (execOptions.isBatchLogged() ? 'LOGGED ' : '') + 'BATCH w/ ' + queries.length +\n    (!execOptions.isPrepared() ? ' not prepared' : '') + ' queries (';\n  let remaining = maxQueryLength;\n  let i;\n\n  for (i = 0; i < queries.length && remaining > 0; i++) {\n    let q = queries[i];\n    const params = q.params;\n    if (typeof q !== 'string') {\n      q = q.query;\n    }\n\n    if (i > 0) {\n      message += ',';\n      remaining--;\n    }\n\n    const queryLength = Math.min(remaining, q.length);\n    message += q.substr(0, queryLength);\n    remaining -= queryLength;\n\n    if (remaining <= 0) {\n      break;\n    }\n\n    const parameters = getParametersInfo(params, remaining, maxParameterLength);\n    remaining -= parameters.length;\n    message += parameters;\n  }\n\n  message += i < queries.length ? ',...)' : ')';\n  return message;\n}\n\nfunction getParametersInfo(params, remaining, maxParameterLength) {\n  if (remaining <= 3) {\n    // We need at least 3 chars to describe the parameters\n    // its OK to add more chars in an effort to be descriptive\n    return ' [...]';\n  }\n\n  if (!params) {\n    return ' []';\n  }\n\n  let paramStringifier = (index, length) => formatParam(params[index], length);\n  if (!Array.isArray(params)) {\n    const obj = params;\n    params = Object.keys(params);\n    paramStringifier = (index, length) => {\n      const key = params[index];\n      let result = key.substr(0, length);\n      const rem = length - result.length - 1;\n      if (rem <= 0) {\n        return result;\n      }\n      result += \":\" + formatParam(obj[key], rem);\n      return result;\n    };\n  }\n\n  let message = ' [';\n  let i;\n  for (i = 0; remaining > 0 && i < params.length; i++) {\n    if (i > 0) {\n      message += ',';\n      remaining--;\n    }\n\n    const paramString = paramStringifier(i, Math.min(maxParameterLength, remaining));\n    remaining -= paramString.length;\n    message += paramString;\n  }\n\n  if (i < params.length) {\n    message += '...';\n  }\n\n  message += ']';\n  return message;\n}\n\nfunction formatParam(value, maxLength) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  if (value === null) {\n    return 'null';\n  }\n\n  return value.toString().substr(0, maxLength);\n}\n\nfunction getPayloadSizes(requestLength, responseLength) {\n  let message = 'request size ' + formatSize(requestLength);\n  if (responseLength !== undefined) {\n    message += ' / response size ' + formatSize(responseLength);\n  }\n  return message;\n}\n\nfunction formatSize(length) {\n  return length > 1000 ? Math.round(length / 1024) + ' KB' : length + ' bytes';\n}\n\nmodule.exports = RequestLogger;","'use strict';\n\nconst ClientMetrics = require('./client-metrics');\nconst EventEmitter = require('events');\n\n/**\n * A default implementation of [ClientMetrics]{@link module:metrics~ClientMetrics} that exposes the driver events as\n * Node.js events.\n * <p>\n *   An instance of [DefaultMetrics]{@link module:metrics~DefaultMetrics} is configured by default in the client,\n *   you can access this instance using [Client#metrics]{@link Client#metrics} property.\n * </p>\n * @implements {module:metrics~ClientMetrics}\n * @alias module:metrics~DefaultMetrics\n * @example <caption>Listening to events emitted</caption>\n * defaultMetrics.errors.on('increment', err => totalErrors++);\n * defaultMetrics.errors.clientTimeout.on('increment', () => clientTimeoutErrors++);\n * defaultMetrics.speculativeRetries.on('increment', () => specExecsCount++);\n * defaultMetrics.responses.on('increment', latency => myHistogram.record(latency));\n */\nclass DefaultMetrics extends ClientMetrics {\n  /**\n   * Creates a new instance of [DefaultMetrics]{@link module:metrics~DefaultMetrics}.\n   */\n  constructor() {\n    super();\n\n    /**\n     * Emits all the error events.\n     * <p>Use each of the properties to measure events of specific errors.</p>\n     * @type {EventEmitter}\n     * @property {EventEmitter} authentication Emits the authentication timeout error events.\n     * @property {EventEmitter} clientTimeout Emits the client timeout error events.\n     * @property {EventEmitter} connection Emits the connection error events.\n     * @property {EventEmitter} readTimeout Emits the read timeout error events obtained from the server.\n     * @property {EventEmitter} other Emits the error events, that are not part of the other categories.\n     * @property {EventEmitter} unavailable Emits the unavailable error events obtained from the server.\n     * @property {EventEmitter} writeTimeout Emits the write timeout error events obtained from the server\n     */\n    this.errors = new EventEmitter();\n    this.errors.authentication = new EventEmitter();\n    this.errors.clientTimeout = new EventEmitter();\n    this.errors.connection = new EventEmitter();\n    this.errors.other = new EventEmitter();\n    this.errors.readTimeout = new EventEmitter();\n    this.errors.unavailable = new EventEmitter();\n    this.errors.writeTimeout = new EventEmitter();\n\n    /**\n     * Emits all the retry events.\n     * <p>Use each of the properties to measure events of specific retries.</p>\n     * @type {EventEmitter}\n     * @property {EventEmitter} clientTimeout Emits when an execution is retried as a result of an client timeout.\n     * @property {EventEmitter} other Emits the error events, that are not part of the other categories.\n     * @property {EventEmitter} readTimeout Emits an execution is retried as a result of an read timeout error from the\n     * server (coordinator to replica).\n     * @property {EventEmitter} unavailable Emits an execution is retried as a result of an unavailable error from the\n     * server.\n     * @property {EventEmitter} writeTimeout Emits an execution is retried as a result of a write timeout error from the\n     * server (coordinator to replica).\n     */\n    this.retries = new EventEmitter();\n    this.retries.clientTimeout = new EventEmitter();\n    this.retries.other = new EventEmitter();\n    this.retries.readTimeout = new EventEmitter();\n    this.retries.unavailable = new EventEmitter();\n    this.retries.writeTimeout = new EventEmitter();\n\n    /**\n     * Emits events when a speculative execution is started.\n     * @type {EventEmitter}\n     */\n    this.speculativeExecutions = new EventEmitter();\n\n    /**\n     * Emits events when an error is ignored by the retry policy.\n     * @type {EventEmitter}\n     */\n    this.ignoredErrors = new EventEmitter();\n\n    /**\n     * Emits events when a response message is obtained.\n     * @type {EventEmitter}\n     * @property {EventEmitter} success Emits when a response was obtained as the result of a successful execution.\n     */\n    this.responses = new EventEmitter();\n    this.responses.success = new EventEmitter();\n  }\n\n  /** @override */\n  onAuthenticationError(e) {\n    this.errors.authentication.emit('increment', e);\n    this.errors.emit('increment', e);}\n\n  /** @override */\n  onConnectionError(e) {\n    this.errors.connection.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onReadTimeoutError(e) {\n    this.errors.readTimeout.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onWriteTimeoutError(e) {\n    this.errors.writeTimeout.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onUnavailableError(e) {\n    this.errors.unavailable.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onClientTimeoutError(e) {\n    this.errors.clientTimeout.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onOtherError(e) {\n    this.errors.other.emit('increment', e);\n    this.errors.emit('increment', e);\n  }\n\n  /** @override */\n  onClientTimeoutRetry(e) {\n    this.retries.clientTimeout.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onOtherErrorRetry(e) {\n    this.retries.other.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onReadTimeoutRetry(e) {\n    this.retries.readTimeout.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onUnavailableRetry(e) {\n    this.retries.unavailable.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onWriteTimeoutRetry(e) {\n    this.retries.writeTimeout.emit('increment', e);\n    this.retries.emit('increment', e);\n  }\n\n  /** @override */\n  onIgnoreError(e) {\n    this.ignoredErrors.emit('increment', e);\n  }\n\n  /** @override */\n  onSpeculativeExecution() {\n    this.speculativeExecutions.emit('increment');\n  }\n\n  /** @override */\n  onSuccessfulResponse(latency) {\n    this.responses.success.emit('increment', latency);\n  }\n\n  /** @override */\n  onResponse(latency) {\n    this.responses.emit('increment', latency);\n  }\n}\n\nmodule.exports = DefaultMetrics;","\"use strict\";\nconst events = require('events');\nconst util = require('util');\n\nconst utils = require('./utils.js');\nconst errors = require('./errors.js');\nconst types = require('./types');\nconst ProfileManager = require('./execution-profile').ProfileManager;\nconst requests = require('./requests');\nconst clientOptions = require('./client-options');\nconst ClientState = require('./metadata/client-state');\nconst description = require('../package.json').description;\nconst version = require('../package.json').version;\nconst DefaultExecutionOptions = require('./execution-options').DefaultExecutionOptions;\n\n// Allow injection of the following modules\n/* eslint-disable prefer-const */\nlet ControlConnection = require('./control-connection');\nlet RequestHandler = require('./request-handler');\nlet PrepareHandler = require('./prepare-handler');\n/* eslint-enable prefer-const */\n\n/**\n * Max amount of pools being warmup in parallel, when warmup is enabled\n * @private\n */\nconst warmupLimit = 32;\n\n\n/**\n * Client options\n * @typedef {Object} ClientOptions\n * @property {Array.<string>} contactPoints\n * Array of addresses or host names of the nodes to add as contact points.\n * <p>\n *  Contact points are addresses of Cassandra nodes that the driver uses to discover the cluster topology.\n * </p>\n * <p>\n *  Only one contact point is required (the driver will retrieve the address of the other nodes automatically),\n *  but it is usually a good idea to provide more than one contact point, because if that single contact point is\n *  unavailable, the driver will not be able to initialize correctly.\n * </p>\n * @property {String} [localDataCenter] The local data center to use.\n * <p>\n *   If using DCAwareRoundRobinPolicy (default), this option is required and only hosts from this data center are\n *   connected to and used in query plans.\n * </p>\n * @property {String} keyspace The logged keyspace for all the connections created within the {@link Client} instance.\n * @property {Number} refreshSchemaDelay The default window size in milliseconds used to debounce node list and schema\n * refresh metadata requests. Default: 1000.\n * @property {Boolean} isMetadataSyncEnabled Determines whether client-side schema metadata retrieval and update is\n * enabled.\n * <p>Setting this value to <code>false</code> will cause keyspace information not to be automatically loaded, affecting\n * replica calculation per token in the different keyspaces. When disabling metadata synchronization, use\n * [Metadata.refreshKeyspaces()]{@link module:metadata~Metadata#refreshKeyspaces} to keep keyspace information up to\n * date or token-awareness will not work correctly.</p>\n * Default: <code>true</code>.\n * @property {Boolean} prepareOnAllHosts Determines if the driver should prepare queries on all hosts in the cluster.\n * Default: <code>true</code>.\n * @property {Boolean} rePrepareOnUp Determines if the driver should re-prepare all cached prepared queries on a\n * host when it marks it back up.\n * Default: <code>true</code>.\n * @property {Number} maxPrepared Determines the maximum amount of different prepared queries before evicting items\n * from the internal cache. Reaching a high threshold hints that the queries are not being reused, like when\n * hard-coding parameter values inside the queries.\n * Default: <code>500</code>.\n * @property {Object} policies\n * @property {LoadBalancingPolicy} policies.loadBalancing The load balancing policy instance to be used to determine\n * the coordinator per query.\n * @property {RetryPolicy} policies.retry The retry policy.\n * @property {ReconnectionPolicy} policies.reconnection The reconnection policy to be used.\n * @property {AddressTranslator} policies.addressResolution The address resolution policy.\n * @property {SpeculativeExecutionPolicy} policies.speculativeExecution The <code>SpeculativeExecutionPolicy</code>\n * instance to be used to determine if the client should send speculative queries when the selected host takes more\n * time than expected.\n * <p>\n *   Default: <code>[NoSpeculativeExecutionPolicy]{@link\n  *   module:policies/speculativeExecution~NoSpeculativeExecutionPolicy}</code>\n * </p>\n * @property {TimestampGenerator} policies.timestampGeneration The client-side\n * [query timestamp generator]{@link module:policies/timestampGeneration~TimestampGenerator}.\n * <p>\n *   Default: <code>[MonotonicTimestampGenerator]{@link module:policies/timestampGeneration~MonotonicTimestampGenerator}\n *   </code>\n * </p>\n * <p>Use <code>null</code> to disable client-side timestamp generation.</p>\n * @property {QueryOptions} queryOptions Default options for all queries.\n * @property {Object} pooling Pooling options.\n * @property {Number} pooling.heartBeatInterval The amount of idle time in milliseconds that has to pass before the\n * driver issues a request on an active connection to avoid idle time disconnections. Default: 30000.\n * @property {Object} pooling.coreConnectionsPerHost Associative array containing amount of connections per host\n * distance.\n * @property {Number} pooling.maxRequestsPerConnection The maximum number of requests per connection. The default\n * value is:\n * <ul>\n *   <li>For modern protocol versions (v3 and above): 2048</li>\n *   <li>For older protocol versions (v1 and v2): 128</li>\n * </ul>\n * @property {Boolean} pooling.warmup Determines if all connections to hosts in the local datacenter must be opened on\n * connect. Default: true.\n * @property {Object} protocolOptions\n * @property {Number} protocolOptions.port The port to use to connect to the Cassandra host. If not set through this\n * method, the default port (9042) will be used instead.\n * @property {Number} protocolOptions.maxSchemaAgreementWaitSeconds The maximum time in seconds to wait for schema\n * agreement between nodes before returning from a DDL query. Default: 10.\n * @property {Number} protocolOptions.maxVersion When set, it limits the maximum protocol version used to connect to\n * the nodes.\n * Useful for using the driver against a cluster that contains nodes with different major/minor versions of Cassandra.\n * @property {Boolean} protocolOptions.noCompact When set to true, enables the NO_COMPACT startup option.\n * <p>\n * When this option is supplied <code>SELECT</code>, <code>UPDATE</code>, <code>DELETE</code>, and <code>BATCH</code>\n * statements on <code>COMPACT STORAGE</code> tables function in \"compatibility\" mode which allows seeing these tables\n * as if they were \"regular\" CQL tables.\n * </p>\n * <p>\n * This option only effects interactions with interactions with tables using <code>COMPACT STORAGE</code> and is only\n * supported by C* 3.0.16+, 3.11.2+, 4.0+ and DSE 6.0+.\n * </p>\n * @property {Object} socketOptions\n * @property {Number} socketOptions.connectTimeout Connection timeout in milliseconds. Default: 5000.\n * @property {Number} socketOptions.defunctReadTimeoutThreshold Determines the amount of requests that simultaneously\n * have to timeout before closing the connection. Default: 64.\n * @property {Boolean} socketOptions.keepAlive Whether to enable TCP keep-alive on the socket. Default: true.\n * @property {Number} socketOptions.keepAliveDelay TCP keep-alive delay in milliseconds. Default: 0.\n * @property {Number} socketOptions.readTimeout Per-host read timeout in milliseconds.\n * <p>\n *   Please note that this is not the maximum time a call to {@link Client#execute} may have to wait;\n *   this is the maximum time that call will wait for one particular Cassandra host, but other hosts will be tried if\n *   one of them timeout. In other words, a {@link Client#execute} call may theoretically wait up to\n *   <code>readTimeout * number_of_cassandra_hosts</code> (though the total number of hosts tried for a given query also\n *   depends on the LoadBalancingPolicy in use).\n * <p>When setting this value, keep in mind the following:</p>\n * <ul>\n *   <li>the timeout settings used on the Cassandra side (*_request_timeout_in_ms in cassandra.yaml) should be taken\n *   into account when picking a value for this read timeout. You should pick a value a couple of seconds greater than\n *   the Cassandra timeout settings.\n *   </li>\n *   <li>\n *     the read timeout is only approximate and only control the timeout to one Cassandra host, not the full query.\n *   </li>\n * </ul>\n * Setting a value of 0 disables read timeouts. Default: <code>12000</code>.\n * @property {Boolean} socketOptions.tcpNoDelay When set to true, it disables the Nagle algorithm. Default: true.\n * @property {Number} socketOptions.coalescingThreshold Buffer length in bytes use by the write queue before flushing\n * the frames. Default: 8000.\n * @property {AuthProvider} authProvider Provider to be used to authenticate to an auth-enabled cluster.\n * @property {RequestTracker} requestTracker The instance of RequestTracker used to monitor or log requests executed\n * with this instance.\n * @property {Object} sslOptions Client-to-node ssl options. When set the driver will use the secure layer.\n * You can specify cert, ca, ... options named after the Node.js <code>tls.connect()</code> options.\n * <p>\n *   It uses the same default values as Node.js <code>tls.connect()</code> except for <code>rejectUnauthorized</code>\n *   which is set to <code>false</code> by default (for historical reasons). This setting is likely to change\n *   in upcoming versions to enable validation by default.\n * </p>\n * @property {Object} encoding\n * @property {Function} encoding.map Map constructor to use for Cassandra map<k,v> type encoding and decoding.\n * If not set, it will default to Javascript Object with map keys as property names.\n * @property {Function} encoding.set Set constructor to use for Cassandra set<k> type encoding and decoding.\n * If not set, it will default to Javascript Array.\n * @property {Boolean} encoding.copyBuffer Determines if the network buffer should be copied for buffer based data\n * types (blob, uuid, timeuuid and inet).\n * <p>\n *   Setting it to true will cause that the network buffer is copied for each row value of those types,\n *   causing additional allocations but freeing the network buffer to be reused.\n *   Setting it to true is a good choice for cases where the Row and ResultSet returned by the queries are long-lived\n *   objects.\n * </p>\n * <p>\n *  Setting it to false will cause less overhead and the reference of the network buffer to be maintained until the row\n *  / result set are de-referenced.\n *  Default: true.\n * </p>\n * @property {Boolean} encoding.useUndefinedAsUnset Valid for Cassandra 2.2 and above. Determines that, if a parameter\n * is set to\n * <code>undefined</code> it should be encoded as <code>unset</code>.\n * <p>\n *  By default, ECMAScript <code>undefined</code> is encoded as <code>null</code> in the driver. Cassandra 2.2\n *  introduced the concept of unset.\n *  At driver level, you can set a parameter to unset using the field <code>types.unset</code>. Setting this flag to\n *  true allows you to use ECMAScript undefined as Cassandra <code>unset</code>.\n * </p>\n * <p>\n *   Default: true.\n * </p>\n * @property {Boolean} encoding.useBigIntAsLong Use [BigInt ECMAScript type](https://tc39.github.io/proposal-bigint/)\n * to represent CQL bigint and counter data types.\n * @property {Boolean} encoding.useBigIntAsVarint Use [BigInt ECMAScript type](https://tc39.github.io/proposal-bigint/)\n * to represent CQL varint data type.\n * @property {Array.<ExecutionProfile>} profiles The array of [execution profiles]{@link ExecutionProfile}.\n * @property {Function} promiseFactory Function to be used to create a <code>Promise</code> from a\n * callback-style function.\n * <p>\n *   Promise libraries often provide different methods to create a promise. For example, you can use Bluebird's\n *   <code>Promise.fromCallback()</code> method.\n * </p>\n * <p>\n *   By default, the driver will use the\n *   [Promise constructor]{@link https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise}.\n * </p>\n */\n\n/**\n * Query options\n * @typedef {Object} QueryOptions\n * @property {Boolean} [autoPage] Determines if the driver must retrieve the following result pages automatically.\n * <p>\n *   This setting is only considered by the [Client#eachRow()]{@link Client#eachRow} method. For more information,\n *   check the\n *   [paging results documentation]{@link http://docs.datastax.com/en/developer/nodejs-driver/latest/features/paging/}.\n * </p>\n * @property {Boolean} [captureStackTrace] Determines if the stack trace before the query execution should be\n * maintained.\n * <p>\n *   Useful for debugging purposes, it should be set to <code>false</code> under production environment as it adds an\n *   unnecessary overhead to each execution.\n * </p>\n * Default: false.\n * @property {Number} [consistency] [Consistency level]{@link module:types~consistencies}. Default: localOne.\n * @property {Object} [customPayload] Key-value payload to be passed to the server. On the Cassandra side, \n * implementations of QueryHandler can use this data.\n * @property {String|ExecutionProfile} [executionProfile] Name or instance of the [profile]{@link ExecutionProfile} to\n * be used for this execution. If not set, it will the use \"default\" execution profile.\n * @property {Number} [fetchSize] Amount of rows to retrieve per page.\n * @property {Array|Array<Array>} [hints] Type hints for parameters given in the query, ordered as for the parameters.\n * <p>For batch queries, an array of such arrays, ordered as with the queries in the batch.</p>\n * @property {Host} [host] The host that should handle the query.\n * <p>\n *   Use of this option is <em>heavily discouraged</em> and should only be used in the following cases:\n * </p>\n * <ol>\n *   <li>\n *     Querying node-local tables, such as tables in the <code>system</code> and <code>system_views</code>\n *     keyspaces.\n *   </li>\n *   <li>\n *     Applying a series of schema changes, where it may be advantageous to execute schema changes in sequence on the\n *     same node.\n *   </li>\n * </ol> \n * <p>\n *   Configuring a specific host causes the configured\n *   [LoadBalancingPolicy]{@link module:policies/loadBalancing~LoadBalancingPolicy} to be completely bypassed.\n *   However, if the load balancing policy dictates that the host is at a\n *   [distance of ignored]{@link module:types~distance} or there is no active connectivity to the host, the request will\n *   fail with a [NoHostAvailableError]{@link module:errors~NoHostAvailableError}.\n * </p>\n * @property {Boolean} [isIdempotent] Defines whether the query can be applied multiple times without changing the result\n * beyond the initial application.\n * <p>\n *   The query execution idempotence can be used at [RetryPolicy]{@link module:policies/retry~RetryPolicy} level to\n *   determine if an statement can be retried in case of request error or write timeout.\n * </p>\n * <p>Default: <code>false</code>.</p>\n * @property {String} [keyspace] Specifies the keyspace for the query. Used for routing within the driver, this\n * property is suitable when the query operates on a different keyspace than the current {@link Client#keyspace}.\n * <p>\n *   This property should only be set manually by the user when the query operates on a different keyspace than\n *   the current {@link Client#keyspace} and using either batch or non-prepared query executions.\n * </p>\n * @property {Boolean} [logged] Determines if the batch should be written to the batchlog. Only valid for\n * [Client#batch()]{@link Client#batch}, it will be ignored by other methods. Default: true.\n * @property {Boolean} [counter] Determines if its a counter batch. Only valid for\n * [Client#batch()]{@link Client#batch}, it will be ignored by other methods. Default: false.\n * @property {Buffer|String} [pageState] Buffer or string token representing the paging state.\n * <p>Useful for manual paging, if provided, the query will be executed starting from a given paging state.</p>\n * @property {Boolean} [prepare] Determines if the query must be executed as a prepared statement.\n * @property {Number} [readTimeout] When defined, it overrides the default read timeout\n * (<code>socketOptions.readTimeout</code>) in milliseconds for this execution per coordinator.\n * <p>\n *   Suitable for statements for which the coordinator may allow a longer server-side timeout, for example aggregation\n *   queries.\n * </p>\n * <p>\n *   A value of <code>0</code> disables client side read timeout for the execution. Default: <code>undefined</code>.\n * </p>\n * @property {RetryPolicy} [retry] Retry policy for the query.\n * <p>\n *   This property can be used to specify a different [retry policy]{@link module:policies/retry} to the one specified\n *   in the {@link ClientOptions}.policies.\n * </p>\n * @property {Array} [routingIndexes] Index of the parameters that are part of the partition key to determine\n * the routing.\n * @property {Buffer|Array} [routingKey] Partition key(s) to determine which coordinator should be used for the query.\n * @property {Array} [routingNames] Array of the parameters names that are part of the partition key to determine the\n * routing. Only valid for non-prepared requests, it's recommended that you use the prepare flag instead.\n * @property {Number} [serialConsistency] Serial consistency is the consistency level for the serial phase of\n * conditional updates.\n * This option will be ignored for anything else that a conditional update/insert.\n * @property {Number|Long} [timestamp] The default timestamp for the query in microseconds from the unix epoch\n * (00:00:00, January 1st, 1970).\n * <p>If provided, this will replace the server side assigned timestamp as default timestamp.</p>\n * <p>Use [generateTimestamp()]{@link module:types~generateTimestamp} utility method to generate a valid timestamp\n * based on a Date and microseconds parts.</p>\n * @property {Boolean} [traceQuery] Enable query tracing for the execution. Use query tracing to diagnose performance\n * problems related to query executions. Default: false.\n * <p>To retrieve trace, you can call [Metadata.getTrace()]{@link module:metadata~Metadata#getTrace} method.</p>\n */\n\n/**\n * Creates a new instance of {@link Client}.\n * @classdesc\n * A Client holds connections to a Cassandra cluster, allowing it to be queried.\n * Each Client instance maintains multiple connections to the cluster nodes,\n * provides [policies]{@link module:policies} to choose which node to use for each query,\n * and handles [retries]{@link module:policies/retry} for failed query (when it makes sense), etc...\n * <p>\n * Client instances are designed to be long-lived and usually a single instance is enough\n * per application. As a given Client can only be \"logged\" into one keyspace at\n * a time (where the \"logged\" keyspace is the one used by query if the query doesn't\n * explicitly use a fully qualified table name), it can make sense to create one\n * client per keyspace used. This is however not necessary to query multiple keyspaces\n * since it is always possible to use a single session with fully qualified table name\n * in queries.\n * </p>\n * @extends EventEmitter\n * @param {ClientOptions} options The options for this instance.\n * @example <caption>Creating a new client instance</caption>\n * const client = new Client({ contactPoints: ['192.168.1.100'], localDataCenter: 'datacenter1' });\n * client.connect(function (err) {\n *   if (err) return console.error(err);\n *   console.log('Connected to cluster with %d host(s): %j', client.hosts.length, client.hosts.keys());\n * });\n * @example <caption>Executing a query</caption>\n * // calling #execute() can be made without previously calling #connect(), as internally\n * // it will ensure it's connected before attempting to execute the query\n * client.execute('SELECT key FROM system.local', function (err, result) {\n *   if (err) return console.error(err);\n *   const row = result.first();\n *   console.log(row['key']);\n * });\n * @example <caption>Executing a query with promise-based API</caption>\n * const result = await client.execute('SELECT key FROM system.local');\n * const row = result.first();\n * console.log(row['key']);\n * @constructor\n */\nfunction Client(options) {\n  events.EventEmitter.call(this);\n  this.options = clientOptions.extend({ logEmitter: this.emit.bind(this) }, options);\n  Object.defineProperty(this, 'profileManager', { value: new ProfileManager(this.options) });\n  Object.defineProperty(this, 'controlConnection', {\n    value: new ControlConnection(this.options, this.profileManager), writable: true }\n  );\n  //Unlimited amount of listeners for internal event queues by default\n  this.setMaxListeners(0);\n  this.connected = false;\n  this.isShuttingDown = false;\n  /**\n   * Gets the name of the active keyspace.\n   * @type {String}\n   */\n  this.keyspace = options.keyspace;\n  /**\n   * Gets the schema and cluster metadata information.\n   * @type {Metadata}\n   */\n  this.metadata = this.controlConnection.metadata;\n  /**\n   * Gets an associative array of cluster hosts.\n   * @type {HostMap}\n   */\n  this.hosts = this.controlConnection.hosts;\n\n  /**\n   * The [ClientMetrics]{@link module:metrics~ClientMetrics} instance used to expose measurements of its internal\n   * behavior and of the server as seen from the driver side.\n   * <p>By default, a [DefaultMetrics]{@link module:metrics~DefaultMetrics} instance is used.</p>\n   * @type {ClientMetrics}\n   */\n  this.metrics = this.options.metrics;\n}\n\nutil.inherits(Client, events.EventEmitter);\n\n/**\n * Emitted when a new host is added to the cluster.\n * <ul>\n *   <li>{@link Host} The host being added.</li>\n * </ul>\n * @event Client#hostAdd\n */\n/**\n * Emitted when a host is removed from the cluster\n * <ul>\n *   <li>{@link Host} The host being removed.</li>\n * </ul>\n * @event Client#hostRemove\n */\n/**\n * Emitted when a host in the cluster changed status from down to up.\n * <ul>\n *   <li>{@link Host host} The host that changed the status.</li>\n * </ul>\n * @event Client#hostUp\n */\n/**\n * Emitted when a host in the cluster changed status from up to down.\n * <ul>\n *   <li>{@link Host host} The host that changed the status.</li>\n * </ul>\n * @event Client#hostDown\n */\n\n/**\n * Tries to connect to one of the [contactPoints]{@link ClientOptions} and discovers the rest the nodes of the cluster.\n * <p>\n *   If a <code>callback</code> is provided, it will invoke the callback when the client is connected. Otherwise,\n *   it will return a <code>Promise</code>.\n * </p>\n * <p>\n *   If the {@link Client} is already connected, it invokes callback immediately (when provided) or the promise is\n *   fulfilled .\n * </p>\n * @example <caption>Callback-based execution</caption>\n * client.connect(function (err) {\n *   if (err) return console.error(err);\n *   console.log('Connected to cluster with %d host(s): %j', client.hosts.length, client.hosts.keys());\n * });\n * @example <caption>Promise-based execution</caption>\n * await client.connect();\n * @param {function} [callback] The callback is invoked when the pool is connected it failed to connect.\n */\nClient.prototype.connect = function (callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, this._connectCb);\n};\n\n/**\n * @param {Function} callback\n * @private\n */\nClient.prototype._connectCb = function (callback) {\n  if (this.connected) {\n    return callback();\n  }\n  if (this.isShuttingDown) {\n    //it is being shutdown, don't allow further calls to connect()\n    return callback(new errors.NoHostAvailableError(null, 'Connecting after shutdown is not supported'));\n  }\n  this.once('connected', callback);\n  if (this.connecting) {\n    //the listener to connect was added, move on\n    return;\n  }\n  this.connecting = true;\n  const self = this;\n  this.log('info', util.format(\"Connecting to cluster using '%s' version %s\", description, version));\n  utils.series([\n    function initControlConnection(next) {\n      self.controlConnection.init(next);\n    },\n    function initLoadBalancingPolicy(next) {\n      self.hosts = self.controlConnection.hosts;\n      self.profileManager.init(self, self.hosts, next);\n    },\n    function setKeyspace(next) {\n      if (!self.keyspace) {\n        return next();\n      }\n      RequestHandler.setKeyspace(self, next);\n    },\n    function setPoolOptionsAndWarmup(next) {\n      clientOptions.setProtocolDependentDefaults(self.options, self.controlConnection.protocolVersion);\n\n      if (!self.options.pooling.warmup) {\n        return next();\n      }\n      self._warmup(next);\n    }\n  ], function connectFinished(err) {\n    if (err) {\n      // We should close the pools (if any) and reset the state to allow successive calls to connect()\n      return self.controlConnection.reset(function () {\n        self.connected = false;\n        self.connecting = false;\n        self.emit('connected', err);\n      });\n    }\n    self._setHostListeners();\n    // Set the distance of the control connection host relatively to this instance\n    self.profileManager.getDistance(self.controlConnection.host);\n    self.connected = true;\n    self.connecting = false;\n    self.emit('connected');\n  });\n};\n\n/**\n * Executes a query on an available connection.\n * <p>\n *   If a <code>callback</code> is provided, it will invoke the callback when the execution completes. Otherwise,\n *   it will return a <code>Promise</code>.\n * </p>\n * <p>The query can be prepared (recommended) or not depending on {@link QueryOptions}.prepare flag.</p>\n * <p>\n *   Some executions failures can be handled transparently by the driver, according to the\n *   [RetryPolicy]{@link module:policies/retry~RetryPolicy} defined at {@link ClientOptions} or {@link QueryOptions}\n *   level.\n * </p>\n * @param {String} query The query to execute.\n * @param {Array|Object} [params] Array of parameter values or an associative array (object) containing parameter names\n * as keys and its value.\n * @param {QueryOptions} [options] The query options for the execution.\n * @param {ResultCallback} [callback] Executes callback(err, result) when execution completed. When not defined, the\n * method will return a promise.\n * @example <caption>Callback-based API</caption>\n * const query = 'SELECT name, email FROM users WHERE id = ?';\n * client.execute(query, [ id ], { prepare: true }, function (err, result) {\n *   assert.ifError(err);\n *   const row = result.first();\n *   console.log('%s: %s', row.name, row.email);\n * });\n * @example <caption>Promise-based API, using async/await</caption>\n * const query = 'SELECT name, email FROM users WHERE id = ?';\n * const result = await client.execute(query, [ id ], { prepare: true });\n * const row = result.first();\n * console.log('%s: %s', row.name, row.email);\n * @see {@link ExecutionProfile} to reuse a set of options across different query executions.\n */\nClient.prototype.execute = function (query, params, options, callback) {\n  // set default argument values for optional parameters\n  callback = callback || (options ? options : params);\n  if (typeof callback === 'function') {\n    params = typeof params !== 'function' ? params : null;\n  }\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    let execOptions;\n    try {\n      execOptions = DefaultExecutionOptions.create(options, this);\n    }\n    catch (e) {\n      return cb(e);\n    }\n\n    this._innerExecute(query, params, execOptions, cb);\n  });\n};\n\n/**\n * Executes the query and calls rowCallback for each row as soon as they are received. Calls final callback after all\n * rows have been sent, or when there is an error.\n * <p>\n *   The query can be prepared (recommended) or not depending on {@link QueryOptions}.prepare flag. Retries on multiple\n *   hosts if needed.\n * </p>\n * @param {String} query The query to execute\n * @param {Array|Object} [params] Array of parameter values or an associative array (object) containing parameter names\n * as keys and its value.\n * @param {QueryOptions} [options]\n * @param {function} rowCallback Executes <code>rowCallback(n, row)</code> per each row received, where n is the row\n * index and row is the current Row.\n * @param {function} [callback] Executes <code>callback(err, result)</code> after all rows have been received.\n * <p>\n *   When dealing with paged results, [ResultSet#nextPage()]{@link module:types~ResultSet#nextPage} method can be used\n *   to retrieve the following page. In that case, <code>rowCallback()</code> will be again called for each row and\n *   the final callback will be invoked when all rows in the following page has been retrieved.\n * </p>\n * @example <caption>Using per-row callback and arrow functions</caption>\n * client.eachRow(query, params, { prepare: true }, (n, row) => console.log(n, row), err => console.error(err));\n * @example <caption>Overloads</caption>\n * client.eachRow(query, rowCallback);\n * client.eachRow(query, params, rowCallback);\n * client.eachRow(query, params, options, rowCallback);\n * client.eachRow(query, params, rowCallback, callback);\n * client.eachRow(query, params, options, rowCallback, callback);\n */\nClient.prototype.eachRow = function (query, params, options, rowCallback, callback) {\n  if (!callback && rowCallback && typeof options === 'function') {\n    callback = utils.validateFn(rowCallback, 'rowCallback');\n    rowCallback = options;\n  } else {\n    callback = callback || utils.noop;\n    rowCallback = utils.validateFn(rowCallback || options || params, 'rowCallback');\n  }\n\n  params = typeof params !== 'function' ? params : null;\n\n  let execOptions;\n  try {\n    execOptions = DefaultExecutionOptions.create(options, this, rowCallback);\n  }\n  catch (e) {\n    return callback(e);\n  }\n\n  const self = this;\n  let rowLength = 0;\n\n  function nextPage() {\n    self._innerExecute(query, params, execOptions, pageCallback);\n  }\n\n  function pageCallback (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    // Next requests in case paging (auto or explicit) is used\n    rowLength += result.rowLength;\n\n    if (result.rawPageState !== undefined) {\n      // Use new page state as next request page state\n      execOptions.setPageState(result.rawPageState);\n      if (execOptions.isAutoPage()) {\n        // Issue next request for the next page\n        return nextPage();\n      }\n      // Allows for explicit (manual) paging, in case the caller needs it\n      result.nextPage = nextPage;\n    }\n\n    // Finished auto-paging\n    result.rowLength = rowLength;\n    callback(null, result);\n  }\n\n  this._innerExecute(query, params, execOptions, pageCallback);\n};\n\n/**\n * Executes the query and pushes the rows to the result stream\n *  as soon as they received.\n * Calls callback after all rows have been sent, or when there is an error.\n * <p>\n * The stream is a [Readable Streams2]{@link http://nodejs.org/api/stream.html#stream_class_stream_readable} object\n *  that contains the raw bytes of the field value.\n *  It can be piped downstream and provides automatic pause/resume logic (it buffers when not read).\n * </p>\n * <p>\n *   The query can be prepared (recommended) or not depending on {@link QueryOptions}.prepare flag. Retries on multiple\n *   hosts if needed.\n * </p>\n * @param {String} query The query to prepare and execute\n * @param {Array|Object} [params] Array of parameter values or an associative array (object) containing parameter names\n * as keys and its value\n * @param {QueryOptions} [options]\n * @param {function} [callback], executes callback(err) after all rows have been received or if there is an error\n * @returns {types.ResultStream}\n */\nClient.prototype.stream = function (query, params, options, callback) {\n  callback = callback || utils.noop;\n  // NOTE: the nodejs stream maintains yet another internal buffer \n  // we rely on the default stream implementation to keep memory \n  // usage reasonable.\n  const resultStream = new types.ResultStream({ objectMode: 1 });\n  function onFinish(err, result) {\n    if (err) {\n      resultStream.emit('error', err);\n    }\n    if (result && result.nextPage ) {\n      // allows for throttling as per the\n      // default nodejs stream implementation\n      resultStream._valve(function pageValve() {\n        try {\n          result.nextPage();\n        }\n        catch( ex ) {\n          resultStream.emit('error', ex );\n        }\n      });\n      return;\n    }\n    // Explicitly dropping the valve (closure)\n    resultStream._valve(null);\n    resultStream.add(null);\n    callback(err);\n  }\n  let sync = true;\n  this.eachRow(query, params, options, function rowCallback(n, row) {\n    resultStream.add(row);\n  }, function eachRowFinished(err, result) {\n    if (sync) {\n      // Prevent sync callback\n      return setImmediate(function eachRowFinishedImmediate() {\n        onFinish(err, result);\n      });\n    }\n    onFinish(err, result);\n  });\n  sync = false;\n  return resultStream;\n};\n\n/**\n * Executes batch of queries on an available connection to a host.\n * <p>\n *   If a <code>callback</code> is provided, it will invoke the callback when the execution completes. Otherwise,\n *   it will return a <code>Promise</code>.\n * </p>\n * @param {Array.<string>|Array.<{query, params}>} queries The queries to execute as an Array of strings or as an array\n * of object containing the query and params\n * @param {QueryOptions} [options]\n * @param {ResultCallback} [callback] Executes callback(err, result) when the batch was executed\n */\nClient.prototype.batch = function (queries, options, callback) {\n  callback = callback || options;\n  return utils.promiseWrapper.call(this, this.options, callback, function handler(cb) {\n    this._batchCb(queries, options, cb);\n  });\n};\n\n/**\n * @param {Array.<string>|Array.<{query, params}>}queries\n * @param {QueryOptions} options\n * @param {ResultCallback} callback\n * @private\n */\nClient.prototype._batchCb = function (queries, options, callback) {\n  if (!Array.isArray(queries)) {\n    // We should throw (not callback) for an unexpected type\n    throw new errors.ArgumentError('Queries should be an Array');\n  }\n  if (queries.length === 0) {\n    return callback(new errors.ArgumentError('Queries array can not be empty'));\n  }\n\n  let execOptions;\n  try {\n    execOptions = DefaultExecutionOptions.create(options, this);\n  } catch (e) {\n    return callback(e);\n  }\n\n  let queryItems;\n  let request;\n\n  utils.series([\n    next => this.connect(next),\n    next => {\n      if (execOptions.isPrepared()) {\n        return PrepareHandler.getPreparedMultiple(\n          this, execOptions.getLoadBalancingPolicy(), queries, this.keyspace, function(err, result) {\n            queryItems = result;\n            next(err);\n          });\n      }\n      queryItems = new Array(queries.length);\n      for (let i = 0; i < queries.length; i++) {\n        const item = queries[i];\n        if (!item) {\n          return next(new errors.ArgumentError(util.format('Invalid query at index %d', i)));\n        }\n        const query = typeof item === 'string' ? item : item.query;\n        if (!query) {\n          return next(errors.ArgumentError(util.format('Invalid query at index %d', i)));\n        }\n        queryItems[i] = { query: query, params: item.params };\n      }\n      next();\n    },\n    next => this._createBatchRequest(queryItems, execOptions, (err, r) => {\n      request = r;\n      next(err);\n    }),\n    next => RequestHandler.send(request, execOptions, this, next)\n  ], callback);\n};\n\n/**\n * Gets the host list representing the replicas that contain such partition.\n * @param {String} keyspace\n * @param {Buffer} token\n * @returns {Array}\n */\nClient.prototype.getReplicas = function (keyspace, token) {\n  return this.metadata.getReplicas(keyspace, token);\n};\n\n/**\n * Gets a snapshot containing information on the connections pools held by this Client at the current time.\n * <p>\n *   The information provided in the returned object only represents the state at the moment this method was called and\n *   it's not maintained in sync with the driver metadata.\n * </p>\n * @return module:metadata~ClientState\n */\nClient.prototype.getState = function () {\n  return ClientState.from(this);\n};\n\nClient.prototype.log = utils.log;\n\n/**\n * Closes all connections to all hosts.\n * <p>\n *   If a <code>callback</code> is provided, it will invoke the callback when the client is disconnected. Otherwise,\n *   it will return a <code>Promise</code>.\n * </p>\n * @param {Function} [callback] Optional callback to be invoked when finished closing all connections.\n */\nClient.prototype.shutdown = function (callback) {\n  return utils.promiseWrapper.call(this, this.options, callback, this._shutdownCb);\n};\n\n/**\n * @param {Function} callback\n * @private\n */\nClient.prototype._shutdownCb = function (callback) {\n  const self = this;\n  function doShutdown() {\n    self.connected = false;\n    self.isShuttingDown = true;\n    const hosts = self.hosts.values();\n    // Shutdown the ControlConnection before shutting down the pools\n    self.controlConnection.shutdown();\n    self.options.policies.speculativeExecution.shutdown();\n    if (self.options.requestTracker) {\n      self.options.requestTracker.shutdown();\n    }\n    // go through all the host and shut down their pools\n    utils.each(hosts, (h, next) => h.shutdown(false, next), callback);\n  }\n  this.log('info', 'Shutting down');\n  callback = callback || utils.noop;\n  if (!this.hosts || !this.connected) {\n    // not initialized\n    this.connected = false;\n    return callback();\n  }\n  if (this.connecting) {\n    this.log('warning', 'Shutting down while connecting');\n    // wait until finish connecting for easier troubleshooting\n    return this.once('connected', doShutdown);\n  }\n  doShutdown();\n};\n\n/**\n * Waits until that the schema version in all nodes is the same or the waiting time passed.\n * @param {Connection} connection\n * @param {Function} callback\n * @ignore\n */\nClient.prototype._waitForSchemaAgreement = function (connection, callback) {\n  if (this.hosts.length === 1) {\n    return setImmediate(() => callback(null, true));\n  }\n\n  const start = process.hrtime();\n  const maxWaitSeconds = this.options.protocolOptions.maxSchemaAgreementWaitSeconds;\n\n  this.log('info', 'Waiting for schema agreement');\n\n  let versionsMatch;\n\n  utils.whilst(\n    () => !versionsMatch && process.hrtime(start)[0] < maxWaitSeconds,\n    next => {\n      this.metadata.compareSchemaVersions(connection, (err, agreement) => {\n        if (err) {\n          return next(err);\n        }\n\n        versionsMatch = agreement;\n\n        if (versionsMatch) {\n          this.log('info', 'Schema versions match');\n          return next();\n        }\n\n        // Let some time pass before the next check\n        setTimeout(next, 500);\n      });\n    },\n    (err) => callback(err, versionsMatch));\n};\n\n/**\n * Waits for schema agreements and schedules schema metadata refresh.\n * @param {Connection} connection\n * @param event\n * @param {Function} callback\n * @ignore\n * @internal\n */\nClient.prototype.handleSchemaAgreementAndRefresh = function (connection, event, callback) {\n  this._waitForSchemaAgreement(connection, (err, agreement) => {\n    if (err) {\n      //we issue a warning but we continue with the normal flow\n      this.log('warning', 'There was an error while waiting for the schema agreement between nodes', err);\n    }\n    if (!this.options.isMetadataSyncEnabled) {\n      return callback(agreement);\n    }\n\n    // schedule metadata refresh immediately and the callback will be invoked once it was refreshed\n    this.controlConnection.handleSchemaChange(event, true, (err) => {\n      if (err) {\n        this.log('warning', 'There was an error while handling schema change', err);\n      }\n      callback(agreement);\n    });\n  });\n};\n\n/**\n * Connects and handles the execution of prepared and simple statements. All parameters are mandatory.\n * @param {string} query\n * @param {Array} params\n * @param {ExecutionOptions} execOptions\n * @param {Function} callback\n * @private\n */\nClient.prototype._innerExecute = function (query, params, execOptions, callback) {\n  const version = this.controlConnection.protocolVersion;\n\n  if (!execOptions.isPrepared() && params && !util.isArray(params) && !types.protocolVersion.supportsNamedParameters(version)) {\n    // Only Cassandra 2.1 and above supports named parameters\n    return callback(\n      new errors.ArgumentError('Named parameters for simple statements are not supported, use prepare flag'));\n  }\n\n  let request;\n  utils.series([\n    next => this.connect(next),\n    next => {\n      if (!execOptions.isPrepared()) {\n        return this._createQueryRequest(query, execOptions, params, (err, r) => {\n          request = r;\n          next(err);\n        });\n      }\n\n      const lbp = execOptions.getLoadBalancingPolicy();\n      PrepareHandler.getPrepared(this, lbp, query, this.keyspace, (err, queryId, meta) => {\n        if (err) {\n          return next(err);\n        }\n        this._createExecuteRequest(query, queryId, execOptions, params, meta, (err, r) => {\n          request = r;\n          next(err);\n        });\n      });\n    },\n    next => RequestHandler.send(request, execOptions, this, next)\n  ], callback);\n};\n\n/**\n * Sets the listeners for the nodes.\n * @private\n */\nClient.prototype._setHostListeners = function () {\n  function getHostUpListener(emitter, h) {\n    return () => emitter.emit('hostUp', h);\n  }\n  function getHostDownListener(emitter, h) {\n    return () => emitter.emit('hostDown', h);\n  }\n  const self = this;\n  //Add status listeners when new nodes are added and emit hostAdd\n  this.hosts.on('add', function hostAddedListener(h) {\n    h.on('up', getHostUpListener(self, h));\n    h.on('down', getHostDownListener(self, h));\n    self.emit('hostAdd', h);\n  });\n  //Remove all listeners and emit hostRemove\n  this.hosts.on('remove', function hostRemovedListener(h) {\n    h.removeAllListeners();\n    self.emit('hostRemove', h);\n  });\n  //Add status listeners for existing hosts\n  this.hosts.forEach(function (h) {\n    h.on('up', getHostUpListener(self, h));\n    h.on('down', getHostDownListener(self, h));\n  });\n};\n\nClient.prototype._warmup = function (callback) {\n  const self = this;\n  const hosts = this.hosts.values();\n  utils.timesLimit(hosts.length, warmupLimit, function warmupEachCallback(i, next) {\n    const h = hosts[i];\n    const distance = self.profileManager.getDistance(h);\n    if (distance !== types.distance.local) {\n      //do not warmup pool for remote or ignored hosts\n      return next();\n    }\n    h.warmupPool(function (err) {\n      if (err) {\n        //An error while trying to create a connection\n        //To 1 host is not an issue, warn the user and move on\n        self.log('warning', util.format('Connection pool to host %s could not be created: %s', h.address, err));\n      }\n      next();\n    });\n  }, callback);\n};\n\n/**\n * @returns {Encoder}\n * @private\n */\nClient.prototype._getEncoder = function () {\n  const encoder = this.controlConnection.getEncoder();\n  if (!encoder) {\n    throw new errors.DriverInternalError('Encoder is not defined');\n  }\n  return encoder;\n};\n\n/**\n * Returns a BatchRequest instance and fills the routing key information in the provided options.\n * @private\n */\nClient.prototype._createBatchRequest = function (queryItems, info, callback) {\n  const firstQuery = queryItems[0];\n  if (!firstQuery.meta) {\n    return callback(null, new requests.BatchRequest(queryItems, info));\n  }\n\n  this._setRoutingInfo(info, firstQuery.params, firstQuery.meta, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, new requests.BatchRequest(queryItems, info));\n  });\n};\n\n/**\n * Returns an ExecuteRequest instance and fills the routing key information in the provided options.\n * @private\n */\nClient.prototype._createExecuteRequest = function(query, queryId, info, params, meta, callback) {\n  try {\n    params = utils.adaptNamedParamsPrepared(params, meta.columns);\n  }\n  catch (err) {\n    return callback(err);\n  }\n\n  this._setRoutingInfo(info, params, meta, err => {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, new requests.ExecuteRequest(query, queryId, params, info, meta));\n  });\n};\n\n/**\n * Returns a QueryRequest instance and fills the routing key information in the provided options.\n * @private\n */\nClient.prototype._createQueryRequest = function (query, execOptions, params, callback) {\n  this.metadata.adaptUserHints(this.keyspace, execOptions.getHints(), (err) => {\n    if (err) {\n      return callback(err);\n    }\n\n    let paramsInfo;\n    try {\n      paramsInfo = utils.adaptNamedParamsWithHints(params, execOptions);\n      this._getEncoder().setRoutingKeyFromUser(paramsInfo.params, execOptions, paramsInfo.keyIndexes);\n    } catch (err) {\n      return callback(err);\n    }\n\n    callback(null, new requests.QueryRequest(query, paramsInfo.params, execOptions, paramsInfo.namedParameters));\n  });\n};\n\n/**\n * Sets the routing key based on the parameter values or the provided routing key components.\n * @param {ExecutionOptions} execOptions\n * @param {Array} params\n * @param meta\n * @param {Function} callback\n * @private\n */\nClient.prototype._setRoutingInfo = function (execOptions, params, meta, callback) {\n  const self = this;\n\n  /** Wrapper function as encoding a routing key could throw a TypeError */\n  function encodeRoutingKey(fromUser) {\n    const encoder = self._getEncoder();\n    try {\n      if (fromUser) {\n        encoder.setRoutingKeyFromUser(params, execOptions);\n      } else {\n        encoder.setRoutingKeyFromMeta(meta, params, execOptions);\n      }\n    }\n    catch (err) {\n      return callback(err);\n    }\n    callback();\n  }\n\n  if (!execOptions.getKeyspace() && meta.keyspace) {\n    execOptions.setKeyspace(meta.keyspace);\n  }\n  if (execOptions.getRoutingKey()) {\n    // Routing information provided by the user\n    return encodeRoutingKey(true);\n  }\n  if (Array.isArray(meta.partitionKeys)) {\n    // The partition keys are provided as part of the metadata for modern protocol versions\n    execOptions.setRoutingIndexes(meta.partitionKeys);\n    return encodeRoutingKey();\n  }\n\n  // Older versions of the protocol (v3 and below) don't provide routing information\n  this.metadata.getTable(meta.keyspace, meta.table, (err, tableInfo) => {\n    if (err) {\n      this.log('warning', util.format('Table %s.%s metadata could not be retrieved', meta.keyspace, meta.table));\n      return callback();\n    }\n    if (!tableInfo) {\n      // The schema data is not there, maybe it is being recreated, avoid setting the routing information\n      return callback();\n    }\n    execOptions.setRoutingIndexes(tableInfo.partitionKeys.map(c => meta.columnsByName[c.name]));\n    // Skip parsing metadata next time\n    meta.partitionKeys = execOptions.getRoutingIndexes();\n    encodeRoutingKey();\n  });\n};\n\n/**\n * Callback used by execution methods.\n * @callback ResultCallback\n * @param {Error} err Error occurred in the execution of the query.\n * @param {ResultSet} [result] Result of the execution of the query.\n */\n\nmodule.exports = Client;\n","'use strict';\n\nconst util = require('util');\nconst errors = require('../errors');\n\n/**\n * Creates a new instance of <code>ClientState</code>.\n * @classdesc\n * Represents the state of a {@link Client}.\n * <p>\n * Exposes information on the connections maintained by a Client at a specific time.\n * </p>\n * @alias module:metadata~ClientState\n * @param {Array<Host>} hosts\n * @param {Object.<String, Number>} openConnections\n * @param {Object.<String, Number>} inFlightQueries\n * @constructor\n */\nfunction ClientState(hosts, openConnections, inFlightQueries) {\n  this._hosts = hosts;\n  this._openConnections = openConnections;\n  this._inFlightQueries = inFlightQueries;\n}\n\n/**\n * Creates a new instance from the provided client.\n * @param {Client} client\n * @internal\n * @ignore\n */\nClientState.from = function (client) {\n  const openConnections = {};\n  const inFlightQueries = {};\n  const hostArray = [];\n  client.hosts.forEach(function each(host) {\n    if (host.pool.connections.length === 0) {\n      return;\n    }\n\n    hostArray.push(host);\n    openConnections[host.address] = host.pool.connections.length;\n    inFlightQueries[host.address] = host.getInFlight();\n  });\n  return new ClientState(hostArray, openConnections, inFlightQueries);\n};\n\n/**\n * Get an array of hosts to which the client is connected to.\n * @return {Array<Host>}\n */\nClientState.prototype.getConnectedHosts = function () {\n  return this._hosts;\n};\n\n/**\n * Gets the amount of open connections to a given host.\n * @param {Host} host\n * @return {Number}\n */\nClientState.prototype.getOpenConnections = function (host) {\n  if (!host) {\n    throw new errors.ArgumentError('Host is not defined');\n  }\n  return this._openConnections[host.address] || 0;\n};\n\n/**\n * Gets the amount of queries that are currently being executed through a given host.\n * <p>\n * This corresponds to the number of queries that have been sent by the Client to server Host on one of its connections\n * but haven't yet obtained a response.\n * </p>\n * @param {Host} host\n * @return {Number}\n */\nClientState.prototype.getInFlightQueries = function (host) {\n  if (!host) {\n    throw new errors.ArgumentError('Host is not defined');\n  }\n  return this._inFlightQueries[host.address] || 0;\n};\n\n/**\n * Returns the string representation of the instance.\n */\nClientState.prototype.toString = function () {\n  return util.format(\n    '{\"hosts\": %j, \"openConnections\": %j, \"inFlightQueries\": %j}',\n    this._hosts.map(function (h) { return h.address; }),\n    this._openConnections,\n    this._inFlightQueries\n  );\n};\n\nmodule.exports = ClientState;","\"use strict\";\nconst events = require('events');\nconst util = require('util');\nconst net = require('net');\n\nconst errors = require('./errors');\nconst Host = require('./host').Host;\nconst HostMap = require('./host').HostMap;\nconst Metadata = require('./metadata');\nconst EventDebouncer = require('./metadata/event-debouncer');\nconst Connection = require('./connection');\nconst requests = require('./requests');\nconst utils = require('./utils');\nconst types = require('./types');\nconst f = util.format;\n// eslint-disable-next-line prefer-const\nlet dns = require('dns');\n\nconst selectPeers = \"SELECT * FROM system.peers\";\nconst selectLocal = \"SELECT * FROM system.local WHERE key='local'\";\nconst newNodeDelay = 1000;\nconst metadataQueryAbortTimeout = 2000;\nconst schemaChangeTypes = {\n  created: 'CREATED',\n  updated: 'UPDATED',\n  dropped: 'DROPPED'\n};\n\n/**\n * Creates a new instance of <code>ControlConnection</code>.\n * @classdesc\n * Represents a connection used by the driver to receive events and to check the status of the cluster.\n * <p>It uses an existing connection from the hosts' connection pool to maintain the driver metadata up-to-date.</p>\n * @param {Object} options\n * @param {ProfileManager} profileManager\n * @param {{borrowHostConnection: function, createConnection: function}} [context] An object containing methods to\n * allow dependency injection.\n * @extends EventEmitter\n * @constructor\n */\nfunction ControlConnection(options, profileManager, context) {\n  this.protocolVersion = null;\n  this.hosts = new HostMap();\n  this.setMaxListeners(0);\n  Object.defineProperty(this, \"options\", { value: options, enumerable: false, writable: false});\n  /**\n   * Cluster metadata that is going to be shared between the Client and ControlConnection\n   */\n  this.metadata = new Metadata(this.options, this);\n  this.addressTranslator = this.options.policies.addressResolution;\n  this.reconnectionPolicy = this.options.policies.reconnection;\n  this.reconnectionSchedule = this.reconnectionPolicy.newSchedule();\n  this.initialized = false;\n  this.isShuttingDown = false;\n  /**\n   * Host used by the control connection\n   * @type {Host|null}\n   */\n  this.host = null;\n  /**\n   * Connection used to retrieve metadata and subscribed to events\n   * @type {Connection|null}\n   */\n  this.connection = null;\n  /**\n   * Reference to the encoder of the last valid connection\n   * @type {Encoder|null}\n   */\n  this.encoder = null;\n  this.debouncer = new EventDebouncer(options.refreshSchemaDelay, this.log.bind(this));\n  this.profileManager = profileManager;\n  /** Timeout used for delayed handling of topology changes */\n  this.topologyChangeTimeout = null;\n  /** Timeout used for delayed handling of node status changes */\n  this.nodeStatusChangeTimeout = null;\n  this.reconnectionTimeout = null;\n  this.hostIterator = null;\n  this.triedHosts = null;\n  this._resolvedContactPoints = new Map();\n  this._contactPoints = new Set();\n\n  if (context && context.borrowHostConnection) {\n    this.borrowHostConnection = context.borrowHostConnection;\n  }\n\n  if (context && context.createConnection) {\n    this.createConnection = context.createConnection;\n  }\n}\n\nutil.inherits(ControlConnection, events.EventEmitter);\n\n/**\n * Stores the contact point information and what it resolved to.\n * @param {String|null} address\n * @param {String} port\n * @param {String} name\n * @param {Boolean} isIPv6\n */\nControlConnection.prototype.addContactPoint = function(address, port, name, isIPv6) {\n  if (address === null) {\n    // Contact point could not be resolved, store that the resolution came back empty\n    this._resolvedContactPoints.set(name, utils.emptyArray);\n    return;\n  }\n\n  const portNumber = parseInt(port, 10) || this.options.protocolOptions.port;\n  const endpoint = `${address}:${portNumber}`;\n  this._contactPoints.add(endpoint);\n\n  // Use RFC 3986 for IPv4 and IPv6\n  const standardEndpoint = !isIPv6 ? endpoint : `[${address}]:${portNumber}`;\n\n  let resolvedAddressedByName = this._resolvedContactPoints.get(name);\n  if (resolvedAddressedByName === undefined) {\n    resolvedAddressedByName = [];\n    this._resolvedContactPoints.set(name, resolvedAddressedByName);\n  }\n\n  resolvedAddressedByName.push(standardEndpoint);\n};\n\nControlConnection.prototype.parseEachContactPoint = function(name, next) {\n  let addressOrName = name;\n  let port = null;\n\n  if (name.indexOf('[') === 0 && name.indexOf(']:') > 1) {\n    // IPv6 host notation [ip]:port (RFC 3986 section 3.2.2)\n    const index = name.lastIndexOf(']:');\n    addressOrName = name.substr(1, index - 1);\n    port = name.substr(index + 2);\n  } else if (name.indexOf(':') > 0) {\n    // IPv4 or host name with port notation\n    const parts = name.split(':');\n    if (parts.length === 2) {\n      addressOrName = parts[0];\n      port = parts[1];\n    }\n  }\n\n  if (net.isIP(addressOrName)) {\n    this.addContactPoint(addressOrName, port, name, net.isIPv6(addressOrName));\n    return next();\n  }\n\n  resolveAll(addressOrName, (err, addresses) => {\n    if (err) {\n      this.log('error', `Host with name ${addressOrName} could not be resolved`, err);\n      this.addContactPoint(null, null, name, false);\n      return next();\n    }\n\n    addresses.forEach(addressInfo => this.addContactPoint(addressInfo.address, port, name, addressInfo.isIPv6));\n\n    next();\n  });\n};\n\n/**\n * Tries to determine a suitable protocol version to be used.\n * Tries to retrieve the hosts in the Cluster.\n * @param {Function} callback\n */\nControlConnection.prototype.init = function (callback) {\n  if (this.initialized) {\n    // Prevent multiple serial initializations\n    return callback();\n  }\n\n  const contactPointsResolutionCb = (err) => {\n    if (!err && this._contactPoints.size === 0) {\n      err = new errors.NoHostAvailableError({}, 'No host could be resolved');\n    }\n\n    if (err) {\n      return callback(err);\n    }\n\n    this.refresh(false, err => {\n      this.initialized = !err;\n      callback(err);\n    });\n  };\n\n  utils.each(\n    this.options.contactPoints,\n    (name, eachNext) => this.parseEachContactPoint(name, eachNext),\n    contactPointsResolutionCb);\n};\n\nControlConnection.prototype.setHealthListeners = function (host, connection) {\n  const self = this;\n  let wasRefreshCalled = 0;\n\n  function removeListeners() {\n    host.removeListener('down', downOrIgnoredHandler);\n    host.removeListener('ignore', downOrIgnoredHandler);\n    connection.removeListener('socketClose', socketClosedHandler);\n  }\n\n  function startReconnecting(hostDown) {\n    if (wasRefreshCalled++ !== 0) {\n      // Prevent multiple calls to reconnect\n      return;\n    }\n\n    removeListeners();\n\n    if (self.isShuttingDown) {\n      // Don't attempt to reconnect when the ControlConnection is being shutdown\n      return;\n    }\n\n    if (hostDown) {\n      self.log('warning',\n        `Host ${host.address} used by the ControlConnection DOWN, ` +\n        `connection to ${connection.endpointFriendlyName} will not longer by used`);\n    } else {\n      self.log('warning', `Connection to ${connection.endpointFriendlyName} used by the ControlConnection was closed`);\n    }\n\n    self.refresh();\n  }\n\n  function downOrIgnoredHandler() {\n    startReconnecting(true);\n  }\n\n  function socketClosedHandler() {\n    startReconnecting(false);\n  }\n\n  host.once('down', downOrIgnoredHandler);\n  host.once('ignore', downOrIgnoredHandler);\n  connection.once('socketClose', socketClosedHandler);\n};\n\n/**\n * Iterates through the hostIterator and gets the following open connection.\n * @param callback\n */\nControlConnection.prototype.borrowAConnection = function (callback) {\n  const self = this;\n  let host;\n  let connection = null;\n\n  utils.whilst(\n    function condition() {\n      // while there isn't a valid connection\n      if (connection) {\n        return false;\n      }\n      const item = self.hostIterator.next();\n      host = item.value;\n      return (!item.done);\n    },\n    function whileIterator(next) {\n      if (self.initialized) {\n        // Only check distance once the load-balancing policies have been initialized\n        const distance = self.profileManager.getDistance(host);\n        if (!host.isUp() || distance === types.distance.ignored) {\n          return next();\n        }\n\n        self.borrowHostConnection(host, function (err, c) {\n          self.triedHosts[host.address] = err;\n          connection = c;\n          next();\n        });\n      } else {\n        // Host is an endpoint string\n        self.createConnection(host, (err, c) => {\n          self.triedHosts[host] = err;\n          connection = c;\n          next();\n        });\n      }\n    },\n    function whilstEnded() {\n      if (!connection) {\n        return callback(new errors.NoHostAvailableError(self.triedHosts));\n      }\n\n      if (!self.initialized) {\n        self.protocolVersion = connection.protocolVersion;\n        self.encoder = connection.encoder;\n      }\n\n      self.connection = connection;\n      callback();\n    });\n};\n\n/** Default implementation for borrowing connections, that can be injected at constructor level */\nControlConnection.prototype.borrowHostConnection = function (host, callback) {\n  // Borrow any open connection, regardless of the keyspace\n  host.borrowConnection(null, null, callback);\n};\n\n/**\n * Default implementation for creating initial connections, that can be injected at constructor level\n * @param {String} contactPoint\n * @param {Function} callback\n */\nControlConnection.prototype.createConnection = function (contactPoint, callback) {\n  const c = new Connection(contactPoint, null, this.options);\n  c.open(err => {\n    if (err) {\n      setImmediate(() => c.close());\n      return callback(err);\n    }\n\n    callback(null, c);\n  });\n};\n\n/**\n * Gets the info from local and peer metadata, reloads the keyspaces metadata and rebuilds tokens.\n * @param {Boolean} initializing Determines whether this function was called in order to initialize the control\n * connection the first time\n * @param {Boolean} setCurrentHost\n * @param {Function} [callback]\n */\nControlConnection.prototype.refreshHosts = function (initializing, setCurrentHost, callback) {\n  callback = callback || utils.noop;\n\n  // Get a reference to the current connection as it might change from external events\n  const c = this.connection;\n\n  if (!c) {\n    // it's possible that this was called as a result of a topology change, but the connection was lost\n    // between scheduling time and now. This will be called again when there is a new connection.\n    return callback();\n  }\n\n  const self = this;\n  this.log('info', 'Refreshing local and peers info');\n\n  utils.series([\n    function getLocalInfo(next) {\n      const request = new requests.QueryRequest(selectLocal, null, null);\n      c.sendStream(request, null, function (err, result) {\n        self.setLocalInfo(initializing, setCurrentHost, c, result);\n\n        if (!err && !self.host) {\n          return next(new errors.DriverInternalError('Information from system.local could not be retrieved'));\n        }\n\n        next(err);\n      });\n    },\n    function getPeersInfo(next) {\n      const request = new requests.QueryRequest(selectPeers, null, null);\n      c.sendStream(request, null, function (err, result) {\n        self.setPeersInfo(initializing, err, result, next);\n      });\n    },\n    function resolveAndSetProtocolVersion(next) {\n      if (!self.initialized) {\n        // resolve protocol version from highest common version among hosts.\n        const highestCommon = types.protocolVersion.getHighestCommon(c, self.hosts);\n        const reconnect = highestCommon !== self.protocolVersion;\n\n        // set protocol version on each host.\n        self.protocolVersion = highestCommon;\n        self.hosts.forEach(h => h.setProtocolVersion(self.protocolVersion));\n\n        // if protocol version changed, reconnect the control connection with new version.\n        if (reconnect) {\n          self.log('info', `Reconnecting since the protocol version changed to 0x${highestCommon.toString(16)}`);\n          c.decreaseVersion(self.protocolVersion);\n          c.close(() =>\n            setImmediate(() => c.open(err => {\n              if (err) {\n                c.close();\n              }\n\n              next(err);\n            })));\n          return;\n        }\n      }\n      next();\n    },\n    function getKeyspaces(next) {\n      // to acquire metadata we need to specify the cassandra version\n      self.metadata.setCassandraVersion(self.host.getCassandraVersion());\n      self.metadata.buildTokens(self.hosts);\n      if (!self.options.isMetadataSyncEnabled) {\n        self.metadata.initialized = true;\n        return next();\n      }\n      self.metadata._refreshKeyspaces(false, true, () => {\n        self.metadata.initialized = true;\n        next();\n      });\n    }\n  ], callback);\n};\n\n/**\n * Acquires a connection and refreshes topology and keyspace metadata.\n * <p>If it fails obtaining a connection:</p>\n * <ul>\n *   <li>\n *     When its initializing, it should:\n *     <ul>\n *       <li>Continue iterating through the hosts</li>\n *       <li>When there aren't any more hosts, it should invoke callback with the inner errors</li>\n *     </ul>\n *   </li>\n *   <li>\n *     When its running in the background, it should:\n *     <ul>\n *       <li>Continue iterating through the hosts</li>\n *       <li>\n *         When there aren't any more hosts, it should:\n *         <ul>\n *           <li>Schedule reconnection</li>\n *           <li>Invoke callback with the inner errors</li>\n *         </ul>\n *       </li>\n *     </ul>\n *   </li>\n * </ul>\n * <p>If it fails obtaining the metadata, it should:</p>\n * <ul>\n *   <li>It should mark connection and/or host unusable</li>\n *   <li>Retry using the same iterator from query plan / host list</li>\n * </ul>\n * @param {Boolean} [reuseQueryPlan]\n * @param {Function} [callback]\n */\nControlConnection.prototype.refresh = function (reuseQueryPlan, callback) {\n  const initializing = !this.initialized;\n  callback = callback || utils.noop;\n\n  if (this.isShuttingDown) {\n    this.log('info', 'The ControlConnection will not be refreshed as the Client is being shutdown');\n    return callback(new errors.NoHostAvailableError({}, 'ControlConnection is shutting down'));\n  }\n\n  // Reset host and connection\n  this.host = null;\n  this.connection = null;\n\n  const self = this;\n\n  utils.series([\n    function getHostIterator(next) {\n      if (reuseQueryPlan) {\n        return next();\n      }\n\n      self.triedHosts = {};\n\n      if (initializing) {\n        self.log('info', 'Getting first connection');\n        const hosts = Array.from(self._contactPoints);\n        // Randomize order of contact points resolved.\n        utils.shuffleArray(hosts);\n        self.hostIterator = hosts[Symbol.iterator]();\n        return next();\n      }\n\n      self.log('info', 'Trying to acquire a connection to a new host');\n\n      self.profileManager.getDefaultLoadBalancing().newQueryPlan(null, null, function onNewPlan(err, iterator) {\n        if (err) {\n          self.log('error', 'ControlConnection could not retrieve a query plan to determine which hosts to use', err);\n          return next(err);\n        }\n        self.hostIterator = iterator;\n        next();\n      });\n    },\n    function getConnectionTask(next) {\n      self.borrowAConnection(next);\n    },\n    function getLocalAndPeersInfo(next) {\n      self.log('info',\n        (initializing\n          ? `ControlConnection using protocol version 0x${self.protocolVersion.toString(16)},`\n          : `ControlConnection`) +\n        ` connected to ${self.connection.endpointFriendlyName}`);\n\n      self.refreshHosts(initializing, true, next);\n    },\n    function subscribeConnectionEvents(next) {\n      self.connection.on('nodeTopologyChange', self.nodeTopologyChangeHandler.bind(self));\n      self.connection.on('nodeStatusChange', self.nodeStatusChangeHandler.bind(self));\n      self.connection.on('nodeSchemaChange', self.nodeSchemaChangeHandler.bind(self));\n      const request = new requests.RegisterRequest(['TOPOLOGY_CHANGE', 'STATUS_CHANGE', 'SCHEMA_CHANGE']);\n      self.connection.sendStream(request, null, next);\n    }\n  ], function refreshSeriesEnd(err) {\n    // Refresh ended, possible scenarios:\n    // - There was a failure obtaining a connection\n    // - There was a failure in metadata retrieval\n    // - There wasn't a failure but connection is now disconnected at this time\n    // - Everything succeeded\n    if (!err) {\n      if (!self.connection.connected) {\n        // Before refreshSeriesEnd() was invoked, the connection changed to a \"not connected\" state.\n        // We have to avoid subscribing to 'down' or 'socketClosed' events after it was down / connection closed.\n        // The connection is no longer valid and we should retry the whole thing\n        self.log('info', f('Connection to %s was closed before finishing refresh', self.host.address));\n        return self.refresh(false, callback);\n      }\n\n      if (initializing) {\n        // The healthy connection used to initialize should be part of the Host pool\n        self.host.pool.addExistingConnection(self.connection);\n      }\n\n      self.setHealthListeners(self.host, self.connection);\n      self.reconnectionSchedule = self.reconnectionPolicy.newSchedule();\n      self.emit('newConnection', null, self.connection, self.host);\n      self.log('info', `ControlConnection connected to ${self.connection.endpointFriendlyName} and up to date`);\n\n      return callback();\n    }\n\n    if (!self.connection) {\n      self.log('error', 'ControlConnection failed to acquire a connection', err);\n      if (!initializing && !self.isShuttingDown) {\n        self.noOpenConnectionHandler();\n        self.emit('newConnection', err);\n      }\n\n      return callback(err);\n    }\n\n    self.log('error', 'ControlConnection failed to retrieve topology and keyspaces information', err);\n    self.triedHosts[self.connection.endpoint] = err;\n\n    if (err && err.isSocketError && !initializing && self.host) {\n      self.host.removeFromPool(self.connection);\n    }\n\n    // Retry the whole thing with the same query plan, in the background or foreground\n    self.refresh(true, callback);\n  });\n};\n\n/**\n * There isn't an open connection at the moment, try again later.\n */\nControlConnection.prototype.noOpenConnectionHandler = function () {\n  const delay = this.reconnectionSchedule.next().value;\n  this.log('warning', f('ControlConnection could not reconnect, scheduling reconnection in %dms', delay));\n  const self = this;\n  setTimeout(() => self.refresh(), delay);\n};\n\n/**\n * @param {String} type\n * @param {String} info\n * @param [furtherInfo]\n */\nControlConnection.prototype.log = utils.log;\n\n/**\n * Handles a TOPOLOGY_CHANGE event\n */\nControlConnection.prototype.nodeTopologyChangeHandler = function (event) {\n  this.log('info', 'Received topology change', event);\n  // all hosts information needs to be refreshed as tokens might have changed\n  const self = this;\n  clearTimeout(this.topologyChangeTimeout);\n  // Use an additional timer to make sure that the refresh hosts is executed only AFTER the delay\n  // In this case, the event debouncer doesn't help because it could not honor the sliding delay (ie: processNow)\n  this.topologyChangeTimeout = setTimeout(() => self.scheduleRefreshHosts(), newNodeDelay);\n};\n\n/**\n * Handles a STATUS_CHANGE event\n */\nControlConnection.prototype.nodeStatusChangeHandler = function (event) {\n  const self = this;\n  const addressToTranslate = event.inet.address.toString();\n  const port = this.options.protocolOptions.port;\n  this.addressTranslator.translate(addressToTranslate, port, function translateCallback(endPoint) {\n    const host = self.hosts.get(endPoint);\n    if (!host) {\n      self.log('warning', 'Received status change event but host was not found: ' + addressToTranslate);\n      return;\n    }\n    const distance = self.profileManager.getDistance(host);\n    if (event.up) {\n      if (distance === types.distance.ignored) {\n        return host.setUp(true);\n      }\n      clearTimeout(self.nodeStatusChangeTimeout);\n      // Waits a couple of seconds before marking it as UP\n      self.nodeStatusChangeTimeout = setTimeout(() => host.checkIsUp(), newNodeDelay);\n      return;\n    }\n    // marked as down\n    if (distance === types.distance.ignored) {\n      return host.setDown();\n    }\n    self.log('warning', 'Received status change to DOWN for host ' + host.address);\n  });\n};\n\n/**\n * Handles a SCHEMA_CHANGE event\n */\nControlConnection.prototype.nodeSchemaChangeHandler = function (event) {\n  this.log('info', 'Schema change', event);\n  if (!this.options.isMetadataSyncEnabled) {\n    return;\n  }\n  this.handleSchemaChange(event, false);\n};\n\n/**\n * @param {{keyspace: string, isKeyspace: boolean, schemaChangeType, table, udt, functionName, aggregate}} event\n * @param {Boolean} processNow\n * @param {Function} [callback]\n */\nControlConnection.prototype.handleSchemaChange = function (event, processNow, callback) {\n  const self = this;\n  let handler, cqlObject;\n  if (event.isKeyspace) {\n    if (event.schemaChangeType === schemaChangeTypes.dropped) {\n      handler = function removeKeyspace() {\n        // if on the same event queue there is a creation, this handler is not going to be executed\n        // it is safe to remove the keyspace metadata\n        delete self.metadata.keyspaces[event.keyspace];\n      };\n      return this.scheduleObjectRefresh(handler, event.keyspace, null, processNow, callback);\n    }\n    return this.scheduleKeyspaceRefresh(event.keyspace, processNow, callback);\n  }\n  const ksInfo = this.metadata.keyspaces[event.keyspace];\n  if (!ksInfo) {\n    // it hasn't been loaded and it is not part of the metadata, don't mind\n    return;\n  }\n  if (event.table) {\n    cqlObject = event.table;\n    handler = function clearTableState() {\n      delete ksInfo.tables[event.table];\n      delete ksInfo.views[event.table];\n    };\n  }\n  else if (event.udt) {\n    cqlObject = event.udt;\n    handler = function clearUdtState() {\n      delete ksInfo.udts[event.udt];\n    };\n  }\n  else if (event.functionName) {\n    cqlObject = event.functionName;\n    handler = function clearFunctionState() {\n      delete ksInfo.functions[event.functionName];\n    };\n  }\n  else if (event.aggregate) {\n    cqlObject = event.aggregate;\n    handler = function clearKeyspaceState() {\n      delete ksInfo.aggregates[event.aggregate];\n    };\n  }\n  if (handler) {\n    // is a cql object change clean the internal cache\n    this.scheduleObjectRefresh(handler, event.keyspace, cqlObject, processNow, callback);\n  }\n};\n\n/**\n * @param {Function} handler\n * @param {String} keyspaceName\n * @param {String} cqlObject\n * @param {Boolean} processNow\n * @param {Function} [callback]\n */\nControlConnection.prototype.scheduleObjectRefresh = function (handler, keyspaceName, cqlObject, processNow, callback) {\n  this.debouncer.eventReceived({ handler, keyspace: keyspaceName, cqlObject: cqlObject, callback }, processNow);\n};\n\n/**\n * @param {String} keyspaceName\n * @param {Boolean} processNow\n * @param {Function} [callback]\n */\nControlConnection.prototype.scheduleKeyspaceRefresh = function (keyspaceName, processNow, callback) {\n  this.debouncer.eventReceived({\n    handler: cb => this.metadata.refreshKeyspace(keyspaceName, cb),\n    keyspace: keyspaceName,\n    callback\n  }, processNow);\n};\n\n/**\n * @param {Function} [callback]\n */\nControlConnection.prototype.scheduleRefreshHosts = function (callback) {\n  this.debouncer.eventReceived({\n    handler: cb => this.refreshHosts(false, false, cb),\n    all: true,\n    callback\n  }, false);\n};\n\n/**\n * Sets the information for the host used by the control connection.\n * @param {Boolean} initializing\n * @param {Connection} c\n * @param {Boolean} setCurrentHost Determines if the host retrieved must be set as the current host\n * @param result\n */\nControlConnection.prototype.setLocalInfo = function (initializing, setCurrentHost, c, result) {\n  if (!result || !result.rows || !result.rows.length) {\n    this.log('warning', 'No local info could be obtained');\n    return;\n  }\n\n  const row = result.rows[0];\n\n  let localHost;\n\n  const endpoint = c.endpoint;\n\n  if (initializing) {\n    localHost = new Host(endpoint, this.protocolVersion, this.options, this.metadata);\n    this.hosts.set(endpoint, localHost);\n    this.log('info', `Adding host ${endpoint}`);\n  } else {\n    localHost = this.hosts.get(endpoint);\n\n    if (!localHost) {\n      this.log('error', 'Localhost could not be found');\n      return;\n    }\n  }\n\n  localHost.datacenter = row['data_center'];\n  localHost.rack = row['rack'];\n  localHost.tokens = row['tokens'];\n  localHost.hostId = row['host_id'];\n  localHost.cassandraVersion = row['release_version'];\n  this.metadata.setPartitioner(row['partitioner']);\n  this.log('info', 'Local info retrieved');\n\n  if (setCurrentHost) {\n    // Set the host as the one being used by the ControlConnection.\n    this.host = localHost;\n  }\n};\n\n/**\n * @param {Boolean} initializing Determines whether this function was called in order to initialize the control\n * connection the first time.\n * @param {Error} err\n * @param {ResultSet} result\n * @param {Function} callback\n */\nControlConnection.prototype.setPeersInfo = function (initializing, err, result, callback) {\n  if (!result || !result.rows || err) {\n    return callback(err);\n  }\n\n  // A map of peers, could useful for in case there are discrepancies\n  const peers = {};\n  const port = this.options.protocolOptions.port;\n  const foundDataCenters = new Set();\n\n  if (this.host && this.host.datacenter) {\n    foundDataCenters.add(this.host.datacenter);\n  }\n\n  const self = this;\n\n  utils.eachSeries(result.rows, function eachPeer(row, next) {\n    self.getAddressForPeerHost(row, port, function getAddressForPeerCallback(endPoint) {\n      if (!endPoint) {\n        return next();\n      }\n\n      peers[endPoint] = true;\n      let host = self.hosts.get(endPoint);\n      let isNewHost = !host;\n\n      if (isNewHost) {\n        host = new Host(endPoint, self.protocolVersion, self.options, self.metadata);\n        self.log('info', 'Adding host ' + endPoint);\n        isNewHost = true;\n      }\n\n      host.datacenter = row['data_center'];\n      host.rack = row['rack'];\n      host.tokens = row['tokens'];\n      host.hostId = row['host_id'];\n      host.cassandraVersion = row['release_version'];\n\n      if (host.datacenter) {\n        foundDataCenters.add(host.datacenter);\n      }\n\n      if (isNewHost) {\n        // Add it to the map (and trigger events) after all the properties\n        // were set to avoid race conditions\n        self.hosts.set(endPoint, host);\n\n        if (!initializing) {\n          // Set the distance at Host level, that way the connection pool is created with the correct settings\n          self.profileManager.getDistance(host);\n\n          // When we are not initializing, we start with the node set as DOWN\n          host.setDown();\n        }\n      }\n\n      next();\n    });\n  }, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    //Is there a difference in number between peers + local != hosts\n    if (self.hosts.length > result.rows.length + 1) {\n      //There are hosts in the current state that don't belong (nodes removed or wrong contactPoints)\n      self.log('info', 'Removing nodes from the pool');\n      const toRemove = [];\n      self.hosts.forEach(function (h) {\n        //It is not a peer and it is not local host\n        if (!peers[h.address] && h !== self.host) {\n          self.log('info', 'Removing host ' + h.address);\n          toRemove.push(h.address);\n          h.shutdown(true);\n        }\n      });\n      self.hosts.removeMultiple(toRemove);\n    }\n    if (initializing && self.options.localDataCenter) {\n      const localDc = self.options.localDataCenter;\n\n      if (!foundDataCenters.has(localDc)) {\n        return callback(new errors.ArgumentError('localDataCenter was configured as \\'' + localDc + '\\', but only found' +\n          ' hosts in data centers: [' + Array.from(foundDataCenters).join(', ') + ']'));\n      }\n    }\n    self.log('info', 'Peers info retrieved');\n    callback();\n  });\n};\n\n/**\n * @param {Object|Row} row\n * @param {Number} defaultPort\n * @param {Function} callback The callback to invoke with the string representation of the host endpoint,\n *  containing the ip address and port.\n */\nControlConnection.prototype.getAddressForPeerHost = function (row, defaultPort, callback) {\n  let address = row['rpc_address'];\n  const peer = row['peer'];\n  const bindAllAddress = '0.0.0.0';\n  if (!address) {\n    this.log('error', f('No rpc_address found for host %s in %s\\'s peers system table. %s will be ignored.',\n      peer, this.host.address, peer));\n    return callback(null);\n  }\n  if (address.toString() === bindAllAddress) {\n    this.log('warning', f('Found host with 0.0.0.0 as rpc_address, using listen_address (%s) to contact it instead.' +\n      ' If this is incorrect you should avoid the use of 0.0.0.0 server side.', peer));\n    address = peer;\n  }\n  this.addressTranslator.translate(address.toString(), defaultPort, callback);\n};\n\n/**\n * Waits for a connection to be available. If timeout expires before getting a connection it callbacks in error.\n * @param {Function} callback\n */\nControlConnection.prototype.waitForReconnection = function (callback) {\n  // eslint-disable-next-line prefer-const\n  let timeout;\n  const self = this;\n  function newConnectionListener(err) {\n    clearTimeout(timeout);\n    callback(err);\n  }\n  this.once('newConnection', newConnectionListener);\n  timeout = setTimeout(function waitTimeout() {\n    self.removeListener('newConnection', newConnectionListener);\n    callback(new errors.OperationTimedOutError('A connection could not be acquired before timeout.'));\n  }, metadataQueryAbortTimeout);\n};\n\n/**\n * Executes a query using the active connection\n * @param {String|Request} cqlQuery\n * @param {Boolean} [waitReconnect] Determines if it should wait for reconnection in case the control connection is not\n * connected at the moment. Default: true.\n * @param {Function} callback\n */\nControlConnection.prototype.query = function (cqlQuery, waitReconnect, callback) {\n  if (typeof waitReconnect === 'function') {\n    callback = waitReconnect;\n    waitReconnect = true;\n  }\n\n  const self = this;\n\n  function queryOnConnection() {\n    if (!self.connection || self.isShuttingDown) {\n      return callback(new errors.NoHostAvailableError({}, 'ControlConnection is not connected at the time'));\n    }\n\n    const request = typeof cqlQuery === 'string' ? new requests.QueryRequest(cqlQuery, null, null) : cqlQuery;\n    self.connection.sendStream(request, null, callback);\n  }\n\n  if (!this.connection && waitReconnect) {\n    // Wait until its reconnected (or timer elapses)\n    return this.waitForReconnection(function waitCallback(err) {\n      if (err) {\n        //it was not able to reconnect in time\n        return callback(err);\n      }\n      queryOnConnection();\n    });\n  }\n\n  queryOnConnection();\n};\n\n/** @returns {Encoder} The encoder used by the current connection */\nControlConnection.prototype.getEncoder = function () {\n  if (!this.encoder) {\n    throw new errors.DriverInternalError('Encoder is not defined');\n  }\n  return this.encoder;\n};\n\nControlConnection.prototype.shutdown = function () {\n  // no need for callback as it all sync\n  this.isShuttingDown = true;\n  this.debouncer.shutdown();\n  // Emit a \"newConnection\" event with Error, as it may clear timeouts that were waiting new connections\n  this.emit('newConnection', new errors.DriverError('ControlConnection is being shutdown'));\n  // Cancel timers\n  clearTimeout(this.topologyChangeTimeout);\n  clearTimeout(this.nodeStatusChangeTimeout);\n  clearTimeout(this.reconnectionTimeout);\n};\n\n/**\n * Resets the Connection to its initial state.\n */\nControlConnection.prototype.reset = function (callback) {\n  // Reset the internal state of the ControlConnection for future initialization attempts\n  const currentHosts = this.hosts.clear();\n  // Set the shutting down flag temporarily to avoid reconnects.\n  this.isShuttingDown = true;\n  const self = this;\n  // Ignore any shutdown error\n  utils.each(currentHosts, (h, next) => h.shutdown(false, () => next()), function shuttingDownFinished() {\n    self.initialized = false;\n    self.isShuttingDown = false;\n    callback();\n  });\n};\n\n/**\n * Gets a Map containing the original contact points and the addresses that each one resolved to.\n */\nControlConnection.prototype.getResolvedContactPoints = function () {\n  return this._resolvedContactPoints;\n};\n\n/**\n * Gets the local IP address to which the control connection socket is bound to.\n * @returns {String|undefined}\n */\nControlConnection.prototype.getLocalAddress = function () {\n  if (!this.connection) {\n    return undefined;\n  }\n\n  return this.connection.getLocalAddress();\n};\n\n/**\n * Gets the address and port of host the control connection is connected to.\n * @returns {String|undefined}\n */\nControlConnection.prototype.getEndpoint = function () {\n  if (!this.connection) {\n    return undefined;\n  }\n\n  return this.connection.endpoint;\n};\n\n/**\n * Uses the DNS protocol to resolve a IPv4 and IPv6 addresses (A and AAAA records) for the hostname\n * @private\n * @param name\n * @param callback\n */\nfunction resolveAll(name, callback) {\n  const addresses = [];\n  utils.parallel([\n    function resolve4(next) {\n      dns.resolve4(name, function resolve4Callback(err, arr) {\n        if (arr) {\n          arr.forEach(address => addresses.push({ address, isIPv6: false }));\n        }\n        // Ignore error\n        next();\n      });\n    },\n    function resolve6(next) {\n      dns.resolve6(name, function resolve6Callback(err, arr) {\n        if (arr) {\n          arr.forEach(address => addresses.push({ address, isIPv6: true }));\n        }\n        // Ignore error\n        next();\n      });\n    }\n  ], function resolveAllCallback() {\n    if (addresses.length === 0) {\n      // In case dns.resolve*() methods don't yield a valid address for the host name\n      // Use system call getaddrinfo() that might resolve according to host system definitions\n      return dns.lookup(name, function (err, address, family) {\n        if (err) {\n          return callback(err);\n        }\n\n        addresses.push({ address, isIPv6: family === 6 });\n        callback(null, addresses);\n      });\n    }\n    callback(null, addresses);\n  });\n}\n\nmodule.exports = ControlConnection;\n","\"use strict\";\nconst util = require('util');\nconst events = require('events');\n\nconst Connection = require('./connection');\nconst utils = require('./utils');\nconst errors = require('./errors');\nconst defaultOptions = require('./client-options').defaultOptions();\n\n// Used to get the index of the connection with less in-flight requests\nlet connectionIndex = 0;\nconst connectionIndexOverflow = Math.pow(2, 15);\n\n/**\n * Represents the possible states of the pool.\n * Possible state transitions:\n *  - From initial to closing: The pool must be closed because the host is ignored.\n *  - From initial to shuttingDown: The pool is being shutdown as a result of a client shutdown.\n *  - From closing to initial state: The pool finished closing connections (is now ignored) and it resets to\n *    initial state in case the host is marked as local/remote in the future.\n *  - From closing to shuttingDown (rare): It was marked as ignored, now the client is being shutdown.\n *  - From shuttingDown to shutdown: Finished shutting down, the pool should not be reused.\n * @private\n */\nconst state = {\n  // Initial state: open / opening / ready to be opened\n  initial: 0,\n  // When the pool is being closed as part of a distance change\n  closing: 1,\n  // When the pool is being shutdown for good\n  shuttingDown: 2,\n  // When the pool has being shutdown\n  shutDown: 4\n};\n\n/**\n * Represents a pool of connections to a host\n */\nclass HostConnectionPool extends events.EventEmitter {\n  /**\n   * Creates a new instance of HostConnectionPool.\n   * @param {Host} host\n   * @param {Number} protocolVersion Initial protocol version\n   * @extends EventEmitter\n   */\n  constructor(host, protocolVersion) {\n    super();\n    this._address = host.address;\n    this._newConnectionTimeout = null;\n    this._creating = false;\n    this._state = state.initial;\n    this.responseCounter = 0;\n    this.options = host.options;\n    this.protocolVersion = protocolVersion;\n    this.coreConnectionsLength = 1;\n    /**\n     * An immutable array of connections\n     * @type {Array.<Connection>}\n     */\n    this.connections = utils.emptyArray;\n    this.setMaxListeners(0);\n    this.log = utils.log;\n  }\n\n  /**\n   * Borrows a connection from the pool.\n   * @param {String} keyspace\n   * @param {Function} callback\n   */\n  createAndBorrowConnection(keyspace, callback) {\n    this.create(false, err => {\n      if (err) {\n        return callback(err);\n      }\n\n      this.borrowConnection(keyspace, null, callback);\n    });\n  }\n\n  getInFlight() {\n    const length = this.connections.length;\n    if (length === 1) {\n      return this.connections[0].getInFlight();\n    }\n\n    let sum = 0;\n    for (let i = 0; i < length; i++) {\n      sum += this.connections[i].getInFlight();\n    }\n    return sum;\n  }\n\n  /**\n   * Tries to borrow one of the existing connections from the pool.\n   * @param {Connection} previousConnection When provided, the pool should try to provide a different connection.\n   * @param {String} keyspace\n   * @param {Function} callback\n   */\n  borrowConnection(keyspace, previousConnection, callback) {\n    if (this.connections.length === 0) {\n      return callback(new Error('No connection available'));\n    }\n\n    const maxRequests = this.options.pooling.maxRequestsPerConnection;\n    const c = HostConnectionPool.minInFlight(this.connections, maxRequests, previousConnection);\n\n    if (c.getInFlight() >= maxRequests) {\n      return callback(new errors.BusyConnectionError(this._address, maxRequests, this.connections.length));\n    }\n\n    if (!keyspace || keyspace === c.keyspace) {\n      // Connection is ready to be used\n      return callback(null, c);\n    }\n\n    c.changeKeyspace(keyspace, (err) => {\n      callback(err, c);\n    });\n  }\n\n  /**\n   * Gets the connection with the minimum number of in-flight requests.\n   * Only checks for 2 connections (round-robin) and gets the one with minimum in-flight requests, as long as\n   * the amount of in-flight requests is lower than maxRequests.\n   * @param {Array.<Connection>} connections\n   * @param {Number} maxRequests\n   * @param {Connection} previousConnection\n   * @returns {Connection}\n   */\n  static minInFlight(connections, maxRequests, previousConnection) {\n    const length = connections.length;\n    if (length === 1) {\n      return connections[0];\n    }\n\n    // Use a single index for all hosts as a simplified way to balance the load between connections\n    connectionIndex++;\n    if (connectionIndex >= connectionIndexOverflow) {\n      connectionIndex = 0;\n    }\n\n    let current;\n    for (let index = connectionIndex; index < connectionIndex + length; index++) {\n      current = connections[index % length];\n      if (current === previousConnection) {\n        // Increment the index and skip\n        current = connections[(++index) % length];\n      }\n\n      let next = connections[(index + 1) % length];\n      if (next === previousConnection) {\n        // Skip\n        next = connections[(index + 2) % length];\n      }\n\n      if (next.getInFlight() < current.getInFlight()) {\n        current = next;\n      }\n\n      if (current.getInFlight() < maxRequests) {\n        // Check as few connections as possible, as long as the amount of in-flight\n        // requests is lower than maxRequests\n        break;\n      }\n    }\n    return current;\n  }\n\n  /**\n   * Create the min amount of connections, if the pool is empty.\n   * @param {Boolean} warmup Determines if all connections must be created before invoking the callback\n   * @param {Function} callback\n   */\n  create(warmup, callback) {\n    if (this.isClosing()) {\n      return callback(new Error('Pool is being closed when calling create'));\n    }\n    // The value of this.coreConnectionsLength can change over time\n    // when an existing pool is being resized (by setting the distance).\n    if (this.connections.length >= this.coreConnectionsLength) {\n      return callback();\n    }\n    if (!warmup && this.connections.length > 0) {\n      // we already have a valid connection\n      // let the connection grow continue in the background\n      this.increaseSize();\n      return callback();\n    }\n    this.once('creation', callback);\n    if (this._creating) {\n      // wait for the pool to be creating\n      return;\n    }\n    this._creating = true;\n    let connectionsToCreate = this.coreConnectionsLength;\n    if (!warmup) {\n      connectionsToCreate = 1;\n    }\n    const self = this;\n    utils.whilst(\n      function condition() {\n        return self.connections.length < connectionsToCreate;\n      },\n      function iterator(next) {\n        self._attemptNewConnection(next);\n      }, function whilstEnded(err) {\n        self._creating = false;\n        if (err) {\n          if (self.isClosing()) {\n            self.log('info', 'Connection pool created but it was being closed');\n            self._closeAllConnections();\n            err = new Error('Pool is being closed');\n          }\n          else {\n            // there was an error and no connections could be successfully opened\n            self.log('warning', util.format('Connection pool to host %s could not be created', self._address), err);\n          }\n          return self.emit('creation', err);\n        }\n        self.log('info', util.format('Connection pool to host %s created with %d connection(s)',\n          self._address, self.connections.length));\n        self.emit('creation');\n        self.increaseSize();\n      });\n  }\n\n  /** @returns {Connection} */\n  _createConnection() {\n    const c = new Connection(this._address, this.protocolVersion, this.options);\n    this._addListeners(c);\n    return c;\n  }\n\n  /** @param {Connection} c */\n  _addListeners(c) {\n    c.on('responseDequeued', () => this.responseCounter++);\n\n    const self = this;\n    function connectionErrorCallback() {\n      // The socket is not fully open / can not send heartbeat\n      self.remove(c);\n    }\n    c.on('idleRequestError', connectionErrorCallback);\n    c.on('socketClose', connectionErrorCallback);\n  }\n\n  addExistingConnection(c) {\n    this._addListeners(c);\n    // Use a copy of the connections array\n    this.connections = this.connections.slice(0);\n    this.connections.push(c);\n  }\n\n  /**\n   * Prevents reconnection timeout from triggering\n   */\n  clearNewConnectionAttempt() {\n    if (!this._newConnectionTimeout) {\n      return;\n    }\n    clearTimeout(this._newConnectionTimeout);\n    this._newConnectionTimeout = null;\n  }\n\n  /**\n   * @param {Function} callback\n   */\n  _attemptNewConnection(callback) {\n    const c = this._createConnection();\n    const self = this;\n    this.once('open', callback);\n    if (this._opening) {\n      // wait for the event to fire\n      return;\n    }\n    this._opening = true;\n    c.open(function attemptOpenCallback(err) {\n      self._opening = false;\n      if (err) {\n        self.log('warning', util.format('Connection to %s could not be created: %s', self._address, err), err);\n        c.close();\n        return self.emit('open', err);\n      }\n      if (self.isClosing()) {\n        self.log('info', util.format('Connection to %s opened successfully but pool was being closed', self._address));\n        c.close();\n        return self.emit('open', new Error('Connection closed'));\n      }\n      // use a copy of the connections array\n      const newConnections = self.connections.slice(0);\n      newConnections.push(c);\n      self.connections = newConnections;\n      self.log('info', util.format('Connection to %s opened successfully', self._address));\n      self.emit('open', null, c);\n    });\n  }\n\n  attemptNewConnectionImmediate() {\n    const self = this;\n    function openConnection() {\n      self.clearNewConnectionAttempt();\n      self.scheduleNewConnectionAttempt(0);\n    }\n    if (this._state === state.initial) {\n      return openConnection();\n    }\n    if (this._state === state.closing) {\n      return this.once('close', openConnection);\n    }\n    // In the case the pool its being / has been shutdown for good\n    // Do not attempt to create a new connection.\n  }\n\n  /**\n   * Closes the connection and removes a connection from the pool.\n   * @param {Connection} connection\n   */\n  remove(connection) {\n    // locating an object by position in the array is O(n), but normally there should be between 1 to 8 connections.\n    const index = this.connections.indexOf(connection);\n    if (index < 0) {\n      // it was already removed from the connections and it's closing\n      return;\n    }\n    // remove the connection from the pool, using an pool copy\n    const newConnections = this.connections.slice(0);\n    newConnections.splice(index, 1);\n    this.connections = newConnections;\n    // close the connection\n    setImmediate(function removeClose() {\n      connection.close();\n    });\n    this.emit('remove');\n  }\n\n  /**\n   * @param {Number} delay\n   */\n  scheduleNewConnectionAttempt(delay) {\n    if (this.isClosing()) {\n      return;\n    }\n    const self = this;\n    this._newConnectionTimeout = setTimeout(function newConnectionTimeoutExpired() {\n      self._newConnectionTimeout = null;\n      if (self.connections.length >= self.coreConnectionsLength) {\n        // new connection can be scheduled while a new connection is being opened\n        // the pool has the appropriate size\n        return;\n      }\n      self._attemptNewConnection(utils.noop);\n    }, delay);\n  }\n\n  hasScheduledNewConnection() {\n    return !!this._newConnectionTimeout || this._opening;\n  }\n\n  /**\n   * Increases the size of the connection pool in the background, if needed.\n   */\n  increaseSize() {\n    if (this.connections.length < this.coreConnectionsLength && !this.hasScheduledNewConnection()) {\n      // schedule the next connection in the background\n      this.scheduleNewConnectionAttempt(0);\n    }\n  }\n\n  /**\n   * Gets the amount of responses and resets the internal counter.\n   * @returns {number}\n   */\n  getAndResetResponseCounter() {\n    const temp = this.responseCounter;\n    this.responseCounter = 0;\n    return temp;\n  }\n\n  /**\n   * Gets a boolean indicating if the pool is being closed / shutting down or has been shutdown.\n   */\n  isClosing() {\n    return this._state !== state.initial;\n  }\n\n  /**\n   * Gracefully waits for all in-flight requests to finish and closes the pool.\n   */\n  drainAndShutdown() {\n    if (this.isClosing()) {\n      // Its already closing / shutting down\n      return;\n    }\n    this._state = state.closing;\n    this.clearNewConnectionAttempt();\n    const self = this;\n    if (this.connections.length === 0) {\n      return this._afterClosing();\n    }\n    const connections = this.connections;\n    this.connections = utils.emptyArray;\n    let closedConnections = 0;\n    this.log('info', util.format('Draining and closing %d connections to %s', connections.length, this._address));\n    let wasClosed = false;\n    // eslint-disable-next-line prefer-const\n    let checkShutdownTimeout;\n    for (let i = 0; i < connections.length; i++) {\n      const c = connections[i];\n      if (c.getInFlight() === 0) {\n        getDelayedClose(c)();\n        continue;\n      }\n      c.emitDrain = true;\n      c.once('drain', getDelayedClose(c));\n    }\n    function getDelayedClose(connection) {\n      return (function delayedClose() {\n        connection.close();\n        if (++closedConnections < connections.length) {\n          return;\n        }\n        if (wasClosed) {\n          return;\n        }\n        wasClosed = true;\n        if (checkShutdownTimeout) {\n          clearTimeout(checkShutdownTimeout);\n        }\n        self._afterClosing();\n      });\n    }\n    // Check that after sometime (readTimeout + 100ms) the connections have been drained\n    const delay = (this.options.socketOptions.readTimeout || defaultOptions.socketOptions.readTimeout) + 100;\n    checkShutdownTimeout = setTimeout(function checkShutdown() {\n      wasClosed = true;\n      connections.forEach(function connectionEach(c) {\n        c.close();\n      });\n      self._afterClosing();\n    }, delay);\n  }\n\n  _afterClosing() {\n    const self = this;\n    function resetState() {\n      if (self._state === state.shuttingDown) {\n        self._state = state.shutDown;\n      }\n      else {\n        self._state = state.initial;\n      }\n      self.emit('close');\n    }\n    if (this._creating) {\n      // The pool is being created, reset the state back to init once the creation finished (without any new connection)\n      return this.once('creation', resetState);\n    }\n    if (this._opening) {\n      // The pool is growing, reset the state back to init once the open finished (without any new connection)\n      return this.once('open', resetState);\n    }\n    resetState();\n  }\n\n  /**\n   * @param {Function} callback\n   */\n  shutdown(callback) {\n    this.clearNewConnectionAttempt();\n    if (!this.connections.length) {\n      this._state = state.shutDown;\n      return callback();\n    }\n    const previousState = this._state;\n    this._state = state.shuttingDown;\n    if (previousState === state.closing) {\n      return this.once('close', callback);\n    }\n    this.once('shutdown', callback);\n    if (previousState === state.shuttingDown) {\n      // Its going to be emitted\n      return;\n    }\n    const self = this;\n    this._closeAllConnections(function closeAllCallback() {\n      self._state = state.shutDown;\n      self.emit('shutdown');\n    });\n  }\n\n  /** @param {Function} [callback] */\n  _closeAllConnections(callback) {\n    callback = callback || utils.noop;\n    const connections = this.connections;\n    // point to an empty array\n    this.connections = utils.emptyArray;\n    if (connections.length === 0) {\n      return callback();\n    }\n    this.log('info', util.format('Closing %d connections to %s', connections.length, this._address));\n    utils.each(connections, function closeEach(c, next) {\n      c.close(function closedCallback() {\n        //ignore errors\n        next();\n      });\n    }, callback);\n  }\n}\n\nmodule.exports = HostConnectionPool;","module.exports = require(\"tls\");","'use strict';\nconst util = require('util');\nconst stream = require('stream');\nconst Transform = stream.Transform;\nconst Writable = stream.Writable;\n\nconst types = require('./types');\nconst utils = require('./utils');\nconst errors = require('./errors');\nconst FrameHeader = types.FrameHeader;\nconst FrameReader = require('./readers').FrameReader;\n\n/**\n * Transforms chunks, emits data objects {header, chunk}\n * @param options Stream options\n * @extends Transform\n */\nfunction Protocol (options) {\n  Transform.call(this, options);\n  this.header = null;\n  this.bodyLength = 0;\n  this.clearHeaderChunks();\n  this.version = 0;\n  this.headerSize = 0;\n}\n\nutil.inherits(Protocol, Transform);\n\nProtocol.prototype._transform = function (chunk, encoding, callback) {\n  let error = null;\n  try {\n    this.readItems(chunk);\n  }\n  catch (err) {\n    error = err;\n  }\n  callback(error);\n};\n\n/**\n * Parses the chunk into frames (header and body).\n * Emits (push) complete frames or frames with incomplete bodies. Following chunks containing the rest of the body will\n * be emitted using the same frame.\n * It buffers incomplete headers.\n * @param {Buffer} chunk\n */\nProtocol.prototype.readItems = function (chunk) {\n  if (!chunk || chunk.length === 0) {\n    return;\n  }\n  if (this.version === 0) {\n    //The server replies the first message with the max protocol version supported\n    this.version = FrameHeader.getProtocolVersion(chunk);\n    this.headerSize = FrameHeader.size(this.version);\n  }\n  let offset = 0;\n  let currentHeader = this.header;\n  this.header = null;\n  if (this.headerChunks.byteLength !== 0) {\n    //incomplete header was buffered try to read the header from the buffered chunks\n    this.headerChunks.parts.push(chunk);\n    if (this.headerChunks.byteLength + chunk.length < this.headerSize) {\n      this.headerChunks.byteLength += chunk.length;\n      return;\n    }\n    currentHeader = FrameHeader.fromBuffer(Buffer.concat(this.headerChunks.parts, this.headerSize));\n    offset = this.headerSize - this.headerChunks.byteLength;\n    this.clearHeaderChunks();\n  }\n  const items = [];\n  while (true) {\n    if (!currentHeader) {\n      if (this.headerSize > chunk.length - offset) {\n        if (chunk.length - offset <= 0) {\n          break;\n        }\n        //the header is incomplete, buffer it until the next chunk\n        const headerPart = chunk.slice(offset, chunk.length);\n        this.headerChunks.parts.push(headerPart);\n        this.headerChunks.byteLength = headerPart.length;\n        break;\n      }\n      //read header\n      currentHeader = FrameHeader.fromBuffer(chunk, offset);\n      offset += this.headerSize;\n    }\n    //parse body\n    const remaining = chunk.length - offset;\n    if (currentHeader.bodyLength <= remaining + this.bodyLength) {\n      items.push({ header: currentHeader, chunk: chunk, offset: offset, frameEnded: true });\n      offset += currentHeader.bodyLength - this.bodyLength;\n      //reset the body length\n      this.bodyLength = 0;\n    }\n    else if (remaining >= 0) {\n      //the body is not fully contained in this chunk\n      //will continue later\n      this.header = currentHeader;\n      this.bodyLength += remaining;\n      if (remaining > 0) {\n        //emit if there is at least a byte to emit\n        items.push({ header: currentHeader, chunk: chunk, offset: offset, frameEnded: false });\n      }\n      break;\n    }\n    currentHeader = null;\n  }\n  for (let i = 0; i < items.length; i++) {\n    this.push(items[i]);\n  }\n};\n\nProtocol.prototype.clearHeaderChunks = function () {\n  this.headerChunks = { byteLength: 0, parts: [] };\n};\n\n/**\n * A stream that gets reads header + body chunks and transforms them into header + (row | error)\n * @param {Object} streamOptions Node.js Stream options\n * @param {Encoder} encoder Encoder instance for the parser to use\n * @extends Transform\n */\nfunction Parser (streamOptions, encoder) {\n  Transform.call(this, streamOptions);\n  //frames that are streaming, indexed by id\n  this.frames = {};\n  this.encoder = encoder;\n}\n\nutil.inherits(Parser, Transform);\n\nParser.prototype._transform = function (item, encoding, callback) {\n  const frameInfo = this.frameState(item);\n\n  let error = null;\n  try {\n    this.parseBody(frameInfo, item);\n  }\n  catch (err) {\n    error = err;\n  }\n  callback(error);\n\n  if (item.frameEnded) {\n    if (frameInfo.cellBuffer) {\n      //Frame was being streamed but an error force it to buffer the result\n      this.push({\n        header: frameInfo.header,\n        error: new errors.DriverInternalError('There was an problem while parsing streaming frame, opcode ' +\n          frameInfo.header.opcode)\n      });\n    }\n    //all the parsing finished and it was streamed down\n    //emit an item that signals it\n    this.push({ header: frameInfo.header, frameEnded: true});\n  }\n};\n\n/**\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n */\nParser.prototype.parseBody = function (frameInfo, item) {\n  frameInfo.isStreaming = frameInfo.byRow && item.header.opcode === types.opcodes.result;\n  if (!this.handleFrameBuffers(frameInfo, item)) {\n    // Frame isn't complete and we are not streaming the frame\n    return;\n  }\n  const reader = new FrameReader(item.header, item.chunk, item.offset);\n  // Check that flags have not been parsed yet for this frame\n  if (frameInfo.flagsInfo === undefined) {\n    const originalOffset = reader.offset;\n    try {\n      frameInfo.flagsInfo = reader.readFlagsInfo();\n    }\n    catch (e) {\n      return this.handleParsingError(e, frameInfo, reader, originalOffset);\n    }\n  }\n\n  //All the body for most operations is already buffered at this stage\n  //Except for RESULT\n  switch (item.header.opcode) {\n    case types.opcodes.result:\n      return this.parseResult(frameInfo, reader);\n    case types.opcodes.ready:\n    case types.opcodes.authSuccess:\n      return this.push({ header: frameInfo.header, ready: true });\n    case types.opcodes.authChallenge:\n      return this.push({ header: frameInfo.header, authChallenge: true, token: reader.readBytes()});\n    case types.opcodes.authenticate:\n      return this.push({ header: frameInfo.header, mustAuthenticate: true, authenticatorName: reader.readString()});\n    case types.opcodes.error:\n      return this.push({ header: frameInfo.header, error: reader.readError()});\n    case types.opcodes.supported:\n      return this.push({ header: frameInfo.header });\n    case types.opcodes.event:\n      return this.push({ header: frameInfo.header, event: reader.readEvent()});\n    default:\n      return this.push({ header: frameInfo.header, error: new Error('Received invalid opcode: ' + item.header.opcode) });\n  }\n};\n\n/**\n * Buffers if needed and returns true if it has all the necessary data to continue parsing the frame.\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n * @returns {Boolean}\n */\nParser.prototype.handleFrameBuffers = function (frameInfo, item) {\n  if (!frameInfo.isStreaming) {\n    // Handle buffering for complete frame bodies\n    const currentLength = (frameInfo.bufferLength || 0) + item.chunk.length - item.offset;\n    if (currentLength < item.header.bodyLength) {\n      //buffer until the frame is completed\n      this.addFrameBuffer(frameInfo, item);\n      return false;\n    }\n    //We have received the full frame body\n    if (frameInfo.buffers) {\n      item.chunk = this.getFrameBuffer(frameInfo, item);\n      item.offset = 0;\n    }\n    return true;\n  }\n  if (frameInfo.cellBuffer) {\n    // Handle buffering for frame cells (row cells or metadata cells)\n    if (item.offset !== 0) {\n      throw new errors.DriverInternalError('Following chunks can not have an offset greater than zero');\n    }\n    frameInfo.cellBuffer.parts.push(item.chunk);\n    if (!frameInfo.cellBuffer.expectedLength) {\n      //Its a buffer outside a row cell (metadata or other)\n      if (frameInfo.cellBuffer.parts.length !== 2) {\n        throw new errors.DriverInternalError('Buffer for streaming frame can not contain more than 1 item');\n      }\n      item.chunk = Buffer.concat(frameInfo.cellBuffer.parts, frameInfo.cellBuffer.byteLength + item.chunk.length);\n      frameInfo.cellBuffer = null;\n      return true;\n    }\n    if (frameInfo.cellBuffer.expectedLength > frameInfo.cellBuffer.byteLength + item.chunk.length) {\n      //We still haven't got the cell data\n      frameInfo.cellBuffer.byteLength += item.chunk.length;\n      return false;\n    }\n    item.chunk = Buffer.concat(frameInfo.cellBuffer.parts, frameInfo.cellBuffer.byteLength + item.chunk.length);\n    frameInfo.cellBuffer = null;\n  }\n  return true;\n};\n\n/**\n * Adds this chunk to the frame buffers.\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n */\nParser.prototype.addFrameBuffer = function (frameInfo, item) {\n  if (!frameInfo.buffers) {\n    frameInfo.buffers = [ item.chunk.slice(item.offset) ];\n    frameInfo.bufferLength = item.chunk.length - item.offset;\n    return;\n  }\n  if (item.offset > 0) {\n    throw new errors.DriverInternalError('Following chunks can not have an offset greater than zero');\n  }\n  frameInfo.buffers.push(item.chunk);\n  frameInfo.bufferLength += item.chunk.length;\n};\n\n/**\n * Adds the last chunk and concatenates the frame buffers\n * @param frameInfo\n * @param {{header: FrameHeader, chunk: Buffer, offset: Number}} item\n */\nParser.prototype.getFrameBuffer = function (frameInfo, item) {\n  frameInfo.buffers.push(item.chunk);\n  const result = Buffer.concat(frameInfo.buffers, frameInfo.bodyLength);\n  frameInfo.buffers = null;\n  return result;\n};\n\n/**\n * Tries to read the result in the body of a message\n * @param frameInfo Frame information, header / metadata\n * @param {FrameReader} reader\n */\nParser.prototype.parseResult = function (frameInfo, reader) {\n  let result;\n  // As we might be streaming and the frame buffer might not be complete,\n  // read the metadata and different types of result values in a try-catch.\n  // Store the reader position\n  const originalOffset = reader.offset;\n  try {\n    if (!frameInfo.meta) {\n      frameInfo.kind = reader.readInt();\n      // Spec 4.2.5\n      switch (frameInfo.kind) {\n        case types.resultKind.voidResult:\n          result = { header: frameInfo.header, flags: frameInfo.flagsInfo };\n          break;\n        case types.resultKind.rows:\n          // Parse the rows metadata, the rest of the response is going to be parsed afterwards\n          frameInfo.meta = reader.readMetadata(frameInfo.kind);\n          break;\n        case types.resultKind.setKeyspace:\n          result = { header: frameInfo.header, keyspaceSet: reader.readString(), flags: frameInfo.flagsInfo };\n          break;\n        case types.resultKind.prepared:\n        {\n          const preparedId = utils.copyBuffer(reader.readShortBytes());\n          frameInfo.meta = reader.readMetadata(frameInfo.kind);\n          result = { header: frameInfo.header, id: preparedId, meta: frameInfo.meta, flags: frameInfo.flagsInfo };\n          break;\n        }\n        case types.resultKind.schemaChange:\n          result = { header: frameInfo.header, schemaChange: reader.parseSchemaChange(), flags: frameInfo.flagsInfo };\n          break;\n        default:\n          throw errors.DriverInternalError('Unexpected result kind: ' + frameInfo.kind);\n      }\n    }\n  }\n  catch (e) {\n    return this.handleParsingError(e, frameInfo, reader, originalOffset);\n  }\n  if (result) {\n    if (frameInfo.emitted) {\n      // It may contain additional metadata and info that it's not being parsed\n      return;\n    }\n    frameInfo.emitted = true;\n    return this.push(result);\n  }\n  // Its a `Rows` result\n  if (reader.remainingLength() > 0) {\n    this.parseRows(frameInfo, reader);\n  }\n};\n\n/**\n * @param frameInfo\n * @param {FrameReader} reader\n */\nParser.prototype.parseRows = function (frameInfo, reader) {\n  if (frameInfo.parsingError) {\n    //No more processing on this frame\n    return;\n  }\n  if (frameInfo.rowLength === undefined) {\n    try {\n      frameInfo.rowLength = reader.readInt();\n    }\n    catch (e) {\n      return this.handleParsingError(e, frameInfo, reader);\n    }\n  }\n  if (frameInfo.rowLength === 0) {\n    return this.push({\n      header: frameInfo.header,\n      result: { rows: utils.emptyArray, meta: frameInfo.meta, flags: frameInfo.flagsInfo }\n    });\n  }\n  const meta = frameInfo.meta;\n  frameInfo.rowIndex = frameInfo.rowIndex || 0;\n  for (let i = frameInfo.rowIndex; i < frameInfo.rowLength; i++) {\n    const rowOffset = reader.offset;\n    const row = new types.Row(meta.columns);\n    let cellBuffer;\n    for (let j = 0; j < meta.columns.length; j++ ) {\n      const c = meta.columns[j];\n      try {\n        cellBuffer = reader.readBytes();\n      }\n      catch (e) {\n        return this.handleParsingError(e, frameInfo, reader, rowOffset, i);\n      }\n      try {\n        row[c.name] = this.encoder.decode(cellBuffer, c.type);\n      }\n      catch (e) {\n        //Something went wrong while decoding, we are not going to be able to recover\n        return this.handleParsingError(e, frameInfo, null);\n      }\n    }\n    this.push({\n      header: frameInfo.header,\n      row: row,\n      meta: frameInfo.meta,\n      byRow: frameInfo.byRow,\n      length: frameInfo.rowLength,\n      flags: frameInfo.flagsInfo\n    });\n  }\n};\n\n/**\n * Sets parser options (ie: how to yield the results as they are parsed)\n * @param {Number} id Id of the stream\n * @param options\n */\nParser.prototype.setOptions = function (id, options) {\n  if (this.frames[id.toString()]) {\n    throw new types.DriverError('There was already state for this frame');\n  }\n  this.frames[id.toString()] = options;\n};\n\n/**\n * Gets the frame info from the internal state.\n * In case it is not there, it creates it.\n * In case the frame ended\n */\nParser.prototype.frameState = function (item) {\n  let frameInfo = this.frames[item.header.streamId];\n  if (!frameInfo) {\n    frameInfo = {};\n    if (!item.frameEnded) {\n      //store it in the frames\n      this.frames[item.header.streamId] = frameInfo;\n    }\n  }\n  else if (item.frameEnded) {\n    //if it was already stored, remove it\n    delete this.frames[item.header.streamId];\n  }\n  frameInfo.header = item.header;\n  return frameInfo;\n};\n\n/**\n * Handles parsing error: pushing an error if its unexpected or buffer the cell if its streaming\n * @param {Error} e\n * @param frameInfo\n * @param {FrameReader} reader\n * @param {Number} [originalOffset]\n * @param {Number} [rowIndex]\n */\nParser.prototype.handleParsingError = function (e, frameInfo, reader, originalOffset, rowIndex) {\n  if (reader && frameInfo.isStreaming && (e instanceof RangeError)) {\n    //A controlled error, buffer from offset and move on\n    return this.bufferResultCell(frameInfo, reader, originalOffset, rowIndex, e.expectedLength);\n  }\n  frameInfo.parsingError = true;\n  frameInfo.cellBuffer = null;\n  this.push({ header: frameInfo.header, error: e });\n};\n\n/**\n * When streaming, it buffers data since originalOffset.\n * @param frameInfo\n * @param {FrameReader} reader\n * @param {Number} [originalOffset]\n * @param {Number} [rowIndex]\n * @param {Number} [expectedLength]\n */\nParser.prototype.bufferResultCell = function (frameInfo, reader, originalOffset, rowIndex, expectedLength) {\n  if (!originalOffset && originalOffset !== 0) {\n    originalOffset = reader.offset;\n  }\n  frameInfo.rowIndex = rowIndex;\n  const buffer = reader.slice(originalOffset);\n  frameInfo.cellBuffer = {\n    parts: [ buffer ],\n    byteLength: buffer.length,\n    expectedLength: expectedLength\n  };\n};\n\n/**\n * Represents a writable streams that emits results\n */\nfunction ResultEmitter(options) {\n  Writable.call(this, options);\n  /**\n   * Stores the rows for frames that needs to be yielded as one result with many rows\n   */\n  this.rowBuffer = {};\n}\n\nutil.inherits(ResultEmitter, Writable);\n\nResultEmitter.prototype._write = function (item, encoding, callback) {\n  let error = null;\n  try {\n    this.each(item);\n  }\n  catch (err) {\n    error = err;\n  }\n  callback(error);\n};\n\n\n/**\n * Analyzes the item and emit the corresponding event\n */\nResultEmitter.prototype.each = function (item) {\n  if (item.error || item.result) {\n    //Its either an error or an empty array rows\n    //no transformation needs to be made\n    return this.emit('result', item.header, item.error, item.result);\n  }\n  if (item.frameEnded) {\n    return this.emit('frameEnded', item.header);\n  }\n  if (item.byRow) {\n    //it should be yielded by row\n    return this.emit('row', item.header, item.row, item.meta, item.length, item.flags);\n  }\n  if (item.row) {\n    //it should be yielded as a result\n    //it needs to be buffered to an array of rows\n    return this.bufferAndEmit(item);\n  }\n  if (item.event) {\n    //its an event from Cassandra\n    return this.emit('nodeEvent', item.header, item.event);\n  }\n  //its a raw response (object with flags)\n  return this.emit('result', item.header, null, item);\n};\n\n/**\n * Buffers the rows until the result set is completed and emits the result event.\n */\nResultEmitter.prototype.bufferAndEmit = function (item) {\n  let rows = this.rowBuffer[item.header.streamId];\n  if (!rows) {\n    rows = this.rowBuffer[item.header.streamId] = [];\n  }\n  rows.push(item.row);\n  if (rows.length === item.length) {\n    this.emit('result', item.header, null, { rows: rows, meta: item.meta, flags: item.flags});\n    delete this.rowBuffer[item.header.streamId];\n  }\n};\n\nexports.Protocol = Protocol;\nexports.Parser = Parser;\nexports.ResultEmitter = ResultEmitter;\n","'use strict';\n\nconst util = require('util');\nconst utils = require('./utils');\nconst types = require('./types');\nconst errors = require('./errors');\n\n/**\n * Information on the formatting of the returned rows\n */\nconst resultFlag = {\n  globalTablesSpec:   0x0001,\n  hasMorePages:       0x0002,\n  noMetadata:         0x0004\n};\n\n/**\n * Buffer forward reader of CQL binary frames\n * @param {FrameHeader} header\n * @param {Buffer} body\n * @param {Number} [offset]\n */\nfunction FrameReader(header, body, offset) {\n  this.header = header;\n  this.opcode = header.opcode;\n  this.offset = offset || 0;\n  this.buf = body;\n}\n\nFrameReader.prototype.remainingLength = function () {\n  return this.buf.length - this.offset;\n};\n\nFrameReader.prototype.getBuffer = function () {\n  return this.buf;\n};\n\n/**\n * Slices the underlining buffer\n * @param {Number} begin\n * @param {Number} [end]\n * @returns {Buffer}\n */\nFrameReader.prototype.slice = function (begin, end) {\n  if (typeof end === 'undefined') {\n    end = this.buf.length;\n  }\n  return this.buf.slice(begin, end);\n};\n\n/**\n * Modifies the underlying buffer, it concatenates the given buffer with the original (internalBuffer = concat(bytes, internalBuffer)\n */\nFrameReader.prototype.unshift = function (bytes) {\n  if (this.offset > 0) {\n    throw new Error('Can not modify the underlying buffer if already read');\n  }\n  this.buf = Buffer.concat([bytes, this.buf], bytes.length + this.buf.length);\n};\n\n/**\n * Reads any number of bytes and moves the offset.\n * if length not provided or it's larger than the remaining bytes, reads to end.\n * @param length\n * @returns {Buffer}\n */\nFrameReader.prototype.read = function (length) {\n  let end = this.buf.length;\n  if (typeof length !== 'undefined' && this.offset + length < this.buf.length) {\n    end = this.offset + length;\n  }\n  const bytes = this.slice(this.offset, end);\n  this.offset = end;\n  return bytes;\n};\n\n/**\n * Moves the reader cursor to the end\n */\nFrameReader.prototype.toEnd = function () {\n  this.offset = this.buf.length;\n};\n\n/**\n * Reads a BE Int and moves the offset\n * @returns {Number}\n */\nFrameReader.prototype.readInt = function() {\n  const result = this.buf.readInt32BE(this.offset);\n  this.offset += 4;\n  return result;\n};\n\n/** @returns {Number} */\nFrameReader.prototype.readShort = function () {\n  const result = this.buf.readUInt16BE(this.offset);\n  this.offset += 2;\n  return result;\n};\n\nFrameReader.prototype.readByte = function () {\n  const result = this.buf.readUInt8(this.offset);\n  this.offset += 1;\n  return result;\n};\n\nFrameReader.prototype.readString = function () {\n  const length = this.readShort();\n  this.checkOffset(length);\n  const result = this.buf.toString('utf8', this.offset, this.offset+length);\n  this.offset += length;\n  return result;\n};\n\n/**\n * Checks that the new length to read is within the range of the buffer length. Throws a RangeError if not.\n * @param {Number} newLength\n */\nFrameReader.prototype.checkOffset = function (newLength) {\n  if (this.offset + newLength > this.buf.length) {\n    const err = new RangeError('Trying to access beyond buffer length');\n    err.expectedLength = newLength;\n    throw err;\n  }\n};\n\n/**\n * Reads a protocol string list\n * @returns {Array}\n */\nFrameReader.prototype.readStringList = function () {\n  const length = this.readShort();\n  const list = new Array(length);\n  for (let i = 0; i < length; i++) {\n    list[i] = this.readString();\n  }\n  return list;\n};\n\n/**\n * Reads the amount of bytes that the field has and returns them (slicing them).\n * @returns {Buffer}\n */\nFrameReader.prototype.readBytes = function () {\n  const length = this.readInt();\n  if (length < 0) {\n    return null;\n  }\n  this.checkOffset(length);\n  return this.read(length);\n};\n\nFrameReader.prototype.readShortBytes = function () {\n  const length = this.readShort();\n  if (length < 0) {\n    return null;\n  }\n  this.checkOffset(length);\n  return this.read(length);\n};\n\n/**\n * Reads an associative array of strings as keys and bytes as values\n * @returns {Object}\n */\nFrameReader.prototype.readBytesMap = function () {\n  //A [short] n, followed by n pair <k><v> where <k> is a\n  //[string] and <v> is a [bytes].\n  const length = this.readShort();\n  if (length < 0) {\n    return null;\n  }\n  const map = {};\n  for (let i = 0; i < length; i++) {\n    map[this.readString()] = this.readBytes();\n  }\n  return map;\n};\n\n/**\n * Reads a data type definition\n * @returns {{code: Number, info: Object|null}} An array of 2 elements\n */\nFrameReader.prototype.readType = function () {\n  let i;\n  const type = {\n    code: this.readShort(),\n    type: null\n  };\n  switch (type.code) {\n    case types.dataTypes.custom:\n      type.info = this.readString();\n      break;\n    case types.dataTypes.list:\n    case types.dataTypes.set:\n      type.info = this.readType();\n      break;\n    case types.dataTypes.map:\n      type.info = [this.readType(), this.readType()];\n      break;\n    case types.dataTypes.udt:\n      type.info = {\n        keyspace: this.readString(),\n        name: this.readString(),\n        fields: new Array(this.readShort())\n      };\n      for (i = 0; i < type.info.fields.length; i++) {\n        type.info.fields[i] = {\n          name: this.readString(),\n          type: this.readType()\n        };\n      }\n      break;\n    case types.dataTypes.tuple:\n      type.info = new Array(this.readShort());\n      for (i = 0; i < type.info.length; i++) {\n        type.info[i] = this.readType();\n      }\n      break;\n  }\n  return type;\n};\n\n/**\n * Reads an Ip address and port\n * @returns {{address: exports.InetAddress, port: Number}}\n */\nFrameReader.prototype.readInet = function () {\n  const length = this.readByte();\n  const address = this.read(length);\n  return {address: new types.InetAddress(address), port: this.readInt()};\n};\n\n/**\n * Reads the body bytes corresponding to the flags\n * @returns {{traceId: Uuid, warnings: Array, customPayload}}\n * @throws {RangeError}\n */\nFrameReader.prototype.readFlagsInfo = function () {\n  if (this.header.flags === 0) {\n    return utils.emptyObject;\n  }\n  const result = {};\n  if (this.header.flags & types.frameFlags.tracing) {\n    this.checkOffset(16);\n    result.traceId = new types.Uuid(utils.copyBuffer(this.read(16)));\n  }\n  if (this.header.flags & types.frameFlags.warning) {\n    result.warnings = this.readStringList();\n  }\n  if (this.header.flags & types.frameFlags.customPayload) {\n    result.customPayload = this.readBytesMap();\n  }\n  return result;\n};\n\n/**\n * Reads the metadata from a row or a prepared result response\n * @param {Number} kind\n * @returns {Object}\n * @throws {RangeError}\n */\nFrameReader.prototype.readMetadata = function (kind) {\n  let i;\n  //Determines if its a prepared metadata\n  const isPrepared = (kind === types.resultKind.prepared);\n  const meta = {};\n  //as used in Rows and Prepared responses\n  const flags = this.readInt();\n\n  const columnLength = this.readInt();\n  if (types.protocolVersion.supportsPreparedPartitionKey(this.header.version) && isPrepared) {\n    //read the pk columns\n    meta.partitionKeys = new Array(this.readInt());\n    for (i = 0; i < meta.partitionKeys.length; i++) {\n      meta.partitionKeys[i] = this.readShort();\n    }\n  }\n  if (flags & resultFlag.hasMorePages) {\n    meta.pageState = utils.copyBuffer(this.readBytes());\n  }\n  if (flags & resultFlag.globalTablesSpec) {\n    meta.global_tables_spec = true;\n    meta.keyspace = this.readString();\n    meta.table = this.readString();\n  }\n  meta.columns = new Array(columnLength);\n  meta.columnsByName = utils.emptyObject;\n  if (isPrepared) {\n    //for prepared metadata, we will need a index of the columns (param) by name\n    meta.columnsByName = {};\n  }\n  for (i = 0; i < columnLength; i++) {\n    const col = {};\n    if(!meta.global_tables_spec) {\n      col.ksname = this.readString();\n      col.tablename = this.readString();\n    }\n    col.name = this.readString();\n    col.type = this.readType();\n    meta.columns[i] = col;\n    if (isPrepared) {\n      meta.columnsByName[col.name] = i;\n    }\n  }\n\n  return meta;\n};\n\n// templates for derived error messages.\nconst _writeTimeoutQueryMessage = 'Server timeout during write query at consistency %s (%d peer(s) acknowledged the write over %d required)';\nconst _writeTimeoutBatchLogMessage = 'Server timeout during batchlog write at consistency %s (%d peer(s) acknowledged the write over %d required)';\nconst _writeFailureMessage = 'Server failure during write query at consistency %s (%d responses were required but only %d replicas responded, %d failed)';\nconst _unavailableMessage = 'Not enough replicas available for query at consistency %s (%d required but only %d alive)';\nconst _readTimeoutMessage = 'Server timeout during read query at consistency %s (%s)';\nconst _readFailureMessage = 'Server failure during read query at consistency %s (%d responses were required but only %d replicas responded, %d failed)';\n\n/**\n * Reads the error from the frame\n * @throws {RangeError}\n * @returns {ResponseError}\n */\nFrameReader.prototype.readError = function () {\n  const code = this.readInt();\n  const message = this.readString();\n  const err = new errors.ResponseError(code, message);\n  //read extra info\n  switch (code) {\n    case types.responseErrorCodes.unavailableException:\n      err.consistencies = this.readShort();\n      err.required = this.readInt();\n      err.alive = this.readInt();\n      err.message = util.format(_unavailableMessage, types.consistencyToString[err.consistencies], err.required, err.alive);\n      break;\n    case types.responseErrorCodes.readTimeout:\n    case types.responseErrorCodes.readFailure:\n      err.consistencies = this.readShort();\n      err.received = this.readInt();\n      err.blockFor = this.readInt();\n      if (code === types.responseErrorCodes.readFailure) {\n        err.failures = this.readInt();\n      }\n      err.isDataPresent = this.readByte();\n      if (code === types.responseErrorCodes.readTimeout) {\n        let details;\n        if (err.received < err.blockFor) {\n          details = util.format('%d replica(s) responded over %d required', err.received, err.blockFor);\n        } else if (!err.isDataPresent) {\n          details = 'the replica queried for the data didn\\'t respond';\n        } else {\n          details = 'timeout while waiting for repair of inconsistent replica';\n        }\n        err.message = util.format(_readTimeoutMessage, types.consistencyToString[err.consistencies], details);\n      } else {\n        err.message = util.format(_readFailureMessage, types.consistencyToString[err.consistencies],\n          err.blockFor, err.received, err.failures);\n      }\n      break;\n    case types.responseErrorCodes.writeTimeout:\n    case types.responseErrorCodes.writeFailure:\n      err.consistencies = this.readShort();\n      err.received = this.readInt();\n      err.blockFor = this.readInt();\n      if (code === types.responseErrorCodes.writeFailure) {\n        err.failures = this.readInt();\n      }\n      err.writeType = this.readString();\n\n      if (code === types.responseErrorCodes.writeTimeout) {\n        const template = err.writeType === 'BATCH_LOG' ? _writeTimeoutBatchLogMessage : _writeTimeoutQueryMessage;\n        err.message = util.format(template, types.consistencyToString[err.consistencies], err.received, err.blockFor);\n      } else {\n        err.message = util.format(_writeFailureMessage, types.consistencyToString[err.consistencies],\n          err.blockFor, err.received, err.failures);\n      }\n      break;\n    case types.responseErrorCodes.unprepared:\n      err.queryId = utils.copyBuffer(this.readShortBytes());\n      break;\n    case types.responseErrorCodes.functionFailure:\n      err.keyspace = this.readString();\n      err.functionName = this.readString();\n      err.argTypes = this.readStringList();\n      break;\n    case types.responseErrorCodes.alreadyExists: {\n      err.keyspace = this.readString();\n      const table = this.readString();\n      if(table.length > 0) {\n        err.table = table;\n      }\n      break;\n    }\n  }\n  return err;\n};\n\n/**\n * Reads an event from Cassandra and returns the detail\n * @returns {{eventType: String, inet: {address: Buffer, port: Number}}, *}\n */\nFrameReader.prototype.readEvent = function () {\n  const eventType = this.readString();\n  switch (eventType) {\n    case types.protocolEvents.topologyChange:\n      return {\n        added: this.readString() === 'NEW_NODE',\n        inet: this.readInet(),\n        eventType: eventType};\n    case types.protocolEvents.statusChange:\n      return {\n        up: this.readString() === 'UP',\n        inet: this.readInet(),\n        eventType: eventType};\n    case types.protocolEvents.schemaChange:\n      return this.parseSchemaChange();\n  }\n  //Forward compatibility\n  return { eventType: eventType};\n};\n\nFrameReader.prototype.parseSchemaChange = function () {\n  let result;\n  if (!types.protocolVersion.supportsSchemaChangeFullMetadata(this.header.version)) {\n    //v1/v2: 3 strings, the table value can be empty\n    result = {\n      eventType: types.protocolEvents.schemaChange,\n      schemaChangeType: this.readString(),\n      keyspace: this.readString(),\n      table: this.readString()\n    };\n    result.isKeyspace = !result.table;\n    return result;\n  }\n  //v3+: 3 or 4 strings: change_type, target, keyspace and (table, type, functionName or aggregate)\n  result = {\n    eventType: types.protocolEvents.schemaChange,\n    schemaChangeType: this.readString(),\n    target: this.readString(),\n    keyspace: this.readString(),\n    table: null,\n    udt: null,\n    signature: null\n  };\n  result.isKeyspace = result.target === 'KEYSPACE';\n  switch (result.target) {\n    case 'TABLE':\n      result.table = this.readString();\n      break;\n    case 'TYPE':\n      result.udt = this.readString();\n      break;\n    case 'FUNCTION':\n      result.functionName = this.readString();\n      result.signature = this.readStringList();\n      break;\n    case 'AGGREGATE':\n      result.aggregate = this.readString();\n      result.signature = this.readStringList();\n  }\n  return result;\n};\n\nexports.FrameReader = FrameReader;\n","\"use strict\";\n\nconst types = require('./types');\n\n/**\n * Group size\n * @type {number}\n */\nconst groupSize = 128;\n\n/**\n * Number used to right shift ids to allocate them into groups\n * @const\n * @type {number}\n */\nconst shiftToGroup = 7;\n\n/**\n * Amount of groups that can be released per time\n * If it grows larger than 4 groups (128 * 4), groups can be released\n * @const\n * @type {number}\n */\nconst releasableSize = 4;\n\n/**\n * 32K possible stream ids depending for protocol v3 and above\n * @const\n * @type {number}\n */\nconst maxGroupsFor2Bytes = 256;\n\n/**\n * Delay used to check if groups can be released\n * @const\n * @type {number}\n */\n// eslint-disable-next-line prefer-const\nlet releaseDelay = 5000;\n\n/**\n * Represents a queue of ids from 0 to maximum stream id supported by the protocol version.\n * Clients can dequeue a stream id using {@link StreamIdStack#shift()} and enqueue (release) using\n * {@link StreamIdStack#push()}\n */\nclass StreamIdStack {\n  /**\n   * Creates a new instance of StreamIdStack.\n   * @param {Number} version Protocol version\n   * @constructor\n   */\n  constructor(version) {\n    //Ecmascript Number is 64-bit double, it can be optimized by the engine into a 32-bit int, but nothing below that.\n    //We try to allocate as few as possible in arrays of 128\n    this.currentGroup = generateGroup(0);\n    this.groupIndex = 0;\n    this.groups = [this.currentGroup];\n    this.releaseTimeout = null;\n    this.setVersion(version);\n    /**\n     * Returns the amount of ids currently in use\n     * @member {number}\n     */\n    this.inUse = 0;\n  }\n\n  /**\n   * Sets the protocol version\n   * @param {Number} version\n   */\n  setVersion(version) {\n    //128 or 32K stream ids depending on the protocol version\n    this.maxGroups = types.protocolVersion.uses2BytesStreamIds(version) ? maxGroupsFor2Bytes : 1;\n  }\n\n  /**\n   * Dequeues an id.\n   * Similar to {@link Array#pop()}.\n   * @returns {Number} Returns an id or null\n   */\n  pop() {\n    let id = this.currentGroup.pop();\n    if (typeof id !== 'undefined') {\n      this.inUse++;\n      return id;\n    }\n    //try to use the following groups\n    while (this.groupIndex < this.groups.length - 1) {\n      //move to the following group\n      this.currentGroup = this.groups[++this.groupIndex];\n      //try dequeue\n      id = this.currentGroup.pop();\n      if (typeof id !== 'undefined') {\n        this.inUse++;\n        return id;\n      }\n    }\n    return this._tryCreateGroup();\n  }\n\n  /**\n   * Enqueue an id for future use.\n   * Similar to {@link Array#push()}.\n   * @param {Number} id\n   */\n  push(id) {\n    this.inUse--;\n    const groupIndex = id >> shiftToGroup;\n    const group = this.groups[groupIndex];\n    group.push(id);\n    if (groupIndex < this.groupIndex) {\n      //Set the lower group to be used to dequeue from\n      this.groupIndex = groupIndex;\n      this.currentGroup = group;\n    }\n    this._tryIssueRelease();\n  }\n\n  /**\n   * Clears all timers\n   */\n  clear() {\n    if (this.releaseTimeout) {\n      clearTimeout(this.releaseTimeout);\n      this.releaseTimeout = null;\n    }\n  }\n\n  /**\n   * Tries to create an additional group and returns a new id\n   * @returns {Number} Returns a new id or null if it's not possible to create a new group\n   * @private\n   */\n  _tryCreateGroup() {\n    if (this.groups.length === this.maxGroups) {\n      //we can have an additional group\n      return null;\n    }\n    //Add a new group at the last position\n    this.groupIndex = this.groups.length;\n    //Using 128 * groupIndex as initial value\n    this.currentGroup = generateGroup(this.groupIndex << shiftToGroup);\n    this.groups.push(this.currentGroup);\n    this.inUse++;\n    return this.currentGroup.pop();\n  }\n\n  _tryIssueRelease() {\n    if (this.releaseTimeout || this.groups.length <= releasableSize) {\n      //Nothing to release or a release delay has been issued\n      return;\n    }\n    const self = this;\n    this.releaseTimeout = setTimeout(() => self._releaseGroups(), releaseDelay);\n  }\n\n  _releaseGroups() {\n    let counter = 0;\n    let index = this.groups.length - 1;\n    //only release up to n groups (n = releasable size)\n    //shrink back up to n groups not all the way up to 1\n    while (counter++ < releasableSize && this.groups.length > releasableSize && index > this.groupIndex) {\n      if (this.groups[index].length !== groupSize) {\n        //the group is being used\n        break;\n      }\n      this.groups.pop();\n      index--;\n    }\n    this.releaseTimeout = null;\n    //Issue next release if applies\n    this._tryIssueRelease();\n  }\n}\n\nfunction generateGroup(initialValue) {\n  const arr = new Array(groupSize);\n  const upperBound = initialValue + groupSize - 1;\n  for (let i = 0; i < groupSize; i++) {\n    arr[i] = upperBound - i;\n  }\n  return arr;\n}\n\nmodule.exports = StreamIdStack;","'use strict';\n\nconst util = require('util');\nconst utils = require('./utils');\nconst errors = require('./errors');\nconst requests = require('./requests');\nconst ExecuteRequest = requests.ExecuteRequest;\nconst QueryRequest = requests.QueryRequest;\n\nconst state = {\n  init: 0,\n  completed: 1,\n  timedOut: 2,\n  cancelled: 3\n};\n\n/**\n * Maintains the state information of a request inside a Connection.\n */\nclass OperationState {\n  /**\n   * Creates a new instance of OperationState.\n   * @param {Request} request\n   * @param {Function} rowCallback\n   * @param {Function} callback\n   */\n  constructor(request, rowCallback, callback) {\n    this.request = request;\n    this._rowCallback = rowCallback;\n    this._callback = callback;\n    this._timeout = null;\n    this._state = state.init;\n    this._rowIndex = 0;\n    /**\n     * Stream id that is set right before being written.\n     * @type {number}\n     */\n    this.streamId = -1;\n  }\n\n  /**\n   * Marks the operation as cancelled, clearing all callbacks and timeouts.\n   */\n  cancel() {\n    if (this._state !== state.init) {\n      return;\n    }\n    if (this._timeout !== null) {\n      clearTimeout(this._timeout);\n    }\n    this._state = state.cancelled;\n    this._callback = utils.noop;\n  }\n\n  /**\n   * Determines if the operation can be written to the wire (when it hasn't been cancelled or it hasn't timed out).\n   */\n  canBeWritten() {\n    return this._state === state.init;\n  }\n\n  /**\n   * Determines if the response is going to be yielded by row.\n   * @return {boolean}\n   */\n  isByRow() {\n    return this._rowCallback && (this.request instanceof ExecuteRequest || this.request instanceof QueryRequest);\n  }\n\n  /**\n   * Creates the timeout for the request.\n   * @param {ExecutionOptions} execOptions\n   * @param {Number} defaultReadTimeout\n   * @param {String} address\n   * @param {Function} onTimeout The callback to be invoked when it times out.\n   * @param {Function} onResponse The callback to be invoked if a response is obtained after it timed out.\n   */\n  setRequestTimeout(execOptions, defaultReadTimeout, address, onTimeout, onResponse) {\n    if (this._state !== state.init) {\n      // No need to set the timeout\n      return;\n    }\n    const millis = execOptions.getReadTimeout() !== undefined ? execOptions.getReadTimeout() : defaultReadTimeout;\n    if (!(millis > 0)) {\n      // Read timeout disabled\n      return;\n    }\n    const self = this;\n    this._timeout = setTimeout(function requestTimedOut() {\n      onTimeout();\n      const message = util.format('The host %s did not reply before timeout %d ms', address, millis);\n      self._markAsTimedOut(new errors.OperationTimedOutError(message, address), onResponse);\n    }, millis);\n  }\n\n  setResultRow(row, meta, rowLength, flags, header) {\n    this._markAsCompleted();\n    if (!this._rowCallback) {\n      return this.setResult(new errors.DriverInternalError('RowCallback not found for streaming frame handler'));\n    }\n    this._rowCallback(this._rowIndex++, row, rowLength);\n    if (this._rowIndex === rowLength) {\n      this._swapCallbackAndInvoke(null, { rowLength: rowLength, meta: meta, flags: flags }, header.bodyLength);\n    }\n  }\n\n  /**\n   * Marks the current operation as timed out.\n   * @param {Error} err\n   * @param {Function} onResponse\n   * @private\n   */\n  _markAsTimedOut(err, onResponse) {\n    if (this._state !== state.init) {\n      return;\n    }\n    this._state = state.timedOut;\n    this._swapCallbackAndInvoke(err, null, null, onResponse);\n  }\n\n  _markAsCompleted() {\n    if (this._state !== state.init) {\n      return;\n    }\n    if (this._timeout !== null) {\n      clearTimeout(this._timeout);\n    }\n    this._state = state.completed;\n  }\n\n  /**\n   * Sets the result of this operation, declaring that no further input will be processed for this operation.\n   * @param {Error} err\n   * @param {Object} [result]\n   * @param {Number} [length]\n   */\n  setResult(err, result, length) {\n    this._markAsCompleted();\n    this._swapCallbackAndInvoke(err, result, length);\n  }\n\n  _swapCallbackAndInvoke(err, result, length, newCallback) {\n    const callback = this._callback;\n    this._callback = newCallback || utils.noop;\n    callback(err, result, length);\n  }\n}\n\nmodule.exports = OperationState;","'use strict';\n\nconst errors = require('./errors');\nconst requests = require('./requests');\nconst retry = require('./policies/retry');\nconst types = require('./types');\nconst utils = require('./utils');\n\nconst retryOnCurrentHost = Object.freeze({\n  decision: retry.RetryPolicy.retryDecision.retry,\n  useCurrentHost: true,\n  consistency: undefined\n});\n\nconst rethrowDecision = Object.freeze({ decision: retry.RetryPolicy.retryDecision.rethrow });\n\n/**\n * An internal representation of an error that occurred during the execution of a request.\n */\nconst errorCodes = {\n  none: 0,\n  // Socket error\n  socketError: 1,\n  // Socket error before the request was written to the wire\n  socketErrorBeforeRequestWritten: 2,\n  // OperationTimedOutError\n  clientTimeout: 3,\n  // Response error \"unprepared\"\n  serverErrorUnprepared: 4,\n  // Response error \"overloaded\", \"is_bootstrapping\" and \"truncateError\":\n  serverErrorOverloaded: 5,\n  serverErrorReadTimeout: 6,\n  serverErrorUnavailable: 7,\n  serverErrorWriteTimeout: 8,\n  // Any other server error (different from the ones detailed above)\n  serverErrorOther: 9\n};\n\nconst metricsHandlers = new Map([\n  [ errorCodes.none, (metrics, err, latency) => metrics.onSuccessfulResponse(latency) ],\n  [ errorCodes.socketError, (metrics, err) => metrics.onConnectionError(err) ],\n  [ errorCodes.clientTimeout, (metrics, err) => metrics.onClientTimeoutError(err) ],\n  [ errorCodes.serverErrorOverloaded, (metrics, err) => metrics.onOtherError(err) ],\n  [ errorCodes.serverErrorReadTimeout, (metrics, err) => metrics.onReadTimeoutError(err) ],\n  [ errorCodes.serverErrorUnavailable, (metrics, err) => metrics.onUnavailableError(err) ],\n  [ errorCodes.serverErrorWriteTimeout, (metrics, err) => metrics.onWriteTimeoutError(err) ],\n  [ errorCodes.serverErrorOther, (metrics, err) => metrics.onOtherError(err) ]\n]);\n\nconst metricsRetryHandlers = new Map([\n  [ errorCodes.socketError, (metrics, err) => metrics.onOtherErrorRetry(err) ],\n  [ errorCodes.clientTimeout, (metrics, err) => metrics.onClientTimeoutRetry(err) ],\n  [ errorCodes.serverErrorOverloaded, (metrics, err) => metrics.onOtherErrorRetry(err) ],\n  [ errorCodes.serverErrorReadTimeout, (metrics, err) => metrics.onReadTimeoutRetry(err) ],\n  [ errorCodes.serverErrorUnavailable, (metrics, err) => metrics.onUnavailableRetry(err) ],\n  [ errorCodes.serverErrorWriteTimeout, (metrics, err) => metrics.onWriteTimeoutRetry(err) ],\n  [ errorCodes.serverErrorOther, (metrics, err) => metrics.onOtherErrorRetry(err) ]\n]);\n\nclass RequestExecution {\n  /**\n   * Encapsulates a single flow of execution against a coordinator, handling individual retries and failover.\n   * @param {RequestHandler} parent\n   */\n  constructor(parent) {\n    this._parent = parent;\n    /** @type {OperationState} */\n    this._operation = null;\n    this._host = null;\n    this._cancelled = false;\n    this._startTime = null;\n    this._retryCount = 0;\n    // The streamId information is not included in the request.\n    // A pointer to the parent request can be used, except when changing the consistency level from the retry policy\n    this._request = this._parent.request;\n  }\n\n  /**\n   * Starts the execution by borrowing the next connection available using the query plan.\n   * It invokes the callback when a connection is acquired, if any.\n   * @param {Function} [getHostCallback] Callback to be invoked when a connection to a host was successfully acquired.\n   */\n  start(getHostCallback) {\n    const self = this;\n    getHostCallback = getHostCallback || utils.noop;\n    this._parent.getNextConnection(function nextConnectionCallback(err, connection, host) {\n      if (self._cancelled) {\n        // No need to send the request or invoke any callback\n        return;\n      }\n      if (err) {\n        return self._parent.handleNoHostAvailable(err, self);\n      }\n      self._connection = connection;\n      self._host = host;\n      getHostCallback(host);\n      if (self._retryCount === 0) {\n        self._parent.speculativeExecutions++;\n      }\n      self._sendOnConnection();\n    });\n  }\n\n  _sendOnConnection() {\n    this._startTime = process.hrtime();\n\n    this._operation =\n      this._connection.sendStream(this._request, this._parent.executionOptions, (err, response, length) => {\n        const errorCode = RequestExecution._getErrorCode(err);\n\n        this._trackResponse(process.hrtime(this._startTime), errorCode, err, length);\n\n        if (this._cancelled) {\n          // Avoid handling the response / err\n          return;\n        }\n\n        if (errorCode !== errorCodes.none) {\n          return this._handleError(errorCode, err);\n        }\n\n        if (response.schemaChange) {\n          return this._parent.client.handleSchemaAgreementAndRefresh(\n            this._connection, response.schemaChange, (agreement) => {\n              if (this._cancelled) {\n                // After the schema agreement method was started, this execution was cancelled\n                return;\n              }\n\n              this._parent.setCompleted(null, this._getResultSet(response, agreement));\n            });\n        }\n\n        if (response.keyspaceSet) {\n          this._parent.client.keyspace = response.keyspaceSet;\n        }\n\n        this._parent.setCompleted(null, this._getResultSet(response));\n      });\n  }\n\n  _trackResponse(latency, errorCode, err, length) {\n    // Record metrics\n    RequestExecution._invokeMetricsHandler(errorCode, this._parent.client.metrics, err, latency);\n\n    // Request tracker\n    const tracker = this._parent.client.options.requestTracker;\n\n    if (tracker === null) {\n      return;\n    }\n\n    // Avoid using instanceof as property check is faster\n    const query = this._request.query || this._request.queries;\n    const parameters = this._request.params;\n    const requestLength = this._request.length;\n\n    if (err) {\n      tracker.onError(this._host, query, parameters, this._parent.executionOptions, requestLength, err, latency);\n    } else {\n      tracker.onSuccess(this._host, query, parameters, this._parent.executionOptions, requestLength, length, latency);\n    }\n  }\n\n  _getResultSet(response, agreement) {\n    return new types.ResultSet(response, this._host.address, this._parent.triedHosts, this._parent.speculativeExecutions,\n      this._request.consistency, agreement === undefined || agreement);\n  }\n\n  /**\n   * Gets the method of the {ClientMetrics} instance depending on the error code and invokes it.\n   * @param {Number} errorCode\n   * @param {ClientMetrics} metrics\n   * @param {Error} err\n   * @param {Array} latency\n   * @private\n   */\n  static _invokeMetricsHandler(errorCode, metrics, err, latency) {\n    const handler = metricsHandlers.get(errorCode);\n    if (handler !== undefined) {\n      handler(metrics, err, latency);\n    }\n\n    if (!err || err instanceof errors.ResponseError) {\n      metrics.onResponse(latency);\n    }\n  }\n\n  /**\n   * Gets the method of the {ClientMetrics} instance related to retry depending on the error code and invokes it.\n   * @param {Number} errorCode\n   * @param {ClientMetrics} metrics\n   * @param {Error} err\n   * @private\n   */\n  static _invokeMetricsHandlerForRetry(errorCode, metrics, err) {\n    const handler = metricsRetryHandlers.get(errorCode);\n\n    if (handler !== undefined) {\n      handler(metrics, err);\n    }\n  }\n\n  /**\n   * Allows the handler to cancel the current request.\n   * When the request has been already written, we can unset the callback and forget about it.\n   */\n  cancel() {\n    this._cancelled = true;\n    if (this._operation === null) {\n      return;\n    }\n    this._operation.cancel();\n  }\n\n  /**\n   * Determines if the current execution was cancelled.\n   */\n  wasCancelled() {\n    return this._cancelled;\n  }\n\n  _handleError(errorCode, err) {\n    this._parent.triedHosts[this._host.address] = err;\n    err['coordinator'] = this._host.address;\n\n    if (errorCode === errorCodes.serverErrorUnprepared) {\n      return this._prepareAndRetry(err.queryId);\n    }\n\n    if (errorCode === errorCodes.socketError || errorCode === errorCodes.socketErrorBeforeRequestWritten) {\n      this._host.removeFromPool(this._connection);\n    } else if (errorCode === errorCodes.clientTimeout) {\n      this._parent.log('warning', err.message);\n      this._host.checkHealth(this._connection);\n    }\n\n    const decisionInfo = this._getDecision(errorCode, err);\n\n    if (!decisionInfo || decisionInfo.decision === retry.RetryPolicy.retryDecision.rethrow) {\n      if (this._request instanceof requests.QueryRequest || this._request instanceof requests.ExecuteRequest) {\n        err['query'] = this._request.query;\n      }\n      return this._parent.setCompleted(err);\n    }\n\n    const metrics = this._parent.client.metrics;\n\n    if (decisionInfo.decision === retry.RetryPolicy.retryDecision.ignore) {\n      metrics.onIgnoreError(err);\n\n      // Return an empty ResultSet\n      return this._parent.setCompleted(null, this._getResultSet(utils.emptyObject));\n    }\n\n    RequestExecution._invokeMetricsHandlerForRetry(errorCode, metrics, err);\n\n    return this._retry(decisionInfo.consistency, decisionInfo.useCurrentHost);\n  }\n\n  /**\n   * Gets a decision whether or not to retry based on the error information.\n   * @param {Number} errorCode\n   * @param {Error} err\n   * @returns {{decision, useCurrentHost, consistency}}\n   */\n  _getDecision(errorCode, err) {\n    const operationInfo = {\n      query: this._request && this._request.query,\n      executionOptions: this._parent.executionOptions,\n      nbRetry: this._retryCount\n    };\n\n    const retryPolicy = operationInfo.executionOptions.getRetryPolicy();\n\n    switch (errorCode) {\n      case errorCodes.socketErrorBeforeRequestWritten:\n        // The request was definitely not applied, it's safe to retry.\n        // Retry on the current host as there might be other connections open, in case it fails to obtain a connection\n        // on the current host, the driver will immediately retry on the next host.\n        return retryOnCurrentHost;\n      case errorCodes.socketError:\n      case errorCodes.clientTimeout:\n      case errorCodes.serverErrorOverloaded:\n        if (operationInfo.executionOptions.isIdempotent()) {\n          return retryPolicy.onRequestError(operationInfo, this._request.consistency, err);\n        }\n        return rethrowDecision;\n      case errorCodes.serverErrorUnavailable:\n        return retryPolicy.onUnavailable(operationInfo, err.consistencies, err.required, err.alive);\n      case errorCodes.serverErrorReadTimeout:\n        return retryPolicy.onReadTimeout(\n          operationInfo, err.consistencies, err.received, err.blockFor, err.isDataPresent);\n      case errorCodes.serverErrorWriteTimeout:\n        if (operationInfo.executionOptions.isIdempotent()) {\n          return retryPolicy.onWriteTimeout(\n            operationInfo, err.consistencies, err.received, err.blockFor, err.writeType);\n        }\n        return rethrowDecision;\n      default:\n        return rethrowDecision;\n    }\n  }\n\n  static _getErrorCode(err) {\n    if (!err) {\n      return errorCodes.none;\n    }\n\n    if (err.isSocketError) {\n      if (err.requestNotWritten) {\n        return errorCodes.socketErrorBeforeRequestWritten;\n      }\n      return errorCodes.socketError;\n    }\n\n    if (err instanceof errors.OperationTimedOutError) {\n      return errorCodes.clientTimeout;\n    }\n\n    if (err instanceof errors.ResponseError) {\n      switch (err.code) {\n        case types.responseErrorCodes.overloaded:\n        case types.responseErrorCodes.isBootstrapping:\n        case types.responseErrorCodes.truncateError:\n          return errorCodes.serverErrorOverloaded;\n        case types.responseErrorCodes.unavailableException:\n          return errorCodes.serverErrorUnavailable;\n        case types.responseErrorCodes.readTimeout:\n          return errorCodes.serverErrorReadTimeout;\n        case types.responseErrorCodes.writeTimeout:\n          return errorCodes.serverErrorWriteTimeout;\n        case types.responseErrorCodes.unprepared:\n          return errorCodes.serverErrorUnprepared;\n      }\n    }\n\n    return errorCodes.serverErrorOther;\n  }\n\n  /**\n   * @param {Number|undefined} consistency\n   * @param {Boolean} useCurrentHost\n   * @private\n   */\n  _retry(consistency, useCurrentHost) {\n    if (this._cancelled) {\n      // No point in retrying\n      return;\n    }\n\n    this._parent.log('info', 'Retrying request');\n    this._retryCount++;\n\n    if (typeof consistency === 'number' && this._request.consistency !== consistency) {\n      this._request = this._request.clone();\n      this._request.consistency = consistency;\n    }\n\n    if (useCurrentHost !== false) {\n      // Use existing host (default).\n      const keyspace = this._parent.client.keyspace;\n      // Reusing the existing connection is suitable for the most common scenarios, like server read timeouts that\n      // will be fixed with a new request.\n      // To cover all scenarios (e.g., where a different connection to the same host might mean something different),\n      // we obtain a new connection from the host pool.\n      // When there was a socket error, the connection provided was already removed from the pool earlier.\n      return this._host.borrowConnection(keyspace, this._connection, (err, connection) => {\n        if (err) {\n          // All connections are busy (`BusyConnectionError`) or there isn't a ready connection in the pool (`Error`)\n          // The retry policy declared the intention to retry on the current host but its not available anymore.\n          // Use the next host\n          return this.start();\n        }\n\n        this._connection = connection;\n        this._sendOnConnection();\n      });\n    }\n\n    // Use the next host in the query plan to send the request\n    this.start();\n  }\n\n  /**\n   * Issues a PREPARE request on the current connection.\n   * If there's a socket or timeout issue, it moves to next host and executes the original request.\n   * @param {Buffer} queryId\n   * @private\n   */\n  _prepareAndRetry(queryId) {\n    const connection = this._connection;\n\n    this._parent.log('info',\n      `Query 0x${queryId.toString('hex')} not prepared on` +\n      ` host ${connection.endpointFriendlyName}, preparing and retrying`);\n\n    const info = this._parent.client.metadata.getPreparedById(queryId);\n\n    if (!info) {\n      return this._parent.setCompleted(new errors.DriverInternalError(\n        `Unprepared response invalid, id: 0x${queryId.toString('hex')}`));\n    }\n\n    if (info.keyspace && info.keyspace !== connection.keyspace) {\n      return this._parent.setCompleted(new Error(\n        `Query was prepared on keyspace ${info.keyspace}, can't execute it on ${connection.keyspace} (${info.query})`));\n    }\n\n    const self = this;\n    this._connection.prepareOnce(info.query, function (err) {\n      if (err) {\n        if (!err.isSocketError && err instanceof errors.OperationTimedOutError) {\n          self._parent.log('warning',\n            `Unexpected timeout error when re-preparing query on host ${connection.endpointFriendlyName}`);\n        }\n\n        // There was a failure re-preparing on this connection.\n        // Execute the original request on the next connection and forget about the PREPARE-UNPREPARE flow.\n        return self._retry(undefined, false);\n      }\n      self._retry(undefined, true);\n    });\n  }\n}\n\nmodule.exports = RequestExecution;","'use strict';\n\nconst util = require('util');\nconst types = require('./types');\nconst token = require('./token');\nconst utils = require('./utils');\nconst MutableLong = require('./types/mutable-long');\nconst Integer = types.Integer;\n\n// Murmur3 constants\n//-0x783C846EEEBDAC2B\nconst mconst1 = new MutableLong(0x53d5, 0x1142, 0x7b91, 0x87c3);\n//0x4cf5ad432745937f\nconst mconst2 = new MutableLong(0x937f, 0x2745, 0xad43, 0x4cf5);\nconst mlongFive = MutableLong.fromNumber(5);\n//0xff51afd7ed558ccd\nconst mconst3 = new MutableLong(0x8ccd, 0xed55, 0xafd7, 0xff51);\n//0xc4ceb9fe1a85ec53\nconst mconst4 = new MutableLong(0xec53, 0x1a85, 0xb9fe, 0xc4ce);\nconst mconst5 = MutableLong.fromNumber(0x52dce729);\nconst mconst6 = MutableLong.fromNumber(0x38495ab5);\n\n/**\n * Represents a set of methods that are able to generate and parse tokens for the C* partitioner.\n * @abstract\n */\nclass Tokenizer {\n  constructor() {\n\n  }\n\n  /**\n   * Creates a token based on the Buffer value provided\n   * @abstract\n   * @param {Buffer|Array} value\n   * @returns {Token} Computed token\n   */\n  hash(value) {\n    throw new Error('You must implement a hash function for the tokenizer');\n  }\n\n  /**\n   * Parses a token string and returns a representation of the token\n   * @abstract\n   * @param {String} value\n   */\n  parse(value) {\n    throw new Error('You must implement a parse function for the tokenizer');\n  }\n\n  minToken() {\n    throw new Error('You must implement a minToken function for the tokenizer');\n  }\n\n  /**\n   * Splits the range specified by start and end into numberOfSplits equal parts.\n   * @param {Token} start Starting token\n   * @param {Token} end  End token\n   * @param {Number} numberOfSplits Number of splits to make.\n   */\n  split(start, end, numberOfSplits) {\n    throw new Error('You must implement a split function for the tokenizer');\n  }\n\n  /**\n   * Common implementation for splitting token ranges when start is in\n   * a shared Integer format.\n   *\n   * @param {Integer} start Starting token\n   * @param {Integer} range How large the range of the split is\n   * @param {Integer} ringEnd The end point of the ring so we know where to wrap\n   * @param {Integer} ringLength The total size of the ring\n   * @param {Number} numberOfSplits The number of splits to make\n   * @returns {Array<Integer>} The evenly-split points on the range\n   */\n  splitBase(start, range, ringEnd, ringLength, numberOfSplits) {\n    const numberOfSplitsInt = Integer.fromInt(numberOfSplits);\n    const divider = range.divide(numberOfSplitsInt);\n    let remainder = range.modulo(numberOfSplitsInt);\n\n    const results = [];\n    let current = start;\n    const dividerPlusOne = divider.add(Integer.ONE);\n\n    for(let i = 1; i < numberOfSplits; i++) {\n      if (remainder.greaterThan(Integer.ZERO)) {\n        current = current.add(dividerPlusOne);\n      } else {\n        current = current.add(divider);\n      }\n      if (ringLength && current.greaterThan(ringEnd)) {\n        current = current.subtract(ringLength);\n      }\n      results.push(current);\n      remainder = remainder.subtract(Integer.ONE);\n    }\n    return results;\n  }\n\n  /**\n   * Return internal string based representation of a Token.\n   * @param {Token} token \n   */\n  stringify(token) {\n    return token.getValue().toString();\n  }\n}\n\n/**\n * Uniformly distributes data across the cluster based on Cassandra flavored Murmur3 hashed values.\n */\nclass Murmur3Tokenizer extends Tokenizer {\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Buffer} value\n   * @return {Murmur3Token}\n   */\n  hash(value) {\n    // This is an adapted version of the MurmurHash.hash3_x64_128 from Cassandra used\n    // for M3P. Compared to that methods, there's a few inlining of arguments and we\n    // only return the first 64-bits of the result since that's all M3 partitioner uses.\n\n    const data = value;\n    let offset = 0;\n    const length = data.length;\n\n    const nblocks = length >> 4; // Process as 128-bit blocks.\n\n    const h1 = new MutableLong();\n    const h2 = new MutableLong();\n    let k1 = new MutableLong();\n    let k2 = new MutableLong();\n\n    for (let i = 0; i < nblocks; i++) {\n      k1 = this.getBlock(data, offset, i * 2);\n      k2 = this.getBlock(data, offset, i * 2 + 1);\n\n      k1.multiply(mconst1);\n      this.rotl64(k1, 31);\n      k1.multiply(mconst2);\n\n      h1.xor(k1);\n      this.rotl64(h1, 27);\n      h1.add(h2);\n      h1.multiply(mlongFive).add(mconst5);\n\n      k2.multiply(mconst2);\n      this.rotl64(k2, 33);\n      k2.multiply(mconst1);\n      h2.xor(k2);\n      this.rotl64(h2, 31);\n      h2.add(h1);\n      h2.multiply(mlongFive).add(mconst6);\n    }\n    //----------\n    // tail\n\n    // Advance offset to the unprocessed tail of the data.\n    offset += nblocks * 16;\n\n    k1 = new MutableLong();\n    k2 = new MutableLong();\n\n    /* eslint-disable no-fallthrough */\n    switch(length & 15) {\n      case 15:\n        k2.xor(fromSignedByte(data[offset+14]).shiftLeft(48));\n      case 14:\n        k2.xor(fromSignedByte(data[offset+13]).shiftLeft(40));\n      case 13:\n        k2.xor(fromSignedByte(data[offset+12]).shiftLeft(32));\n      case 12:\n        k2.xor(fromSignedByte(data[offset+11]).shiftLeft(24));\n      case 11:\n        k2.xor(fromSignedByte(data[offset+10]).shiftLeft(16));\n      case 10:\n        k2.xor(fromSignedByte(data[offset+9]).shiftLeft(8));\n      case 9:\n        k2.xor(fromSignedByte(data[offset+8]));\n        k2.multiply(mconst2);\n        this.rotl64(k2, 33);\n        k2.multiply(mconst1);\n        h2.xor(k2);\n      case 8:\n        k1.xor(fromSignedByte(data[offset+7]).shiftLeft(56));\n      case 7:\n        k1.xor(fromSignedByte(data[offset+6]).shiftLeft(48));\n      case 6:\n        k1.xor(fromSignedByte(data[offset+5]).shiftLeft(40));\n      case 5:\n        k1.xor(fromSignedByte(data[offset+4]).shiftLeft(32));\n      case 4:\n        k1.xor(fromSignedByte(data[offset+3]).shiftLeft(24));\n      case 3:\n        k1.xor(fromSignedByte(data[offset+2]).shiftLeft(16));\n      case 2:\n        k1.xor(fromSignedByte(data[offset+1]).shiftLeft(8));\n      case 1:\n        k1.xor(fromSignedByte(data[offset]));\n        k1.multiply(mconst1);\n        this.rotl64(k1,31);\n        k1.multiply(mconst2);\n        h1.xor(k1);\n    }\n    /* eslint-enable no-fallthrough */\n\n    h1.xor(MutableLong.fromNumber(length));\n    h2.xor(MutableLong.fromNumber(length));\n\n    h1.add(h2);\n    h2.add(h1);\n\n\n    this.fmix(h1);\n    this.fmix(h2);\n\n    h1.add(h2);\n\n    return new token.Murmur3Token(h1);\n  }\n\n  /**\n   *\n   * @param {Array<Number>} key\n   * @param {Number} offset\n   * @param {Number} index\n   * @return {MutableLong}\n   */\n  getBlock(key, offset, index) {\n    const i8 = index << 3;\n    const blockOffset = offset + i8;\n    return new MutableLong(\n      (key[blockOffset]) | (key[blockOffset + 1] << 8),\n      (key[blockOffset + 2]) | (key[blockOffset + 3] << 8),\n      (key[blockOffset + 4]) | (key[blockOffset + 5] << 8),\n      (key[blockOffset + 6]) | (key[blockOffset + 7] << 8)\n    );\n  }\n\n  /**\n   * @param {MutableLong} v\n   * @param {Number} n\n   */\n  rotl64(v, n) {\n    const left = v.clone().shiftLeft(n);\n    v.shiftRightUnsigned(64 - n).or(left);\n  }\n\n  /** @param {MutableLong} k */\n  fmix(k) {\n    k.xor(new MutableLong(k.getUint16(2) >>> 1 | ((k.getUint16(3) << 15) & 0xffff), k.getUint16(3) >>> 1, 0, 0));\n    k.multiply(mconst3);\n    const other = new MutableLong(\n      (k.getUint16(2) >>> 1) | ((k.getUint16(3) << 15) & 0xffff),\n      k.getUint16(3) >>> 1,\n      0,\n      0\n    );\n    k.xor(other);\n    k.multiply(mconst4);\n    k.xor(new MutableLong(k.getUint16(2) >>> 1 | (k.getUint16(3) << 15 & 0xffff), k.getUint16(3) >>> 1, 0, 0));\n  }\n\n  /**\n   * Parses a int64 decimal string representation into a MutableLong.\n   * @param {String} value\n   * @returns {Murmur3Token}\n   */\n  parse(value) {\n    return new token.Murmur3Token(MutableLong.fromString(value));\n  }\n\n  minToken() {\n    if (!this._minToken) {\n      // minimum long value.\n      this._minToken = this.parse('-9223372036854775808');\n    }\n    return this._minToken;\n  }\n\n  maxToken() {\n    if (!this._maxToken) {\n      this._maxToken = this.parse('9223372036854775807');\n    }\n    return this._maxToken;\n  }\n\n  maxValue() {\n    if (!this._maxValue) {\n      this._maxValue = Integer.fromString('9223372036854775807');\n    }\n    return this._maxValue;\n  }\n\n  minValue() {\n    if (!this._minValue) {\n      this._minValue = Integer.fromString('-9223372036854775808');\n    }\n    return this._minValue;\n  }\n\n  ringLength() {\n    if (!this._ringLength) {\n      this._ringLength = this.maxValue().subtract(this.minValue());\n    }\n    return this._ringLength;\n  }\n\n  split(start, end, numberOfSplits) {\n    // ]min, min] means the whole ring.\n    if (start.equals(end) && start.equals(this.minToken())) {\n      end = this.maxToken();\n    }\n\n    const startVal = Integer.fromString(start.getValue().toString());\n    const endVal = Integer.fromString(end.getValue().toString());\n\n    let range = endVal.subtract(startVal);\n    if (range.isNegative()) {\n      range = range.add(this.ringLength());\n    }\n\n    const values = this.splitBase(startVal, range, this.maxValue(), this.ringLength(), numberOfSplits);\n    return values.map(v => this.parse(v.toString()));\n  }\n\n  stringify(token) {\n    // Get the underlying MutableLong\n    const value = token.getValue();\n    // We need a way to uniquely represent a token, it doesn't have to be the decimal string representation\n    // Using the uint16 avoids divisions and other expensive operations on the longs\n    return value.getUint16(0) + ',' + value.getUint16(1) + ',' + value.getUint16(2) + ',' + value.getUint16(3);\n  }\n}\n\n/**\n * Uniformly distributes data across the cluster based on MD5 hash values.\n */\nclass RandomTokenizer extends Tokenizer {\n  constructor() {\n    super();\n    // eslint-disable-next-line\n    this._crypto = require('crypto');\n  }\n\n  /**\n   * @param {Buffer|Array} value\n   * @returns {RandomToken}\n   */\n  hash(value) {\n    if (util.isArray(value)) {\n      value = utils.allocBufferFromArray(value);\n    }\n    const hashedValue = this._crypto.createHash('md5').update(value).digest();\n    return new token.RandomToken(Integer.fromBuffer(hashedValue).abs());\n  }\n\n  /**\n   * @returns {Token}\n   */\n  parse(value) {\n    return new token.RandomToken(Integer.fromString(value));\n  }\n\n  minToken() {\n    if (!this._minToken) {\n      this._minToken = this.parse('-1');\n    }\n    return this._minToken;\n  }\n\n  maxValue() {\n    if (!this._maxValue) {\n      this._maxValue = Integer.fromNumber(Math.pow(2, 127));\n    }\n    return this._maxValue;\n  }\n\n  maxToken() {\n    if (!this._maxToken) {\n      this._maxToken = new token.RandomToken(this.maxValue());\n    }\n    return this._maxToken;\n  }\n\n  ringLength() {\n    if (!this._ringLength) {\n      this._ringLength = this.maxValue().add(Integer.ONE);\n    }\n    return this._ringLength;\n  }\n\n  split(start, end, numberOfSplits) {\n    // ]min, min] means the whole ring.\n    if (start.equals(end) && start.equals(this.minToken())) {\n      end = this.maxToken();\n    }\n\n    const startVal = start.getValue();\n    const endVal = end.getValue();\n\n    let range = endVal.subtract(startVal);\n    if (range.lessThan(Integer.ZERO)) {\n      range = range.add(this.ringLength());\n    }\n\n    const values = this.splitBase(startVal, range, this.maxValue(), this.ringLength(), numberOfSplits);\n    return values.map(v => new token.RandomToken(v));\n  }\n}\n\nclass ByteOrderedTokenizer extends Tokenizer {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Buffer} value\n   * @returns {ByteOrderedToken}\n   */\n  hash(value) {\n    // strip any trailing zeros as tokens with trailing zeros are equivalent\n    // to those who don't have them.\n    if (util.isArray(value)) {\n      value = utils.allocBufferFromArray(value);\n    }\n    let zeroIndex = value.length;\n    for(let i = value.length - 1; i > 0; i--) {\n      if(value[i] === 0) {\n        zeroIndex = i;\n      } else {\n        break;\n      }\n    }\n    return new token.ByteOrderedToken(value.slice(0, zeroIndex));\n  }\n\n  stringify(token) {\n    return token.getValue().toString('hex');\n  }\n\n  parse(value) {\n    return this.hash(utils.allocBufferFromString(value, 'hex'));\n  }\n\n  minToken() {\n    if (!this._minToken) {\n      this._minToken = this.hash([]);\n    }\n    return this._minToken;\n  }\n\n  _toNumber(buffer, significantBytes) {\n    // Convert a token's byte array to a number in order to perform computations.\n    // This depends on the number of significant bytes that is used to normalize all tokens\n    // to the same size.  For example if the token is 0x01 but significant bytes is 2, the\n    // result is 0x0100.\n    let target = buffer;\n    if(buffer.length !== significantBytes) {\n      target = Buffer.alloc(significantBytes);\n      buffer.copy(target);\n    }\n\n    // similar to Integer.fromBuffer except we force the sign to 0.\n    const bits = new Array(Math.ceil(target.length / 4));\n    for (let i = 0; i < bits.length; i++) {\n      let offset = target.length - ((i + 1) * 4);\n      let value;\n      if (offset < 0) {\n        //The buffer length is not multiple of 4\n        offset = offset + 4;\n        value = 0;\n        for (let j = 0; j < offset; j++) {\n          const byte = target[j];\n          value = value | (byte << (offset - j - 1) * 8);\n        }\n      }\n      else {\n        value = target.readInt32BE(offset);\n      }\n      bits[i] = value;\n    }\n    return new Integer(bits, 0);\n  }\n\n  _toBuffer(number, significantBytes) {\n    // Convert numeric representation back to a buffer.\n    const buffer = Integer.toBuffer(number);\n    if (buffer.length === significantBytes) {\n      return buffer;\n    }\n\n    // if first byte is a sign byte, skip it.\n    let start, length;\n    if (buffer[0] === 0) {\n      start = 1;\n      length = buffer.length - 1;\n    } else {\n      start = 0;\n      length = buffer.length;\n    }\n\n    const target = Buffer.alloc(significantBytes);\n    buffer.copy(target, significantBytes - length, start, length + start);\n    return target;\n  }\n\n  split(start, end, numberOfSplits) {\n    const tokenOrder = start.compare(end);\n\n    if (tokenOrder === 0 && start.equals(this.minToken())) {\n      throw new Error(\"Cannot split whole ring with ordered partitioner\");\n    }\n\n    let startVal, endVal, range, ringLength, ringEnd;\n    const intNumberOfSplits = Integer.fromNumber(numberOfSplits);\n    // Since tokens are compared lexicographically, convert to numbers using the\n    // largest length (i.e. given 0x0A and 0x0BCD, switch to 0x0A00 and 0x0BCD)\n    let significantBytes = Math.max(start.getValue().length, end.getValue().length);\n    if (tokenOrder < 0) {\n      let addedBytes = 0;\n      while (true) {\n        startVal = this._toNumber(start.getValue(), significantBytes);\n        endVal = this._toNumber(end.getValue(), significantBytes);\n        range = endVal.subtract(startVal);\n        if (addedBytes === 4 || range.compare(intNumberOfSplits) >= 0) {\n          break;\n        }\n        significantBytes += 1;\n        addedBytes += 1;\n      }\n    } else {\n      let addedBytes = 0;\n      while (true) {\n        startVal = this._toNumber(start.getValue(), significantBytes);\n        endVal = this._toNumber(end.getValue(), significantBytes);\n        ringLength = Integer.fromNumber(Math.pow(2, significantBytes * 8));\n        ringEnd = ringLength.subtract(Integer.ONE);\n        range = endVal.subtract(startVal).add(ringLength);\n        if (addedBytes === 4 || range.compare(intNumberOfSplits) >= 0) {\n          break;\n        }\n        significantBytes += 1;\n        addedBytes += 1;\n      }\n    }\n\n    const values = this.splitBase(startVal, range, ringEnd, ringLength, numberOfSplits);\n    return values.map(v => new token.ByteOrderedToken(this._toBuffer(v, significantBytes)));\n  }\n}\n\n/**\n * @param {Number} value\n * @return {MutableLong}\n */\nfunction fromSignedByte(value) {\n  if (value < 128) {\n    return new MutableLong(value, 0, 0, 0);\n  }\n  return new MutableLong((value - 256) & 0xffff, 0xffff, 0xffff, 0xffff);\n}\n\nexports.Murmur3Tokenizer = Murmur3Tokenizer;\nexports.RandomTokenizer = RandomTokenizer;\nexports.ByteOrderedTokenizer = ByteOrderedTokenizer;\n","\"use strict\";\nconst util = require('util');\nconst events = require('events');\nconst types = require('../types');\nconst utils = require('../utils');\nconst errors = require('../errors');\nconst TableMetadata = require('./table-metadata');\nconst Aggregate = require('./aggregate');\nconst SchemaFunction = require('./schema-function');\nconst Index = require('./schema-index');\nconst MaterializedView = require('./materialized-view');\n/**\n * @module metadata/schemaParser\n * @ignore\n */\n\nconst _selectAllKeyspacesV1 = \"SELECT * FROM system.schema_keyspaces\";\nconst _selectSingleKeyspaceV1 = \"SELECT * FROM system.schema_keyspaces where keyspace_name = '%s'\";\nconst _selectAllKeyspacesV2 = \"SELECT * FROM system_schema.keyspaces\";\nconst _selectSingleKeyspaceV2 = \"SELECT * FROM system_schema.keyspaces where keyspace_name = '%s'\";\nconst _selectTableV1 = \"SELECT * FROM system.schema_columnfamilies WHERE keyspace_name='%s' AND columnfamily_name='%s'\";\nconst _selectTableV2 = \"SELECT * FROM system_schema.tables WHERE keyspace_name='%s' AND table_name='%s'\";\nconst _selectColumnsV1 = \"SELECT * FROM system.schema_columns WHERE keyspace_name='%s' AND columnfamily_name='%s'\";\nconst _selectColumnsV2 = \"SELECT * FROM system_schema.columns WHERE keyspace_name='%s' AND table_name='%s'\";\nconst _selectIndexesV2 = \"SELECT * FROM system_schema.indexes WHERE keyspace_name='%s' AND table_name='%s'\";\nconst _selectUdtV1 = \"SELECT * FROM system.schema_usertypes WHERE keyspace_name='%s' AND type_name='%s'\";\nconst _selectUdtV2 = \"SELECT * FROM system_schema.types WHERE keyspace_name='%s' AND type_name='%s'\";\nconst _selectFunctionsV1 = \"SELECT * FROM system.schema_functions WHERE keyspace_name = '%s' AND function_name = '%s'\";\nconst _selectFunctionsV2 = \"SELECT * FROM system_schema.functions WHERE keyspace_name = '%s' AND function_name = '%s'\";\nconst _selectAggregatesV1 = \"SELECT * FROM system.schema_aggregates WHERE keyspace_name = '%s' AND aggregate_name = '%s'\";\nconst _selectAggregatesV2 = \"SELECT * FROM system_schema.aggregates WHERE keyspace_name = '%s' AND aggregate_name = '%s'\";\nconst _selectMaterializedViewV2 = \"SELECT * FROM system_schema.views WHERE keyspace_name = '%s' AND view_name = '%s'\";\n\nconst _selectAllVirtualKeyspaces = \"SELECT * FROM system_virtual_schema.keyspaces\";\nconst _selectSingleVirtualKeyspace = \"SELECT * FROM system_virtual_schema.keyspaces where keyspace_name = '%s'\";\nconst _selectVirtualTable = \"SELECT * FROM system_virtual_schema.tables where keyspace_name = '%s' and table_name='%s'\";\nconst _selectVirtualColumns = \"SELECT * FROM system_virtual_schema.columns where keyspace_name = '%s' and table_name='%s'\";\n\n\n/**\n * @abstract\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc\n * @constructor\n * @ignore\n */\nfunction SchemaParser(options, cc) {\n  this.cc = cc;\n  this.encodingOptions = options.encoding;\n  this.selectTable = null;\n  this.selectColumns = null;\n  this.selectIndexes = null;\n  this.selectUdt = null;\n  this.selectAggregates = null;\n  this.selectFunctions = null;\n  this.supportsVirtual = false;\n}\n\n/**\n * @param name\n * @param durableWrites\n * @param strategy\n * @param strategyOptions\n * @param virtual\n * @returns {{name, durableWrites, strategy, strategyOptions, tokenToReplica, udts, tables, functions, aggregates}|null}\n * @protected\n */\nSchemaParser.prototype._createKeyspace = function (name, durableWrites, strategy, strategyOptions, virtual) {\n  const ksInfo = {\n    name: name,\n    durableWrites: durableWrites,\n    strategy: strategy,\n    strategyOptions: strategyOptions,\n    tokenToReplica: null,\n    virtual: virtual === true,\n    udts: {},\n    tables: {},\n    functions: {},\n    aggregates: {},\n    views: {}\n  };\n  ksInfo.tokenToReplica = getTokenToReplicaMapper(strategy, strategyOptions);\n  return ksInfo;\n};\n\n/**\n * @abstract\n * @param {String} name\n * @param {Function} callback\n */\nSchemaParser.prototype.getKeyspace = function (name, callback) {\n};\n\n/**\n * @abstract\n * @param {Boolean} waitReconnect\n * @param {Function} callback\n */\nSchemaParser.prototype.getKeyspaces = function (waitReconnect, callback) {\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Object} cache\n * @param {Boolean} virtual\n * @param {Function} callback\n */\nSchemaParser.prototype.getTable = function (keyspaceName, name, cache, virtual, callback) {\n  let tableInfo = cache && cache[name];\n  if (!tableInfo) {\n    tableInfo = new TableMetadata(name);\n    if (cache) {\n      cache[name] = tableInfo;\n    }\n  }\n  if (tableInfo.loaded) {\n    return callback(null, tableInfo);\n  }\n  tableInfo.once('load', callback);\n  if (tableInfo.loading) {\n    //It' already queued, it will be emitted\n    return;\n  }\n  // its not cached and not being retrieved\n  tableInfo.loading = true;\n  let tableRow, columnRows, indexRows;\n  const self = this;\n  let virtualTable = virtual;\n  utils.series([\n    function getTableRow(next) {\n      const selectTable = virtualTable ? _selectVirtualTable : self.selectTable; \n      const query = util.format(selectTable, keyspaceName, name);\n      self.cc.query(query, function (err, response) {\n        if (err) {\n          return next(err);\n        }\n        tableRow = response.rows[0];\n        next();\n      });\n    },\n    function getVirtualTableRow(next) {\n      // if we weren't sure if table was virtual or not, query virtual schema.\n      if (!tableRow && self.supportsVirtual && virtualTable === undefined) {\n        const query = util.format(_selectVirtualTable, keyspaceName, name);\n        self.cc.query(query, function (err, response) {\n          if (err) {\n            // we can't error here as we can't be sure if the node\n            // supports virtual tables, in this case it is adequate\n            // to act as if there was no matching table.\n            return next();\n          }\n          tableRow = response.rows[0];\n          // if we got a result, this is a virtual table\n          if (tableRow) {\n            virtualTable = true;\n          }\n          next();\n        });\n      } else {\n        return next();\n      }\n    },\n    function getColumnRows (next) {\n      if (!tableRow) {\n        return next();\n      }\n      const selectColumns = virtualTable ? _selectVirtualColumns : self.selectColumns;\n      const query = util.format(selectColumns, keyspaceName, name);\n      self.cc.query(query, function (err, response) {\n        if (err) {\n          return next(err);\n        }\n        columnRows = response.rows;\n        next();\n      });\n    },\n    function getIndexes(next) {\n      if (!tableRow || !self.selectIndexes || virtualTable) {\n        //either the table does not exists or it does not support indexes schema table\n        return next();\n      }\n      const query = util.format(self.selectIndexes, keyspaceName, name);\n      self.cc.query(query, function (err, response) {\n        if (err) {\n          return next(err);\n        }\n        indexRows = response.rows;\n        next();\n      });\n    }\n  ], function afterQuery (err) {\n    if (err || !tableRow) {\n      tableInfo.loading = false;\n      return tableInfo.emit('load', err, null);\n    }\n    self._parseTableOrView(tableInfo, tableRow, columnRows, indexRows, virtualTable, function (err) {\n      tableInfo.loading = false;\n      tableInfo.loaded = !err;\n      tableInfo.emit('load', err, tableInfo);\n    });\n  });\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Object} cache\n * @param {Function} callback\n */\nSchemaParser.prototype.getUdt = function (keyspaceName, name, cache, callback) {\n  let udtInfo = cache && cache[name];\n  if (!udtInfo) {\n    udtInfo = new events.EventEmitter();\n    if (cache) {\n      cache[name] = udtInfo;\n    }\n    udtInfo.setMaxListeners(0);\n    udtInfo.loading = false;\n    udtInfo.name = name;\n    udtInfo.fields = null;\n  }\n  if (udtInfo.fields) {\n    return callback(null, udtInfo);\n  }\n  udtInfo.once('load', callback);\n  if (udtInfo.loading) {\n    //It' already queued, it will be emitted\n    return;\n  }\n  udtInfo.loading = true;\n  //it is not cached, try to query for it\n  const query = util.format(this.selectUdt, keyspaceName, name);\n  const self = this;\n  this.cc.query(query, function (err, response) {\n    if (err) {\n      return udtInfo.emit('load', err);\n    }\n    const row = response.rows[0];\n    if (!row) {\n      udtInfo.loading = false;\n      return udtInfo.emit('load', null, null);\n    }\n    self._parseUdt(udtInfo, row, function (err) {\n      udtInfo.loading = false;\n      if (err) {\n        return udtInfo.emit('load', err);\n      }\n      return udtInfo.emit('load', null, udtInfo);\n    });\n  });\n};\n\n/**\n * Parses the udt information from the row\n * @param udtInfo\n * @param {Row} row\n * @param {Function} callback Callback to be invoked with the err and {{fields: Array}}|null\n * @abstract\n */\nSchemaParser.prototype._parseUdt = function (udtInfo, row, callback) {\n};\n\n/**\n * Builds the metadata based on the table and column rows\n * @abstract\n * @param {module:metadata~TableMetadata} tableInfo\n * @param {Row} tableRow\n * @param {Array.<Row>} columnRows\n * @param {Array.<Row>} indexRows\n * @param {Boolean} virtual\n * @param {Function} callback\n * @throws {Error}\n */\nSchemaParser.prototype._parseTableOrView = function (tableInfo, tableRow, columnRows, indexRows, virtual, callback) {\n};\n\n\n/**\n * @abstract\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Object} cache\n * @param {Function} callback\n */\nSchemaParser.prototype.getMaterializedView = function (keyspaceName, name, cache, callback) {\n\n};\n\n/**\n * @param {String} keyspaceName\n * @param {String} name\n * @param {Boolean} aggregate\n * @param {Object} cache\n * @param {Function} callback\n */\nSchemaParser.prototype.getFunctions = function (keyspaceName, name, aggregate, cache, callback) {\n  /** @type {String} */\n  let query = this.selectFunctions;\n  let parser = this._parseFunction.bind(this);\n  if (aggregate) {\n    query = this.selectAggregates;\n    parser = this._parseAggregate.bind(this);\n  }\n  //if not already loaded\n  //get all functions with that name\n  //cache it by name and, within name, by signature\n  let functionsInfo = cache && cache[name];\n  if (!functionsInfo) {\n    functionsInfo = new events.EventEmitter();\n    if (cache) {\n      cache[name] = functionsInfo;\n    }\n    functionsInfo.setMaxListeners(0);\n  }\n  if (functionsInfo.values) {\n    return callback(null, functionsInfo.values);\n  }\n  functionsInfo.once('load', callback);\n  if (functionsInfo.loading) {\n    //It' already queued, it will be emitted\n    return;\n  }\n  functionsInfo.loading = true;\n  //it is not cached, try to query for it\n  query = util.format(query, keyspaceName, name);\n  this.cc.query(query, function (err, response) {\n    functionsInfo.loading = false;\n    if (err || response.rows.length === 0) {\n      return functionsInfo.emit('load', err, null);\n    }\n    if (response.rows.length > 0) {\n      functionsInfo.values = {};\n    }\n    utils.each(response.rows, function (row, next) {\n      parser(row, function (err, func) {\n        if (err) {\n          return next(err);\n        }\n        functionsInfo.values['(' + func.signature.join(',') + ')'] = func;\n        next();\n      });\n    }, function (err) {\n      if (err) {\n        return functionsInfo.emit('load', err);\n      }\n      functionsInfo.emit('load', null, functionsInfo.values);\n    });\n  });\n};\n\n/**\n * @abstract\n * @param {Row} row\n * @param {Function} callback\n */\nSchemaParser.prototype._parseAggregate = function (row, callback) {\n};\n\n/**\n * @abstract\n * @param {Row} row\n * @param {Function} callback\n */\nSchemaParser.prototype._parseFunction = function (row, callback) {\n};\n\n/** @returns {Map} */\nSchemaParser.prototype._asMap = function (obj) {\n  if (!obj) {\n    return new Map();\n  }\n\n  if (this.encodingOptions.map && obj instanceof this.encodingOptions.map) {\n    // Its already a Map or a polyfill of a Map\n    return obj;\n  }\n\n  return new Map(Object.keys(obj).map(k => [ k, obj[k]]));\n};\n\nSchemaParser.prototype._mapAsObject = function (map) {\n  if (!map) {\n    return map;\n  }\n\n  if (this.encodingOptions.map && map instanceof this.encodingOptions.map) {\n    const result = {};\n    map.forEach((value, key) => result[key] = value);\n    return result;\n  }\n\n  return map;\n};\n\n/**\n * Used to parse schema information for Cassandra versions 1.2.x, and 2.x\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc\n * @constructor\n * @ignore\n */\nfunction SchemaParserV1(options, cc) {\n  SchemaParser.call(this, options, cc);\n  this.selectTable = _selectTableV1;\n  this.selectColumns = _selectColumnsV1;\n  this.selectUdt = _selectUdtV1;\n  this.selectAggregates = _selectAggregatesV1;\n  this.selectFunctions = _selectFunctionsV1;\n}\n\nutil.inherits(SchemaParserV1, SchemaParser);\n\n/** @override */\nSchemaParserV1.prototype.getKeyspaces = function (waitReconnect, callback) {\n  const self = this;\n  const keyspaces = {};\n  this.cc.query(_selectAllKeyspacesV1, waitReconnect, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    for (let i = 0; i < result.rows.length; i++) {\n      const row = result.rows[i];\n      const ksInfo = self._createKeyspace(\n        row['keyspace_name'],\n        row['durable_writes'],\n        row['strategy_class'],\n        JSON.parse(row['strategy_options'] || null));\n      keyspaces[ksInfo.name] = ksInfo;\n    }\n    callback(null, keyspaces);\n  });\n};\n\n/** @override */\nSchemaParserV1.prototype.getKeyspace = function (name, callback) {\n  const self = this;\n  this.cc.query(util.format(_selectSingleKeyspaceV1, name), function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    const row = result.rows[0];\n    if (!row) {\n      return callback(null, null);\n    }\n    callback(null, self._createKeyspace(\n      row['keyspace_name'],\n      row['durable_writes'],\n      row['strategy_class'],\n      JSON.parse(row['strategy_options'])));\n  });\n};\n\n/** @override */\nSchemaParserV1.prototype._parseTableOrView = function (tableInfo, tableRow, columnRows, indexRows, virtual, callback) {\n  let i, c, name, types;\n  const encoder = this.cc.getEncoder();\n  const columnsKeyed = {};\n  let partitionKeys = [];\n  let clusteringKeys = [];\n  tableInfo.bloomFilterFalsePositiveChance = tableRow['bloom_filter_fp_chance'];\n  tableInfo.caching = tableRow['caching'];\n  tableInfo.comment = tableRow['comment'];\n  tableInfo.compactionClass = tableRow['compaction_strategy_class'];\n  tableInfo.compactionOptions = JSON.parse(tableRow['compaction_strategy_options']);\n  tableInfo.compression = JSON.parse(tableRow['compression_parameters']);\n  tableInfo.gcGraceSeconds = tableRow['gc_grace_seconds'];\n  tableInfo.localReadRepairChance = tableRow['local_read_repair_chance'];\n  tableInfo.readRepairChance = tableRow['read_repair_chance'];\n  tableInfo.populateCacheOnFlush = tableRow['populate_io_cache_on_flush'] || tableInfo.populateCacheOnFlush;\n  tableInfo.memtableFlushPeriod = tableRow['memtable_flush_period_in_ms'] || tableInfo.memtableFlushPeriod;\n  tableInfo.defaultTtl = tableRow['default_time_to_live'] || tableInfo.defaultTtl;\n  tableInfo.speculativeRetry = tableRow['speculative_retry'] || tableInfo.speculativeRetry;\n  tableInfo.indexInterval = tableRow['index_interval'] || tableInfo.indexInterval;\n  if (typeof tableRow['min_index_interval'] !== 'undefined') {\n    //Cassandra 2.1+\n    tableInfo.minIndexInterval = tableRow['min_index_interval'] || tableInfo.minIndexInterval;\n    tableInfo.maxIndexInterval = tableRow['max_index_interval'] || tableInfo.maxIndexInterval;\n  }\n  else {\n    //set to null\n    tableInfo.minIndexInterval = null;\n    tableInfo.maxIndexInterval = null;\n  }\n  if (typeof tableRow['replicate_on_write'] !== 'undefined') {\n    //leave the default otherwise\n    tableInfo.replicateOnWrite = tableRow['replicate_on_write'];\n  }\n  tableInfo.columns = [];\n  try {\n    (function parseColumns() {\n      //function context\n      for (i = 0; i < columnRows.length; i++) {\n        const row = columnRows[i];\n        const type = encoder.parseFqTypeName(row['validator']);\n        c = {\n          name: row['column_name'],\n          type: type\n        };\n        tableInfo.columns.push(c);\n        columnsKeyed[c.name] = c;\n        switch (row['type']) {\n          case 'partition_key':\n            partitionKeys.push({c: c, index: (row['component_index'] || 0)});\n            break;\n          case 'clustering_key':\n            clusteringKeys.push({\n              c: c,\n              index: (row['component_index'] || 0),\n              order: c.type.options.reversed ? 'DESC' : 'ASC'\n            });\n            break;\n        }\n      }\n    })();\n    if (partitionKeys.length > 0) {\n      tableInfo.partitionKeys = partitionKeys.sort(utils.propCompare('index')).map(function (item) {\n        return item.c;\n      });\n      clusteringKeys.sort(utils.propCompare('index'));\n      tableInfo.clusteringKeys = clusteringKeys.map(function (item) {\n        return item.c;\n      });\n      tableInfo.clusteringOrder = clusteringKeys.map(function (item) {\n        return item.order;\n      });\n    }\n    //In C* 1.2, keys are not stored on the schema_columns table\n    const keysStoredInTableRow = (tableInfo.partitionKeys.length === 0);\n    if (keysStoredInTableRow && tableRow['key_aliases']) {\n      //In C* 1.2, keys are not stored on the schema_columns table\n      partitionKeys = JSON.parse(tableRow['key_aliases']);\n      types = encoder.parseKeyTypes(tableRow['key_validator']).types;\n      for (i = 0; i < partitionKeys.length; i++) {\n        name = partitionKeys[i];\n        c = columnsKeyed[name];\n        if (!c) {\n          c = {\n            name: name,\n            type: types[i]\n          };\n          tableInfo.columns.push(c);\n        }\n        tableInfo.partitionKeys.push(c);\n      }\n    }\n    const comparator = encoder.parseKeyTypes(tableRow['comparator']);\n    if (keysStoredInTableRow && tableRow['column_aliases']) {\n      clusteringKeys = JSON.parse(tableRow['column_aliases']);\n      for (i = 0; i < clusteringKeys.length; i++) {\n        name = clusteringKeys[i];\n        c = columnsKeyed[name];\n        if (!c) {\n          c = {\n            name: name,\n            type: comparator.types[i]\n          };\n          tableInfo.columns.push(c);\n        }\n        tableInfo.clusteringKeys.push(c);\n        tableInfo.clusteringOrder.push(c.type.options.reversed ? 'DESC' : 'ASC');\n      }\n    }\n    tableInfo.isCompact = !!tableRow['is_dense'];\n    if (!tableInfo.isCompact) {\n      //is_dense column does not exist in previous versions of Cassandra\n      //also, compact pk, ck and val appear as is_dense false\n      // clusteringKeys != comparator types - 1\n      // or not composite (comparator)\n      tableInfo.isCompact = (\n        //clustering keys are not marked as composite\n        !comparator.isComposite ||\n        //only 1 column not part of the partition or clustering keys\n        (!comparator.hasCollections && tableInfo.clusteringKeys.length !== comparator.types.length - 1)\n      );\n    }\n    name = tableRow['value_alias'];\n    if (tableInfo.isCompact && name && !columnsKeyed[name]) {\n      //additional column in C* 1.2 as value_alias\n      c = {\n        name: name,\n        type: encoder.parseFqTypeName(tableRow['default_validator'])\n      };\n      tableInfo.columns.push(c);\n      columnsKeyed[name] = c;\n    }\n    tableInfo.columnsByName = columnsKeyed;\n    tableInfo.indexes = Index.fromColumnRows(columnRows, tableInfo.columnsByName);\n  }\n  catch (err) {\n    return callback(err);\n  }\n  //All the tableInfo parsing in V1 is sync, it uses a callback because the super defines one\n  //to support other versions.\n  callback();\n};\n\n/** @override */\nSchemaParserV1.prototype.getMaterializedView = function (keyspaceName, name, cache, callback) {\n  callback(new errors.NotSupportedError('Materialized views are not supported on Cassandra versions below 3.0'));\n};\n\n/** @override */\nSchemaParserV1.prototype._parseAggregate = function (row, callback) {\n  const encoder = this.cc.getEncoder();\n  const aggregate = new Aggregate();\n  aggregate.name = row['aggregate_name'];\n  aggregate.keyspaceName = row['keyspace_name'];\n  aggregate.signature = row['signature'] || utils.emptyArray;\n  aggregate.stateFunction = row['state_func'];\n  aggregate.finalFunction = row['final_func'];\n  aggregate.initConditionRaw = row['initcond'];\n  try {\n    aggregate.argumentTypes = (row['argument_types'] || utils.emptyArray).map(function (name) {\n      return encoder.parseFqTypeName(name);\n    });\n    aggregate.stateType = encoder.parseFqTypeName(row['state_type']);\n    const initConditionValue = encoder.decode(aggregate.initConditionRaw, aggregate.stateType);\n    if (initConditionValue !== null && typeof initConditionValue !== 'undefined') {\n      aggregate.initCondition = initConditionValue.toString();\n    }\n    aggregate.returnType = encoder.parseFqTypeName(row['return_type']);\n  }\n  catch (err) {\n    return callback(err);\n  }\n  callback(null, aggregate);\n};\n\n/** @override */\nSchemaParserV1.prototype._parseFunction = function (row, callback) {\n  const encoder = this.cc.getEncoder();\n  const func = new SchemaFunction();\n  func.name = row['function_name'];\n  func.keyspaceName = row['keyspace_name'];\n  func.signature = row['signature'] || utils.emptyArray;\n  func.argumentNames = row['argument_names'] || utils.emptyArray;\n  func.body = row['body'];\n  func.calledOnNullInput = row['called_on_null_input'];\n  func.language = row['language'];\n  try {\n    func.argumentTypes = (row['argument_types'] || utils.emptyArray).map(function (name) {\n      return encoder.parseFqTypeName(name);\n    });\n    func.returnType = encoder.parseFqTypeName(row['return_type']);\n  }\n  catch (err) {\n    return callback(err);\n  }\n  callback(null, func);\n};\n\n/** @override */\nSchemaParserV1.prototype._parseUdt = function (udtInfo, row, callback) {\n  const encoder = this.cc.getEncoder();\n  const fieldNames = row['field_names'];\n  const fieldTypes = row['field_types'];\n  const fields = new Array(fieldNames.length);\n  try {\n    for (let i = 0; i < fieldNames.length; i++) {\n      fields[i] = {\n        name: fieldNames[i],\n        type: encoder.parseFqTypeName(fieldTypes[i])\n      };\n    }\n  }\n  catch (err) {\n    return callback(err);\n  }\n  udtInfo.fields = fields;\n  callback(null, udtInfo);\n};\n\n/**\n * Used to parse schema information for Cassandra versions 3.x and above\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc The control connection to be used\n * @param {Function} udtResolver The function to be used to retrieve the udts.\n * @constructor\n * @ignore\n */\nfunction SchemaParserV2(options, cc, udtResolver) {\n  SchemaParser.call(this, options, cc);\n  this.udtResolver = udtResolver;\n  this.selectTable = _selectTableV2;\n  this.selectColumns = _selectColumnsV2;\n  this.selectUdt = _selectUdtV2;\n  this.selectAggregates = _selectAggregatesV2;\n  this.selectFunctions = _selectFunctionsV2;\n  this.selectIndexes = _selectIndexesV2;\n}\n\nutil.inherits(SchemaParserV2, SchemaParser);\n\n/** @override */\nSchemaParserV2.prototype.getKeyspaces = function (waitReconnect, callback) {\n  const self = this;\n  const keyspaces = {};\n  this.cc.query(_selectAllKeyspacesV2, waitReconnect, function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    for (let i = 0; i < result.rows.length; i++) {\n      const ksInfo = self._parseKeyspace(result.rows[i]);\n      keyspaces[ksInfo.name] = ksInfo;\n    }\n    callback(null, keyspaces);\n  });\n};\n\n/** @override */\nSchemaParserV2.prototype.getKeyspace = function (name, callback) {\n  const self = this;\n  this.cc.query(util.format(_selectSingleKeyspaceV2, name), function (err, result) {\n    if (err) {\n      return callback(err);\n    }\n    const row = result.rows[0];\n    if (!row) {\n      return callback(null, null);\n    }\n    callback(null, self._parseKeyspace(row));\n  });\n};\n\n/** @override */\nSchemaParserV2.prototype.getMaterializedView = function (keyspaceName, name, cache, callback) {\n  let viewInfo = cache && cache[name];\n  if (!viewInfo) {\n    viewInfo = new MaterializedView(name);\n    if (cache) {\n      cache[name] = viewInfo;\n    }\n  }\n  if (viewInfo.loaded) {\n    return callback(null, viewInfo);\n  }\n  viewInfo.once('load', callback);\n  if (viewInfo.loading) {\n    //It' already queued, it will be emitted\n    return;\n  }\n  viewInfo.loading = true;\n  let tableRow, columnRows;\n  //it is not cached, try to query for it\n  const self = this;\n  utils.series([\n    function getTableRow(next) {\n      const query = util.format(_selectMaterializedViewV2, keyspaceName, name);\n      self.cc.query(query, function (err, response) {\n        if (err) {\n          return next(err);\n        }\n        tableRow = response.rows[0];\n        next();\n      });\n    },\n    function getColumnRows (next) {\n      if (!tableRow) {\n        return next();\n      }\n      const query = util.format(self.selectColumns, keyspaceName, name);\n      self.cc.query(query, function (err, response) {\n        if (err) {\n          return next(err);\n        }\n        columnRows = response.rows;\n        next();\n      });\n    }\n  ], function afterQuery (err) {\n    viewInfo.loading = false;\n    if (err || !tableRow) {\n      return viewInfo.emit('load', err, null);\n    }\n    self._parseTableOrView(viewInfo, tableRow, columnRows, null, false, function (err) {\n      viewInfo.loading = false;\n      viewInfo.loaded = !err;\n      viewInfo.emit('load', err, viewInfo);\n    });\n  });\n\n};\n\nSchemaParserV2.prototype._parseKeyspace = function (row, virtual) {\n  const replication = row['replication'];\n  let strategy;\n  let strategyOptions;\n  if (replication) {\n    strategy = replication['class'];\n    strategyOptions = {};\n    for (const key in replication) {\n      if (!replication.hasOwnProperty(key) || key === 'class') {\n        continue;\n      }\n      strategyOptions[key] = replication[key];\n    }\n  }\n  return this._createKeyspace(\n    row['keyspace_name'],\n    row['durable_writes'],\n    strategy,\n    strategyOptions,\n    virtual);\n};\n\n/** @override */\nSchemaParserV2.prototype._parseTableOrView = function (tableInfo, tableRow, columnRows, indexRows, virtual, callback) {\n  const encoder = this.cc.getEncoder();\n  const columnsKeyed = {};\n  const partitionKeys = [];\n  const clusteringKeys = [];\n  const self = this;\n\n  // maps column rows to columnInfo and also populates columnsKeyed\n  const columnRowMapper = (row, next) => {\n    encoder.parseTypeName(tableRow['keyspace_name'], row['type'], 0, null, self.udtResolver, function (err, type) {\n      if (err) {\n        return next(err);\n      }\n      const c = {\n        name: row['column_name'],\n        type: type,\n        isStatic: false\n      };\n      columnsKeyed[c.name] = c;\n      switch (row['kind']) {\n        case 'partition_key':\n          partitionKeys.push({ c: c, index: (row['position'] || 0)});\n          break;\n        case 'clustering':\n          clusteringKeys.push({ c: c, index: (row['position'] || 0), order: row['clustering_order'] === 'desc' ? 'DESC' : 'ASC'});\n          break;\n        case 'static':\n          c.isStatic = true;\n          break;\n      }\n      next(null, c);\n    });\n  };\n\n  // is table is virtual, the only relevant information to parse is the columns as the table itself has no configuration.\n  if (virtual) {\n    tableInfo.virtual = true;\n    utils.map(columnRows, columnRowMapper, function (err, columns) {\n      if (err) {\n        return callback(err);\n      }\n      tableInfo.columns = columns;\n      tableInfo.columnsByName = columnsKeyed;\n      tableInfo.partitionKeys = partitionKeys.sort(utils.propCompare('index')).map(function (item) {\n        return item.c;\n      });\n      clusteringKeys.sort(utils.propCompare('index'));\n      tableInfo.clusteringKeys = clusteringKeys.map(function (item) {\n        return item.c;\n      });\n      tableInfo.clusteringOrder = clusteringKeys.map(function (item) {\n        return item.order;\n      });\n      callback();\n    });\n    return;\n  }\n\n  const isView = tableInfo instanceof MaterializedView;\n  tableInfo.bloomFilterFalsePositiveChance = tableRow['bloom_filter_fp_chance'];\n  tableInfo.caching = JSON.stringify(tableRow['caching']);\n  tableInfo.comment = tableRow['comment'];\n\n  // Regardless of the encoding options, use always an Object to represent an associative Array\n  const compaction = this._asMap(tableRow['compaction']);\n  if (compaction) {\n    // compactionOptions as an Object<String, String>\n    tableInfo.compactionOptions = {};\n    tableInfo.compactionClass = compaction.get('class');\n    compaction.forEach((value, key) => {\n      if (key === 'class') {\n        return;\n      }\n      tableInfo.compactionOptions[key] = compaction.get(key);\n    });\n  }\n\n  // Convert compression to an Object<String, String>\n  tableInfo.compression = this._mapAsObject(tableRow['compression']);\n\n  tableInfo.gcGraceSeconds = tableRow['gc_grace_seconds'];\n  tableInfo.localReadRepairChance = tableRow['dclocal_read_repair_chance'];\n  tableInfo.readRepairChance = tableRow['read_repair_chance'];\n  tableInfo.extensions = this._mapAsObject(tableRow['extensions']);\n  tableInfo.crcCheckChance = tableRow['crc_check_chance'];\n  tableInfo.memtableFlushPeriod = tableRow['memtable_flush_period_in_ms'] || tableInfo.memtableFlushPeriod;\n  tableInfo.defaultTtl = tableRow['default_time_to_live'] || tableInfo.defaultTtl;\n  tableInfo.speculativeRetry = tableRow['speculative_retry'] || tableInfo.speculativeRetry;\n  tableInfo.minIndexInterval = tableRow['min_index_interval'] || tableInfo.minIndexInterval;\n  tableInfo.maxIndexInterval = tableRow['max_index_interval'] || tableInfo.maxIndexInterval;\n  if (!isView) {\n    const cdc = tableRow['cdc'];\n    if (cdc !== undefined) {\n      tableInfo.cdc = cdc;\n    }\n  }\n\n  // Map all columns asynchronously\n  utils.map(columnRows, columnRowMapper, (err, columns) => {\n    if (err) {\n      return callback(err);\n    }\n    tableInfo.columns = columns;\n    tableInfo.columnsByName = columnsKeyed;\n    tableInfo.partitionKeys = partitionKeys.sort(utils.propCompare('index')).map(function (item) {\n      return item.c;\n    });\n    clusteringKeys.sort(utils.propCompare('index'));\n    tableInfo.clusteringKeys = clusteringKeys.map(function (item) {\n      return item.c;\n    });\n    tableInfo.clusteringOrder = clusteringKeys.map(function (item) {\n      return item.order;\n    });\n\n    if (isView) {\n      tableInfo.tableName = tableRow['base_table_name'];\n      tableInfo.whereClause = tableRow['where_clause'];\n      tableInfo.includeAllColumns = tableRow['include_all_columns'];\n      return callback();\n    }\n\n    tableInfo.indexes = this._getIndexes(indexRows);\n\n    // flags can be an instance of Array or Set (real or polyfill)\n    let flags = tableRow['flags'];\n    if (Array.isArray(flags)) {\n      flags = new Set(flags);\n    }\n\n    const isDense = flags.has('dense');\n    const isSuper = flags.has('super');\n    const isCompound = flags.has('compound');\n\n    tableInfo.isCompact = isSuper || isDense || !isCompound;\n    //remove the columns related to Thrift\n    const isStaticCompact = !isSuper && !isDense && !isCompound;\n    if(isStaticCompact) {\n      pruneStaticCompactTableColumns(tableInfo);\n    }\n    else if (isDense) {\n      pruneDenseTableColumns(tableInfo);\n    }\n    callback();\n  });\n};\n\nSchemaParserV2.prototype._getIndexes = function (indexRows) {\n  if (!indexRows || indexRows.length === 0) {\n    return utils.emptyArray;\n  }\n\n  return indexRows.map((row) => {\n    const options = this._mapAsObject(row['options']);\n    return new Index(row['index_name'], options['target'], row['kind'], options);\n  });\n};\n\n/** @override */\nSchemaParserV2.prototype._parseAggregate = function (row, callback) {\n  const encoder = this.cc.getEncoder();\n  const aggregate = new Aggregate();\n  aggregate.name = row['aggregate_name'];\n  aggregate.keyspaceName = row['keyspace_name'];\n  aggregate.signature = row['argument_types'] || utils.emptyArray;\n  aggregate.stateFunction = row['state_func'];\n  aggregate.finalFunction = row['final_func'];\n  aggregate.initConditionRaw = row['initcond'];\n  aggregate.initCondition = aggregate.initConditionRaw;\n  const self = this;\n  utils.series([\n    function parseArguments(next) {\n      utils.map(row['argument_types'] || utils.emptyArray, function (name, mapNext) {\n        encoder.parseTypeName(row['keyspace_name'], name, 0, null, self.udtResolver, mapNext);\n      }, function (err, result) {\n        aggregate.argumentTypes = result;\n        next(err);\n      });\n    },\n    function parseStateType(next) {\n      encoder.parseTypeName(row['keyspace_name'], row['state_type'], 0, null, self.udtResolver, function (err, type) {\n        aggregate.stateType = type;\n        next(err);\n      });\n    },\n    function parseReturnType(next) {\n      encoder.parseTypeName(row['keyspace_name'], row['return_type'], 0, null, self.udtResolver, function (err, type) {\n        aggregate.returnType = type;\n        next(err);\n      });\n    }\n  ], function (err) {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, aggregate);\n  });\n};\n\n/** @override */\nSchemaParserV2.prototype._parseFunction = function (row, callback) {\n  const encoder = this.cc.getEncoder();\n  const func = new SchemaFunction();\n  func.name = row['function_name'];\n  func.keyspaceName = row['keyspace_name'];\n  func.signature = row['argument_types'] || utils.emptyArray;\n  func.argumentNames = row['argument_names'] || utils.emptyArray;\n  func.body = row['body'];\n  func.calledOnNullInput = row['called_on_null_input'];\n  func.language = row['language'];\n  const self = this;\n  utils.series([\n    function parseArguments(next) {\n      utils.map(row['argument_types'] || utils.emptyArray, function (name, mapNext) {\n        encoder.parseTypeName(row['keyspace_name'], name, 0, null, self.udtResolver, mapNext);\n      }, function (err, result) {\n        func.argumentTypes = result;\n        next(err);\n      });\n    },\n    function parseReturnType(next) {\n      encoder.parseTypeName(row['keyspace_name'], row['return_type'], 0, null, self.udtResolver, function (err, type) {\n        func.returnType = type;\n        next(err);\n      });\n    }\n  ], function (err) {\n    if (err) {\n      return callback(err);\n    }\n    callback(null, func);\n  });\n};\n\n/** @override */\nSchemaParserV2.prototype._parseUdt = function (udtInfo, row, callback) {\n  const encoder = this.cc.getEncoder();\n  const fieldTypes = row['field_types'];\n  const keyspace = row['keyspace_name'];\n  const fields = new Array(fieldTypes.length);\n  const self = this;\n  utils.forEachOf(row['field_names'], function (name, i, next) {\n    encoder.parseTypeName(keyspace, fieldTypes[i], 0, null, self.udtResolver, function (err, type) {\n      if (err) {\n        return next(err);\n      }\n      fields[i] = {\n        name: name,\n        type: type\n      };\n      next();\n    });\n  }, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    udtInfo.fields = fields;\n    callback(null, udtInfo);\n  });\n};\n\n/**\n * Used to parse schema information for Cassandra versions 4.x and above.\n *\n * This parser similar to [SchemaParserV2] expect it also parses virtual\n * keyspaces.\n *\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc The control connection to be used\n * @param {Function} udtResolver The function to be used to retrieve the udts.\n * @constructor\n * @ignore\n */\nfunction SchemaParserV3(options, cc, udtResolver) {\n  SchemaParserV2.call(this, options, cc, udtResolver);\n  this.supportsVirtual = true;\n}\n\nutil.inherits(SchemaParserV3, SchemaParserV2);\n\n/** @override */\nSchemaParserV3.prototype.getKeyspaces = function (waitReconnect, callback) {\n  const self = this;\n  const keyspaces = {};\n  const queries = [\n    { query: _selectAllKeyspacesV2, virtual: false },\n    { query: _selectAllVirtualKeyspaces, virtual: true }\n  ];\n  utils.each(queries, (q, cb) => {\n    self.cc.query(q.query, waitReconnect, (err, result) => {\n      if (err) {\n        // only callback in error for non-virtual query as\n        // server reporting C* 4.0 may not actually implement\n        // virtual tables.\n        if (!q.virtual) {\n          return cb(err);\n        }\n        return cb();\n      }\n      for (let i = 0; i < result.rows.length; i++) {\n        const ksInfo = self._parseKeyspace(result.rows[i], q.virtual);\n        keyspaces[ksInfo.name] = ksInfo;\n      }\n      cb();\n    });\n  }, (err) => {\n    callback(err, keyspaces);\n  });\n};\n\n/** @override */\nSchemaParserV3.prototype.getKeyspace = function (name, callback) {\n  this._getKeyspace(_selectSingleKeyspaceV2, name, false, (err, ks) => {\n    if (err) {\n      return callback(err);\n    }\n    if (!ks) {\n      // if not found, attempt to retrieve as virtual keyspace.\n      return this._getKeyspace(_selectSingleVirtualKeyspace, name, true, callback);\n    }\n    return callback(null, ks);\n  });\n};\n\nSchemaParserV3.prototype._getKeyspace = function (query, name, virtual, callback) {\n  this.cc.query(util.format(query, name), (err, result) => {\n    if (err) {\n      // only callback in error for non-virtual query as\n      // server reporting C* 4.0 may not actually implement\n      // virtual tables.\n      if (!virtual) {\n        return callback(err);\n      }\n      return callback(null, null);\n    }\n    const row = result.rows[0];\n    if (!row) {\n      return callback(null, null);\n    }\n    callback(null, this._parseKeyspace(row, virtual));\n  });\n};\n\n/**\n * Upon migration from thrift to CQL, we internally create a pair of surrogate clustering/regular columns\n * for compact static tables. These columns shouldn't be exposed to the user but are currently returned by C*.\n * We also need to remove the static keyword for all other columns in the table.\n * @param {module:metadata~TableMetadata} tableInfo\n*/\nfunction pruneStaticCompactTableColumns(tableInfo) {\n  let i;\n  let c;\n  //remove \"column1 text\" clustering column\n  for (i = 0; i < tableInfo.clusteringKeys.length; i++) {\n    c = tableInfo.clusteringKeys[i];\n    const index = tableInfo.columns.indexOf(c);\n    tableInfo.columns.splice(index, 1);\n    delete tableInfo.columnsByName[c.name];\n  }\n  tableInfo.clusteringKeys = utils.emptyArray;\n  tableInfo.clusteringOrder = utils.emptyArray;\n  //remove regular columns and set the static columns to non-static\n  i = tableInfo.columns.length;\n  while (i--) {\n    c = tableInfo.columns[i];\n    if (!c.isStatic && tableInfo.partitionKeys.indexOf(c) === -1) {\n      // remove \"value blob\" regular column\n      tableInfo.columns.splice(i, 1);\n      delete tableInfo.columnsByName[c.name];\n      continue;\n    }\n    c.isStatic = false;\n  }\n}\n\n/**\n * Upon migration from thrift to CQL, we internally create a surrogate column \"value\" of type custom.\n * This column shouldn't be exposed to the user but is currently returned by C*.\n * @param {module:metadata~TableMetadata} tableInfo\n */\nfunction pruneDenseTableColumns(tableInfo) {\n  let i = tableInfo.columns.length;\n  while (i--) {\n    const c = tableInfo.columns[i];\n    if (!c.isStatic && c.type.code === types.dataTypes.custom && c.type.info === 'empty') {\n      // remove \"value blob\" regular column\n      tableInfo.columns.splice(i, 1);\n      delete tableInfo.columnsByName[c.name];\n      continue;\n    }\n    c.isStatic = false;\n  }\n}\n\nfunction getTokenToReplicaMapper(strategy, strategyOptions) {\n  if (/SimpleStrategy$/.test(strategy)) {\n    const rf = parseInt(strategyOptions['replication_factor'], 10);\n    if (rf > 1) {\n      return getTokenToReplicaSimpleMapper(rf);\n    }\n  }\n  if (/NetworkTopologyStrategy$/.test(strategy)) {\n    return getTokenToReplicaNetworkMapper(strategyOptions);\n  }\n  //default, wrap in an Array\n  return (function noStrategy(tokenizer, ring, primaryReplicas) {\n    const replicas = {};\n    for (const key in primaryReplicas) {\n      if (!primaryReplicas.hasOwnProperty(key)) {\n        continue;\n      }\n      replicas[key] = [primaryReplicas[key]];\n    }\n    return replicas;\n  });\n}\n\n/**\n * @param {Number} replicationFactor\n * @returns {function}\n */\nfunction getTokenToReplicaSimpleMapper(replicationFactor) {\n  return (function tokenSimpleStrategy(tokenizer, ringTokensAsStrings, primaryReplicas) {\n    const ringLength = ringTokensAsStrings.length;\n    const rf = Math.min(replicationFactor, ringLength);\n    const replicas = {};\n    for (let i = 0; i < ringLength; i++) {\n      const key = ringTokensAsStrings[i];\n      const tokenReplicas = [primaryReplicas[key]];\n      for (let j = 1; j < ringLength && tokenReplicas.length < rf; j++) {\n        let nextReplicaIndex = i + j;\n        if (nextReplicaIndex >= ringLength) {\n          //circle back\n          nextReplicaIndex = nextReplicaIndex % ringLength;\n        }\n        const nextReplica = primaryReplicas[ringTokensAsStrings[nextReplicaIndex]];\n        // In the case of vnodes, consecutive sections of the ring can be assigned to the same host.\n        if (tokenReplicas.indexOf(nextReplica) === -1) {\n          tokenReplicas.push(nextReplica);\n        }\n      }\n      replicas[key] = tokenReplicas;\n    }\n    return replicas;\n  });\n}\n\n/**\n * @param {Object} replicationFactors\n * @returns {Function}\n * @private\n */\nfunction getTokenToReplicaNetworkMapper(replicationFactors) {\n  //                A(DC1)\n  //\n  //           H         B(DC2)\n  //                |\n  //      G       --+--       C(DC1)\n  //                |\n  //           F         D(DC2)\n  //\n  //                E(DC1)\n  return (function tokenNetworkStrategy(tokenizer, ringTokensAsStrings, primaryReplicas, datacenters) {\n    const replicas = {};\n    const ringLength = ringTokensAsStrings.length;\n\n    for (let i = 0; i < ringLength; i++) {\n      const key = ringTokensAsStrings[i];\n      const tokenReplicas = [];\n      const replicasByDc = {};\n      const racksPlaced = {};\n      const skippedHosts = [];\n      for (let j = 0; j < ringLength; j++) {\n        let nextReplicaIndex = i + j;\n        if (nextReplicaIndex >= ringLength) {\n          //circle back\n          nextReplicaIndex = nextReplicaIndex % ringLength;\n        }\n        const h = primaryReplicas[ringTokensAsStrings[nextReplicaIndex]];\n        // In the case of vnodes, consecutive sections of the ring can be assigned to the same host.\n        if (tokenReplicas.indexOf(h) !== -1) {\n          continue;\n        }\n        const dc = h.datacenter;\n        //Check if the next replica belongs to one of the targeted dcs\n        let dcRf = parseInt(replicationFactors[dc], 10);\n        if (!dcRf) {\n          continue;\n        }\n        dcRf = Math.min(dcRf, datacenters[dc].hostLength);\n        let dcReplicas = replicasByDc[dc] || 0;\n        //Amount of replicas per dc is greater than rf or the amount of host in the datacenter\n        if (dcReplicas >= dcRf) {\n          continue;\n        }\n        let racksPlacedInDc = racksPlaced[dc];\n        if (!racksPlacedInDc) {\n          racksPlacedInDc = racksPlaced[dc] = new utils.HashSet();\n        }\n        if (h.rack &&\n            racksPlacedInDc.contains(h.rack) &&\n            racksPlacedInDc.length < datacenters[dc].racks.length) {\n          // We already selected a replica for this rack\n          // Skip until replicas in other racks are added\n          if (skippedHosts.length < dcRf - dcReplicas) {\n            skippedHosts.push(h);\n          }\n          continue;\n        }\n        replicasByDc[h.datacenter] = ++dcReplicas;\n        tokenReplicas.push(h);\n        if (h.rack && racksPlacedInDc.add(h.rack) && racksPlacedInDc.length === datacenters[dc].racks.length) {\n          // We finished placing all replicas for all racks in this dc\n          // Add the skipped hosts\n          replicasByDc[dc] += addSkippedHosts(dcRf, dcReplicas, tokenReplicas, skippedHosts);\n        }\n        if (isDoneForToken(replicationFactors, datacenters, replicasByDc)) {\n          break;\n        }\n      }\n      replicas[key] = tokenReplicas;\n    }\n    return replicas;\n  });\n}\n\n/**\n * @returns {Number} The number of skipped hosts added.\n */\nfunction addSkippedHosts(dcRf, dcReplicas, tokenReplicas, skippedHosts) {\n  let i;\n  for (i = 0; i < dcRf - dcReplicas && i < skippedHosts.length; i++) {\n    tokenReplicas.push(skippedHosts[i]);\n  }\n  return i;\n}\n\nfunction isDoneForToken(replicationFactors, datacenters, replicasByDc) {\n  const keys = Object.keys(replicationFactors);\n  for (let i = 0; i < keys.length; i++) {\n    const dcName = keys[i];\n    const dc = datacenters[dcName];\n    if (!dc) {\n      // A DC is included in the RF but the DC does not exist in the topology\n      continue;\n    }\n    const rf = Math.min(parseInt(replicationFactors[dcName], 10), dc.hostLength);\n    if (rf > 0 && (!replicasByDc[dcName] || replicasByDc[dcName] < rf)) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Creates a new instance if the currentInstance is not valid for the\n * provided Cassandra version\n * @param {ClientOptions} options The client options\n * @param {ControlConnection} cc The control connection to be used\n * @param {Function} udtResolver The function to be used to retrieve the udts.\n * @param {Array.<Number>} [version] The cassandra version\n * @param {SchemaParser} [currentInstance] The current instance\n * @returns {SchemaParser}\n */\nfunction getByVersion(options, cc, udtResolver, version, currentInstance) {\n  let parserConstructor = SchemaParserV1;\n  if (version && version[0] === 3) {\n    parserConstructor = SchemaParserV2;\n  } else if (version && version[0] >= 4) {\n    parserConstructor = SchemaParserV3;\n  }\n  if (!currentInstance || !(currentInstance instanceof parserConstructor)){\n    return new parserConstructor(options, cc, udtResolver);\n  }\n  return currentInstance;\n}\n\nexports.getByVersion = getByVersion;\n","\"use strict\";\n\nconst util = require('util');\nconst DataCollection = require('./data-collection');\n\n/**\n * Creates a new instance of TableMetadata\n * @classdesc Describes a table\n * @param {String} name Name of the Table\n * @augments {module:metadata~DataCollection}\n * @alias module:metadata~TableMetadata\n * @constructor\n */\nfunction TableMetadata(name) {\n  DataCollection.call(this, name);\n  /**\n   * Applies only to counter tables.\n   * When set to true, replicates writes to all affected replicas regardless of the consistency level specified by\n   * the client for a write request. For counter tables, this should always be set to true.\n   * @type {Boolean}\n   */\n  this.replicateOnWrite = true;\n  /**\n   * Returns the memtable flush period (in milliseconds) option for this table.\n   * @type {Number}\n   */\n  this.memtableFlushPeriod = 0;\n  /**\n   * Returns the index interval option for this table.\n   * <p>\n   * Note: this option is only available in Apache Cassandra 2.0. It is deprecated in Apache Cassandra 2.1 and\n   * above, and will therefore return <code>null</code> for 2.1 nodes.\n   * </p>\n   * @type {Number|null}\n   */\n  this.indexInterval = null;\n  /**\n   * Determines  whether the table uses the COMPACT STORAGE option.\n   * @type {Boolean}\n   */\n  this.isCompact = false;\n  /**\n   *\n   * @type {Array.<Index>}\n   */\n  this.indexes = null;\n\n  /**\n   * Determines whether the Change Data Capture (CDC) flag is set for the table.\n   * @type {Boolean|null}\n   */\n  this.cdc = null;\n\n  /**\n   * Determines whether the table is a virtual table or not.\n   * @type {Boolean}\n   */\n  this.virtual = false;\n}\n\nutil.inherits(TableMetadata, DataCollection);\n\nmodule.exports = TableMetadata;","\"use strict\";\n\n/**\n * Creates a new Aggregate.\n * @classdesc Describes a CQL aggregate.\n * @alias module:metadata~Aggregate\n * @constructor\n */\nfunction Aggregate() {\n  /**\n   * Name of the aggregate.\n   * @type {String}\n   */\n  this.name = null;\n  /**\n   * Name of the keyspace where the aggregate is declared.\n   */\n  this.keyspaceName = null;\n  /**\n   * Signature of the aggregate.\n   * @type {Array.<String>}\n   */\n  this.signature = null;\n  /**\n   * List of the CQL aggregate argument types.\n   * @type {Array.<{code, info}>}\n   */\n  this.argumentTypes = null;\n  /**\n   * State Function.\n   * @type {String}\n   */\n  this.stateFunction = null;\n  /**\n   * State Type.\n   * @type {{code, info}}\n   */\n  this.stateType = null;\n  /**\n   * Final Function.\n   * @type {String}\n   */\n  this.finalFunction = null;\n  this.initConditionRaw = null;\n  /**\n   * Initial state value of this aggregate.\n   * @type {String}\n   */\n  this.initCondition = null;\n  /**\n   * Type of the return value.\n   * @type {{code: number, info: (Object|Array|null)}}\n   */\n  this.returnType = null;\n}\n\nmodule.exports = Aggregate;","\"use strict\";\n\n/**\n * Creates a new SchemaFunction.\n * @classdesc Describes a CQL function.\n * @alias module:metadata~SchemaFunction\n * @constructor\n */\nfunction SchemaFunction() {\n  /**\n   * Name of the cql function.\n   * @type {String}\n   */\n  this.name = null;\n  /**\n   * Name of the keyspace where the cql function is declared.\n   */\n  this.keyspaceName = null;\n  /**\n   * Signature of the function.\n   * @type {Array.<String>}\n   */\n  this.signature = null;\n  /**\n   * List of the function argument names.\n   * @type {Array.<String>}\n   */\n  this.argumentNames = null;\n  /**\n   * List of the function argument types.\n   * @type {Array.<{code, info}>}\n   */\n  this.argumentTypes = null;\n  /**\n   * Body of the function.\n   * @type {String}\n   */\n  this.body = null;\n  /**\n   * Determines if the function is called when the input is null.\n   * @type {Boolean}\n   */\n  this.calledOnNullInput = null;\n  /**\n   * Name of the programming language, for example: java, javascript, ...\n   * @type {String}\n   */\n  this.language = null;\n  /**\n   * Type of the return value.\n   * @type {{code: number, info: (Object|Array|null)}}\n   */\n  this.returnType = null;\n}\n\nmodule.exports = SchemaFunction;","\"use strict\";\nconst util = require('util');\nconst utils = require('../utils');\nconst types = require('../types');\n\n/** @private */\nconst kind = {\n  custom: 0,\n  keys: 1,\n  composites: 2\n};\n/**\n * Creates a new Index instance.\n * @classdesc Describes a CQL index.\n * @param {String} name\n * @param {String} target\n * @param {Number|String} kind\n * @param {Object} options\n * @alias module:metadata~Index\n * @constructor\n */\nfunction Index(name, target, kind, options) {\n  /**\n   * Name of the index.\n   * @type {String}\n   */\n  this.name = name;\n  /**\n   * Target of the index.\n   * @type {String}\n   */\n  this.target = target;\n  /**\n   * A numeric value representing index kind (0: custom, 1: keys, 2: composite);\n   * @type {Number}\n   */\n  this.kind = typeof kind === 'string' ? getKindByName(kind) : kind;\n  /**\n   * An associative array containing the index options\n   * @type {Object}\n   */\n  this.options = options;\n}\n\n/**\n * Determines if the index is of composites kind\n * @returns {Boolean}\n */\nIndex.prototype.isCompositesKind = function () {\n  return this.kind === kind.composites;\n};\n\n/**\n * Determines if the index is of keys kind\n * @returns {Boolean}\n */\nIndex.prototype.isKeysKind = function () {\n  return this.kind === kind.keys;\n};\n\n/**\n * Determines if the index is of custom kind\n * @returns {Boolean}\n */\nIndex.prototype.isCustomKind = function () {\n  return this.kind === kind.custom;\n};\n\n/**\n * Parses Index information from rows in the 'system_schema.indexes' table\n * @deprecated It will be removed in the next major version.\n * @param {Array.<Row>} indexRows\n * @returns {Array.<Index>}\n */\nIndex.fromRows = function (indexRows) {\n  if (!indexRows || indexRows.length === 0) {\n    return utils.emptyArray;\n  }\n  return indexRows.map(function (row) {\n    const options = row['options'];\n    return new Index(row['index_name'], options['target'], getKindByName(row['kind']), options);\n  });\n};\n\n/**\n * Parses Index information from rows in the legacy 'system.schema_columns' table.\n * @deprecated It will be removed in the next major version.\n * @param {Array.<Row>} columnRows\n * @param {Object.<String, {name, type}>} columnsByName\n * @returns {Array.<Index>}\n */\nIndex.fromColumnRows = function (columnRows, columnsByName) {\n  const result = [];\n  for (let i = 0; i < columnRows.length; i++) {\n    const row = columnRows[i];\n    const indexName = row['index_name'];\n    if (!indexName) {\n      continue;\n    }\n    const c = columnsByName[row['column_name']];\n    let target;\n    const options = JSON.parse(row['index_options']);\n    if (options !== null && options['index_keys'] !== undefined) {\n      target = util.format(\"keys(%s)\", c.name);\n    }\n    else if (options !== null && options['index_keys_and_values'] !== undefined) {\n      target = util.format(\"entries(%s)\", c.name);\n    }\n    else if (c.type.options.frozen && (c.type.code === types.dataTypes.map || c.type.code === types.dataTypes.list ||\n      c.type.code === types.dataTypes.set)) {\n      target = util.format(\"full(%s)\", c.name);\n    }\n    else {\n      target = c.name;\n    }\n    result.push(new Index(indexName, target, getKindByName(row['index_type']), options));\n  }\n  return result;\n};\n\n/**\n * Gets the number representing the kind based on the name\n * @param {String} name\n * @returns {Number}\n * @private\n */\nfunction getKindByName(name) {\n  if (!name) {\n    return kind.custom;\n  }\n  return kind[name.toLowerCase()];\n}\n\nmodule.exports = Index;","\"use strict\";\nconst util = require('util');\nconst DataCollection = require('./data-collection');\n/**\n * Creates a new MaterializedView.\n * @param {String} name Name of the View.\n * @classdesc Describes a CQL materialized view.\n * @alias module:metadata~MaterializedView\n * @augments {module:metadata~DataCollection}\n * @constructor\n */\nfunction MaterializedView(name) {\n  DataCollection.call(this, name);\n  /**\n   * Name of the table.\n   * @type {String}\n   */\n  this.tableName = null;\n  /**\n   * View where clause.\n   * @type {String}\n   */\n  this.whereClause = null;\n  /**\n   * Determines if all the table columns where are included in the view.\n   * @type {boolean}\n   */\n  this.includeAllColumns = false;\n}\n\nutil.inherits(MaterializedView, DataCollection);\n\nmodule.exports = MaterializedView;","\"use strict\";\n\nconst util = require('util');\nconst utils = require('../utils');\n\nconst _queueOverflowThreshold = 1000;\n\n/**\n * Debounce protocol events by acting on those events with a sliding delay.\n * @param {Number} delay\n * @param {Function} logger\n * @ignore\n * @constructor\n */\nfunction EventDebouncer(delay, logger) {\n  this._delay = delay;\n  this._logger = logger;\n  this._queue = null;\n  this._timeout = null;\n}\n\n/**\n * Adds a new event to the queue and moves the delay.\n * @param {{ handler: Function, all: boolean|undefined, keyspace: String|undefined, cqlObject: String|null|undefined,\n * callback: Function|undefined }} event\n * @param {Boolean} processNow\n */\nEventDebouncer.prototype.eventReceived = function (event, processNow) {\n  event.callback = event.callback || utils.noop;\n  this._queue = this._queue || { callbacks: [], keyspaces: {} };\n  const delay = !processNow ? this._delay : 0;\n  if (event.all) {\n    // when an event marked with all is received, it supersedes all the rest of events\n    // a full update (hosts + keyspaces + tokens) is going to be made\n    this._queue.mainEvent = event;\n  }\n  if (this._queue.callbacks.length === _queueOverflowThreshold) {\n    // warn once\n    this._logger('warn', util.format('Event debouncer queue exceeded %d events', _queueOverflowThreshold));\n  }\n  this._queue.callbacks.push(event.callback);\n  if (this._queue.mainEvent) {\n    // a full refresh is scheduled and the callback was added, nothing else to do.\n    return this._slideDelay(delay);\n  }\n  // Insert at keyspace level\n  let keyspaceEvents = this._queue.keyspaces[event.keyspace];\n  if (!keyspaceEvents) {\n    keyspaceEvents = this._queue.keyspaces[event.keyspace] = { events: [] };\n  }\n  if (event.cqlObject === undefined) {\n    // a full refresh of the keyspace, supersedes all child keyspace events\n    keyspaceEvents.mainEvent = event;\n  }\n  keyspaceEvents.events.push(event);\n  this._slideDelay(delay);\n};\n\n/**\n * @param {Number} delay\n * @private\n * */\nEventDebouncer.prototype._slideDelay = function (delay) {\n  const self = this;\n  function process() {\n    const q = self._queue;\n    self._queue = null;\n    self._timeout = null;\n    processQueue(q);\n  }\n  if (delay === 0) {\n    // no delay, process immediately\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    return process();\n  }\n  const previousTimeout = this._timeout;\n  // add the new timeout before removing the previous one performs better\n  this._timeout = setTimeout(process, delay);\n  if (previousTimeout) {\n    clearTimeout(previousTimeout);\n  }\n};\n\n/**\n * Clears the timeout and invokes all pending callback.\n */\nEventDebouncer.prototype.shutdown = function () {\n  if (!this._queue) {\n    return;\n  }\n  this._queue.callbacks.forEach(function (cb) {\n    cb();\n  });\n  this._queue = null;\n  clearTimeout(this._timeout);\n  this._timeout = null;\n};\n\n/**\n * @param {{callbacks: Array, keyspaces: Object, mainEvent: Object}} q\n * @private\n */\nfunction processQueue (q) {\n  if (q.mainEvent) {\n    // refresh all by invoking 1 handler and invoke all pending callbacks\n    return q.mainEvent.handler(function invokeCallbacks(err) {\n      for (let i = 0; i < q.callbacks.length; i++) {\n        q.callbacks[i](err);\n      }\n    });\n  }\n  utils.each(Object.keys(q.keyspaces), function eachKeyspace(name, next) {\n    const keyspaceEvents = q.keyspaces[name];\n    if (keyspaceEvents.mainEvent) {\n      // refresh a keyspace\n      return keyspaceEvents.mainEvent.handler(function mainEventCallback(err) {\n        for (let i = 0; i < keyspaceEvents.events.length; i++) {\n          keyspaceEvents.events[i].callback(err);\n        }\n        next();\n      });\n    }\n    // deal with individual handlers and callbacks\n    keyspaceEvents.events.forEach(function eachEvent(event) {\n      // sync handlers\n      event.handler();\n      event.callback();\n    });\n    next();\n  });\n}\n\nmodule.exports = EventDebouncer;","'use strict';\n/**\n * Authentication module.\n * @module auth\n */\nconst baseProvider = require('./provider.js');\nexports.AuthProvider = baseProvider.AuthProvider;\nexports.Authenticator = baseProvider.Authenticator;\nexports.PlainTextAuthProvider = require('./plain-text-auth-provider.js');","'use strict';\nconst util = require('util');\n\nconst provider = require('./provider.js');\nconst utils = require('../utils');\nconst AuthProvider = provider.AuthProvider;\nconst Authenticator = provider.Authenticator;\n/**\n * Creates a new instance of the Authenticator provider\n * @classdesc Provides plain text [Authenticator]{@link module:auth~Authenticator} instances to be used when\n * connecting to a host.\n * @extends module:auth~AuthProvider\n * @example\n * var authProvider = new cassandra.auth.PlainTextAuthProvider('my_user', 'p@ssword1!');\n * //Set the auth provider in the clientOptions when creating the Client instance\n * const client = new Client({ contactPoints: contactPoints, authProvider: authProvider });\n * @param {String} username User name in plain text\n * @param {String} password Password in plain text\n * @alias module:auth~PlainTextAuthProvider\n * @constructor\n */\nfunction PlainTextAuthProvider(username, password) {\n  this.username = username;\n  this.password = password;\n}\n\nutil.inherits(PlainTextAuthProvider, AuthProvider);\n\n/**\n * Returns a new [Authenticator]{@link module:auth~Authenticator} instance to be used for plain text authentication.\n * @override\n * @returns {Authenticator}\n */\nPlainTextAuthProvider.prototype.newAuthenticator = function () {\n  return new PlainTextAuthenticator(this.username, this.password);\n};\n\n/**\n * @ignore\n */\nfunction PlainTextAuthenticator(username, password) {\n  this.username = username;\n  this.password = password;\n}\n\nutil.inherits(PlainTextAuthenticator, Authenticator);\n\nPlainTextAuthenticator.prototype.initialResponse = function (callback) {\n  const initialToken = Buffer.concat([\n    utils.allocBufferFromArray([0]),\n    utils.allocBufferFromString(this.username, 'utf8'),\n    utils.allocBufferFromArray([0]),\n    utils.allocBufferFromString(this.password, 'utf8')\n  ]);\n  callback(null, initialToken);\n};\n\nPlainTextAuthenticator.prototype.evaluateChallenge = function (challenge, callback) {\n  //noop\n  callback();\n};\n\nmodule.exports = PlainTextAuthProvider;","'use strict';\n\n/**\n * Module containing classes and fields related to the Mapper.\n * @module mapping\n */\n\nexports.Mapper = require('./mapper');\nexports.ModelMapper = require('./model-mapper');\nexports.ModelBatchMapper = require('./model-batch-mapper');\nexports.ModelBatchItem = require('./model-batch-item');\nexports.Result = require('./result');\nconst tableMappingsModule = require('./table-mappings');\nexports.TableMappings = tableMappingsModule.TableMappings;\nexports.DefaultTableMappings = tableMappingsModule.DefaultTableMappings;\nexports.UnderscoreCqlToCamelCaseMappings = tableMappingsModule.UnderscoreCqlToCamelCaseMappings;\nexports.q = require('./q').q;","'use strict';\n\nconst ModelMapper = require('./model-mapper');\nconst MappingHandler = require('./mapping-handler');\nconst DocInfoAdapter = require('./doc-info-adapter');\nconst errors = require('../errors');\nconst Result = require('./result');\nconst ResultMapper = require('./result-mapper');\nconst ModelMappingInfo = require('./model-mapping-info');\nconst ModelBatchItem = require('./model-batch-item');\n\n/**\n * Represents an object mapper for Apache Cassandra and DataStax Enterprise.\n * @alias module:mapping~Mapper\n * @example <caption>Creating a Mapper instance with some options for the model 'User'</caption>\n * const mappingOptions = {\n *   models: {\n *     'User': {\n *       tables: ['users'],\n *       mappings: new UnderscoreCqlToCamelCaseMappings(),\n *       columnNames: {\n *         'userid': 'id'\n *       }\n *     }\n *   }\n * };\n * const mapper = new Mapper(client, mappingOptions);\n * @example <caption>Creating a Mapper instance with other possible options for a model</caption>\n * const mappingOptions = {\n *   models: {\n *     'Video': {\n *       tables: ['videos', 'user_videos', 'latest_videos', { name: 'my_videos_view', isView: true }],\n *       mappings: new UnderscoreCqlToCamelCaseMappings(),\n *       columnNames: {\n *         'videoid': 'id'\n *       },\n *       keyspace: 'ks1'\n *     }\n *   }\n * };\n * const mapper = new Mapper(client, mappingOptions);\n */\nclass Mapper {\n  /**\n   * Creates a new instance of Mapper.\n   * @param {Client} client The Client instance to use to execute the queries and fetch the metadata.\n   * @param {MappingOptions} [options] The [MappingOptions]{@link module:mapping~MappingOptions} containing the\n   * information of the models and table mappings.\n   */\n  constructor(client, options) {\n    if (!client) {\n      throw new Error('client must be defined');\n    }\n\n    /**\n     * The Client instance used to create this Mapper instance.\n     * @type {Client}\n     */\n    this.client = client;\n\n    this._modelMappingInfos = ModelMappingInfo.parse(options, client.keyspace);\n    this._modelMappers = new Map();\n  }\n\n  /**\n   * Gets a [ModelMapper]{@link module:mapping~ModelMapper} that is able to map documents of a certain model into\n   * CQL rows.\n   * @param {String} name The name to identify the model. Note that the name is case-sensitive.\n   * @returns {ModelMapper} A [ModelMapper]{@link module:mapping~ModelMapper} instance.\n   */\n  forModel(name) {\n    let modelMapper = this._modelMappers.get(name);\n\n    if (modelMapper === undefined) {\n      let mappingInfo = this._modelMappingInfos.get(name);\n\n      if (mappingInfo === undefined) {\n        if (!this.client.keyspace) {\n          throw new Error(\n            'You must set the Client keyspace or specify the keyspace of the model in the MappingOptions');\n        }\n\n        mappingInfo = ModelMappingInfo.createDefault(name, this.client.keyspace);\n      }\n\n      modelMapper = new ModelMapper(name, new MappingHandler(this.client, mappingInfo));\n      this._modelMappers.set(name, modelMapper);\n    }\n\n    return modelMapper;\n  }\n\n  /**\n   * Executes a batch of queries represented in the items.\n   * @param {Array<ModelBatchItem>} items\n   * @param {Object|String} [executionOptions] An object containing the options to be used for the requests\n   * execution or a string representing the name of the execution profile.\n   * @param {String} [executionOptions.executionProfile] The name of the execution profile.\n   * @param {Boolean} [executionOptions.isIdempotent] Defines whether the query can be applied multiple times without\n   * changing the result beyond the initial application.\n   * <p>\n   *   The mapper uses the generated queries to determine the default value. When an UPDATE is generated with a\n   *   counter column or appending/prepending to a list column, the execution is marked as not idempotent.\n   * </p>\n   * <p>\n   *   Additionally, the mapper uses the safest approach for queries with lightweight transactions (Compare and\n   *   Set) by considering them as non-idempotent. Lightweight transactions at client level with transparent retries can\n   *   break linearizability. If that is not an issue for your application, you can manually set this field to true.\n   * </p>\n   * @param {Boolean} [executionOptions.logged=true] Determines whether the batch should be written to the batchlog.\n   * @param {Number|Long} [executionOptions.timestamp] The default timestamp for the query in microseconds from the\n   * unix epoch (00:00:00, January 1st, 1970).\n   * @returns {Promise<Result>} A Promise that resolves to a [Result]{@link module:mapping~Result}.\n   */\n  batch(items, executionOptions) {\n    if (!Array.isArray(items) || !(items.length > 0)) {\n      return Promise.reject(\n        new errors.ArgumentError('First parameter items should be an Array with 1 or more ModelBatchItem instances'));\n    }\n\n    const queries = [];\n    let isIdempotent = true;\n    let isCounter;\n\n    return Promise\n      .all(items\n        .map(item => {\n          if (!(item instanceof ModelBatchItem)) {\n            return Promise.reject(new Error(\n              'Batch items must be instances of ModelBatchItem, use modelMapper.batching object to create each item'));\n          }\n\n          return item.pushQueries(queries)\n            .then(options => {\n              // The batch is idempotent when all the queries contained are idempotent\n              isIdempotent = isIdempotent && options.isIdempotent;\n\n              // Let it fail at server level when there is a mix of counter and normal mutations\n              isCounter = options.isCounter;\n            });\n        }))\n      .then(() =>\n        this.client.batch(queries, DocInfoAdapter.adaptBatchOptions(executionOptions, isIdempotent, isCounter)))\n      .then(rs => {\n        // Results should only be adapted when the batch contains LWT (single table)\n        const info = items[0].getMappingInfo();\n        return new Result(rs, info, ResultMapper.getMutationAdapter(rs));\n      });\n  }\n}\n\n/**\n * Represents the mapping options.\n * @typedef {Object} module:mapping~MappingOptions\n * @property {Object<String, ModelOptions>} models An associative array containing the\n * name of the model as key and the table and column information as value.\n */\n\n/**\n * Represents a set of options that applies to a certain model.\n * @typedef {Object} module:mapping~ModelOptions\n * @property {Array<String>|Array<{name, isView}>} tables An Array containing the name of the tables or An Array\n * containing the name and isView property to describe the table.\n * @property {TableMappings} mappings The TableMappings implementation instance that is used to convert from column\n * names to property names and the other way around.\n * @property {Object.<String, String>} [columnNames] An associative array containing the name of the columns and\n * properties that doesn't follow the convention defined in the <code>TableMappings</code>.\n * @property {String} [keyspace] The name of the keyspace. Only mandatory when the Client is not using a keyspace.\n */\n\nmodule.exports = Mapper;","'use strict';\n\nconst utils = require('../utils');\nconst QueryGenerator = require('./query-generator');\nconst ResultMapper = require('./result-mapper');\nconst Result = require('./result');\nconst Cache = require('./cache');\nconst Tree = require('./tree');\nconst ObjectSelector = require('./object-selector');\nconst DocInfoAdapter = require('./doc-info-adapter');\n\nconst cacheHighWaterMark = 100;\n\n/**\n * @ignore\n */\nclass MappingHandler {\n  /**\n   * @param {Client} client\n   * @param {ModelMappingInfo} mappingInfo\n   */\n  constructor(client, mappingInfo) {\n    this._client = client;\n    this._cache = {\n      select: new Tree().on('add', length => this._validateCacheLength(length)),\n      selectAll: new Tree().on('add', length => this._validateCacheLength(length)),\n      insert: new Tree().on('add', length => this._validateCacheLength(length)),\n      update: new Tree().on('add', length => this._validateCacheLength(length)),\n      remove: new Tree().on('add', length => this._validateCacheLength(length)),\n      customQueries: new Map()\n    };\n\n    /**\n     * Gets the mapping information of the document.\n     * @type {ModelMappingInfo}\n     */\n    this.info = mappingInfo;\n  }\n\n  /**\n   * Gets a function to be used to execute SELECT the query using the document.\n   * @param {Object} doc\n   * @param {{fields, orderBy, limit}} docInfo\n   * @param {Boolean} allPKsDefined Determines whether all primary keys must be defined in the doc for the query to\n   * be valid.\n   * @return {Promise<Function>}\n   */\n  getSelectExecutor(doc, docInfo, allPKsDefined) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getSelectKey(docKeys, doc, docInfo);\n    // Cache the executor and the result mapper under the same key\n    // That way, those can get evicted together\n    const cacheItem = this._cache.select.getOrCreate(cacheKey, () => ({ executor: null, resultAdapter: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, null, doc, this.info);\n    const fieldsInfo = DocInfoAdapter.getPropertiesInfo(utils.emptyArray, docInfo, doc, this.info);\n    const orderByColumns = DocInfoAdapter.adaptOrderBy(docInfo, this.info);\n    const limit = docInfo && docInfo.limit;\n\n    return this._client.connect()\n      .then(() =>\n        ObjectSelector.getForSelect(this._client, this.info, allPKsDefined, propertiesInfo, fieldsInfo, orderByColumns))\n      .then(tableName => {\n        // Part of the closure\n        const query = QueryGenerator.getSelect(tableName, this.info.keyspace, propertiesInfo, fieldsInfo,\n          orderByColumns, limit);\n        const paramsGetter = QueryGenerator.selectParamsGetter(propertiesInfo, limit);\n        const self = this;\n\n        cacheItem.executor = function selectExecutor(doc, docInfo, executionOptions) {\n          return self._executeSelect(query, paramsGetter, doc, docInfo, executionOptions, cacheItem);\n        };\n\n        return cacheItem.executor;\n      });\n  }\n\n  getSelectAllExecutor(docInfo) {\n    const cacheKey = Cache.getSelectAllKey(docInfo);\n    const cacheItem = this._cache.selectAll.getOrCreate(cacheKey, () => ({ executor: null, resultAdapter: null }));\n\n    if (cacheItem.executor !== null) {\n      return cacheItem.executor;\n    }\n\n    const fieldsInfo = DocInfoAdapter.getPropertiesInfo(utils.emptyArray, docInfo, utils.emptyObject, this.info);\n    const orderByColumns = DocInfoAdapter.adaptOrderBy(docInfo, this.info);\n    const limit = docInfo && docInfo.limit;\n\n    const tableName = ObjectSelector.getForSelectAll(this.info);\n\n    // Part of the closure\n    const query = QueryGenerator.getSelect(\n      tableName, this.info.keyspace, utils.emptyArray, fieldsInfo, orderByColumns, limit);\n    const paramsGetter = QueryGenerator.selectParamsGetter(utils.emptyArray, limit);\n    const self = this;\n\n    cacheItem.executor = function selectAllExecutor(docInfo, executionOptions) {\n      return self._executeSelect(query, paramsGetter, null, docInfo, executionOptions, cacheItem);\n    };\n\n    return cacheItem.executor;\n  }\n\n  /**\n   * Executes a SELECT query and returns the adapted results.\n   * When a result adapter is not yet created, it gets a new one and caches it.\n   * @private\n   */\n  _executeSelect(query, paramsGetter, doc, docInfo, executionOptions, cacheItem) {\n    const options = DocInfoAdapter.adaptAllOptions(executionOptions, true);\n\n    return this._client.execute(query, paramsGetter(doc, docInfo), options)\n      .then(rs => {\n        if (cacheItem.resultAdapter === null) {\n          cacheItem.resultAdapter = ResultMapper.getSelectAdapter(this.info, rs);\n        }\n        return new Result(rs, this.info, cacheItem.resultAdapter);\n      });\n  }\n\n  /**\n   * Gets a function to be used to execute INSERT the query using the document.\n   * @param {Object} doc\n   * @param {{ifNotExists, ttl, fields}} docInfo\n   * @return {Promise<Function>}\n   */\n  getInsertExecutor(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getInsertKey(docKeys, docInfo);\n    const cacheItem = this._cache.insert.getOrCreate(cacheKey, () => ({ executor: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    return this.createInsertQueries(docKeys, doc, docInfo)\n      .then(queries => {\n        if (queries.length === 1) {\n          return this._setSingleExecutor(cacheItem, queries[0]);\n        }\n\n        return this._setBatchExecutor(cacheItem, queries);\n      });\n  }\n\n  /**\n   * Creates an Array containing the query and the params getter function for each table affected by the INSERT.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{ifNotExists, ttl, fields}} docInfo\n   * @returns {Promise<Array<{query, paramsGetter}>>}\n   */\n  createInsertQueries(docKeys, doc, docInfo) {\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, docInfo, doc, this.info);\n    const ifNotExists = docInfo && docInfo.ifNotExists;\n\n    // Get all the tables affected\n    return this._client.connect()\n      .then(() => ObjectSelector.getForInsert(this._client, this.info, propertiesInfo))\n      .then(tables => {\n\n        if (tables.length > 1 && ifNotExists) {\n          throw new Error('Batch with ifNotExists conditions cannot span multiple tables');\n        }\n\n        // For each tables affected, Generate query and parameter getters\n        return tables.map(table =>\n          QueryGenerator.getInsert(table, this.info.keyspace, propertiesInfo, docInfo,ifNotExists));\n      });\n  }\n\n  /**\n   * Gets a function to be used to execute the UPDATE queries with the provided document.\n   * @param {Object} doc\n   * @param {{ifExists, when, ttl, fields}} docInfo\n   * @return {Promise<Function>}\n   */\n  getUpdateExecutor(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getUpdateKey(docKeys, doc, docInfo);\n    const cacheItem = this._cache.update.getOrCreate(cacheKey, () => ({ executor: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    return this.createUpdateQueries(docKeys, doc, docInfo)\n      .then(queries => {\n        if (queries.length === 1) {\n          return this._setSingleExecutor(cacheItem, queries[0]);\n        }\n\n        return this._setBatchExecutor(cacheItem, queries);\n      });\n  }\n\n  /**\n   * Creates an Array containing the query and the params getter function for each table affected by the UPDATE.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {Object} docInfo\n   * @returns {Promise<Array<{query, paramsGetter, isIdempotent}>>}\n   */\n  createUpdateQueries(docKeys, doc, docInfo) {\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, docInfo, doc, this.info);\n    const ifExists = docInfo && docInfo.ifExists;\n    const when = docInfo && docInfo.when\n      ? DocInfoAdapter.getPropertiesInfo(Object.keys(docInfo.when), null, docInfo.when, this.info)\n      : utils.emptyArray;\n\n    if (when.length > 0 && ifExists) {\n      throw new Error('Both when and ifExists conditions can not be applied to the same statement');\n    }\n\n    // Get all the tables affected\n    return this._client.connect()\n      .then(() => ObjectSelector.getForUpdate(this._client, this.info, propertiesInfo, when))\n      .then(tables => {\n\n        if (tables.length > 1 && (when.length > 0 || ifExists)) {\n          throw new Error('Batch with when or ifExists conditions cannot span multiple tables');\n        }\n\n        // For each table affected, Generate query and parameter getters\n        return tables.map(table =>\n          QueryGenerator.getUpdate(table, this.info.keyspace, propertiesInfo, docInfo, when, ifExists));\n      });\n  }\n\n  /**\n   * Gets a function to be used to execute the DELETE queries with the provided document.\n   * @param {Object} doc\n   * @param {{when, ifExists, fields, deleteOnlyColumns}} docInfo\n   * @return {Promise<Function>}\n   */\n  getDeleteExecutor(doc, docInfo) {\n    const docKeys = Object.keys(doc);\n    if (docKeys.length === 0) {\n      return Promise.reject(new Error('Expected object with keys'));\n    }\n\n    const cacheKey = Cache.getRemoveKey(docKeys, doc, docInfo);\n    const cacheItem = this._cache.remove.getOrCreate(cacheKey, () => ({ executor: null }));\n\n    if (cacheItem.executor !== null) {\n      return Promise.resolve(cacheItem.executor);\n    }\n\n    return this.createDeleteQueries(docKeys, doc, docInfo)\n      .then(queries => {\n        if (queries.length === 1) {\n          return this._setSingleExecutor(cacheItem, queries[0]);\n        }\n\n        return this._setBatchExecutor(cacheItem, queries);\n      });\n  }\n\n  /**\n   * Creates an Array containing the query and the params getter function for each table affected by the DELETE.\n   * @param {Array<String>} docKeys\n   * @param {Object} doc\n   * @param {{when, ifExists, fields, deleteOnlyColumns}} docInfo\n   * @returns {Promise<Array<{query, paramsGetter}>>}\n   */\n  createDeleteQueries(docKeys, doc, docInfo) {\n    const propertiesInfo = DocInfoAdapter.getPropertiesInfo(docKeys, docInfo, doc, this.info);\n    const ifExists = docInfo && docInfo.ifExists;\n    const when = docInfo && docInfo.when\n      ? DocInfoAdapter.getPropertiesInfo(Object.keys(docInfo.when), null, docInfo.when, this.info)\n      : utils.emptyArray;\n\n    if (when.length > 0 && ifExists) {\n      throw new Error('Both when and ifExists conditions can not be applied to the same statement');\n    }\n\n    // Get all the tables affected\n    return this._client.connect()\n      .then(() => ObjectSelector.getForDelete(this._client, this.info, propertiesInfo, when))\n      .then(tables => {\n\n        if (tables.length > 1 && (when.length > 0 || ifExists)) {\n          throw new Error('Batch with when or ifExists conditions cannot span multiple tables');\n        }\n\n        // For each tables affected, Generate query and parameter getters\n        return tables.map(table =>\n          QueryGenerator.getDelete(table, this.info.keyspace, propertiesInfo, docInfo, when, ifExists));\n      });\n  }\n\n  getExecutorFromQuery(query, paramsHandler, commonExecutionOptions) {\n    // Use the current instance in the closure\n    // as there is no guarantee of how the returned function will be invoked\n    const self = this;\n    const commonOptions = commonExecutionOptions ? DocInfoAdapter.adaptAllOptions(commonExecutionOptions) : null;\n\n    return (function queryMappedExecutor(doc, executionOptions) {\n      // When the executionOptions were already specified,\n      // use it and skip the ones provided in each invocation\n      const options = commonOptions\n        ? commonOptions\n        : DocInfoAdapter.adaptAllOptions(executionOptions);\n\n      return self._client.execute(query, paramsHandler(doc), options).then(rs => {\n        // Cache the resultAdapter based on the query\n        let resultAdapter = self._cache.customQueries.get(query);\n\n        if (resultAdapter === undefined) {\n          const resultAdapterInfo = ResultMapper.getCustomQueryAdapter(self.info, rs);\n          resultAdapter = resultAdapterInfo.fn;\n          if (resultAdapterInfo.canCache) {\n            // Avoid caching conditional updates results as the amount of columns change\n            // depending on the parameter values.\n            self._cache.customQueries.set(query, resultAdapter);\n\n            if (self._cache.customQueries.size === cacheHighWaterMark) {\n              self._client.log('warning',\n                `Custom queries cache reached ${cacheHighWaterMark} items, this could be caused by ` +\n                `hard-coding parameter values inside the query, which should be avoided`);\n            }\n          }\n        }\n\n        return new Result(rs, self.info, resultAdapter);\n      });\n    });\n  }\n\n  _setSingleExecutor(cacheItem, queryInfo) {\n    // Parameters and this instance are part of the closure\n    const self = this;\n\n    // Set the function to execute the request in the cache\n    cacheItem.executor = function singleExecutor(doc, docInfo, executionOptions) {\n      const options = DocInfoAdapter.adaptOptions(executionOptions, queryInfo.isIdempotent);\n\n      return self._client.execute(queryInfo.query, queryInfo.paramsGetter(doc, docInfo), options)\n        .then(rs => new Result(rs, self.info, ResultMapper.getMutationAdapter(rs)));\n    };\n\n    return cacheItem.executor;\n  }\n\n  _setBatchExecutor(cacheItem, queries) {\n    // Parameters and the following fields are part of the closure\n    const self = this;\n    const isIdempotent = queries.reduce((acc, q) => acc && q.isIdempotent, true);\n\n    // Set the function to execute the batch request in the cache\n    cacheItem.executor = function batchExecutor(doc, docInfo, executionOptions) {\n      // Use the params getter function to obtain the parameters each time\n      const queryAndParams = queries.map(q => ({\n        query: q.query,\n        params: q.paramsGetter(doc, docInfo)\n      }));\n\n      const options = DocInfoAdapter.adaptOptions(executionOptions, isIdempotent);\n\n      // Execute using a Batch\n      return self._client.batch(queryAndParams, options)\n        .then(rs => new Result(rs, self.info, ResultMapper.getMutationAdapter(rs)));\n    };\n\n    return cacheItem.executor;\n  }\n\n  _validateCacheLength(length) {\n    if (length !== cacheHighWaterMark) {\n      return;\n    }\n\n    this._client.log('warning', `ModelMapper cache reached ${cacheHighWaterMark} items, this could be caused by ` +\n      `building the object to map in different ways (with different shapes) each time. Use the same or few object ` +\n      `structures for a model and represent unset values with undefined or types.unset`);\n  }\n}\n\nmodule.exports = MappingHandler;","'use strict';\n\nconst vm = require('vm');\nconst qModule = require('./q');\nconst QueryOperator = qModule.QueryOperator;\nconst QueryAssignment = qModule.QueryAssignment;\nconst types = require('../types');\nconst dataTypes = types.dataTypes;\n\nconst vmFileName = 'gen-param-getter.js';\n\n/**\n * Provides methods to generate a query and parameter handlers.\n * @ignore\n */\nclass QueryGenerator {\n  /**\n   * Gets the SELECT query given the doc.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Array} fieldsInfo\n   * @param {Array} orderByColumns\n   * @param {Number|undefined} limit\n   * @return {string}\n   */\n  static getSelect(tableName, keyspace, propertiesInfo, fieldsInfo, orderByColumns, limit) {\n    let query = 'SELECT ';\n    query += fieldsInfo.length > 0 ? fieldsInfo.map(p => p.columnName).join(', ') : '*';\n    query += ` FROM ${keyspace}.${tableName}`;\n\n    if (propertiesInfo.length > 0) {\n      query += ' WHERE ';\n      query += QueryGenerator._getConditionWithOperators(propertiesInfo);\n    }\n\n    if (orderByColumns.length > 0) {\n      query += ' ORDER BY ';\n      query += orderByColumns.map(order => order[0] + ' ' + order[1]).join(', ');\n    }\n\n    if (typeof limit === 'number') {\n      query += ' LIMIT ?';\n    }\n\n    return query;\n  }\n\n  static selectParamsGetter(propertiesInfo, limit) {\n    let scriptText = '(function getParametersSelect(doc, docInfo) {\\n';\n    scriptText += '  return [';\n\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo);\n\n    if (typeof limit === 'number') {\n      if (propertiesInfo.length > 0) {\n        scriptText += ', ';\n      }\n      scriptText += `docInfo['limit']`;\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText);\n    return script.runInThisContext({ filename: vmFileName});\n  }\n\n  /**\n   * Gets the INSERT query and function to obtain the parameters, given the doc.\n   * @param {TableMetadata} table\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Object} docInfo\n   * @param {Boolean|undefined} ifNotExists\n   * @return {{query: String, paramsGetter: Function, isIdempotent: Boolean}}\n   */\n  static getInsert(table, keyspace, propertiesInfo, docInfo, ifNotExists) {\n    const ttl = docInfo && docInfo.ttl;\n\n    // Not all columns are contained in the table\n    const filteredPropertiesInfo = propertiesInfo\n      .filter(pInfo => table.columnsByName[pInfo.columnName] !== undefined);\n\n    return ({\n      query: QueryGenerator._getInsertQuery(table.name, keyspace, filteredPropertiesInfo, ifNotExists, ttl),\n      paramsGetter: QueryGenerator._insertParamsGetter(filteredPropertiesInfo, docInfo),\n      isIdempotent: !ifNotExists\n    });\n  }\n\n  /**\n   * Gets the query for an insert statement.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Boolean} ifNotExists\n   * @param {Number|undefined} ttl\n   * @return {String}\n   */\n  static _getInsertQuery(tableName, keyspace, propertiesInfo, ifNotExists, ttl) {\n    let query = `INSERT INTO ${keyspace}.${tableName} (`;\n    query += propertiesInfo.map(pInfo => pInfo.columnName).join(', ');\n    query += ') VALUES (';\n    query += propertiesInfo.map(() => '?').join(', ');\n    query += ')';\n\n    if (ifNotExists === true) {\n      query += ' IF NOT EXISTS';\n    }\n\n    if (typeof ttl === 'number') {\n      query += ' USING TTL ?';\n    }\n    return query;\n  }\n\n  static _insertParamsGetter(propertiesInfo, docInfo) {\n    let scriptText = '(function getParametersInsert(doc, docInfo) {\\n';\n    scriptText += '  return [';\n\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo);\n\n    if (docInfo && typeof docInfo.ttl === 'number') {\n      scriptText += `, docInfo['ttl']`;\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText);\n    return script.runInThisContext({ filename: vmFileName});\n  }\n\n  /**\n   * Gets the UPDATE query and function to obtain the parameters, given the doc.\n   * @param {TableMetadata} table\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Object} docInfo\n   * @param {Array} when\n   * @param {Boolean|undefined} ifExists\n   * @return {{query: String, paramsGetter: Function, isIdempotent: Boolean, isCounter}}\n   */\n  static getUpdate(table, keyspace, propertiesInfo, docInfo, when, ifExists) {\n    const ttl = docInfo && docInfo.ttl;\n    const primaryKeys = new Set(table.partitionKeys.concat(table.clusteringKeys).map(c => c.name));\n    let isIdempotent = true;\n    let isCounter = false;\n\n    // Not all columns are contained in the table\n    const filteredPropertiesInfo = propertiesInfo.filter(pInfo => {\n      const column = table.columnsByName[pInfo.columnName];\n      if (column === undefined) {\n        return false;\n      }\n\n      if (column.type.code === dataTypes.list && pInfo.value instanceof QueryAssignment) {\n        // Its not idempotent when list append/prepend\n        isIdempotent = false;\n      } else if (column.type.code === dataTypes.counter) {\n        // Any update on a counter table is not idempotent\n        isIdempotent = false;\n        isCounter = true;\n      }\n\n      return true;\n    });\n\n    if (filteredPropertiesInfo.length <= primaryKeys.size) {\n      throw new Error('UPDATE statement does not contain columns to SET');\n    }\n\n    return {\n      query: QueryGenerator._getUpdateQuery(\n        table.name, keyspace, primaryKeys, filteredPropertiesInfo, when, ifExists, ttl),\n      isIdempotent: isIdempotent && when.length === 0 && !ifExists,\n      paramsGetter: QueryGenerator._updateParamsGetter(primaryKeys, filteredPropertiesInfo, when, ttl),\n      isCounter\n    };\n  }\n\n  /**\n   * Gets the query for an UPDATE statement.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Object} when\n   * @param {Boolean} ifExists\n   * @param {Number|undefined} ttl\n   */\n  static _getUpdateQuery(tableName, keyspace, primaryKeys, propertiesInfo, when, ifExists, ttl) {\n    let query = `UPDATE ${keyspace}.${tableName} SET `;\n\n    query += propertiesInfo\n      .filter(p => !primaryKeys.has(p.columnName))\n      .map(p => {\n        if (p.value instanceof QueryAssignment) {\n          if (p.value.inverted) {\n            // e.g: prepend \"col1 = ? + col1\"\n            return `${p.columnName} = ? ${p.value.sign} ${p.columnName}`;\n          }\n          // e.g: increment \"col1 = col1 + ?\"\n          return `${p.columnName} = ${p.columnName} ${p.value.sign} ?`;\n        }\n\n        return p.columnName + ' = ?';\n      })\n      .join(', ');\n\n    query += ' WHERE ';\n    query += propertiesInfo.filter(p => primaryKeys.has(p.columnName)).map(p => p.columnName + ' = ?').join(' AND ');\n\n    if (ifExists === true) {\n      query += ' IF EXISTS';\n    }\n    else if (when.length > 0) {\n      query += ' IF ' + QueryGenerator._getConditionWithOperators(when);\n    }\n\n    if (typeof ttl === 'number') {\n      query += ' USING TTL ?';\n    }\n\n    return query;\n  }\n\n  /**\n   * Returns a function to obtain the parameter values from a doc for an UPDATE statement.\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @param {Number|undefined} ttl\n   * @returns {Function}\n   */\n  static _updateParamsGetter(primaryKeys, propertiesInfo, when, ttl) {\n    let scriptText = '(function getParametersUpdate(doc, docInfo) {\\n';\n    scriptText += '  return [';\n\n    // Assignment clause\n    scriptText += QueryGenerator._assignmentGetterExpression(propertiesInfo.filter(p => !primaryKeys.has(p.columnName)));\n    scriptText += ', ';\n    // Where clause\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo.filter(p => primaryKeys.has(p.columnName)));\n\n    // Condition clause\n    if (when.length > 0) {\n      scriptText += ', ' + QueryGenerator._valueGetterExpression(when, 'docInfo.when');\n    }\n\n    if (typeof ttl === 'number') {\n      scriptText += `, docInfo['ttl']`;\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText);\n    return script.runInThisContext({ filename: vmFileName});\n  }\n\n  /**\n   * Gets the DELETE query and function to obtain the parameters, given the doc.\n   * @param {TableMetadata} table\n   * @param {String} keyspace\n   * @param {Array} propertiesInfo\n   * @param {Object} docInfo\n   * @param {Array} when\n   * @param {Boolean|undefined} ifExists\n   * @return {{query: String, paramsGetter: Function, isIdempotent}}\n   */\n  static getDelete(table, keyspace, propertiesInfo, docInfo, when, ifExists) {\n    const deleteOnlyColumns = docInfo && docInfo.deleteOnlyColumns;\n    const primaryKeys = new Set(table.partitionKeys.concat(table.clusteringKeys).map(c => c.name));\n\n    const filteredPropertiesInfo = propertiesInfo\n      .filter(pInfo => table.columnsByName[pInfo.columnName] !== undefined);\n\n\n    return ({\n      query: QueryGenerator._getDeleteQuery(\n        table.name, keyspace, primaryKeys, filteredPropertiesInfo, when, ifExists, deleteOnlyColumns),\n      paramsGetter: QueryGenerator._deleteParamsGetter(primaryKeys, filteredPropertiesInfo, when),\n      isIdempotent: when.length === 0 && !ifExists\n    });\n  }\n\n  /**\n   * Gets the query for an UPDATE statement.\n   * @param {String} tableName\n   * @param {String} keyspace\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @param {Boolean} ifExists\n   * @param {Boolean} deleteOnlyColumns\n   * @private\n   * @return {String}\n   */\n  static _getDeleteQuery(tableName, keyspace, primaryKeys, propertiesInfo, when, ifExists, deleteOnlyColumns) {\n    let query = 'DELETE';\n\n    if (deleteOnlyColumns) {\n      const columnsToDelete = propertiesInfo.filter(p => !primaryKeys.has(p.columnName))\n        .map(p => p.columnName)\n        .join(', ');\n\n      if (columnsToDelete !== '') {\n        query += ' ' + columnsToDelete;\n      }\n    }\n\n    query += ` FROM ${keyspace}.${tableName} WHERE `;\n    query += propertiesInfo.filter(p => primaryKeys.has(p.columnName)).map(p => p.columnName + ' = ?').join(' AND ');\n\n    if (ifExists === true) {\n      query += ' IF EXISTS';\n    }\n    else if (when.length > 0) {\n      query += ' IF ' + QueryGenerator._getConditionWithOperators(when);\n    }\n\n    return query;\n  }\n  /**\n   * Returns a function to obtain the parameter values from a doc for an UPDATE statement.\n   * @param {Set} primaryKeys\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @returns {Function}\n   */\n  static _deleteParamsGetter(primaryKeys, propertiesInfo, when) {\n    let scriptText = '(function getParametersDelete(doc, docInfo) {\\n';\n    scriptText += '  return [';\n\n    // Where clause\n    scriptText += QueryGenerator._valueGetterExpression(propertiesInfo.filter(p => primaryKeys.has(p.columnName)));\n\n    // Condition clause\n    if (when.length > 0) {\n      scriptText += ', ' + QueryGenerator._valueGetterExpression(when, 'docInfo.when');\n    }\n\n    // Finish return statement\n    scriptText += '];\\n})';\n\n    const script = new vm.Script(scriptText);\n    return script.runInThisContext({ filename: vmFileName});\n  }\n\n  /**\n   * Gets a string containing the doc properties to get.\n   * @param {Array} propertiesInfo\n   * @param {String} [objectName='doc']\n   * @return {string}\n   * @private\n   */\n  static _valueGetterExpression(propertiesInfo, objectName) {\n    objectName = objectName || 'doc';\n\n    return propertiesInfo\n      .map(p => QueryGenerator._valueGetterSingle(`${objectName}['${p.propertyName}']`, p.value))\n      .join(', ');\n  }\n\n  static _valueGetterSingle(prefix, value) {\n    if (value instanceof QueryOperator) {\n      if (value.hasChildValues) {\n        return `${QueryGenerator._valueGetterSingle(`${prefix}.value[0]`, value.value[0])}` +\n          `, ${QueryGenerator._valueGetterSingle(`${prefix}.value[1]`, value.value[1])}`;\n      }\n      return `${prefix}.value`;\n    }\n\n    return prefix;\n  }\n\n  /**\n   * Gets a string containing the doc properties to SET, considering QueryAssignment instances.\n   * @param {Array} propertiesInfo\n   * @param {String} [prefix='doc']\n   * @return {string}\n   * @private\n   */\n  static _assignmentGetterExpression(propertiesInfo, prefix) {\n    prefix = prefix || 'doc';\n\n    return propertiesInfo\n      .map(p => `${prefix}['${p.propertyName}']${p.value instanceof QueryAssignment ? '.value' : ''}`)\n      .join(', ');\n  }\n\n  static _getConditionWithOperators(propertiesInfo) {\n    return propertiesInfo\n      .map(p => QueryGenerator._getSingleCondition(p.columnName, p.value))\n      .join(' AND ');\n  }\n\n  static _getSingleCondition(columnName, value) {\n    if (value instanceof QueryOperator) {\n      if (value.hasChildValues) {\n        return `${QueryGenerator._getSingleCondition(columnName, value.value[0])}` +\n          ` ${value.key} ${QueryGenerator._getSingleCondition(columnName, value.value[1])}`;\n      }\n      return `${columnName} ${value.key} ?`;\n    }\n    return `${columnName} = ?`;\n  }\n}\n\nmodule.exports = QueryGenerator;","'use strict';\n\n/**\n * Provides utility methods to choose the correct tables and views that should be included in a statement.\n * @ignore\n */\nclass ObjectSelector {\n  /**\n   * Gets the table/view that should be used to execute the SELECT query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Boolean} allPKsDefined\n   * @param {Array} propertiesInfo\n   * @param {Array} fieldsInfo\n   * @param {Array<Array<String>>} orderByColumns\n   * @return {Promise<String>} A promise that resolves to a table names.\n   */\n  static getForSelect(client, info, allPKsDefined, propertiesInfo, fieldsInfo, orderByColumns) {\n    return Promise.all(\n      info.tables.map(t => {\n        if (t.isView) {\n          return client.metadata.getMaterializedView(info.keyspace, t.name);\n        }\n        return client.metadata.getTable(info.keyspace, t.name);\n      }))\n      .then(tables => {\n        for (let i = 0; i < tables.length; i++) {\n          const table = tables[i];\n          if (table === null) {\n            throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n          }\n\n          const allPartitionKeysAreIncluded = table.partitionKeys\n            .reduce((acc, c) => acc && contains(propertiesInfo, p => p.columnName === c.name), true);\n\n          if (!allPartitionKeysAreIncluded) {\n            // Not all the partition keys are covered\n            continue;\n          }\n\n          if (allPKsDefined) {\n            const allClusteringKeysAreIncluded = table.clusteringKeys\n              .reduce((acc, c) => acc && contains(propertiesInfo, p => p.columnName === c.name), true);\n            if (!allClusteringKeysAreIncluded) {\n              // All clustering keys should be included as allPKsDefined flag is set\n              continue;\n            }\n          }\n\n          if (propertiesInfo.length > table.partitionKeys.length) {\n            // Check that the Where clause is composed by partition and clustering keys\n            const allPropertiesArePrimaryKeys = propertiesInfo\n              .reduce(\n                (acc, p) => acc && (\n                  contains(table.partitionKeys, c => c.name === p.columnName) ||\n                  contains(table.clusteringKeys, c => c.name === p.columnName)\n                ),\n                true);\n\n            if (!allPropertiesArePrimaryKeys) {\n              continue;\n            }\n          }\n\n          // All fields must be contained\n          const containsAllFields = fieldsInfo\n            .reduce((acc, p) => acc && table.columnsByName[p.columnName] !== undefined, true);\n\n          if (!containsAllFields) {\n            continue;\n          }\n\n          // ORDER BY fields must be part of the clustering keys\n          // On the mapper we only validate that are part of the table\n          const containsAllOrderByColumns = orderByColumns\n            .reduce((acc, order) => acc && table.columnsByName[order[0]] !== undefined, true);\n\n          if (!containsAllOrderByColumns) {\n            continue;\n          }\n\n          return table.name;\n        }\n\n        let message = `No table matches the filter (${allPKsDefined ? 'all PKs have to be specified' : 'PKs'}): [${\n          propertiesInfo.map(p => p.columnName)}]`;\n\n        if (fieldsInfo.length > 0) {\n          message += `; fields: [${fieldsInfo.map(p => p.columnName)}]`;\n        }\n        if (orderByColumns.length > 0) {\n          message += `; orderBy: [${orderByColumns.map(item => item[0])}]`;\n        }\n\n        throw new Error(message);\n      });\n  }\n\n  /** Returns the name of the first table */\n  static getForSelectAll(info) {\n    return info.tables[0].name;\n  }\n\n  /**\n   * Gets the tables that should be used to execute the INSERT query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Array} propertiesInfo\n   * @return {Promise<Array<TableMetadata>>} A promise that resolves to an Array of tables.\n   */\n  static getForInsert(client, info, propertiesInfo) {\n    return Promise.all(info.tables.filter(t => !t.isView).map(t => client.metadata.getTable(info.keyspace, t.name)))\n      .then(tables => {\n        const filteredTables = tables\n          .filter((table, i) => {\n            if (table === null) {\n              throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n            }\n\n            // All partition and clustering keys from the table should be included in the document\n            const keyNames = table.partitionKeys.concat(table.clusteringKeys).map(k => k.name);\n            const columns = propertiesInfo.map(m => m.columnName);\n\n            for (let i = 0; i < keyNames.length; i++) {\n              if (columns.indexOf(keyNames[i]) === -1) {\n                return false;\n              }\n            }\n\n            return true;\n          });\n\n        if (filteredTables.length === 0) {\n          throw new Error(`No table matches (all PKs have to be specified) fields: [${\n            propertiesInfo.map(p => p.columnName)}]`);\n        }\n\n        return filteredTables;\n      });\n  }\n\n  /**\n   * Gets the tables that should be used to execute the UPDATE query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @return {Promise<Array<TableMetadata>>} A promise that resolves to an Array of tables.\n   */\n  static getForUpdate(client, info, propertiesInfo, when) {\n    return Promise.all(info.tables.filter(t => !t.isView).map(t => client.metadata.getTable(info.keyspace, t.name)))\n      .then(tables => {\n        const filteredTables = tables\n          .filter((table, i) => {\n            if (table === null) {\n              throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n            }\n\n            // All partition and clustering keys from the table should be included in the document\n            const keyNames = table.partitionKeys.concat(table.clusteringKeys).map(k => k.name);\n            const columns = new Set(propertiesInfo.map(p => p.columnName));\n            const allPrimaryKeysAreContained = keyNames.reduce((acc, key) => acc && columns.has(key), true);\n\n            if (!allPrimaryKeysAreContained) {\n              return false;\n            }\n\n            const applicableColumns = propertiesInfo\n              .reduce((acc, p) => acc + (table.columnsByName[p.columnName] !== undefined ? 1 : 0), 0);\n\n            if (applicableColumns <= keyNames.length) {\n              // No SET columns are defined\n              return false;\n            }\n\n            // \"when\" conditions should be contained in the table\n            return when.reduce((acc, p) => acc && table.columnsByName[p.columnName] !== undefined, true);\n          });\n\n        if (filteredTables.length === 0) {\n          let message = `No table matches (all PKs and columns to set have to be specified) fields: [${\n            propertiesInfo.map(p => p.columnName)}]`;\n\n          if (when.length > 0) {\n            message += `; condition: [${when.map(p => p.columnName)}]`;\n          }\n\n          throw new Error(message);\n        }\n\n        return filteredTables;\n      });\n  }\n\n  /**\n   * Gets the tables that should be used to execute the DELETE query.\n   * @param {Client} client\n   * @param {ModelMappingInfo} info\n   * @param {Array} propertiesInfo\n   * @param {Array} when\n   * @return {Promise<Array<TableMetadata>>} A promise that resolves to an Array of tables.\n   */\n  static getForDelete(client, info, propertiesInfo, when) {\n    return Promise.all(info.tables.filter(t => !t.isView).map(t => client.metadata.getTable(info.keyspace, t.name)))\n      .then(tables => {\n        const filteredTables = tables\n          .filter((table, i) => {\n            if (table === null) {\n              throw new Error(`Table \"${info.tables[i].name}\" could not be retrieved`);\n            }\n\n            // All partition and clustering keys from the table should be included in the document\n            const keyNames = table.partitionKeys.concat(table.clusteringKeys).map(k => k.name);\n            const columns = propertiesInfo.map(p => p.columnName);\n\n            for (let i = 0; i < keyNames.length; i++) {\n              if (columns.indexOf(keyNames[i]) === -1) {\n                return false;\n              }\n            }\n\n            // \"when\" conditions should be contained in the table\n            return when.reduce((acc, p) => acc && table.columnsByName[p.columnName] !== undefined, true);\n          });\n\n        if (filteredTables.length === 0) {\n          let message = `No table matches (all PKs have to be specified) fields: [${\n            propertiesInfo.map(p => p.columnName)}]`;\n\n          if (when.length > 0) {\n            message += `; condition: [${when.map(p => p.columnName)}]`;\n          }\n\n          throw new Error(message);\n        }\n\n        return filteredTables;\n      });\n  }\n}\n\nfunction contains(arr, fn) {\n  return arr.filter(fn).length > 0;\n}\n\nmodule.exports = ObjectSelector;","'use strict';\n\nconst tableMappingsModule = require('./table-mappings');\nconst TableMappings = tableMappingsModule.TableMappings;\nconst DefaultTableMappings = tableMappingsModule.DefaultTableMappings;\n\n/**\n * Represents the parsed user information of the table mappings of a model.\n * @ignore\n */\nclass ModelMappingInfo {\n  /**\n   * @param {String} keyspace\n   * @param {Array<{name, isView}>} tables\n   * @param {TableMappings} mappings\n   * @param {Map<String,String>} columns\n   */\n  constructor(keyspace, tables, mappings, columns) {\n    this.keyspace = keyspace;\n    this.tables = tables;\n    this._mappings = mappings;\n    this._columns = columns;\n    this._documentProperties = new Map();\n    columns.forEach((propName, columnName) => this._documentProperties.set(propName, columnName));\n  }\n\n  getColumnName(propName) {\n    const columnName = this._documentProperties.get(propName);\n    if (columnName !== undefined) {\n      // There is an specific name transformation between the column name and the property name\n      return columnName;\n    }\n    // Rely on the TableMappings (i.e. maybe there is a convention defined for this property)\n    return this._mappings.getColumnName(propName);\n  }\n\n  getPropertyName(columnName) {\n    const propName = this._columns.get(columnName);\n    if (propName !== undefined) {\n      // There is an specific name transformation between the column name and the property name\n      return propName;\n    }\n    // Rely on the TableMappings (i.e. maybe there is a convention defined for this column)\n    return this._mappings.getPropertyName(columnName);\n  }\n\n  newInstance() {\n    return this._mappings.newObjectInstance();\n  }\n\n  /**\n   * Parses the user options into a map of model names and ModelMappingInfo.\n   * @param {MappingOptions} options\n   * @param {String} currentKeyspace\n   * @returns {Map<String, ModelMappingInfo>}\n   */\n  static parse(options, currentKeyspace) {\n    const result = new Map();\n    if (!options || !options.models) {\n      return result;\n    }\n\n    Object.keys(options.models).forEach(modelName => {\n      const modelOptions = options.models[modelName];\n      result.set(modelName, ModelMappingInfo._create(modelName, currentKeyspace, modelOptions));\n    });\n\n    return result;\n  }\n\n  static _create(modelName, currentKeyspace, modelOptions) {\n    if (!currentKeyspace && (!modelOptions || !modelOptions.keyspace)) {\n      throw new Error(\n        'You should specify the keyspace of the model in the MappingOptions when the Client is not using a keyspace');\n    }\n\n    if (!modelOptions) {\n      return ModelMappingInfo.createDefault(modelName, currentKeyspace);\n    }\n\n    let tables;\n\n    if (modelOptions.tables && modelOptions.tables.length > 0) {\n      tables = modelOptions.tables.map(item => {\n        const table = { name: null, isView: false };\n        if (typeof item === 'string') {\n          table.name = item;\n        } else if (item) {\n          table.name = item.name;\n          table.isView = !!item.isView;\n        }\n\n        if (!table.name) {\n          throw new Error(`Table name not specified for model '${modelName}'`);\n        }\n\n        return table;\n      });\n    } else {\n      tables = [ { name: modelName, isView: false }];\n    }\n\n    if (modelOptions.mappings && !(modelOptions.mappings instanceof TableMappings)) {\n      throw new Error('mappings should be an instance of TableMappings');\n    }\n\n    const columns = new Map();\n    if (modelOptions.columns !== null && typeof modelOptions.columns === 'object') {\n      Object.keys(modelOptions.columns).forEach(columnName => {\n        columns.set(columnName, modelOptions.columns[columnName]);\n      });\n    }\n\n    return new ModelMappingInfo(\n      modelOptions.keyspace || currentKeyspace,\n      tables,\n      modelOptions.mappings || new DefaultTableMappings(),\n      columns\n    );\n  }\n\n  static createDefault(modelName, currentKeyspace) {\n    return new ModelMappingInfo(\n      currentKeyspace,\n      [ { name: modelName, isView: false }],\n      new DefaultTableMappings(),\n      new Map());\n  }\n}\n\nmodule.exports = ModelMappingInfo;","'use strict';\n\nconst Stream = require('stream').Stream;\nconst utils = require('../utils');\n\n/**\n * Utilities for concurrent query execution with the DataStax Node.js Driver.\n * @module concurrent\n */\n\n/**\n * Executes multiple queries concurrently at the defined concurrency level.\n * @static\n * @param {Client} client The {@link Client} instance.\n * @param {String|Array<{query, params}>} query The query to execute per each parameter item.\n * @param {Array<Array>|Stream|Object} parameters An {@link Array} or a readable {@link Stream} composed of {@link Array}\n * items representing each individual set of parameters. Per each item in the {@link Array} or {@link Stream}, an\n * execution is going to be made.\n * @param {Object} [options] The execution options.\n * @param {String} [options.executionProfile] The execution profile to be used.\n * @param {Number} [options.concurrencyLevel=100] The concurrency level to determine the maximum amount of in-flight\n * operations at any given time\n * @param {Boolean} [options.raiseOnFirstError=true] Determines whether execution should stop after the first failed\n * execution and the corresponding exception will be raised.\n * @param {Boolean} [options.collectResults=false] Determines whether each individual\n * [ResultSet]{@link module:types~ResultSet} instance should be collected in the grouped result.\n * @param {Number} [options.maxErrors=100] The maximum amount of errors to be collected before ignoring the rest of\n * the error results.\n * @returns {Promise<ResultSetGroup>} A <code>Promise</code> of {@link ResultSetGroup} that is resolved when all the\n * executions completed and it's rejected when <code>raiseOnFirstError</code> is <code>true</code> and there is one\n * or more failures.\n * @example <caption>Using a fixed query and an Array of Arrays as parameters</caption>\n * const query = 'INSERT INTO table1 (id, value) VALUES (?, ?)';\n * const parameters = [[1, 'a'], [2, 'b'], [3, 'c'], ]; // ...\n * const result = await executeConcurrent(client, query, parameters);\n * @example <caption>Using a fixed query and a readable stream</caption>\n * const stream = csvStream.pipe(transformLineToArrayStream);\n * const result = await executeConcurrent(client, query, stream);\n * @example <caption>Using a different queries</caption>\n * const queryAndParameters = [\n *   { query: 'INSERT INTO videos (id, name, user_id) VALUES (?, ?, ?)',\n *     params: [ id, name, userId ] },\n *   { query: 'INSERT INTO user_videos (user_id, id, name) VALUES (?, ?, ?)',\n *     params: [ userId, id, name ] },\n *   { query: 'INSERT INTO latest_videos (id, name, user_id) VALUES (?, ?, ?)',\n *     params: [ id, name, userId ] },\n * ];\n *\n * const result = await executeConcurrent(client, queryAndParameters);\n */\nfunction executeConcurrent(client, query, parameters, options) {\n  if (!client) {\n    throw new TypeError('Client instance is not defined');\n  }\n\n  if (typeof query === 'string') {\n    if (Array.isArray(parameters)) {\n      return new ArrayBasedExecutor(client, query, parameters, options).execute();\n    }\n\n    if (parameters instanceof Stream) {\n      return new StreamBasedExecutor(client, query, parameters, options).execute();\n    }\n\n    throw new TypeError('parameters should be an Array or a Stream instance');\n  }\n\n  if (Array.isArray(query)) {\n    options = parameters;\n    return new ArrayBasedExecutor(client, null, query, options).execute();\n  }\n\n  throw new TypeError('A string query or query and parameters array should be provided');\n}\n\n/**\n * Wraps the functionality to execute given an Array.\n * @ignore\n */\nclass ArrayBasedExecutor {\n\n  /**\n   * @param {Client} client\n   * @param {String} query\n   * @param {Array<Array>|Array<{query, params}>} parameters\n   * @param {Object} [options] The execution options.\n   * @private\n   */\n  constructor(client, query, parameters, options) {\n    this._client = client;\n    this._query = query;\n    this._parameters = parameters;\n    options = options || utils.emptyObject;\n    this._raiseOnFirstError = options.raiseOnFirstError !== false;\n    this._concurrencyLevel = Math.min(options.concurrencyLevel || 100, this._parameters.length);\n    this._queryOptions = { prepare: true, executionProfile: options.executionProfile };\n    this._result = new ResultSetGroup(options);\n    this._stop = false;\n  }\n\n  execute() {\n    const promises = new Array(this._concurrencyLevel);\n\n    for (let i = 0; i < this._concurrencyLevel; i++) {\n      promises[i] = this._executeOneAtATime(i, 0);\n    }\n\n    return Promise.all(promises).then(() => this._result);\n  }\n\n  _executeOneAtATime(initialIndex, iteration) {\n    const index = initialIndex + this._concurrencyLevel * iteration;\n\n    if (index >= this._parameters.length || this._stop) {\n      return Promise.resolve();\n    }\n\n    const item = this._parameters[index];\n    let query;\n    let params;\n\n    if (this._query === null) {\n      query = item.query;\n      params = item.params;\n    } else {\n      query = this._query;\n      params = item;\n    }\n\n    return this._client.execute(query, params, this._queryOptions)\n      .then(rs => this._result.setResultItem(index, rs))\n      .catch(err => this._setError(index, err))\n      .then(() => this._executeOneAtATime(initialIndex, iteration + 1));\n  }\n\n  _setError(index, err) {\n    this._result.setError(index, err);\n\n    if (this._raiseOnFirstError) {\n      this._stop = true;\n      throw err;\n    }\n  }\n}\n\n/**\n * Wraps the functionality to execute given a Stream.\n * @ignore\n */\nclass StreamBasedExecutor {\n\n  /**\n   * @param {Client} client\n   * @param {String} query\n   * @param {Stream} stream\n   * @param {Object} [options] The execution options.\n   * @private\n   */\n  constructor(client, query, stream, options) {\n    this._client = client;\n    this._query = query;\n    this._stream = stream;\n    options = options || utils.emptyObject;\n    this._raiseOnFirstError = options.raiseOnFirstError !== false;\n    this._concurrencyLevel = options.concurrencyLevel || 100;\n    this._queryOptions = { prepare: true, executionProfile: options.executionProfile };\n    this._inFlight = 0;\n    this._index = 0;\n    this._result = new ResultSetGroup(options);\n    this._resolveCallback = null;\n    this._rejectCallback = null;\n    this._readEnded = false;\n  }\n\n  execute() {\n    return new Promise((resolve, reject) => {\n      this._resolveCallback = resolve;\n      this._rejectCallback = reject;\n\n      this._stream\n        .on('data', params => this._executeOne(params))\n        .on('error', err => this._setReadEnded(err))\n        .on('end', () => this._setReadEnded());\n    });\n  }\n\n  _executeOne(params) {\n    if (!Array.isArray(params)) {\n      return this._setReadEnded(new TypeError('Stream should be in objectMode and should emit Array instances'));\n    }\n\n    if (this._readEnded) {\n      // Read ended abruptly because of incorrect format or error event being emitted.\n      // We shouldn't consider additional items.\n      return;\n    }\n\n    const index = this._index++;\n    this._inFlight++;\n\n    this._client.execute(this._query, params, this._queryOptions)\n      .then(rs => {\n        this._result.setResultItem(index, rs);\n        this._inFlight--;\n      })\n      .catch(err => {\n        this._inFlight--;\n        this._setError(index, err);\n      })\n      .then(() => {\n        if (this._stream.isPaused()) {\n          this._stream.resume();\n        }\n\n        if (this._readEnded && this._inFlight === 0) {\n          // When read ended and there are no more in-flight requests\n          // We yield the result to the user.\n          // It could have ended prematurely when there is a read error\n          // or there was an execution error and raiseOnFirstError is true\n          // In that case, calling the resolve callback has no effect\n          this._resolveCallback(this._result);\n        }\n      });\n\n    if (this._inFlight >= this._concurrencyLevel) {\n      this._stream.pause();\n    }\n  }\n\n  /**\n   * Marks the stream read process as ended.\n   * @param {Error} [err] The stream read error.\n   * @private\n   */\n  _setReadEnded(err) {\n    if (!this._readEnded) {\n      this._readEnded = true;\n\n      if (err) {\n        // There was an error while reading from the input stream.\n        // This should be surfaced as a failure\n        this._rejectCallback(err);\n      } else if (this._inFlight === 0) {\n        // Ended signaled and there are no more pending messages.\n        this._resolveCallback(this._result);\n      }\n    }\n  }\n\n  _setError(index, err) {\n    this._result.setError(index, err);\n\n    if (this._raiseOnFirstError) {\n      this._readEnded = true;\n      this._rejectCallback(err);\n    }\n  }\n}\n\n/**\n * Represents results from different related executions.\n */\nclass ResultSetGroup {\n\n  /**\n   * Creates a new instance of {@link ResultSetGroup}.\n   * @ignore\n   */\n  constructor(options) {\n    this._collectResults = options.collectResults;\n    this._maxErrors = options.maxErrors || 100;\n    this.totalExecuted = 0;\n    this.errors = [];\n\n    if (this._collectResults) {\n      /**\n       * Gets an {@link Array} containing the [ResultSet]{@link module:types~ResultSet} instances from each execution.\n       * <p>\n       *   Note that when <code>collectResults</code> is set to <code>false</code>, accessing this property will\n       *   throw an error.\n       * </p>\n       * @type {Array}\n       */\n      this.resultItems = [];\n    } else {\n      Object.defineProperty(this, 'resultItems', { enumerable: false, get: () => {\n        throw new Error('Property resultItems can not be accessed when collectResults is set to false');\n      }});\n    }\n  }\n\n  /** @ignore */\n  setResultItem(index, rs) {\n    this.totalExecuted++;\n\n    if (this._collectResults) {\n      this.resultItems[index] = rs;\n    }\n  }\n\n  /**\n   * Internal method to set the error of an execution.\n   * @ignore\n   */\n  setError(index, err) {\n    this.totalExecuted++;\n\n    if (this.errors.length < this._maxErrors) {\n      this.errors.push(err);\n    }\n\n    if (this._collectResults) {\n      this.resultItems[index] = err;\n    }\n  }\n}\n\nexports.executeConcurrent = executeConcurrent;\nexports.ResultSetGroup = ResultSetGroup;","/**\n * Prometheus client\n * @module Prometheus client\n */\n\n'use strict';\n\nexports.register = require('./lib/registry').globalRegistry;\nexports.Registry = require('./lib/registry');\nexports.contentType = require('./lib/registry').globalRegistry.contentType;\nexports.validateMetricName = require('./lib/validation').validateMetricName;\n\nexports.Counter = require('./lib/counter');\nexports.Gauge = require('./lib/gauge');\nexports.Histogram = require('./lib/histogram');\nexports.Summary = require('./lib/summary');\nexports.Pushgateway = require('./lib/pushgateway');\n\nexports.linearBuckets = require('./lib/bucketGenerators').linearBuckets;\nexports.exponentialBuckets = require('./lib/bucketGenerators').exponentialBuckets;\n\nexports.collectDefaultMetrics = require('./lib/defaultMetrics');\n\nexports.aggregators = require('./lib/metricAggregators').aggregators;\nexports.AggregatorRegistry = require('./lib/cluster');\n","/**\n * Histogram\n */\n'use strict';\n\nconst util = require('util');\nconst globalRegistry = require('./registry').globalRegistry;\nconst type = 'histogram';\nconst {\n\tgetPropertiesFromObj,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tprintDeprecationObjectConstructor,\n\tremoveLabels\n} = require('./util');\nconst {\n\tvalidateMetricName,\n\tvalidateLabel,\n\tvalidateLabelName\n} = require('./validation');\n\nclass Histogram {\n\t/**\n\t * Histogram\n\t * @param {string} name - Name of the metric\n\t * @param {string} help - Help for the metric\n\t * @param {object|Array.<string>} labelsOrConf - Either array of label names or config object as a key-value object\n\t * @param {object} conf - Configuration object\n\t */\n\tconstructor(name, help, labelsOrConf, conf) {\n\t\tlet config;\n\n\t\tif (isObject(name)) {\n\t\t\tconfig = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tbuckets: [0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10],\n\t\t\t\t\tlabelNames: []\n\t\t\t\t},\n\t\t\t\tname\n\t\t\t);\n\n\t\t\tif (!config.registers) {\n\t\t\t\tconfig.registers = [globalRegistry];\n\t\t\t}\n\t\t} else {\n\t\t\tlet obj;\n\t\t\tlet labels = [];\n\n\t\t\tif (Array.isArray(labelsOrConf)) {\n\t\t\t\tobj = conf || {};\n\t\t\t\tlabels = labelsOrConf;\n\t\t\t} else {\n\t\t\t\tobj = labelsOrConf || {};\n\t\t\t}\n\n\t\t\tprintDeprecationObjectConstructor();\n\n\t\t\tconfig = {\n\t\t\t\tname,\n\t\t\t\tlabelNames: labels,\n\t\t\t\thelp,\n\t\t\t\tbuckets: configureUpperbounds(obj.buckets),\n\t\t\t\tregisters: [globalRegistry]\n\t\t\t};\n\t\t}\n\t\tvalidateInput(config.name, config.help, config.labelNames);\n\n\t\tthis.name = config.name;\n\t\tthis.help = config.help;\n\t\tthis.aggregator = config.aggregator || 'sum';\n\n\t\tthis.upperBounds = config.buckets;\n\t\tthis.bucketValues = this.upperBounds.reduce((acc, upperBound) => {\n\t\t\tacc[upperBound] = 0;\n\t\t\treturn acc;\n\t\t}, {});\n\n\t\tObject.freeze(this.bucketValues);\n\t\tObject.freeze(this.upperBounds);\n\t\tthis.sum = 0;\n\t\tthis.count = 0;\n\n\t\tthis.hashMap = {};\n\t\tthis.labelNames = config.labelNames || [];\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: createBaseValues(\n\t\t\t\t\t{},\n\t\t\t\t\tObject.assign({}, this.bucketValues)\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tconfig.registers.forEach(registryInstance =>\n\t\t\tregistryInstance.registerMetric(this)\n\t\t);\n\t}\n\n\t/**\n\t * Observe a value in histogram\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe in the histogram\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tget() {\n\t\tconst data = getPropertiesFromObj(this.hashMap);\n\t\tconst values = data\n\t\t\t.map(extractBucketValuesForExport(this))\n\t\t\t.reduce(addSumAndCountForExport(this), []);\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator\n\t\t};\n\t}\n\n\treset() {\n\t\tthis.sum = 0;\n\t\tthis.count = 0;\n\t\tthis.hashMap = {};\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = histogram.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t *\tend(); //Observe the duration of expensiveXHRRequest\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels() {\n\t\tconst labels = getLabels(this.labelNames, arguments);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels)\n\t\t};\n\t}\n\n\tremove() {\n\t\tconst labels = getLabels(this.labelNames, arguments);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tthis.observe(\n\t\t\t\tObject.assign({}, startLabels, endLabels),\n\t\t\t\tdelta[0] + delta[1] / 1e9\n\t\t\t);\n\t\t};\n\t};\n}\nfunction validateInput(name, help, labels) {\n\tif (!help) {\n\t\tthrow new Error('Missing mandatory help parameter');\n\t}\n\tif (!name) {\n\t\tthrow new Error('Missing mandatory name parameter');\n\t}\n\n\tif (!validateMetricName(name)) {\n\t\tthrow new Error('Invalid metric name');\n\t}\n\n\tif (!validateLabelName(labels)) {\n\t\tthrow new Error('Invalid label name');\n\t}\n\n\tlabels.forEach(label => {\n\t\tif (label === 'le') {\n\t\t\tthrow new Error('le is a reserved label keyword');\n\t\t}\n\t});\n}\n\nfunction configureUpperbounds(configuredBuckets) {\n\tconst defaultBuckets = [\n\t\t0.005,\n\t\t0.01,\n\t\t0.025,\n\t\t0.05,\n\t\t0.1,\n\t\t0.25,\n\t\t0.5,\n\t\t1,\n\t\t2.5,\n\t\t5,\n\t\t10\n\t];\n\treturn [].concat(configuredBuckets || defaultBuckets).sort(sortAscending);\n}\n\nfunction sortAscending(x, y) {\n\treturn x - y;\n}\n\nfunction setValuePair(labels, value, metricName) {\n\treturn {\n\t\tlabels,\n\t\tvalue,\n\t\tmetricName\n\t};\n}\n\nfunction findBound(upperBounds, value) {\n\tfor (let i = 0; i < upperBounds.length; i++) {\n\t\tconst bound = upperBounds[i];\n\t\tif (value <= bound) {\n\t\t\treturn bound;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, labelValuePair.labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels);\n\t\tlet valueFromMap = this.hashMap[hash];\n\t\tif (!valueFromMap) {\n\t\t\tvalueFromMap = createBaseValues(\n\t\t\t\tlabelValuePair.labels,\n\t\t\t\tObject.assign({}, this.bucketValues)\n\t\t\t);\n\t\t}\n\n\t\tconst b = findBound(this.upperBounds, labelValuePair.value);\n\n\t\tvalueFromMap.sum += labelValuePair.value;\n\t\tvalueFromMap.count += 1;\n\n\t\tif (valueFromMap.bucketValues.hasOwnProperty(b)) {\n\t\t\tvalueFromMap.bucketValues[b] += 1;\n\t\t}\n\n\t\tthis.hashMap[hash] = valueFromMap;\n\t};\n}\n\nfunction createBaseValues(labels, bucketValues) {\n\treturn {\n\t\tlabels,\n\t\tbucketValues,\n\t\tsum: 0,\n\t\tcount: 0\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (!isObject(labels)) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {}\n\t\t};\n\t}\n\treturn {\n\t\tlabels,\n\t\tvalue\n\t};\n}\n\nfunction extractBucketValuesForExport(histogram) {\n\treturn bucketData => {\n\t\tconst buckets = [];\n\t\tconst bucketLabelNames = Object.keys(bucketData.labels);\n\t\tlet acc = 0;\n\t\tfor (const upperBound of histogram.upperBounds) {\n\t\t\tacc += bucketData.bucketValues[upperBound];\n\t\t\tconst lbls = { le: upperBound };\n\t\t\tfor (const labelName of bucketLabelNames) {\n\t\t\t\tlbls[labelName] = bucketData.labels[labelName];\n\t\t\t}\n\t\t\tbuckets.push(setValuePair(lbls, acc, `${histogram.name}_bucket`));\n\t\t}\n\t\treturn { buckets, data: bucketData };\n\t};\n}\n\nfunction addSumAndCountForExport(histogram) {\n\treturn (acc, d) => {\n\t\tacc.push(...d.buckets);\n\n\t\tconst infLabel = { le: '+Inf' };\n\t\tfor (const label of Object.keys(d.data.labels)) {\n\t\t\tinfLabel[label] = d.data.labels[label];\n\t\t}\n\t\tacc.push(\n\t\t\tsetValuePair(infLabel, d.data.count, `${histogram.name}_bucket`),\n\t\t\tsetValuePair(d.data.labels, d.data.sum, `${histogram.name}_sum`),\n\t\t\tsetValuePair(d.data.labels, d.data.count, `${histogram.name}_count`)\n\t\t);\n\t\treturn acc;\n\t};\n}\n\nmodule.exports = Histogram;\n","/**\n * Summary\n */\n'use strict';\n\nconst util = require('util');\nconst { globalRegistry } = require('./registry');\nconst type = 'summary';\nconst {\n\tgetPropertiesFromObj,\n\tgetLabels,\n\thashObject,\n\tisObject,\n\tprintDeprecationObjectConstructor,\n\tremoveLabels\n} = require('./util');\nconst {\n\tvalidateLabel,\n\tvalidateMetricName,\n\tvalidateLabelName\n} = require('./validation');\nconst timeWindowQuantiles = require('./timeWindowQuantiles');\n\nconst DEFAULT_COMPRESS_COUNT = 1000; // every 1000 measurements\n\nclass Summary {\n\t/**\n\t * Summary\n\t * @param {string} name - Name of the metric\n\t * @param {string} help - Help for the metric\n\t * @param {object|Array.<string>} labelsOrConf - Either array of label names or config object as a key-value object\n\t * @param {object} conf - Configuration object\n\t */\n\tconstructor(name, help, labelsOrConf, conf) {\n\t\tlet config;\n\t\tif (isObject(name)) {\n\t\t\tconfig = Object.assign(\n\t\t\t\t{\n\t\t\t\t\tpercentiles: [0.01, 0.05, 0.5, 0.9, 0.95, 0.99, 0.999],\n\t\t\t\t\tlabelNames: []\n\t\t\t\t},\n\t\t\t\tname\n\t\t\t);\n\n\t\t\tif (!config.registers) {\n\t\t\t\tconfig.registers = [globalRegistry];\n\t\t\t}\n\t\t} else {\n\t\t\tlet obj;\n\t\t\tlet labels = [];\n\n\t\t\tif (Array.isArray(labelsOrConf)) {\n\t\t\t\tobj = conf || {};\n\t\t\t\tlabels = labelsOrConf;\n\t\t\t} else {\n\t\t\t\tobj = labelsOrConf || {};\n\t\t\t}\n\n\t\t\tprintDeprecationObjectConstructor();\n\n\t\t\tconfig = {\n\t\t\t\tname,\n\t\t\t\thelp,\n\t\t\t\tlabelNames: labels,\n\t\t\t\tpercentiles: configurePercentiles(obj.percentiles),\n\t\t\t\tregisters: [globalRegistry],\n\t\t\t\tmaxAgeSeconds: obj.maxAgeSeconds,\n\t\t\t\tageBuckets: obj.ageBuckets\n\t\t\t};\n\t\t}\n\n\t\tvalidateInput(config.name, config.help, config.labelNames);\n\n\t\tthis.maxAgeSeconds = config.maxAgeSeconds;\n\t\tthis.ageBuckets = config.ageBuckets;\n\n\t\tthis.name = config.name;\n\t\tthis.help = config.help;\n\t\tthis.aggregator = config.aggregator || 'sum';\n\n\t\tthis.percentiles = config.percentiles;\n\t\tthis.hashMap = {};\n\t\tthis.labelNames = config.labelNames || [];\n\n\t\tthis.compressCount = config.compressCount || DEFAULT_COMPRESS_COUNT;\n\n\t\tif (this.labelNames.length === 0) {\n\t\t\tthis.hashMap = {\n\t\t\t\t[hashObject({})]: {\n\t\t\t\t\tlabels: {},\n\t\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\t\tcount: 0,\n\t\t\t\t\tsum: 0\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconfig.registers.forEach(registryInstance =>\n\t\t\tregistryInstance.registerMetric(this)\n\t\t);\n\t}\n\n\t/**\n\t * Observe a value\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @param {Number} value - Value to observe\n\t * @returns {void}\n\t */\n\tobserve(labels, value) {\n\t\tobserve.call(this, labels === 0 ? 0 : labels || {})(value);\n\t}\n\n\tget() {\n\t\tconst data = getPropertiesFromObj(this.hashMap);\n\t\tconst values = [];\n\t\tdata.forEach(s => {\n\t\t\textractSummariesForExport(s, this.percentiles).forEach(v => {\n\t\t\t\tvalues.push(v);\n\t\t\t});\n\t\t\tvalues.push(getSumForExport(s, this));\n\t\t\tvalues.push(getCountForExport(s, this));\n\t\t});\n\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\thelp: this.help,\n\t\t\ttype,\n\t\t\tvalues,\n\t\t\taggregator: this.aggregator\n\t\t};\n\t}\n\n\treset() {\n\t\tconst data = getPropertiesFromObj(this.hashMap);\n\t\tdata.forEach(s => {\n\t\t\ts.td.reset();\n\t\t\ts.count = 0;\n\t\t\ts.sum = 0;\n\t\t});\n\t}\n\n\t/**\n\t * Start a timer that could be used to logging durations\n\t * @param {object} labels - Object with labels where key is the label key and value is label value. Can only be one level deep\n\t * @returns {function} - Function to invoke when you want to stop the timer and observe the duration in seconds\n\t * @example\n\t * var end = summary.startTimer();\n\t * makeExpensiveXHRRequest(function(err, res) {\n\t *\tend(); //Observe the duration of expensiveXHRRequest\n\t * });\n\t */\n\tstartTimer(labels) {\n\t\treturn startTimer.call(this, labels)();\n\t}\n\n\tlabels() {\n\t\tconst labels = getLabels(this.labelNames, arguments);\n\t\treturn {\n\t\t\tobserve: observe.call(this, labels),\n\t\t\tstartTimer: startTimer.call(this, labels)\n\t\t};\n\t}\n\n\tremove() {\n\t\tconst labels = getLabels(this.labelNames, arguments);\n\t\tremoveLabels.call(this, this.hashMap, labels);\n\t}\n}\n\nfunction extractSummariesForExport(summaryOfLabels, percentiles) {\n\tsummaryOfLabels.td.compress();\n\n\treturn percentiles.map(percentile => {\n\t\tconst percentileValue = summaryOfLabels.td.percentile(percentile);\n\t\treturn {\n\t\t\tlabels: Object.assign({ quantile: percentile }, summaryOfLabels.labels),\n\t\t\tvalue: percentileValue ? percentileValue : 0\n\t\t};\n\t});\n}\n\nfunction getCountForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_count`,\n\t\tlabels: value.labels,\n\t\tvalue: value.count\n\t};\n}\n\nfunction getSumForExport(value, summary) {\n\treturn {\n\t\tmetricName: `${summary.name}_sum`,\n\t\tlabels: value.labels,\n\t\tvalue: value.sum\n\t};\n}\n\nfunction startTimer(startLabels) {\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\treturn endLabels => {\n\t\t\tconst delta = process.hrtime(start);\n\t\t\tthis.observe(\n\t\t\t\tObject.assign({}, startLabels, endLabels),\n\t\t\t\tdelta[0] + delta[1] / 1e9\n\t\t\t);\n\t\t};\n\t};\n}\n\nfunction validateInput(name, help, labels) {\n\tif (!help) {\n\t\tthrow new Error('Missing mandatory help parameter');\n\t}\n\tif (!name) {\n\t\tthrow new Error('Missing mandatory name parameter');\n\t}\n\n\tif (!validateMetricName(name)) {\n\t\tthrow new Error('Invalid metric name');\n\t}\n\n\tif (!validateLabelName(labels)) {\n\t\tthrow new Error('Invalid label name');\n\t}\n\n\tlabels.forEach(label => {\n\t\tif (label === 'quantile') {\n\t\t\tthrow new Error('quantile is a reserved label keyword');\n\t\t}\n\t});\n}\n\nfunction configurePercentiles(configuredPercentiles) {\n\tconst defaultPercentiles = [0.01, 0.05, 0.5, 0.9, 0.95, 0.99, 0.999];\n\treturn []\n\t\t.concat(configuredPercentiles || defaultPercentiles)\n\t\t.sort(sortAscending);\n}\n\nfunction sortAscending(x, y) {\n\treturn x - y;\n}\n\nfunction observe(labels) {\n\treturn value => {\n\t\tconst labelValuePair = convertLabelsAndValues(labels, value);\n\n\t\tvalidateLabel(this.labelNames, this.labels);\n\t\tif (!Number.isFinite(labelValuePair.value)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`Value is not a valid number: ${util.format(labelValuePair.value)}`\n\t\t\t);\n\t\t}\n\n\t\tconst hash = hashObject(labelValuePair.labels);\n\t\tlet summaryOfLabel = this.hashMap[hash];\n\t\tif (!summaryOfLabel) {\n\t\t\tsummaryOfLabel = {\n\t\t\t\tlabels: labelValuePair.labels,\n\t\t\t\ttd: new timeWindowQuantiles(this.maxAgeSeconds, this.ageBuckets),\n\t\t\t\tcount: 0,\n\t\t\t\tsum: 0\n\t\t\t};\n\t\t}\n\n\t\tsummaryOfLabel.td.push(labelValuePair.value);\n\t\tsummaryOfLabel.count++;\n\t\tif (summaryOfLabel.count % this.compressCount === 0) {\n\t\t\tsummaryOfLabel.td.compress();\n\t\t}\n\t\tsummaryOfLabel.sum += labelValuePair.value;\n\t\tthis.hashMap[hash] = summaryOfLabel;\n\t};\n}\n\nfunction convertLabelsAndValues(labels, value) {\n\tif (value === undefined) {\n\t\treturn {\n\t\t\tvalue: labels,\n\t\t\tlabels: {}\n\t\t};\n\t}\n\n\treturn {\n\t\tlabels,\n\t\tvalue\n\t};\n}\n\nmodule.exports = Summary;\n","'use strict';\n\nconst { TDigest } = require('tdigest');\n\nclass TimeWindowQuantiles {\n\tconstructor(maxAgeSeconds, ageBuckets) {\n\t\tthis.maxAgeSeconds = maxAgeSeconds || 0;\n\t\tthis.ageBuckets = ageBuckets || 0;\n\n\t\tthis.shouldRotate = maxAgeSeconds && ageBuckets;\n\n\t\tthis.ringBuffer = Array(ageBuckets).fill(new TDigest());\n\t\tthis.currentBuffer = 0;\n\n\t\tthis.lastRotateTimestampMillis = Date.now();\n\t\tthis.durationBetweenRotatesMillis =\n\t\t\t(maxAgeSeconds * 1000) / ageBuckets || Infinity;\n\t}\n\n\tpercentile(quantile) {\n\t\tconst bucket = rotate.call(this);\n\t\treturn bucket.percentile(quantile);\n\t}\n\n\tpush(value) {\n\t\trotate.call(this);\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.push(value);\n\t\t});\n\t}\n\n\treset() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.reset();\n\t\t});\n\t}\n\n\tcompress() {\n\t\tthis.ringBuffer.forEach(bucket => {\n\t\t\tbucket.compress();\n\t\t});\n\t}\n}\n\nfunction rotate() {\n\tlet timeSinceLastRotateMillis = Date.now() - this.lastRotateTimestampMillis;\n\twhile (\n\t\ttimeSinceLastRotateMillis > this.durationBetweenRotatesMillis &&\n\t\tthis.shouldRotate\n\t) {\n\t\tthis.ringBuffer[this.currentBuffer] = new TDigest();\n\n\t\tif (++this.currentBuffer >= this.ringBuffer.length) {\n\t\t\tthis.currentBuffer = 0;\n\t\t}\n\t\ttimeSinceLastRotateMillis -= this.durationBetweenRotatesMillis;\n\t\tthis.lastRotateTimestampMillis += this.durationBetweenRotatesMillis;\n\t}\n\treturn this.ringBuffer[this.currentBuffer];\n}\n\nmodule.exports = TimeWindowQuantiles;\n","//\n// TDigest:\n//\n// approximate distribution percentiles from a stream of reals\n//\nvar RBTree = require('bintrees').RBTree;\n\nfunction TDigest(delta, K, CX) {\n    // allocate a TDigest structure.\n    //\n    // delta is the compression factor, the max fraction of mass that\n    // can be owned by one centroid (bigger, up to 1.0, means more\n    // compression). delta=false switches off TDigest behavior and treats\n    // the distribution as discrete, with no merging and exact values\n    // reported.\n    //\n    // K is a size threshold that triggers recompression as the TDigest\n    // grows during input.  (Set it to 0 to disable automatic recompression)\n    //\n    // CX specifies how often to update cached cumulative totals used\n    // for quantile estimation during ingest (see cumulate()).  Set to\n    // 0 to use exact quantiles for each new point.\n    //\n    this.discrete = (delta === false);\n    this.delta = delta || 0.01;\n    this.K = (K === undefined) ? 25 : K;\n    this.CX = (CX === undefined) ? 1.1 : CX;\n    this.centroids = new RBTree(compare_centroid_means);\n    this.nreset = 0;\n    this.reset();\n}\n\nTDigest.prototype.reset = function() {\n    // prepare to digest new points.\n    //\n    this.centroids.clear();\n    this.n = 0;\n    this.nreset += 1;\n    this.last_cumulate = 0;\n};\n\nTDigest.prototype.size = function() {\n    return this.centroids.size;\n};\n\nTDigest.prototype.toArray = function(everything) {\n    // return {mean,n} of centroids as an array ordered by mean.\n    //\n    var result = [];\n    if (everything) {\n        this._cumulate(true); // be sure cumns are exact\n        this.centroids.each(function(c) { result.push(c); });\n    } else {\n        this.centroids.each(function(c) { result.push({mean:c.mean, n:c.n}); });\n    }\n    return result;\n};\n\nTDigest.prototype.summary = function() {\n    var approx = (this.discrete) ? \"exact \" : \"approximating \";\n    var s = [approx + this.n + \" samples using \" + this.size() + \" centroids\",\n             \"min = \"+this.percentile(0),\n             \"Q1  = \"+this.percentile(0.25),\n             \"Q2  = \"+this.percentile(0.5),\n             \"Q3  = \"+this.percentile(0.75),\n             \"max = \"+this.percentile(1.0)];\n    return s.join('\\n');\n};\n\nfunction compare_centroid_means(a, b) {\n    // order two centroids by mean.\n    //\n    return (a.mean > b.mean) ? 1 : (a.mean < b.mean) ? -1 : 0;\n}\n\nfunction compare_centroid_mean_cumns(a, b) {\n    // order two centroids by mean_cumn.\n    //\n    return (a.mean_cumn - b.mean_cumn);\n}\n\nTDigest.prototype.push = function(x, n) {\n    // incorporate value or array of values x, having count n into the\n    // TDigest. n defaults to 1.\n    //\n    n = n || 1;\n    x = Array.isArray(x) ? x : [x];\n    for (var i = 0 ; i < x.length ; i++) {\n        this._digest(x[i], n);\n    }\n};\n\nTDigest.prototype.push_centroid = function(c) {\n    // incorporate centroid or array of centroids c\n    //\n    c = Array.isArray(c) ? c : [c];\n    for (var i = 0 ; i < c.length ; i++) {\n        this._digest(c[i].mean, c[i].n);\n    }\n};\n\nTDigest.prototype._cumulate = function(exact) {\n    // update cumulative counts for each centroid\n    //\n    // exact: falsey means only cumulate after sufficient\n    // growth. During ingest, these counts are used as quantile\n    // estimates, and they work well even when somewhat out of\n    // date. (this is a departure from the publication, you may set CX\n    // to 0 to disable).\n    //\n    if (this.n === this.last_cumulate ||\n        !exact && this.CX && this.CX > (this.n / this.last_cumulate)) {\n        return;\n    }\n    var cumn = 0;\n    var self = this;\n    this.centroids.each(function(c) {\n        c.mean_cumn = cumn + c.n / 2; // half of n at the mean\n        cumn = c.cumn = cumn + c.n;\n    });\n    this.n = this.last_cumulate = cumn;\n};\n\nTDigest.prototype.find_nearest = function(x) {\n    // find the centroid closest to x. The assumption of\n    // unique means and a unique nearest centroid departs from the\n    // paper, see _digest() below\n    //\n    if (this.size() === 0) {\n        return null;\n    }\n    var iter = this.centroids.lowerBound({mean:x}); // x <= iter || iter==null\n    var c = (iter.data() === null) ? iter.prev() : iter.data();\n    if (c.mean === x || this.discrete) {\n        return c; // c is either x or a neighbor (discrete: no distance func)\n    }\n    var prev = iter.prev();\n    if (prev && Math.abs(prev.mean - x) < Math.abs(c.mean - x)) {\n        return prev;\n    } else {\n        return c;\n    }\n};\n\nTDigest.prototype._new_centroid = function(x, n, cumn) {\n    // create and insert a new centroid into the digest (don't update\n    // cumulatives).\n    //\n    var c = {mean:x, n:n, cumn:cumn};\n    this.centroids.insert(c);\n    this.n += n;\n    return c;\n};\n\nTDigest.prototype._addweight = function(nearest, x, n) {\n    // add weight at location x to nearest centroid.  adding x to\n    // nearest will not shift its relative position in the tree and\n    // require reinsertion.\n    //\n    if (x !== nearest.mean) {\n        nearest.mean += n * (x - nearest.mean) / (nearest.n + n);\n    }\n    nearest.cumn += n;\n    nearest.mean_cumn += n / 2;\n    nearest.n += n;\n    this.n += n;\n};\n\nTDigest.prototype._digest = function(x, n) {\n    // incorporate value x, having count n into the TDigest.\n    //\n    var min = this.centroids.min();\n    var max = this.centroids.max();\n    var nearest = this.find_nearest(x);\n    if (nearest && nearest.mean === x) {\n        // accumulate exact matches into the centroid without\n        // limit. this is a departure from the paper, made so\n        // centroids remain unique and code can be simple.\n        this._addweight(nearest, x, n);\n    } else if (nearest === min) {\n        this._new_centroid(x, n, 0); // new point around min boundary\n    } else if (nearest === max ) {\n        this._new_centroid(x, n, this.n); // new point around max boundary\n    } else if (this.discrete) {\n        this._new_centroid(x, n, nearest.cumn); // never merge\n    } else {\n        // conider a merge based on nearest centroid's capacity. if\n        // there's not room for all of n, don't bother merging any of\n        // it into nearest, as we'll have to make a new centroid\n        // anyway for the remainder (departure from the paper).\n        var p = nearest.mean_cumn / this.n;\n        var max_n = Math.floor(4 * this.n * this.delta * p * (1 - p));\n        if (max_n - nearest.n >= n) {\n            this._addweight(nearest, x, n);\n        } else {\n            this._new_centroid(x, n, nearest.cumn);\n        }\n    }\n    this._cumulate(false);\n    if (!this.discrete && this.K && this.size() > this.K / this.delta) {\n        // re-process the centroids and hope for some compression.\n        this.compress();\n    }\n};\n\nTDigest.prototype.bound_mean = function(x) {\n    // find centroids lower and upper such that lower.mean < x <\n    // upper.mean or lower.mean === x === upper.mean. Don't call\n    // this for x out of bounds.\n    //\n    var iter = this.centroids.upperBound({mean:x}); // x < iter\n    var lower = iter.prev();      // lower <= x\n    var upper = (lower.mean === x) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.p_rank = function(x_or_xlist) {\n    // return approximate percentile-ranks (0..1) for data value x.\n    // or list of x.  calculated according to\n    // https://en.wikipedia.org/wiki/Percentile_rank\n    //\n    // (Note that in continuous mode, boundary sample values will\n    // report half their centroid weight inward from 0/1 as the\n    // percentile-rank. X values outside the observed range return\n    // 0/1)\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var xs = Array.isArray(x_or_xlist) ? x_or_xlist : [x_or_xlist];\n    var ps = xs.map(this._p_rank, this);\n    return Array.isArray(x_or_xlist) ? ps : ps[0];\n};\n\nTDigest.prototype._p_rank = function(x) {\n    if (this.size() === 0) {\n        return undefined;\n    } else if (x < this.centroids.min().mean) {\n        return 0.0;\n    } else if (x > this.centroids.max().mean) {\n        return 1.0;\n    }\n    // find centroids that bracket x and interpolate x's cumn from\n    // their cumn's.\n    this._cumulate(true); // be sure cumns are exact\n    var bound = this.bound_mean(x);\n    var lower = bound[0], upper = bound[1];\n    if (this.discrete) {\n        return lower.cumn / this.n;\n    } else {\n        var cumn = lower.mean_cumn;\n        if (lower !== upper) {\n            cumn += (x - lower.mean) * (upper.mean_cumn - lower.mean_cumn) / (upper.mean - lower.mean);\n        }\n        return cumn / this.n;\n    }\n};\n\nTDigest.prototype.bound_mean_cumn = function(cumn) {\n    // find centroids lower and upper such that lower.mean_cumn < x <\n    // upper.mean_cumn or lower.mean_cumn === x === upper.mean_cumn. Don't call\n    // this for cumn out of bounds.\n    //\n    // XXX because mean and mean_cumn give rise to the same sort order\n    // (up to identical means), use the mean rbtree for our search.\n    this.centroids._comparator = compare_centroid_mean_cumns;\n    var iter = this.centroids.upperBound({mean_cumn:cumn}); // cumn < iter\n    this.centroids._comparator = compare_centroid_means;\n    var lower = iter.prev();      // lower <= cumn\n    var upper = (lower && lower.mean_cumn === cumn) ? lower : iter.next();\n    return [lower, upper];\n};\n\nTDigest.prototype.percentile = function(p_or_plist) {\n    // for percentage p (0..1), or for each p in a list of ps, return\n    // the smallest data value q at which at least p percent of the\n    // observations <= q.\n    //\n    // for discrete distributions, this selects q using the Nearest\n    // Rank Method\n    // (https://en.wikipedia.org/wiki/Percentile#The_Nearest_Rank_method)\n    // (in scipy, same as percentile(...., interpolation='higher')\n    //\n    // for continuous distributions, interpolates data values between\n    // count-weighted bracketing means.\n    //\n    // this triggers cumulate() if cumn's are out of date.\n    //\n    var ps = Array.isArray(p_or_plist) ? p_or_plist : [p_or_plist];\n    var qs = ps.map(this._percentile, this);\n    return Array.isArray(p_or_plist) ? qs : qs[0];\n};\n\nTDigest.prototype._percentile = function(p) {\n    if (this.size() === 0) {\n        return undefined;\n    }\n    this._cumulate(true); // be sure cumns are exact\n    var min = this.centroids.min();\n    var max = this.centroids.max();\n    var h = this.n * p;\n    var bound = this.bound_mean_cumn(h);\n    var lower = bound[0], upper = bound[1];\n\n    if (upper === lower || lower === null || upper === null) {\n        return (lower || upper).mean;\n    } else if (!this.discrete) {\n        return lower.mean + (h - lower.mean_cumn) * (upper.mean - lower.mean) / (upper.mean_cumn - lower.mean_cumn);\n    } else if (h <= lower.cumn) {\n        return lower.mean;\n    } else {\n        return upper.mean;\n    }\n};\n\nfunction pop_random(choices) {\n    // remove and return an item randomly chosen from the array of choices\n    // (mutates choices)\n    //\n    var idx = Math.floor(Math.random() * choices.length);\n    return choices.splice(idx, 1)[0];\n}\n\nTDigest.prototype.compress = function() {\n    // TDigests experience worst case compression (none) when input\n    // increases monotonically.  Improve on any bad luck by\n    // reconsuming digest centroids as if they were weighted points\n    // while shuffling their order (and hope for the best).\n    //\n    if (this.compressing) {\n        return;\n    }\n    var points = this.toArray();\n    this.reset();\n    this.compressing = true;\n    while (points.length > 0) {\n        this.push_centroid(pop_random(points));\n    }\n    this._cumulate(true);\n    this.compressing = false;\n};\n\nfunction Digest(config) {\n    // allocate a distribution digest structure. This is an extension\n    // of a TDigest structure that starts in exact histogram (discrete)\n    // mode, and automatically switches to TDigest mode for large\n    // samples that appear to be from a continuous distribution.\n    //\n    this.config = config || {};\n    this.mode = this.config.mode || 'auto'; // disc, cont, auto\n    TDigest.call(this, this.mode === 'cont' ? config.delta : false);\n    this.digest_ratio = this.config.ratio || 0.9;\n    this.digest_thresh = this.config.thresh || 1000;\n    this.n_unique = 0;\n}\nDigest.prototype = Object.create(TDigest.prototype);\nDigest.prototype.constructor = Digest;\n\nDigest.prototype.push = function(x_or_xlist) {\n    TDigest.prototype.push.call(this, x_or_xlist);\n    this.check_continuous();\n};\n\nDigest.prototype._new_centroid = function(x, n, cumn) {\n    this.n_unique += 1;\n    TDigest.prototype._new_centroid.call(this, x, n, cumn);\n};\n\nDigest.prototype._addweight = function(nearest, x, n) {\n    if (nearest.n === 1) {\n        this.n_unique -= 1;\n    }\n    TDigest.prototype._addweight.call(this, nearest, x, n);\n};\n\nDigest.prototype.check_continuous = function() {\n    // while in 'auto' mode, if there are many unique elements, assume\n    // they are from a continuous distribution and switch to 'cont'\n    // mode (tdigest behavior). Return true on transition from\n    // disctete to continuous.\n    if (this.mode !== 'auto' || this.size() < this.digest_thresh) {\n        return false;\n    }\n    if (this.n_unique / this.size() > this.digest_ratio) {\n        this.mode = 'cont';\n        this.discrete = false;\n        this.delta = this.config.delta || 0.01;\n        this.compress();\n        return true;\n    }\n    return false;\n};\n\nmodule.exports = {\n    'TDigest': TDigest,\n    'Digest': Digest\n};\n","module.exports = {\n    RBTree: require('./lib/rbtree'),\n    BinTree: require('./lib/bintree')\n};\n","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n    this.red = true;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction RBTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nRBTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nRBTree.prototype.insert = function(data) {\n    var ret = false;\n\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        ret = true;\n        this.size++;\n    }\n    else {\n        var head = new Node(undefined); // fake tree root\n\n        var dir = 0;\n        var last = 0;\n\n        // setup\n        var gp = null; // grandparent\n        var ggp = head; // grand-grand-parent\n        var p = null; // parent\n        var node = this._root;\n        ggp.right = this._root;\n\n        // search down\n        while(true) {\n            if(node === null) {\n                // insert new node at the bottom\n                node = new Node(data);\n                p.set_child(dir, node);\n                ret = true;\n                this.size++;\n            }\n            else if(is_red(node.left) && is_red(node.right)) {\n                // color flip\n                node.red = true;\n                node.left.red = false;\n                node.right.red = false;\n            }\n\n            // fix red violation\n            if(is_red(node) && is_red(p)) {\n                var dir2 = ggp.right === gp;\n\n                if(node === p.get_child(last)) {\n                    ggp.set_child(dir2, single_rotate(gp, !last));\n                }\n                else {\n                    ggp.set_child(dir2, double_rotate(gp, !last));\n                }\n            }\n\n            var cmp = this._comparator(node.data, data);\n\n            // stop if found\n            if(cmp === 0) {\n                break;\n            }\n\n            last = dir;\n            dir = cmp < 0;\n\n            // update helpers\n            if(gp !== null) {\n                ggp = gp;\n            }\n            gp = p;\n            p = node;\n            node = node.get_child(dir);\n        }\n\n        // update root\n        this._root = head.right;\n    }\n\n    // make root black\n    this._root.red = false;\n\n    return ret;\n};\n\n// returns true if removed, false if not found\nRBTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var gp = null; // grand parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        var last = dir;\n\n        // update helpers\n        gp = p;\n        p = node;\n        node = node.get_child(dir);\n\n        var cmp = this._comparator(data, node.data);\n\n        dir = cmp > 0;\n\n        // save found node\n        if(cmp === 0) {\n            found = node;\n        }\n\n        // push the red node down\n        if(!is_red(node) && !is_red(node.get_child(dir))) {\n            if(is_red(node.get_child(!dir))) {\n                var sr = single_rotate(node, dir);\n                p.set_child(last, sr);\n                p = sr;\n            }\n            else if(!is_red(node.get_child(!dir))) {\n                var sibling = p.get_child(!last);\n                if(sibling !== null) {\n                    if(!is_red(sibling.get_child(!last)) && !is_red(sibling.get_child(last))) {\n                        // color flip\n                        p.red = false;\n                        sibling.red = true;\n                        node.red = true;\n                    }\n                    else {\n                        var dir2 = gp.right === p;\n\n                        if(is_red(sibling.get_child(last))) {\n                            gp.set_child(dir2, double_rotate(p, last));\n                        }\n                        else if(is_red(sibling.get_child(!last))) {\n                            gp.set_child(dir2, single_rotate(p, last));\n                        }\n\n                        // ensure correct coloring\n                        var gpc = gp.get_child(dir2);\n                        gpc.red = true;\n                        node.red = true;\n                        gpc.left.red = false;\n                        gpc.right.red = false;\n                    }\n                }\n            }\n        }\n    }\n\n    // replace and remove if found\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n        this.size--;\n    }\n\n    // update root and make it black\n    this._root = head.right;\n    if(this._root !== null) {\n        this._root.red = false;\n    }\n\n    return found !== null;\n};\n\nfunction is_red(node) {\n    return node !== null && node.red;\n}\n\nfunction single_rotate(root, dir) {\n    var save = root.get_child(!dir);\n\n    root.set_child(!dir, save.get_child(dir));\n    save.set_child(dir, root);\n\n    root.red = true;\n    save.red = false;\n\n    return save;\n}\n\nfunction double_rotate(root, dir) {\n    root.set_child(!dir, single_rotate(root.get_child(!dir), !dir));\n    return single_rotate(root, dir);\n}\n\nmodule.exports = RBTree;\n","\nvar TreeBase = require('./treebase');\n\nfunction Node(data) {\n    this.data = data;\n    this.left = null;\n    this.right = null;\n}\n\nNode.prototype.get_child = function(dir) {\n    return dir ? this.right : this.left;\n};\n\nNode.prototype.set_child = function(dir, val) {\n    if(dir) {\n        this.right = val;\n    }\n    else {\n        this.left = val;\n    }\n};\n\nfunction BinTree(comparator) {\n    this._root = null;\n    this._comparator = comparator;\n    this.size = 0;\n}\n\nBinTree.prototype = new TreeBase();\n\n// returns true if inserted, false if duplicate\nBinTree.prototype.insert = function(data) {\n    if(this._root === null) {\n        // empty tree\n        this._root = new Node(data);\n        this.size++;\n        return true;\n    }\n\n    var dir = 0;\n\n    // setup\n    var p = null; // parent\n    var node = this._root;\n\n    // search down\n    while(true) {\n        if(node === null) {\n            // insert new node at the bottom\n            node = new Node(data);\n            p.set_child(dir, node);\n            ret = true;\n            this.size++;\n            return true;\n        }\n\n        // stop if found\n        if(this._comparator(node.data, data) === 0) {\n            return false;\n        }\n\n        dir = this._comparator(node.data, data) < 0;\n\n        // update helpers\n        p = node;\n        node = node.get_child(dir);\n    }\n};\n\n// returns true if removed, false if not found\nBinTree.prototype.remove = function(data) {\n    if(this._root === null) {\n        return false;\n    }\n\n    var head = new Node(undefined); // fake tree root\n    var node = head;\n    node.right = this._root;\n    var p = null; // parent\n    var found = null; // found item\n    var dir = 1;\n\n    while(node.get_child(dir) !== null) {\n        p = node;\n        node = node.get_child(dir);\n        var cmp = this._comparator(data, node.data);\n        dir = cmp > 0;\n\n        if(cmp === 0) {\n            found = node;\n        }\n    }\n\n    if(found !== null) {\n        found.data = node.data;\n        p.set_child(p.right === node, node.get_child(node.left === null));\n\n        this._root = head.right;\n        this.size--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\n\nmodule.exports = BinTree;\n\n","'use strict';\n\nconst url = require('url');\nconst http = require('http');\nconst https = require('https');\nconst { globalRegistry } = require('./registry');\n\nclass Pushgateway {\n\tconstructor(gatewayUrl, options, registry) {\n\t\tif (!registry) {\n\t\t\tregistry = globalRegistry;\n\t\t}\n\t\tthis.registry = registry;\n\t\tthis.gatewayUrl = gatewayUrl;\n\t\tthis.requestOptions = Object.assign({}, options);\n\t}\n\n\tpushAdd(params, callback) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\tuseGateway.call(this, 'POST', params.jobName, params.groupings, callback);\n\t}\n\n\tpush(params, callback) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\tuseGateway.call(this, 'PUT', params.jobName, params.groupings, callback);\n\t}\n\n\tdelete(params, callback) {\n\t\tif (!params || !params.jobName) {\n\t\t\tthrow new Error('Missing jobName parameter');\n\t\t}\n\n\t\tuseGateway.call(this, 'DELETE', params.jobName, params.groupings, callback);\n\t}\n}\nfunction useGateway(method, job, groupings, callback) {\n\t// `URL` first added in v6.13.0\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst gatewayUrlParsed = url.parse(this.gatewayUrl);\n\tconst gatewayUrlPath =\n\t\tgatewayUrlParsed.pathname && gatewayUrlParsed.pathname !== '/'\n\t\t\t? gatewayUrlParsed.pathname\n\t\t\t: '';\n\tconst path = `${gatewayUrlPath}/metrics/job/${encodeURIComponent(\n\t\tjob\n\t)}${generateGroupings(groupings)}`;\n\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst target = url.resolve(this.gatewayUrl, path);\n\t// eslint-disable-next-line node/no-deprecated-api\n\tconst requestParams = url.parse(target);\n\tconst httpModule = isHttps(requestParams.href) ? https : http;\n\tconst options = Object.assign(requestParams, this.requestOptions, {\n\t\tmethod\n\t});\n\n\tconst req = httpModule.request(options, res => {\n\t\tlet body = '';\n\t\tres.setEncoding('utf8');\n\t\tres.on('data', chunk => {\n\t\t\tbody += chunk;\n\t\t});\n\t\tres.on('end', () => {\n\t\t\tcallback(null, res, body);\n\t\t});\n\t});\n\treq.on('error', err => {\n\t\tcallback(err);\n\t});\n\n\tif (method !== 'DELETE') {\n\t\treq.write(this.registry.metrics({ timestamps: false }));\n\t}\n\treq.end();\n}\n\nfunction generateGroupings(groupings) {\n\tif (!groupings) {\n\t\treturn '';\n\t}\n\treturn Object.keys(groupings)\n\t\t.map(\n\t\t\tkey => `/${encodeURIComponent(key)}/${encodeURIComponent(groupings[key])}`\n\t\t)\n\t\t.join('');\n}\n\nfunction isHttps(href) {\n\treturn href.search(/^https/) !== -1;\n}\n\nmodule.exports = Pushgateway;\n","module.exports = require(\"https\");","'use strict';\n\nconst processCpuTotal = require('./metrics/processCpuTotal');\nconst processStartTime = require('./metrics/processStartTime');\nconst osMemoryHeap = require('./metrics/osMemoryHeap');\nconst processOpenFileDescriptors = require('./metrics/processOpenFileDescriptors');\nconst processMaxFileDescriptors = require('./metrics/processMaxFileDescriptors');\nconst eventLoopLag = require('./metrics/eventLoopLag');\nconst processHandles = require('./metrics/processHandles');\nconst processRequests = require('./metrics/processRequests');\nconst heapSizeAndUsed = require('./metrics/heapSizeAndUsed');\nconst heapSpacesSizeAndUsed = require('./metrics/heapSpacesSizeAndUsed');\nconst version = require('./metrics/version');\nconst { globalRegistry } = require('./registry');\nconst { printDeprecationCollectDefaultMetricsNumber } = require('./util');\n\nconst metrics = {\n\tprocessCpuTotal,\n\tprocessStartTime,\n\tosMemoryHeap,\n\tprocessOpenFileDescriptors,\n\tprocessMaxFileDescriptors,\n\teventLoopLag,\n\tprocessHandles,\n\tprocessRequests,\n\theapSizeAndUsed,\n\theapSpacesSizeAndUsed,\n\tversion\n};\nconst metricsList = Object.keys(metrics);\n\nlet existingInterval = null;\n// This is used to ensure the program throws on duplicate metrics during first run\n// We might want to consider not supporting running the default metrics function more than once\nlet init = true;\n\nmodule.exports = function startDefaultMetrics(config) {\n\tlet normalizedConfig = config;\n\tif (typeof config === 'number') {\n\t\tprintDeprecationCollectDefaultMetricsNumber(config);\n\n\t\tnormalizedConfig = { timeout: config };\n\t}\n\n\tnormalizedConfig = Object.assign(\n\t\t{\n\t\t\ttimestamps: true,\n\t\t\ttimeout: 10000\n\t\t},\n\t\tnormalizedConfig\n\t);\n\n\tif (existingInterval !== null) {\n\t\tclearInterval(existingInterval);\n\t}\n\n\tconst initialisedMetrics = metricsList.map(metric => {\n\t\tconst defaultMetric = metrics[metric];\n\t\tif (!init) {\n\t\t\tdefaultMetric.metricNames.map(\n\t\t\t\tglobalRegistry.removeSingleMetric,\n\t\t\t\tglobalRegistry\n\t\t\t);\n\t\t}\n\n\t\treturn defaultMetric(normalizedConfig.register, normalizedConfig);\n\t});\n\n\tfunction updateAllMetrics() {\n\t\tinitialisedMetrics.forEach(metric => metric.call());\n\t}\n\n\tupdateAllMetrics();\n\n\texistingInterval = setInterval(\n\t\tupdateAllMetrics,\n\t\tnormalizedConfig.timeout\n\t).unref();\n\n\tinit = false;\n\n\treturn existingInterval;\n};\n\nmodule.exports.metricsList = metricsList;\n","'use strict';\n\nconst Counter = require('../counter');\nconst PROCESS_CPU_USER_SECONDS = 'process_cpu_user_seconds_total';\nconst PROCESS_CPU_SYSTEM_SECONDS = 'process_cpu_system_seconds_total';\nconst PROCESS_CPU_SECONDS = 'process_cpu_seconds_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function doesn't exist (introduced in node@6.1.0)\n\tif (typeof process.cpuUsage !== 'function') {\n\t\treturn () => {};\n\t}\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst cpuUserUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_USER_SECONDS,\n\t\thelp: 'Total user CPU time spent in seconds.',\n\t\tregisters\n\t});\n\tconst cpuSystemUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SYSTEM_SECONDS,\n\t\thelp: 'Total system CPU time spent in seconds.',\n\t\tregisters\n\t});\n\tconst cpuUsageCounter = new Counter({\n\t\tname: namePrefix + PROCESS_CPU_SECONDS,\n\t\thelp: 'Total user and system CPU time spent in seconds.',\n\t\tregisters\n\t});\n\n\tlet lastCpuUsage = process.cpuUsage();\n\n\treturn () => {\n\t\tconst cpuUsage = process.cpuUsage();\n\t\tconst now = Date.now();\n\n\t\tconst userUsageMicros = cpuUsage.user - lastCpuUsage.user;\n\t\tconst systemUsageMicros = cpuUsage.system - lastCpuUsage.system;\n\n\t\tlastCpuUsage = cpuUsage;\n\n\t\tcpuUserUsageCounter.inc(userUsageMicros / 1e6, now);\n\t\tcpuSystemUsageCounter.inc(systemUsageMicros / 1e6, now);\n\t\tcpuUsageCounter.inc((userUsageMicros + systemUsageMicros) / 1e6, now);\n\t};\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_CPU_USER_SECONDS,\n\tPROCESS_CPU_SYSTEM_SECONDS,\n\tPROCESS_CPU_SECONDS\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst nowInSeconds = Math.round(Date.now() / 1000 - process.uptime());\n\nconst PROCESS_START_TIME = 'process_start_time_seconds';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst cpuUserGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_START_TIME,\n\t\thelp: 'Start time of the process since unix epoch in seconds.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\taggregator: 'omit'\n\t});\n\tlet isSet = false;\n\n\treturn () => {\n\t\tif (isSet) {\n\t\t\treturn;\n\t\t}\n\t\tcpuUserGauge.set(nowInSeconds);\n\t\tisSet = true;\n\t};\n};\n\nmodule.exports.metricNames = [PROCESS_START_TIME];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst linuxVariant = require('./osMemoryHeapLinux');\nconst safeMemoryUsage = require('./helpers/safeMemoryUsage');\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\n\nfunction notLinuxVariant(registry, config = {}) {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst residentMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\n\treturn () => {\n\t\tconst memUsage = safeMemoryUsage();\n\n\t\t// I don't think the other things returned from `process.memoryUsage()` is relevant to a standard export\n\t\tif (memUsage) {\n\t\t\tresidentMemGauge.set(memUsage.rss, Date.now());\n\t\t}\n\t};\n}\n\nmodule.exports = (registry, config) =>\n\tprocess.platform === 'linux'\n\t\t? linuxVariant(registry, config)\n\t\t: notLinuxVariant(registry, config);\n\nmodule.exports.metricNames =\n\tprocess.platform === 'linux'\n\t\t? linuxVariant.metricNames\n\t\t: [PROCESS_RESIDENT_MEMORY];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\n\nconst values = ['VmSize', 'VmRSS', 'VmData'];\n\nconst PROCESS_RESIDENT_MEMORY = 'process_resident_memory_bytes';\nconst PROCESS_VIRTUAL_MEMORY = 'process_virtual_memory_bytes';\nconst PROCESS_HEAP = 'process_heap_bytes';\n\nfunction structureOutput(input) {\n\tconst returnValue = {};\n\n\tinput\n\t\t.split('\\n')\n\t\t.filter(s => values.some(value => s.indexOf(value) === 0))\n\t\t.forEach(string => {\n\t\t\tconst split = string.split(':');\n\n\t\t\t// Get the value\n\t\t\tlet value = split[1].trim();\n\t\t\t// Remove trailing ` kb`\n\t\t\tvalue = value.substr(0, value.length - 3);\n\t\t\t// Make it into a number in bytes bytes\n\t\t\tvalue = Number(value) * 1024;\n\n\t\t\treturnValue[split[0]] = value;\n\t\t});\n\n\treturn returnValue;\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst residentMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_RESIDENT_MEMORY,\n\t\thelp: 'Resident memory size in bytes.',\n\t\tregisters\n\t});\n\tconst virtualMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_VIRTUAL_MEMORY,\n\t\thelp: 'Virtual memory size in bytes.',\n\t\tregisters\n\t});\n\tconst heapSizeMemGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_HEAP,\n\t\thelp: 'Process heap size in bytes.',\n\t\tregisters\n\t});\n\n\treturn () => {\n\t\tfs.readFile('/proc/self/status', 'utf8', (err, status) => {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst now = Date.now();\n\t\t\tconst structuredOutput = structureOutput(status);\n\n\t\t\tresidentMemGauge.set(structuredOutput.VmRSS, now);\n\t\t\tvirtualMemGauge.set(structuredOutput.VmSize, now);\n\t\t\theapSizeMemGauge.set(structuredOutput.VmData, now);\n\t\t});\n\t};\n};\n\nmodule.exports.metricNames = [\n\tPROCESS_RESIDENT_MEMORY,\n\tPROCESS_VIRTUAL_MEMORY,\n\tPROCESS_HEAP\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\nconst process = require('process');\n\nconst PROCESS_OPEN_FDS = 'process_open_fds';\n\nmodule.exports = (registry, config = {}) => {\n\tif (process.platform !== 'linux') {\n\t\treturn () => {};\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst fileDescriptorsGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_OPEN_FDS,\n\t\thelp: 'Number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\n\treturn () => {\n\t\tfs.readdir('/proc/self/fd', (err, list) => {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Minus 1, as this invocation created one\n\t\t\tfileDescriptorsGauge.set(list.length - 1, Date.now());\n\t\t});\n\t};\n};\n\nmodule.exports.metricNames = [PROCESS_OPEN_FDS];\n","module.exports = require(\"process\");","'use strict';\n\nconst Gauge = require('../gauge');\nconst fs = require('fs');\n\nconst PROCESS_MAX_FDS = 'process_max_fds';\n\nmodule.exports = (registry, config = {}) => {\n\tlet isSet = false;\n\n\tif (process.platform !== 'linux') {\n\t\treturn () => {};\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst fileDescriptorsGauge = new Gauge({\n\t\tname: namePrefix + PROCESS_MAX_FDS,\n\t\thelp: 'Maximum number of open file descriptors.',\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\n\treturn () => {\n\t\tif (isSet) {\n\t\t\treturn;\n\t\t}\n\n\t\tfs.readFile('/proc/sys/fs/file-max', 'utf8', (err, maxFds) => {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tisSet = true;\n\n\t\t\tfileDescriptorsGauge.set(Number(maxFds));\n\t\t});\n\t};\n};\n\nmodule.exports.metricNames = [PROCESS_MAX_FDS];\n","'use strict';\n\nconst Gauge = require('../gauge');\n\nconst NODEJS_EVENTLOOP_LAG = 'nodejs_eventloop_lag_seconds';\n\nfunction reportEventloopLag(start, gauge) {\n\tconst delta = process.hrtime(start);\n\tconst nanosec = delta[0] * 1e9 + delta[1];\n\tconst seconds = nanosec / 1e9;\n\n\tgauge.set(seconds, Date.now());\n}\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst gauge = new Gauge({\n\t\tname: namePrefix + NODEJS_EVENTLOOP_LAG,\n\t\thelp: 'Lag of event loop in seconds.',\n\t\tregisters: registry ? [registry] : undefined,\n\t\taggregator: 'average'\n\t});\n\n\treturn () => {\n\t\tconst start = process.hrtime();\n\t\tsetImmediate(reportEventloopLag, start, gauge);\n\t};\n};\n\nmodule.exports.metricNames = [NODEJS_EVENTLOOP_LAG];\n","'use strict';\n\nconst { aggregateByObjectName } = require('./helpers/processMetricsHelpers');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\nconst Gauge = require('../gauge');\n\nconst NODEJS_ACTIVE_HANDLES = 'nodejs_active_handles';\nconst NODEJS_ACTIVE_HANDLES_TOTAL = 'nodejs_active_handles_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6)\n\tif (typeof process._getActiveHandles !== 'function') {\n\t\treturn () => {};\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst gauge = new Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES,\n\t\thelp:\n\t\t\t'Number of active libuv handles grouped by handle type. Every handle type is C++ class name.',\n\t\tlabelNames: ['type'],\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\tconst totalGauge = new Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_HANDLES_TOTAL,\n\t\thelp: 'Total number of active handles.',\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\n\tconst updater = config.timestamps\n\t\t? () => {\n\t\t\t\tconst handles = process._getActiveHandles();\n\t\t\t\tupdateMetrics(gauge, aggregateByObjectName(handles), true);\n\t\t\t\ttotalGauge.set(handles.length, Date.now());\n\t\t  }\n\t\t: () => {\n\t\t\t\tconst handles = process._getActiveHandles();\n\t\t\t\tupdateMetrics(gauge, aggregateByObjectName(handles), false);\n\t\t\t\ttotalGauge.set(handles.length);\n\t\t  };\n\n\treturn updater;\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_HANDLES,\n\tNODEJS_ACTIVE_HANDLES_TOTAL\n];\n","'use strict';\nconst Gauge = require('../gauge');\nconst { aggregateByObjectName } = require('./helpers/processMetricsHelpers');\nconst { updateMetrics } = require('./helpers/processMetricsHelpers');\n\nconst NODEJS_ACTIVE_REQUESTS = 'nodejs_active_requests';\nconst NODEJS_ACTIVE_REQUESTS_TOTAL = 'nodejs_active_requests_total';\n\nmodule.exports = (registry, config = {}) => {\n\t// Don't do anything if the function is removed in later nodes (exists in node@6)\n\tif (typeof process._getActiveRequests !== 'function') {\n\t\treturn () => {};\n\t}\n\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst gauge = new Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS,\n\t\thelp:\n\t\t\t'Number of active libuv requests grouped by request type. Every request type is C++ class name.',\n\t\tlabelNames: ['type'],\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\n\tconst totalGauge = new Gauge({\n\t\tname: namePrefix + NODEJS_ACTIVE_REQUESTS_TOTAL,\n\t\thelp: 'Total number of active requests.',\n\t\tregisters: registry ? [registry] : undefined\n\t});\n\n\treturn () => {\n\t\tconst requests = process._getActiveRequests();\n\t\tupdateMetrics(gauge, aggregateByObjectName(requests));\n\t\ttotalGauge.set(requests.length, Date.now());\n\t};\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_ACTIVE_REQUESTS,\n\tNODEJS_ACTIVE_REQUESTS_TOTAL\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nconst safeMemoryUsage = require('./helpers/safeMemoryUsage');\n\nconst NODEJS_HEAP_SIZE_TOTAL = 'nodejs_heap_size_total_bytes';\nconst NODEJS_HEAP_SIZE_USED = 'nodejs_heap_size_used_bytes';\nconst NODEJS_EXTERNAL_MEMORY = 'nodejs_external_memory_bytes';\n\nmodule.exports = (registry, config = {}) => {\n\tif (typeof process.memoryUsage !== 'function') {\n\t\treturn () => {};\n\t}\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst heapSizeTotal = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_TOTAL,\n\t\thelp: 'Process heap size from node.js in bytes.',\n\t\tregisters\n\t});\n\tconst heapSizeUsed = new Gauge({\n\t\tname: namePrefix + NODEJS_HEAP_SIZE_USED,\n\t\thelp: 'Process heap size used from node.js in bytes.',\n\t\tregisters\n\t});\n\tlet externalMemUsed;\n\n\tconst usage = safeMemoryUsage();\n\tif (usage && usage.external) {\n\t\texternalMemUsed = new Gauge({\n\t\t\tname: namePrefix + NODEJS_EXTERNAL_MEMORY,\n\t\t\thelp: 'Nodejs external memory size in bytes.',\n\t\t\tregisters\n\t\t});\n\t}\n\n\treturn () => {\n\t\t// process.memoryUsage() can throw EMFILE errors, see #67\n\t\tconst memUsage = safeMemoryUsage();\n\t\tif (memUsage) {\n\t\t\tif (config.timestamps) {\n\t\t\t\tconst now = Date.now();\n\t\t\t\theapSizeTotal.set(memUsage.heapTotal, now);\n\t\t\t\theapSizeUsed.set(memUsage.heapUsed, now);\n\t\t\t\tif (memUsage.external && externalMemUsed) {\n\t\t\t\t\texternalMemUsed.set(memUsage.external, now);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\theapSizeTotal.set(memUsage.heapTotal);\n\t\t\t\theapSizeUsed.set(memUsage.heapUsed);\n\t\t\t\tif (memUsage.external && externalMemUsed) {\n\t\t\t\t\texternalMemUsed.set(memUsage.external);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttotal: heapSizeTotal,\n\t\t\tused: heapSizeUsed,\n\t\t\texternal: externalMemUsed\n\t\t};\n\t};\n};\n\nmodule.exports.metricNames = [\n\tNODEJS_HEAP_SIZE_TOTAL,\n\tNODEJS_HEAP_SIZE_USED,\n\tNODEJS_EXTERNAL_MEMORY\n];\n","'use strict';\n\nconst Gauge = require('../gauge');\nlet v8;\n\ntry {\n\tv8 = require('v8');\n} catch (e) {\n\t// node version is too old\n\t// probably we can use v8-heap-space-statistics for >=node-4.0.0 and <node-6.0.0\n}\n\nconst METRICS = ['total', 'used', 'available'];\n\nconst NODEJS_HEAP_SIZE = {};\n\nMETRICS.forEach(metricType => {\n\tNODEJS_HEAP_SIZE[metricType] = `nodejs_heap_space_size_${metricType}_bytes`;\n});\n\nmodule.exports = (registry, config = {}) => {\n\tif (\n\t\ttypeof v8 === 'undefined' ||\n\t\ttypeof v8.getHeapSpaceStatistics !== 'function'\n\t) {\n\t\treturn () => {};\n\t}\n\n\tconst registers = registry ? [registry] : undefined;\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst gauges = {};\n\n\tMETRICS.forEach(metricType => {\n\t\tgauges[metricType] = new Gauge({\n\t\t\tname: namePrefix + NODEJS_HEAP_SIZE[metricType],\n\t\t\thelp: `Process heap space size ${metricType} from node.js in bytes.`,\n\t\t\tlabelNames: ['space'],\n\t\t\tregisters\n\t\t});\n\t});\n\n\treturn () => {\n\t\tconst data = {\n\t\t\ttotal: {},\n\t\t\tused: {},\n\t\t\tavailable: {}\n\t\t};\n\t\tconst now = Date.now();\n\n\t\tv8.getHeapSpaceStatistics().forEach(space => {\n\t\t\tconst spaceName = space.space_name.substr(\n\t\t\t\t0,\n\t\t\t\tspace.space_name.indexOf('_space')\n\t\t\t);\n\n\t\t\tdata.total[spaceName] = space.space_size;\n\t\t\tdata.used[spaceName] = space.space_used_size;\n\t\t\tdata.available[spaceName] = space.space_available_size;\n\n\t\t\tgauges.total.set({ space: spaceName }, space.space_size, now);\n\t\t\tgauges.used.set({ space: spaceName }, space.space_used_size, now);\n\t\t\tgauges.available.set(\n\t\t\t\t{ space: spaceName },\n\t\t\t\tspace.space_available_size,\n\t\t\t\tnow\n\t\t\t);\n\t\t});\n\n\t\treturn data;\n\t};\n};\n\nmodule.exports.metricNames = METRICS.map(\n\tmetricType => NODEJS_HEAP_SIZE[metricType]\n);\n","module.exports = require(\"v8\");","'use strict';\n\nconst Gauge = require('../gauge');\nconst version = process.version;\nconst versionSegments = version\n\t.slice(1)\n\t.split('.')\n\t.map(Number);\n\nconst NODE_VERSION_INFO = 'nodejs_version_info';\n\nmodule.exports = (registry, config = {}) => {\n\tconst namePrefix = config.prefix ? config.prefix : '';\n\n\tconst nodeVersionGauge = new Gauge({\n\t\tname: namePrefix + NODE_VERSION_INFO,\n\t\thelp: 'Node.js version info.',\n\t\tlabelNames: ['version', 'major', 'minor', 'patch'],\n\t\tregisters: registry ? [registry] : undefined,\n\t\taggregator: 'first'\n\t});\n\tlet isSet = false;\n\n\treturn () => {\n\t\tif (isSet) {\n\t\t\treturn;\n\t\t}\n\t\tnodeVersionGauge\n\t\t\t.labels(\n\t\t\t\tversion,\n\t\t\t\tversionSegments[0],\n\t\t\t\tversionSegments[1],\n\t\t\t\tversionSegments[2]\n\t\t\t)\n\t\t\t.set(1);\n\t\tisSet = true;\n\t};\n};\n\nmodule.exports.metricNames = [NODE_VERSION_INFO];\n","'use strict';\n\n/**\n * Extends the Registry class with a `clusterMetrics` method that returns\n * aggregated metrics for all workers.\n *\n * In cluster workers, listens for and responds to requests for metrics by the\n * cluster master.\n */\n\nconst cluster = require('cluster');\nconst Registry = require('./registry');\nconst { Grouper } = require('./util');\nconst { aggregators } = require('./metricAggregators');\n\nconst GET_METRICS_REQ = 'prom-client:getMetricsReq';\nconst GET_METRICS_RES = 'prom-client:getMetricsRes';\n\nlet registries = [Registry.globalRegistry];\nlet requestCtr = 0; // Concurrency control\nlet listenersAdded = false;\nconst requests = new Map(); // Pending requests for workers' local metrics.\n\nclass AggregatorRegistry extends Registry {\n\tconstructor() {\n\t\tsuper();\n\t\taddListeners();\n\t}\n\n\t/**\n\t * Gets aggregated metrics for all workers. The optional callback and\n\t * returned Promise resolve with the same value; either may be used.\n\t * @param {Function?} callback (err, metrics) => any\n\t * @return {Promise<string>} Promise that resolves with the aggregated\n\t *   metrics.\n\t */\n\tclusterMetrics(callback) {\n\t\tconst requestId = requestCtr++;\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tfunction done(err, result) {\n\t\t\t\t// Don't resolve/reject the promise if a callback is provided\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback(err, result);\n\t\t\t\t} else {\n\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\telse resolve(result);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst request = {\n\t\t\t\tresponses: [],\n\t\t\t\tpending: 0,\n\t\t\t\tdone,\n\t\t\t\terrorTimeout: setTimeout(() => {\n\t\t\t\t\trequest.failed = true;\n\t\t\t\t\tconst err = new Error('Operation timed out.');\n\t\t\t\t\trequest.done(err);\n\t\t\t\t}, 5000),\n\t\t\t\tfailed: false\n\t\t\t};\n\t\t\trequests.set(requestId, request);\n\n\t\t\tconst message = {\n\t\t\t\ttype: GET_METRICS_REQ,\n\t\t\t\trequestId\n\t\t\t};\n\n\t\t\tfor (const id in cluster.workers) {\n\t\t\t\t// If the worker exits abruptly, it may still be in the workers\n\t\t\t\t// list but not able to communicate.\n\t\t\t\tif (cluster.workers[id].isConnected()) {\n\t\t\t\t\tcluster.workers[id].send(message);\n\t\t\t\t\trequest.pending++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (request.pending === 0) {\n\t\t\t\t// No workers were up\n\t\t\t\tclearTimeout(request.errorTimeout);\n\t\t\t\tprocess.nextTick(() => done(null, ''));\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Creates a new Registry instance from an array of metrics that were\n\t * created by `registry.getMetricsAsJSON()`. Metrics are aggregated using\n\t * the method specified by their `aggregator` property, or by summation if\n\t * `aggregator` is undefined.\n\t * @param {Array} metricsArr Array of metrics, each of which created by\n\t *   `registry.getMetricsAsJSON()`.\n\t * @return {Registry} aggregated registry.\n\t */\n\tstatic aggregate(metricsArr) {\n\t\tconst aggregatedRegistry = new Registry();\n\t\tconst metricsByName = new Grouper();\n\n\t\t// Gather by name\n\t\tmetricsArr.forEach(metrics => {\n\t\t\tmetrics.forEach(metric => {\n\t\t\t\tmetricsByName.add(metric.name, metric);\n\t\t\t});\n\t\t});\n\n\t\t// Aggregate gathered metrics.\n\t\tmetricsByName.forEach(metrics => {\n\t\t\tconst aggregatorName = metrics[0].aggregator;\n\t\t\tconst aggregatorFn = aggregators[aggregatorName];\n\t\t\tif (typeof aggregatorFn !== 'function') {\n\t\t\t\tthrow new Error(`'${aggregatorName}' is not a defined aggregator.`);\n\t\t\t}\n\t\t\tconst aggregatedMetric = aggregatorFn(metrics);\n\t\t\t// NB: The 'omit' aggregator returns undefined.\n\t\t\tif (aggregatedMetric) {\n\t\t\t\tconst aggregatedMetricWrapper = Object.assign(\n\t\t\t\t\t{\n\t\t\t\t\t\tget: () => aggregatedMetric\n\t\t\t\t\t},\n\t\t\t\t\taggregatedMetric\n\t\t\t\t);\n\t\t\t\taggregatedRegistry.registerMetric(aggregatedMetricWrapper);\n\t\t\t}\n\t\t});\n\n\t\treturn aggregatedRegistry;\n\t}\n\n\t/**\n\t * Sets the registry or registries to be aggregated. Call from workers to\n\t * use a registry/registries other than the default global registry.\n\t * @param {Array<Registry>|Registry} regs Registry or registries to be\n\t *   aggregated.\n\t * @return {void}\n\t */\n\tstatic setRegistries(regs) {\n\t\tif (!Array.isArray(regs)) regs = [regs];\n\t\tregs.forEach(reg => {\n\t\t\tif (!(reg instanceof Registry)) {\n\t\t\t\tthrow new TypeError(`Expected Registry, got ${typeof reg}`);\n\t\t\t}\n\t\t});\n\t\tregistries = regs;\n\t}\n}\n\n/**\n * Adds event listeners for cluster aggregation. Idempotent (safe to call more\n * than once).\n * @return {void}\n */\nfunction addListeners() {\n\tif (listenersAdded) return;\n\tlistenersAdded = true;\n\n\tif (cluster.isMaster) {\n\t\t// Listen for worker responses to requests for local metrics\n\t\tcluster.on('message', (worker, message) => {\n\t\t\tif (message.type === GET_METRICS_RES) {\n\t\t\t\tconst request = requests.get(message.requestId);\n\t\t\t\tmessage.metrics.forEach(registry => request.responses.push(registry));\n\t\t\t\trequest.pending--;\n\n\t\t\t\tif (request.pending === 0) {\n\t\t\t\t\t// finalize\n\t\t\t\t\trequests.delete(message.requestId);\n\t\t\t\t\tclearTimeout(request.errorTimeout);\n\n\t\t\t\t\tif (request.failed) return; // Callback already run with Error.\n\n\t\t\t\t\tconst registry = AggregatorRegistry.aggregate(request.responses);\n\t\t\t\t\tconst promString = registry.metrics();\n\t\t\t\t\trequest.done(null, promString);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nif (cluster.isWorker) {\n\t// Respond to master's requests for worker's local metrics.\n\tprocess.on('message', message => {\n\t\tif (message.type === GET_METRICS_REQ) {\n\t\t\tprocess.send({\n\t\t\t\ttype: GET_METRICS_RES,\n\t\t\t\trequestId: message.requestId,\n\t\t\t\tmetrics: registries.map(r => r.getMetricsAsJSON())\n\t\t\t});\n\t\t}\n\t});\n}\n\nmodule.exports = AggregatorRegistry;\n","module.exports = require(\"cluster\");","const auth = require('basic-auth')\nconst assert = require('assert')\nconst timingSafeEqual = require('crypto').timingSafeEqual\n\n// Credits for the actual algorithm go to github/@Bruce17\n// Thanks to github/@hraban for making me implement this\nfunction safeCompare(userInput, secret) {\n    const userInputLength = Buffer.byteLength(userInput)\n    const secretLength = Buffer.byteLength(secret)\n\n    const userInputBuffer = Buffer.alloc(userInputLength, 0, 'utf8')\n    userInputBuffer.write(userInput)\n    const secretBuffer = Buffer.alloc(userInputLength, 0, 'utf8')\n    secretBuffer.write(secret)\n\n    return !!(timingSafeEqual(userInputBuffer, secretBuffer) & userInputLength === secretLength)\n}\n\nfunction ensureFunction(option, defaultValue) {\n    if(option == undefined)\n        return function() { return defaultValue }\n\n    if(typeof option != 'function')\n        return function() { return option }\n\n    return option\n}\n\nfunction buildMiddleware(options) {\n    var challenge = options.challenge != undefined ? !!options.challenge : false\n    var users = options.users || {}\n    var authorizer = options.authorizer || staticUsersAuthorizer\n    var isAsync = options.authorizeAsync != undefined ? !!options.authorizeAsync : false\n    var getResponseBody = ensureFunction(options.unauthorizedResponse, '')\n    var realm = ensureFunction(options.realm)\n\n    assert(typeof users == 'object', 'Expected an object for the basic auth users, found ' + typeof users + ' instead')\n    assert(typeof authorizer == 'function', 'Expected a function for the basic auth authorizer, found ' + typeof authorizer + ' instead')\n\n    function staticUsersAuthorizer(username, password) {\n        for(var i in users)\n            if(safeCompare(username, i) & safeCompare(password, users[i]))\n                return true\n\n        return false\n    }\n\n    return function authMiddleware(req, res, next) {\n        var authentication = auth(req)\n\n        if(!authentication)\n            return unauthorized()\n\n        req.auth = {\n            user: authentication.name,\n            password: authentication.pass\n        }\n\n        if(isAsync)\n            return authorizer(authentication.name, authentication.pass, authorizerCallback)\n        else if(!authorizer(authentication.name, authentication.pass))\n            return unauthorized()\n\n        return next()\n\n        function unauthorized() {\n            if(challenge) {\n                var challengeString = 'Basic'\n                var realmName = realm(req)\n\n                if(realmName)\n                    challengeString += ' realm=\"' + realmName + '\"'\n\n                res.set('WWW-Authenticate', challengeString)\n            }\n\n            //TODO: Allow response body to be JSON (maybe autodetect?)\n            const response = getResponseBody(req)\n\n            if(typeof response == 'string')\n                return res.status(401).send(response)\n\n            return res.status(401).json(response)\n        }\n\n        function authorizerCallback(err, approved) {\n            assert.ifError(err)\n\n            if(approved)\n                return next()\n\n            return unauthorized()\n        }\n    }\n}\n\nbuildMiddleware.safeCompare = safeCompare\nmodule.exports = buildMiddleware\n","/*!\n * basic-auth\n * Copyright(c) 2013 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = auth\nmodule.exports.parse = parse\n\n/**\n * RegExp for basic auth credentials\n *\n * credentials = auth-scheme 1*SP token68\n * auth-scheme = \"Basic\" ; case insensitive\n * token68     = 1*( ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \"+\" / \"/\" ) *\"=\"\n * @private\n */\n\nvar CREDENTIALS_REGEXP = /^ *(?:[Bb][Aa][Ss][Ii][Cc]) +([A-Za-z0-9._~+/-]+=*) *$/\n\n/**\n * RegExp for basic auth user/pass\n *\n * user-pass   = userid \":\" password\n * userid      = *<TEXT excluding \":\">\n * password    = *TEXT\n * @private\n */\n\nvar USER_PASS_REGEXP = /^([^:]*):(.*)$/\n\n/**\n * Parse the Authorization header field of a request.\n *\n * @param {object} req\n * @return {object} with .name and .pass\n * @public\n */\n\nfunction auth (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  if (typeof req !== 'object') {\n    throw new TypeError('argument req is required to be an object')\n  }\n\n  // get header\n  var header = getAuthorization(req)\n\n  // parse header\n  return parse(header)\n}\n\n/**\n * Decode base64 string.\n * @private\n */\n\nfunction decodeBase64 (str) {\n  return Buffer.from(str, 'base64').toString()\n}\n\n/**\n * Get the Authorization header from request object.\n * @private\n */\n\nfunction getAuthorization (req) {\n  if (!req.headers || typeof req.headers !== 'object') {\n    throw new TypeError('argument req is required to have headers property')\n  }\n\n  return req.headers.authorization\n}\n\n/**\n * Parse basic auth to object.\n *\n * @param {string} string\n * @return {object}\n * @public\n */\n\nfunction parse (string) {\n  if (typeof string !== 'string') {\n    return undefined\n  }\n\n  // parse header\n  var match = CREDENTIALS_REGEXP.exec(string)\n\n  if (!match) {\n    return undefined\n  }\n\n  // decode user pass\n  var userPass = USER_PASS_REGEXP.exec(decodeBase64(match[1]))\n\n  if (!userPass) {\n    return undefined\n  }\n\n  // return credentials object\n  return new Credentials(userPass[1], userPass[2])\n}\n\n/**\n * Object to represent user credentials.\n * @private\n */\n\nfunction Credentials (name, pass) {\n  this.name = name\n  this.pass = pass\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = require(\"assert\");","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = typeof Symbol === 'function'\n    ? /*@__PURE__*/ Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\nimport { noop } from './noop';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = /*@__PURE__*/ getSymbolIterator();\nexport var $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isPromise(value) {\n    return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map\n","/** PURE_IMPORTS_START _subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeTo = function (result) {\n    if (!!result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (!!result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport var subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n//# sourceMappingURL=subscribeToObservable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    };\n};\n//# sourceMappingURL=subscribeToArray.js.map\n","/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nimport { hostReportError } from './hostReportError';\nexport var subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToPromise.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport var subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator = iterable[Symbol_iterator]();\n        do {\n            var item = iterator.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator.return === 'function') {\n            subscriber.add(function () {\n                if (iterator.return) {\n                    iterator.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n//# sourceMappingURL=subscribeToIterable.js.map\n","/** PURE_IMPORTS_START _scheduleObservable,_schedulePromise,_scheduleArray,_scheduleIterable,_util_isInteropObservable,_util_isPromise,_util_isArrayLike,_util_isIterable PURE_IMPORTS_END */\nimport { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return scheduleIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=scheduled.js.map\n","/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function isInteropObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isInteropObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function scheduleObservable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            var observable = input[Symbol_observable]();\n            sub.add(observable.subscribe({\n                next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleObservable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        sub.add(scheduler.schedule(function () {\n            return input.then(function (value) {\n                sub.add(scheduler.schedule(function () {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                }));\n            }, function (err) {\n                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n            });\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=schedulePromise.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var i = 0;\n        sub.add(scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n                return;\n            }\n            subscriber.next(input[i++]);\n            if (!subscriber.closed) {\n                sub.add(this.schedule());\n            }\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map\n","/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        var sub = new Subscription();\n        var iterator;\n        sub.add(function () {\n            if (iterator && typeof iterator.return === 'function') {\n                iterator.return();\n            }\n        });\n        sub.add(scheduler.schedule(function () {\n            iterator = input[Symbol_iterator]();\n            sub.add(scheduler.schedule(function () {\n                if (subscriber.closed) {\n                    return;\n                }\n                var value;\n                var done;\n                try {\n                    var result = iterator.next();\n                    value = result.value;\n                    done = result.done;\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                    this.schedule();\n                }\n            }));\n        }));\n        return sub;\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map\n","/** PURE_IMPORTS_START _Observable,_util_subscribeTo,_scheduled_scheduled PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { scheduled } from '../scheduled/scheduled';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    else {\n        return scheduled(input, scheduler);\n    }\n}\n//# sourceMappingURL=from.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nexport { MapOperator };\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=map.js.map\n","/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nvar toString = Object.prototype.toString;\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\nexport { InnerSubscriber };\n//# sourceMappingURL=InnerSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from './Subscriber';\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\nexport { OuterSubscriber };\n//# sourceMappingURL=OuterSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nexport { MergeMapOperator };\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\nexport { MergeMapSubscriber };\n//# sourceMappingURL=mergeMap.js.map\n","/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo,_Observable PURE_IMPORTS_END */\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n    if (destination === void 0) {\n        destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    }\n    if (destination.closed) {\n        return undefined;\n    }\n    if (result instanceof Observable) {\n        return result.subscribe(destination);\n    }\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function scan(accumulator, seed) {\n    var hasSeed = false;\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n//# sourceMappingURL=scan.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n}\nArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nexport var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n","/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nexport var EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n//# sourceMappingURL=takeLast.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) {\n        defaultValue = null;\n    }\n    return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };\n}\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n","/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan(function (acc, value, index) { return accumulator(acc, value, index + 1); }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nexport function take(count) {\n    return function (source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=take.js.map\n","import { fromEvent, from } from 'rxjs'\nimport * as express from 'express'\nimport { mergeMap, take, map, combineAll, reduce } from 'rxjs/operators'\nimport * as cass from 'cassandra-driver'\n\nconst promClient = require('prom-client')\nconst basicAuth = require('express-basic-auth')\n\n\nconst setENV = (name: string, defValue: string): string => {\n  return process.env[name] ? process.env[name] : defValue\n}\n\n// -------------Initialize the environmnet---------------\nconst cassServers = setENV('CASS', 'localhost')\nconst dataCenter = setENV('DC', 'datacenter1')\nconst keySpace = setENV('KEYSPACE', 'local')\nconst table = setENV('TABLE', 'ref')\nconst port = setENV('PORT', '80')\n\n\n// -------------Set the siginterrupt--------------------\nfrom(['SIGINT', 'SIGTERM']).pipe(\n  mergeMap(s => fromEvent(process, s))\n).subscribe((d:any) => {\n  process.exit(d[1])\n})\n\n\n// -------------------------------------------------------\nconst register = new promClient.Registry()\n\n\nconst client = new cass.Client({ contactPoints: cassServers.split(','), localDataCenter: dataCenter, keyspace: keySpace });\nconst query = `SELECT room, content, ts FROM ${table}`;\nfrom(client.execute(query, [])).pipe(\n  mergeMap(v => from(v.rows))\n).subscribe({\n  next: x => {\n    console.info(x.keys())\n  },\n})\n// When received terminate signal, must delete the program.\n\nconst app = express()\n// --------------------Middlewares--------------------------\n// app.use(basicAuth({\n//   users: { 'admin': 'admin' },\n//   challenge: true,\n//   realm: 'Imb4T3st4pp',\n// }))\n\napp.get('/data/index.json', (req, res) => {\n  res.set({\"Content-Type\": \"text/csv\"})\n  from(client.execute(query, [])).pipe(\n    mergeMap(v => from(v.rows)),\n    reduce((ac, value) => {\n      return ac +`${value.room},${value.ts},${value.content}\\r\\n`\n    }, \"room,date,content\\r\\n\"),\n    take(1),\n  ).subscribe({\n    next: x => {\n      res.send(x)\n    },\n  })\n})\n\n// ----------------Prometheus counter----------------\nconst c = new promClient.Counter({\n\tname: 'test_counter',\n\thelp: 'Example of a counter',\n  labelNames: ['code'],\n  registers: [register]\n})\n\napp.get('/metrics', (req, res) => {\n  c.inc({code: 200})\n  res.set('Content-Type', register.contentType)\n  res.end(register.metrics())\n})\napp.listen(port, () => console.log(`app listening on port ${port}`))"],"sourceRoot":""}